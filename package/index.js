#!/usr/bin/env node
if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

/* @preserve
 * The MIT License (MIT)
 *
 * Copyright (c) 2013-2017 Petka Antonov
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 */
/**
 * bluebird build version 3.5.0
 * Features enabled: core, race, call_get, generators, map, nodeify, promisify, props, reduce, settle, some, using, timers, filter, any, each
*/
!function(t){var e;"undefined"!=typeof window?e=window:"undefined"!=typeof global?e=global:"undefined"!=typeof self&&(e=self),e.Promise=t()}(function(){var t,e,n;return function r(t,e,n){function i(s,a){if(!e[s]){if(!t[s]){var c="function"==typeof _dereq_&&_dereq_;if(!a&&c)return c(s,!0);if(o)return o(s,!0);var l=new Error("Cannot find module '"+s+"'");throw l.code="MODULE_NOT_FOUND",l}var u=e[s]={exports:{}};t[s][0].call(u.exports,function(e){var n=t[s][1][e];return i(n?n:e)},u,u.exports,r,t,e,n)}return e[s].exports}for(var o="function"==typeof _dereq_&&_dereq_,s=0;s<n.length;s++)i(n[s]);return i}({1:[function(t,e,n){"use strict";e.exports=function(t){function e(t){var e=new n(t),r=e.promise();return e.setHowMany(1),e.setUnwrap(),e.init(),r}var n=t._SomePromiseArray;t.any=function(t){return e(t)},t.prototype.any=function(){return e(this)}}},{}],2:[function(t,e,n){"use strict";function r(){this._customScheduler=!1,this._isTickUsed=!1,this._lateQueue=new u(16),this._normalQueue=new u(16),this._haveDrainedQueues=!1,this._trampolineEnabled=!0;var t=this;this.drainQueues=function(){t._drainQueues()},this._schedule=l}function i(t,e,n){this._lateQueue.push(t,e,n),this._queueTick()}function o(t,e,n){this._normalQueue.push(t,e,n),this._queueTick()}function s(t){this._normalQueue._pushOne(t),this._queueTick()}var a;try{throw new Error}catch(c){a=c}var l=t("./schedule"),u=t("./queue"),p=t("./util");r.prototype.setScheduler=function(t){var e=this._schedule;return this._schedule=t,this._customScheduler=!0,e},r.prototype.hasCustomScheduler=function(){return this._customScheduler},r.prototype.enableTrampoline=function(){this._trampolineEnabled=!0},r.prototype.disableTrampolineIfNecessary=function(){p.hasDevTools&&(this._trampolineEnabled=!1)},r.prototype.haveItemsQueued=function(){return this._isTickUsed||this._haveDrainedQueues},r.prototype.fatalError=function(t,e){e?(process.stderr.write("Fatal "+(t instanceof Error?t.stack:t)+"\n"),process.exit(2)):this.throwLater(t)},r.prototype.throwLater=function(t,e){if(1===arguments.length&&(e=t,t=function(){throw e}),"undefined"!=typeof setTimeout)setTimeout(function(){t(e)},0);else try{this._schedule(function(){t(e)})}catch(n){throw new Error("No async scheduler available\n\n    See http://goo.gl/MqrFmX\n")}},p.hasDevTools?(r.prototype.invokeLater=function(t,e,n){this._trampolineEnabled?i.call(this,t,e,n):this._schedule(function(){setTimeout(function(){t.call(e,n)},100)})},r.prototype.invoke=function(t,e,n){this._trampolineEnabled?o.call(this,t,e,n):this._schedule(function(){t.call(e,n)})},r.prototype.settlePromises=function(t){this._trampolineEnabled?s.call(this,t):this._schedule(function(){t._settlePromises()})}):(r.prototype.invokeLater=i,r.prototype.invoke=o,r.prototype.settlePromises=s),r.prototype._drainQueue=function(t){for(;t.length()>0;){var e=t.shift();if("function"==typeof e){var n=t.shift(),r=t.shift();e.call(n,r)}else e._settlePromises()}},r.prototype._drainQueues=function(){this._drainQueue(this._normalQueue),this._reset(),this._haveDrainedQueues=!0,this._drainQueue(this._lateQueue)},r.prototype._queueTick=function(){this._isTickUsed||(this._isTickUsed=!0,this._schedule(this.drainQueues))},r.prototype._reset=function(){this._isTickUsed=!1},e.exports=r,e.exports.firstLineError=a},{"./queue":26,"./schedule":29,"./util":36}],3:[function(t,e,n){"use strict";e.exports=function(t,e,n,r){var i=!1,o=function(t,e){this._reject(e)},s=function(t,e){e.promiseRejectionQueued=!0,e.bindingPromise._then(o,o,null,this,t)},a=function(t,e){0===(50397184&this._bitField)&&this._resolveCallback(e.target)},c=function(t,e){e.promiseRejectionQueued||this._reject(t)};t.prototype.bind=function(o){i||(i=!0,t.prototype._propagateFrom=r.propagateFromFunction(),t.prototype._boundValue=r.boundValueFunction());var l=n(o),u=new t(e);u._propagateFrom(this,1);var p=this._target();if(u._setBoundTo(l),l instanceof t){var h={promiseRejectionQueued:!1,promise:u,target:p,bindingPromise:l};p._then(e,s,void 0,u,h),l._then(a,c,void 0,u,h),u._setOnCancel(l)}else u._resolveCallback(p);return u},t.prototype._setBoundTo=function(t){void 0!==t?(this._bitField=2097152|this._bitField,this._boundTo=t):this._bitField=-2097153&this._bitField},t.prototype._isBound=function(){return 2097152===(2097152&this._bitField)},t.bind=function(e,n){return t.resolve(n).bind(e)}}},{}],4:[function(t,e,n){"use strict";function r(){try{Promise===o&&(Promise=i)}catch(t){}return o}var i;"undefined"!=typeof Promise&&(i=Promise);var o=t("./promise")();o.noConflict=r,e.exports=o},{"./promise":22}],5:[function(t,e,n){"use strict";var r=Object.create;if(r){var i=r(null),o=r(null);i[" size"]=o[" size"]=0}e.exports=function(e){function n(t,n){var r;if(null!=t&&(r=t[n]),"function"!=typeof r){var i="Object "+a.classString(t)+" has no method '"+a.toString(n)+"'";throw new e.TypeError(i)}return r}function r(t){var e=this.pop(),r=n(t,e);return r.apply(t,this)}function i(t){return t[this]}function o(t){var e=+this;return 0>e&&(e=Math.max(0,e+t.length)),t[e]}var s,a=t("./util"),c=a.canEvaluate;a.isIdentifier;e.prototype.call=function(t){var e=[].slice.call(arguments,1);return e.push(t),this._then(r,void 0,void 0,e,void 0)},e.prototype.get=function(t){var e,n="number"==typeof t;if(n)e=o;else if(c){var r=s(t);e=null!==r?r:i}else e=i;return this._then(e,void 0,void 0,t,void 0)}}},{"./util":36}],6:[function(t,e,n){"use strict";e.exports=function(e,n,r,i){var o=t("./util"),s=o.tryCatch,a=o.errorObj,c=e._async;e.prototype["break"]=e.prototype.cancel=function(){if(!i.cancellation())return this._warn("cancellation is disabled");for(var t=this,e=t;t._isCancellable();){if(!t._cancelBy(e)){e._isFollowing()?e._followee().cancel():e._cancelBranched();break}var n=t._cancellationParent;if(null==n||!n._isCancellable()){t._isFollowing()?t._followee().cancel():t._cancelBranched();break}t._isFollowing()&&t._followee().cancel(),t._setWillBeCancelled(),e=t,t=n}},e.prototype._branchHasCancelled=function(){this._branchesRemainingToCancel--},e.prototype._enoughBranchesHaveCancelled=function(){return void 0===this._branchesRemainingToCancel||this._branchesRemainingToCancel<=0},e.prototype._cancelBy=function(t){return t===this?(this._branchesRemainingToCancel=0,this._invokeOnCancel(),!0):(this._branchHasCancelled(),this._enoughBranchesHaveCancelled()?(this._invokeOnCancel(),!0):!1)},e.prototype._cancelBranched=function(){this._enoughBranchesHaveCancelled()&&this._cancel()},e.prototype._cancel=function(){this._isCancellable()&&(this._setCancelled(),c.invoke(this._cancelPromises,this,void 0))},e.prototype._cancelPromises=function(){this._length()>0&&this._settlePromises()},e.prototype._unsetOnCancel=function(){this._onCancelField=void 0},e.prototype._isCancellable=function(){return this.isPending()&&!this._isCancelled()},e.prototype.isCancellable=function(){return this.isPending()&&!this.isCancelled()},e.prototype._doInvokeOnCancel=function(t,e){if(o.isArray(t))for(var n=0;n<t.length;++n)this._doInvokeOnCancel(t[n],e);else if(void 0!==t)if("function"==typeof t){if(!e){var r=s(t).call(this._boundValue());r===a&&(this._attachExtraTrace(r.e),c.throwLater(r.e))}}else t._resultCancelled(this)},e.prototype._invokeOnCancel=function(){var t=this._onCancel();this._unsetOnCancel(),c.invoke(this._doInvokeOnCancel,this,t)},e.prototype._invokeInternalOnCancel=function(){this._isCancellable()&&(this._doInvokeOnCancel(this._onCancel(),!0),this._unsetOnCancel())},e.prototype._resultCancelled=function(){this.cancel()}}},{"./util":36}],7:[function(t,e,n){"use strict";e.exports=function(e){function n(t,n,a){return function(c){var l=a._boundValue();t:for(var u=0;u<t.length;++u){var p=t[u];if(p===Error||null!=p&&p.prototype instanceof Error){if(c instanceof p)return o(n).call(l,c)}else if("function"==typeof p){var h=o(p).call(l,c);if(h===s)return h;if(h)return o(n).call(l,c)}else if(r.isObject(c)){for(var f=i(p),_=0;_<f.length;++_){var d=f[_];if(p[d]!=c[d])continue t}return o(n).call(l,c)}}return e}}var r=t("./util"),i=t("./es5").keys,o=r.tryCatch,s=r.errorObj;return n}},{"./es5":13,"./util":36}],8:[function(t,e,n){"use strict";e.exports=function(t){function e(){this._trace=new e.CapturedTrace(r())}function n(){return i?new e:void 0}function r(){var t=o.length-1;return t>=0?o[t]:void 0}var i=!1,o=[];return t.prototype._promiseCreated=function(){},t.prototype._pushContext=function(){},t.prototype._popContext=function(){return null},t._peekContext=t.prototype._peekContext=function(){},e.prototype._pushContext=function(){void 0!==this._trace&&(this._trace._promiseCreated=null,o.push(this._trace))},e.prototype._popContext=function(){if(void 0!==this._trace){var t=o.pop(),e=t._promiseCreated;return t._promiseCreated=null,e}return null},e.CapturedTrace=null,e.create=n,e.deactivateLongStackTraces=function(){},e.activateLongStackTraces=function(){var n=t.prototype._pushContext,o=t.prototype._popContext,s=t._peekContext,a=t.prototype._peekContext,c=t.prototype._promiseCreated;e.deactivateLongStackTraces=function(){t.prototype._pushContext=n,t.prototype._popContext=o,t._peekContext=s,t.prototype._peekContext=a,t.prototype._promiseCreated=c,i=!1},i=!0,t.prototype._pushContext=e.prototype._pushContext,t.prototype._popContext=e.prototype._popContext,t._peekContext=t.prototype._peekContext=r,t.prototype._promiseCreated=function(){var t=this._peekContext();t&&null==t._promiseCreated&&(t._promiseCreated=this)}},e}},{}],9:[function(t,e,n){"use strict";e.exports=function(e,n){function r(t,e){return{promise:e}}function i(){return!1}function o(t,e,n){var r=this;try{t(e,n,function(t){if("function"!=typeof t)throw new TypeError("onCancel must be a function, got: "+H.toString(t));r._attachCancellationCallback(t)})}catch(i){return i}}function s(t){if(!this._isCancellable())return this;var e=this._onCancel();void 0!==e?H.isArray(e)?e.push(t):this._setOnCancel([e,t]):this._setOnCancel(t)}function a(){return this._onCancelField}function c(t){this._onCancelField=t}function l(){this._cancellationParent=void 0,this._onCancelField=void 0}function u(t,e){if(0!==(1&e)){this._cancellationParent=t;var n=t._branchesRemainingToCancel;void 0===n&&(n=0),t._branchesRemainingToCancel=n+1}0!==(2&e)&&t._isBound()&&this._setBoundTo(t._boundTo)}function p(t,e){0!==(2&e)&&t._isBound()&&this._setBoundTo(t._boundTo)}function h(){var t=this._boundTo;return void 0!==t&&t instanceof e?t.isFulfilled()?t.value():void 0:t}function f(){this._trace=new S(this._peekContext())}function _(t,e){if(N(t)){var n=this._trace;if(void 0!==n&&e&&(n=n._parent),void 0!==n)n.attachExtraTrace(t);else if(!t.__stackCleaned__){var r=j(t);H.notEnumerableProp(t,"stack",r.message+"\n"+r.stack.join("\n")),H.notEnumerableProp(t,"__stackCleaned__",!0)}}}function d(t,e,n,r,i){if(void 0===t&&null!==e&&W){if(void 0!==i&&i._returnedNonUndefined())return;if(0===(65535&r._bitField))return;n&&(n+=" ");var o="",s="";if(e._trace){for(var a=e._trace.stack.split("\n"),c=w(a),l=c.length-1;l>=0;--l){var u=c[l];if(!U.test(u)){var p=u.match(M);p&&(o="at "+p[1]+":"+p[2]+":"+p[3]+" ");break}}if(c.length>0)for(var h=c[0],l=0;l<a.length;++l)if(a[l]===h){l>0&&(s="\n"+a[l-1]);break}}var f="a promise was created in a "+n+"handler "+o+"but was not returned from it, see http://goo.gl/rRqMUw"+s;r._warn(f,!0,e)}}function v(t,e){var n=t+" is deprecated and will be removed in a future version.";return e&&(n+=" Use "+e+" instead."),y(n)}function y(t,n,r){if(ot.warnings){var i,o=new L(t);if(n)r._attachExtraTrace(o);else if(ot.longStackTraces&&(i=e._peekContext()))i.attachExtraTrace(o);else{var s=j(o);o.stack=s.message+"\n"+s.stack.join("\n")}tt("warning",o)||E(o,"",!0)}}function m(t,e){for(var n=0;n<e.length-1;++n)e[n].push("From previous event:"),e[n]=e[n].join("\n");return n<e.length&&(e[n]=e[n].join("\n")),t+"\n"+e.join("\n")}function g(t){for(var e=0;e<t.length;++e)(0===t[e].length||e+1<t.length&&t[e][0]===t[e+1][0])&&(t.splice(e,1),e--)}function b(t){for(var e=t[0],n=1;n<t.length;++n){for(var r=t[n],i=e.length-1,o=e[i],s=-1,a=r.length-1;a>=0;--a)if(r[a]===o){s=a;break}for(var a=s;a>=0;--a){var c=r[a];if(e[i]!==c)break;e.pop(),i--}e=r}}function w(t){for(var e=[],n=0;n<t.length;++n){var r=t[n],i="    (No stack trace)"===r||q.test(r),o=i&&nt(r);i&&!o&&($&&" "!==r.charAt(0)&&(r="    "+r),e.push(r))}return e}function C(t){for(var e=t.stack.replace(/\s+$/g,"").split("\n"),n=0;n<e.length;++n){var r=e[n];if("    (No stack trace)"===r||q.test(r))break}return n>0&&"SyntaxError"!=t.name&&(e=e.slice(n)),e}function j(t){var e=t.stack,n=t.toString();return e="string"==typeof e&&e.length>0?C(t):["    (No stack trace)"],{message:n,stack:"SyntaxError"==t.name?e:w(e)}}function E(t,e,n){if("undefined"!=typeof console){var r;if(H.isObject(t)){var i=t.stack;r=e+Q(i,t)}else r=e+String(t);"function"==typeof D?D(r,n):("function"==typeof console.log||"object"==typeof console.log)&&console.log(r)}}function k(t,e,n,r){var i=!1;try{"function"==typeof e&&(i=!0,"rejectionHandled"===t?e(r):e(n,r))}catch(o){I.throwLater(o)}"unhandledRejection"===t?tt(t,n,r)||i||E(n,"Unhandled rejection "):tt(t,r)}function F(t){var e;if("function"==typeof t)e="[function "+(t.name||"anonymous")+"]";else{e=t&&"function"==typeof t.toString?t.toString():H.toString(t);var n=/\[object [a-zA-Z0-9$_]+\]/;if(n.test(e))try{var r=JSON.stringify(t);e=r}catch(i){}0===e.length&&(e="(empty array)")}return"(<"+x(e)+">, no stack trace)"}function x(t){var e=41;return t.length<e?t:t.substr(0,e-3)+"..."}function T(){return"function"==typeof it}function P(t){var e=t.match(rt);return e?{fileName:e[1],line:parseInt(e[2],10)}:void 0}function R(t,e){if(T()){for(var n,r,i=t.stack.split("\n"),o=e.stack.split("\n"),s=-1,a=-1,c=0;c<i.length;++c){var l=P(i[c]);if(l){n=l.fileName,s=l.line;break}}for(var c=0;c<o.length;++c){var l=P(o[c]);if(l){r=l.fileName,a=l.line;break}}0>s||0>a||!n||!r||n!==r||s>=a||(nt=function(t){if(B.test(t))return!0;var e=P(t);return e&&e.fileName===n&&s<=e.line&&e.line<=a?!0:!1})}}function S(t){this._parent=t,this._promisesCreated=0;var e=this._length=1+(void 0===t?0:t._length);it(this,S),e>32&&this.uncycle()}var O,A,D,V=e._getDomain,I=e._async,L=t("./errors").Warning,H=t("./util"),N=H.canAttachTrace,B=/[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/,U=/\((?:timers\.js):\d+:\d+\)/,M=/[\/<\(](.+?):(\d+):(\d+)\)?\s*$/,q=null,Q=null,$=!1,G=!(0==H.env("BLUEBIRD_DEBUG")||!H.env("BLUEBIRD_DEBUG")&&"development"!==H.env("NODE_ENV")),z=!(0==H.env("BLUEBIRD_WARNINGS")||!G&&!H.env("BLUEBIRD_WARNINGS")),X=!(0==H.env("BLUEBIRD_LONG_STACK_TRACES")||!G&&!H.env("BLUEBIRD_LONG_STACK_TRACES")),W=0!=H.env("BLUEBIRD_W_FORGOTTEN_RETURN")&&(z||!!H.env("BLUEBIRD_W_FORGOTTEN_RETURN"));e.prototype.suppressUnhandledRejections=function(){var t=this._target();t._bitField=-1048577&t._bitField|524288},e.prototype._ensurePossibleRejectionHandled=function(){0===(524288&this._bitField)&&(this._setRejectionIsUnhandled(),I.invokeLater(this._notifyUnhandledRejection,this,void 0))},e.prototype._notifyUnhandledRejectionIsHandled=function(){k("rejectionHandled",O,void 0,this)},e.prototype._setReturnedNonUndefined=function(){this._bitField=268435456|this._bitField},e.prototype._returnedNonUndefined=function(){return 0!==(268435456&this._bitField)},e.prototype._notifyUnhandledRejection=function(){if(this._isRejectionUnhandled()){var t=this._settledValue();this._setUnhandledRejectionIsNotified(),k("unhandledRejection",A,t,this)}},e.prototype._setUnhandledRejectionIsNotified=function(){this._bitField=262144|this._bitField},e.prototype._unsetUnhandledRejectionIsNotified=function(){this._bitField=-262145&this._bitField},e.prototype._isUnhandledRejectionNotified=function(){return(262144&this._bitField)>0},e.prototype._setRejectionIsUnhandled=function(){this._bitField=1048576|this._bitField},e.prototype._unsetRejectionIsUnhandled=function(){this._bitField=-1048577&this._bitField,this._isUnhandledRejectionNotified()&&(this._unsetUnhandledRejectionIsNotified(),this._notifyUnhandledRejectionIsHandled())},e.prototype._isRejectionUnhandled=function(){return(1048576&this._bitField)>0},e.prototype._warn=function(t,e,n){return y(t,e,n||this)},e.onPossiblyUnhandledRejection=function(t){var e=V();A="function"==typeof t?null===e?t:H.domainBind(e,t):void 0},e.onUnhandledRejectionHandled=function(t){var e=V();O="function"==typeof t?null===e?t:H.domainBind(e,t):void 0};var K=function(){};e.longStackTraces=function(){if(I.haveItemsQueued()&&!ot.longStackTraces)throw new Error("cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n");if(!ot.longStackTraces&&T()){var t=e.prototype._captureStackTrace,r=e.prototype._attachExtraTrace;ot.longStackTraces=!0,K=function(){if(I.haveItemsQueued()&&!ot.longStackTraces)throw new Error("cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n");e.prototype._captureStackTrace=t,e.prototype._attachExtraTrace=r,n.deactivateLongStackTraces(),I.enableTrampoline(),ot.longStackTraces=!1},e.prototype._captureStackTrace=f,e.prototype._attachExtraTrace=_,n.activateLongStackTraces(),I.disableTrampolineIfNecessary()}},e.hasLongStackTraces=function(){return ot.longStackTraces&&T()};var J=function(){try{if("function"==typeof CustomEvent){var t=new CustomEvent("CustomEvent");return H.global.dispatchEvent(t),function(t,e){var n=new CustomEvent(t.toLowerCase(),{detail:e,cancelable:!0});return!H.global.dispatchEvent(n)}}if("function"==typeof Event){var t=new Event("CustomEvent");return H.global.dispatchEvent(t),function(t,e){var n=new Event(t.toLowerCase(),{cancelable:!0});return n.detail=e,!H.global.dispatchEvent(n)}}var t=document.createEvent("CustomEvent");return t.initCustomEvent("testingtheevent",!1,!0,{}),H.global.dispatchEvent(t),function(t,e){var n=document.createEvent("CustomEvent");return n.initCustomEvent(t.toLowerCase(),!1,!0,e),!H.global.dispatchEvent(n)}}catch(e){}return function(){return!1}}(),Y=function(){return H.isNode?function(){return process.emit.apply(process,arguments)}:H.global?function(t){var e="on"+t.toLowerCase(),n=H.global[e];return n?(n.apply(H.global,[].slice.call(arguments,1)),!0):!1}:function(){return!1}}(),Z={promiseCreated:r,promiseFulfilled:r,promiseRejected:r,promiseResolved:r,promiseCancelled:r,promiseChained:function(t,e,n){return{promise:e,child:n}},warning:function(t,e){return{warning:e}},unhandledRejection:function(t,e,n){return{reason:e,promise:n}},rejectionHandled:r},tt=function(t){var e=!1;try{e=Y.apply(null,arguments)}catch(n){I.throwLater(n),e=!0}var r=!1;try{r=J(t,Z[t].apply(null,arguments))}catch(n){I.throwLater(n),r=!0}return r||e};e.config=function(t){if(t=Object(t),"longStackTraces"in t&&(t.longStackTraces?e.longStackTraces():!t.longStackTraces&&e.hasLongStackTraces()&&K()),"warnings"in t){var n=t.warnings;ot.warnings=!!n,W=ot.warnings,H.isObject(n)&&"wForgottenReturn"in n&&(W=!!n.wForgottenReturn)}if("cancellation"in t&&t.cancellation&&!ot.cancellation){if(I.haveItemsQueued())throw new Error("cannot enable cancellation after promises are in use");e.prototype._clearCancellationData=l,e.prototype._propagateFrom=u,e.prototype._onCancel=a,e.prototype._setOnCancel=c,e.prototype._attachCancellationCallback=s,e.prototype._execute=o,et=u,ot.cancellation=!0}return"monitoring"in t&&(t.monitoring&&!ot.monitoring?(ot.monitoring=!0,e.prototype._fireEvent=tt):!t.monitoring&&ot.monitoring&&(ot.monitoring=!1,e.prototype._fireEvent=i)),e},e.prototype._fireEvent=i,e.prototype._execute=function(t,e,n){try{t(e,n)}catch(r){return r}},e.prototype._onCancel=function(){},e.prototype._setOnCancel=function(t){},e.prototype._attachCancellationCallback=function(t){},e.prototype._captureStackTrace=function(){},e.prototype._attachExtraTrace=function(){},e.prototype._clearCancellationData=function(){},e.prototype._propagateFrom=function(t,e){};var et=p,nt=function(){return!1},rt=/[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;H.inherits(S,Error),n.CapturedTrace=S,S.prototype.uncycle=function(){var t=this._length;if(!(2>t)){for(var e=[],n={},r=0,i=this;void 0!==i;++r)e.push(i),i=i._parent;t=this._length=r;for(var r=t-1;r>=0;--r){var o=e[r].stack;void 0===n[o]&&(n[o]=r)}for(var r=0;t>r;++r){var s=e[r].stack,a=n[s];if(void 0!==a&&a!==r){a>0&&(e[a-1]._parent=void 0,e[a-1]._length=1),e[r]._parent=void 0,e[r]._length=1;var c=r>0?e[r-1]:this;t-1>a?(c._parent=e[a+1],c._parent.uncycle(),c._length=c._parent._length+1):(c._parent=void 0,c._length=1);for(var l=c._length+1,u=r-2;u>=0;--u)e[u]._length=l,l++;return}}}},S.prototype.attachExtraTrace=function(t){if(!t.__stackCleaned__){this.uncycle();for(var e=j(t),n=e.message,r=[e.stack],i=this;void 0!==i;)r.push(w(i.stack.split("\n"))),i=i._parent;b(r),g(r),H.notEnumerableProp(t,"stack",m(n,r)),H.notEnumerableProp(t,"__stackCleaned__",!0)}};var it=function(){var t=/^\s*at\s*/,e=function(t,e){return"string"==typeof t?t:void 0!==e.name&&void 0!==e.message?e.toString():F(e)};if("number"==typeof Error.stackTraceLimit&&"function"==typeof Error.captureStackTrace){Error.stackTraceLimit+=6,q=t,Q=e;var n=Error.captureStackTrace;return nt=function(t){return B.test(t)},function(t,e){Error.stackTraceLimit+=6,n(t,e),Error.stackTraceLimit-=6}}var r=new Error;if("string"==typeof r.stack&&r.stack.split("\n")[0].indexOf("stackDetection@")>=0)return q=/@/,Q=e,$=!0,function(t){t.stack=(new Error).stack};var i;try{throw new Error}catch(o){i="stack"in o}return"stack"in r||!i||"number"!=typeof Error.stackTraceLimit?(Q=function(t,e){return"string"==typeof t?t:"object"!=typeof e&&"function"!=typeof e||void 0===e.name||void 0===e.message?F(e):e.toString()},null):(q=t,Q=e,function(t){Error.stackTraceLimit+=6;try{throw new Error}catch(e){t.stack=e.stack}Error.stackTraceLimit-=6})}([]);"undefined"!=typeof console&&"undefined"!=typeof console.warn&&(D=function(t){console.warn(t)},H.isNode&&process.stderr.isTTY?D=function(t,e){var n=e?"[33m":"[31m";console.warn(n+t+"[0m\n")}:H.isNode||"string"!=typeof(new Error).stack||(D=function(t,e){console.warn("%c"+t,e?"color: darkorange":"color: red")}));var ot={warnings:z,longStackTraces:!1,cancellation:!1,monitoring:!1};return X&&e.longStackTraces(),{longStackTraces:function(){return ot.longStackTraces},warnings:function(){return ot.warnings},cancellation:function(){return ot.cancellation},monitoring:function(){return ot.monitoring},propagateFromFunction:function(){return et},boundValueFunction:function(){return h},checkForgottenReturns:d,setBounds:R,warn:y,deprecated:v,CapturedTrace:S,fireDomEvent:J,fireGlobalEvent:Y}}},{"./errors":12,"./util":36}],10:[function(t,e,n){"use strict";e.exports=function(t){function e(){return this.value}function n(){throw this.reason}t.prototype["return"]=t.prototype.thenReturn=function(n){return n instanceof t&&n.suppressUnhandledRejections(),this._then(e,void 0,void 0,{value:n},void 0)},t.prototype["throw"]=t.prototype.thenThrow=function(t){return this._then(n,void 0,void 0,{reason:t},void 0)},t.prototype.catchThrow=function(t){if(arguments.length<=1)return this._then(void 0,n,void 0,{reason:t},void 0);var e=arguments[1],r=function(){throw e};return this.caught(t,r)},t.prototype.catchReturn=function(n){if(arguments.length<=1)return n instanceof t&&n.suppressUnhandledRejections(),this._then(void 0,e,void 0,{value:n},void 0);var r=arguments[1];r instanceof t&&r.suppressUnhandledRejections();var i=function(){return r};return this.caught(n,i)}}},{}],11:[function(t,e,n){"use strict";e.exports=function(t,e){function n(){return o(this)}function r(t,n){return i(t,n,e,e)}var i=t.reduce,o=t.all;t.prototype.each=function(t){return i(this,t,e,0)._then(n,void 0,void 0,this,void 0)},t.prototype.mapSeries=function(t){return i(this,t,e,e)},t.each=function(t,r){return i(t,r,e,0)._then(n,void 0,void 0,t,void 0)},t.mapSeries=r}},{}],12:[function(t,e,n){"use strict";function r(t,e){function n(r){return this instanceof n?(p(this,"message","string"==typeof r?r:e),p(this,"name",t),void(Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):Error.call(this))):new n(r)}return u(n,Error),n}function i(t){return this instanceof i?(p(this,"name","OperationalError"),p(this,"message",t),this.cause=t,this.isOperational=!0,void(t instanceof Error?(p(this,"message",t.message),p(this,"stack",t.stack)):Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor))):new i(t)}var o,s,a=t("./es5"),c=a.freeze,l=t("./util"),u=l.inherits,p=l.notEnumerableProp,h=r("Warning","warning"),f=r("CancellationError","cancellation error"),_=r("TimeoutError","timeout error"),d=r("AggregateError","aggregate error");try{o=TypeError,s=RangeError}catch(v){o=r("TypeError","type error"),s=r("RangeError","range error")}for(var y="join pop push shift unshift slice filter forEach some every map indexOf lastIndexOf reduce reduceRight sort reverse".split(" "),m=0;m<y.length;++m)"function"==typeof Array.prototype[y[m]]&&(d.prototype[y[m]]=Array.prototype[y[m]]);a.defineProperty(d.prototype,"length",{value:0,configurable:!1,writable:!0,enumerable:!0}),d.prototype.isOperational=!0;var g=0;d.prototype.toString=function(){var t=Array(4*g+1).join(" "),e="\n"+t+"AggregateError of:\n";g++,t=Array(4*g+1).join(" ");for(var n=0;n<this.length;++n){for(var r=this[n]===this?"[Circular AggregateError]":this[n]+"",i=r.split("\n"),o=0;o<i.length;++o)i[o]=t+i[o];r=i.join("\n"),e+=r+"\n"}return g--,e},u(i,Error);var b=Error.__BluebirdErrorTypes__;b||(b=c({CancellationError:f,TimeoutError:_,OperationalError:i,RejectionError:i,AggregateError:d}),a.defineProperty(Error,"__BluebirdErrorTypes__",{value:b,writable:!1,enumerable:!1,configurable:!1})),e.exports={Error:Error,TypeError:o,RangeError:s,CancellationError:b.CancellationError,OperationalError:b.OperationalError,TimeoutError:b.TimeoutError,AggregateError:b.AggregateError,Warning:h}},{"./es5":13,"./util":36}],13:[function(t,e,n){var r=function(){"use strict";return void 0===this}();if(r)e.exports={freeze:Object.freeze,defineProperty:Object.defineProperty,getDescriptor:Object.getOwnPropertyDescriptor,keys:Object.keys,names:Object.getOwnPropertyNames,getPrototypeOf:Object.getPrototypeOf,isArray:Array.isArray,isES5:r,propertyIsWritable:function(t,e){var n=Object.getOwnPropertyDescriptor(t,e);return!(n&&!n.writable&&!n.set)}};else{var i={}.hasOwnProperty,o={}.toString,s={}.constructor.prototype,a=function(t){var e=[];for(var n in t)i.call(t,n)&&e.push(n);return e},c=function(t,e){return{value:t[e]}},l=function(t,e,n){return t[e]=n.value,t},u=function(t){return t},p=function(t){try{return Object(t).constructor.prototype}catch(e){return s}},h=function(t){try{return"[object Array]"===o.call(t)}catch(e){return!1}};e.exports={isArray:h,keys:a,names:a,defineProperty:l,getDescriptor:c,freeze:u,getPrototypeOf:p,isES5:r,propertyIsWritable:function(){return!0}}}},{}],14:[function(t,e,n){"use strict";e.exports=function(t,e){var n=t.map;t.prototype.filter=function(t,r){return n(this,t,r,e)},t.filter=function(t,r,i){return n(t,r,i,e)}}},{}],15:[function(t,e,n){"use strict";e.exports=function(e,n,r){function i(t,e,n){this.promise=t,this.type=e,this.handler=n,this.called=!1,this.cancelPromise=null}function o(t){this.finallyHandler=t}function s(t,e){return null!=t.cancelPromise?(arguments.length>1?t.cancelPromise._reject(e):t.cancelPromise._cancel(),t.cancelPromise=null,!0):!1}function a(){return l.call(this,this.promise._target()._settledValue())}function c(t){return s(this,t)?void 0:(h.e=t,h)}function l(t){var i=this.promise,l=this.handler;if(!this.called){this.called=!0;var u=this.isFinallyHandler()?l.call(i._boundValue()):l.call(i._boundValue(),t);if(u===r)return u;if(void 0!==u){i._setReturnedNonUndefined();var f=n(u,i);if(f instanceof e){if(null!=this.cancelPromise){if(f._isCancelled()){var _=new p("late cancellation observer");return i._attachExtraTrace(_),h.e=_,h}f.isPending()&&f._attachCancellationCallback(new o(this))}return f._then(a,c,void 0,this,void 0)}}}return i.isRejected()?(s(this),h.e=t,h):(s(this),t)}var u=t("./util"),p=e.CancellationError,h=u.errorObj,f=t("./catch_filter")(r);return i.prototype.isFinallyHandler=function(){return 0===this.type},o.prototype._resultCancelled=function(){s(this.finallyHandler)},e.prototype._passThrough=function(t,e,n,r){return"function"!=typeof t?this.then():this._then(n,r,void 0,new i(this,e,t),void 0)},e.prototype.lastly=e.prototype["finally"]=function(t){return this._passThrough(t,0,l,l)},e.prototype.tap=function(t){return this._passThrough(t,1,l)},e.prototype.tapCatch=function(t){var n=arguments.length;if(1===n)return this._passThrough(t,1,void 0,l);var r,i=new Array(n-1),o=0;for(r=0;n-1>r;++r){var s=arguments[r];if(!u.isObject(s))return e.reject(new TypeError("tapCatch statement predicate: expecting an object but got "+u.classString(s)));i[o++]=s}i.length=o;var a=arguments[r];return this._passThrough(f(i,a,this),1,void 0,l)},i}},{"./catch_filter":7,"./util":36}],16:[function(t,e,n){"use strict";e.exports=function(e,n,r,i,o,s){function a(t,n,r){for(var o=0;o<n.length;++o){r._pushContext();var s=f(n[o])(t);if(r._popContext(),s===h){r._pushContext();var a=e.reject(h.e);return r._popContext(),a}var c=i(s,r);if(c instanceof e)return c}return null}function c(t,n,i,o){if(s.cancellation()){var a=new e(r),c=this._finallyPromise=new e(r);this._promise=a.lastly(function(){return c}),a._captureStackTrace(),a._setOnCancel(this)}else{var l=this._promise=new e(r);l._captureStackTrace()}this._stack=o,this._generatorFunction=t,this._receiver=n,this._generator=void 0,this._yieldHandlers="function"==typeof i?[i].concat(_):_,this._yieldedPromise=null,this._cancellationPhase=!1}var l=t("./errors"),u=l.TypeError,p=t("./util"),h=p.errorObj,f=p.tryCatch,_=[];p.inherits(c,o),c.prototype._isResolved=function(){return null===this._promise},c.prototype._cleanup=function(){this._promise=this._generator=null,s.cancellation()&&null!==this._finallyPromise&&(this._finallyPromise._fulfill(),this._finallyPromise=null)},c.prototype._promiseCancelled=function(){if(!this._isResolved()){var t,n="undefined"!=typeof this._generator["return"];if(n)this._promise._pushContext(),t=f(this._generator["return"]).call(this._generator,void 0),this._promise._popContext();else{var r=new e.CancellationError("generator .return() sentinel");e.coroutine.returnSentinel=r,this._promise._attachExtraTrace(r),this._promise._pushContext(),t=f(this._generator["throw"]).call(this._generator,r),this._promise._popContext()}this._cancellationPhase=!0,this._yieldedPromise=null,this._continue(t)}},c.prototype._promiseFulfilled=function(t){this._yieldedPromise=null,this._promise._pushContext();var e=f(this._generator.next).call(this._generator,t);this._promise._popContext(),this._continue(e)},c.prototype._promiseRejected=function(t){this._yieldedPromise=null,this._promise._attachExtraTrace(t),this._promise._pushContext();var e=f(this._generator["throw"]).call(this._generator,t);this._promise._popContext(),this._continue(e)},c.prototype._resultCancelled=function(){if(this._yieldedPromise instanceof e){var t=this._yieldedPromise;this._yieldedPromise=null,t.cancel()}},c.prototype.promise=function(){return this._promise},c.prototype._run=function(){this._generator=this._generatorFunction.call(this._receiver),this._receiver=this._generatorFunction=void 0,this._promiseFulfilled(void 0)},c.prototype._continue=function(t){var n=this._promise;if(t===h)return this._cleanup(),this._cancellationPhase?n.cancel():n._rejectCallback(t.e,!1);var r=t.value;if(t.done===!0)return this._cleanup(),this._cancellationPhase?n.cancel():n._resolveCallback(r);var o=i(r,this._promise);if(!(o instanceof e)&&(o=a(o,this._yieldHandlers,this._promise),null===o))return void this._promiseRejected(new u("A value %s was yielded that could not be treated as a promise\n\n    See http://goo.gl/MqrFmX\n\n".replace("%s",String(r))+"From coroutine:\n"+this._stack.split("\n").slice(1,-7).join("\n")));o=o._target();var s=o._bitField;0===(50397184&s)?(this._yieldedPromise=o,o._proxy(this,null)):0!==(33554432&s)?e._async.invoke(this._promiseFulfilled,this,o._value()):0!==(16777216&s)?e._async.invoke(this._promiseRejected,this,o._reason()):this._promiseCancelled();
},e.coroutine=function(t,e){if("function"!=typeof t)throw new u("generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n");var n=Object(e).yieldHandler,r=c,i=(new Error).stack;return function(){var e=t.apply(this,arguments),o=new r(void 0,void 0,n,i),s=o.promise();return o._generator=e,o._promiseFulfilled(void 0),s}},e.coroutine.addYieldHandler=function(t){if("function"!=typeof t)throw new u("expecting a function but got "+p.classString(t));_.push(t)},e.spawn=function(t){if(s.deprecated("Promise.spawn()","Promise.coroutine()"),"function"!=typeof t)return n("generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n");var r=new c(t,this),i=r.promise();return r._run(e.spawn),i}}},{"./errors":12,"./util":36}],17:[function(t,e,n){"use strict";e.exports=function(e,n,r,i,o,s){var a=t("./util");a.canEvaluate,a.tryCatch,a.errorObj;e.join=function(){var t,e=arguments.length-1;if(e>0&&"function"==typeof arguments[e]){t=arguments[e];var r}var i=[].slice.call(arguments);t&&i.pop();var r=new n(i).promise();return void 0!==t?r.spread(t):r}}},{"./util":36}],18:[function(t,e,n){"use strict";e.exports=function(e,n,r,i,o,s){function a(t,e,n,r){this.constructor$(t),this._promise._captureStackTrace();var i=l();this._callback=null===i?e:u.domainBind(i,e),this._preservedValues=r===o?new Array(this.length()):null,this._limit=n,this._inFlight=0,this._queue=[],f.invoke(this._asyncInit,this,void 0)}function c(t,n,i,o){if("function"!=typeof n)return r("expecting a function but got "+u.classString(n));var s=0;if(void 0!==i){if("object"!=typeof i||null===i)return e.reject(new TypeError("options argument must be an object but it is "+u.classString(i)));if("number"!=typeof i.concurrency)return e.reject(new TypeError("'concurrency' must be a number but it is "+u.classString(i.concurrency)));s=i.concurrency}return s="number"==typeof s&&isFinite(s)&&s>=1?s:0,new a(t,n,s,o).promise()}var l=e._getDomain,u=t("./util"),p=u.tryCatch,h=u.errorObj,f=e._async;u.inherits(a,n),a.prototype._asyncInit=function(){this._init$(void 0,-2)},a.prototype._init=function(){},a.prototype._promiseFulfilled=function(t,n){var r=this._values,o=this.length(),a=this._preservedValues,c=this._limit;if(0>n){if(n=-1*n-1,r[n]=t,c>=1&&(this._inFlight--,this._drainQueue(),this._isResolved()))return!0}else{if(c>=1&&this._inFlight>=c)return r[n]=t,this._queue.push(n),!1;null!==a&&(a[n]=t);var l=this._promise,u=this._callback,f=l._boundValue();l._pushContext();var _=p(u).call(f,t,n,o),d=l._popContext();if(s.checkForgottenReturns(_,d,null!==a?"Promise.filter":"Promise.map",l),_===h)return this._reject(_.e),!0;var v=i(_,this._promise);if(v instanceof e){v=v._target();var y=v._bitField;if(0===(50397184&y))return c>=1&&this._inFlight++,r[n]=v,v._proxy(this,-1*(n+1)),!1;if(0===(33554432&y))return 0!==(16777216&y)?(this._reject(v._reason()),!0):(this._cancel(),!0);_=v._value()}r[n]=_}var m=++this._totalResolved;return m>=o?(null!==a?this._filter(r,a):this._resolve(r),!0):!1},a.prototype._drainQueue=function(){for(var t=this._queue,e=this._limit,n=this._values;t.length>0&&this._inFlight<e;){if(this._isResolved())return;var r=t.pop();this._promiseFulfilled(n[r],r)}},a.prototype._filter=function(t,e){for(var n=e.length,r=new Array(n),i=0,o=0;n>o;++o)t[o]&&(r[i++]=e[o]);r.length=i,this._resolve(r)},a.prototype.preservedValues=function(){return this._preservedValues},e.prototype.map=function(t,e){return c(this,t,e,null)},e.map=function(t,e,n,r){return c(t,e,n,r)}}},{"./util":36}],19:[function(t,e,n){"use strict";e.exports=function(e,n,r,i,o){var s=t("./util"),a=s.tryCatch;e.method=function(t){if("function"!=typeof t)throw new e.TypeError("expecting a function but got "+s.classString(t));return function(){var r=new e(n);r._captureStackTrace(),r._pushContext();var i=a(t).apply(this,arguments),s=r._popContext();return o.checkForgottenReturns(i,s,"Promise.method",r),r._resolveFromSyncValue(i),r}},e.attempt=e["try"]=function(t){if("function"!=typeof t)return i("expecting a function but got "+s.classString(t));var r=new e(n);r._captureStackTrace(),r._pushContext();var c;if(arguments.length>1){o.deprecated("calling Promise.try with more than 1 argument");var l=arguments[1],u=arguments[2];c=s.isArray(l)?a(t).apply(u,l):a(t).call(u,l)}else c=a(t)();var p=r._popContext();return o.checkForgottenReturns(c,p,"Promise.try",r),r._resolveFromSyncValue(c),r},e.prototype._resolveFromSyncValue=function(t){t===s.errorObj?this._rejectCallback(t.e,!1):this._resolveCallback(t,!0)}}},{"./util":36}],20:[function(t,e,n){"use strict";function r(t){return t instanceof Error&&u.getPrototypeOf(t)===Error.prototype}function i(t){var e;if(r(t)){e=new l(t),e.name=t.name,e.message=t.message,e.stack=t.stack;for(var n=u.keys(t),i=0;i<n.length;++i){var o=n[i];p.test(o)||(e[o]=t[o])}return e}return s.markAsOriginatingFromRejection(t),t}function o(t,e){return function(n,r){if(null!==t){if(n){var o=i(a(n));t._attachExtraTrace(o),t._reject(o)}else if(e){var s=[].slice.call(arguments,1);t._fulfill(s)}else t._fulfill(r);t=null}}}var s=t("./util"),a=s.maybeWrapAsError,c=t("./errors"),l=c.OperationalError,u=t("./es5"),p=/^(?:name|message|stack|cause)$/;e.exports=o},{"./errors":12,"./es5":13,"./util":36}],21:[function(t,e,n){"use strict";e.exports=function(e){function n(t,e){var n=this;if(!o.isArray(t))return r.call(n,t,e);var i=a(e).apply(n._boundValue(),[null].concat(t));i===c&&s.throwLater(i.e)}function r(t,e){var n=this,r=n._boundValue(),i=void 0===t?a(e).call(r,null):a(e).call(r,null,t);i===c&&s.throwLater(i.e)}function i(t,e){var n=this;if(!t){var r=new Error(t+"");r.cause=t,t=r}var i=a(e).call(n._boundValue(),t);i===c&&s.throwLater(i.e)}var o=t("./util"),s=e._async,a=o.tryCatch,c=o.errorObj;e.prototype.asCallback=e.prototype.nodeify=function(t,e){if("function"==typeof t){var o=r;void 0!==e&&Object(e).spread&&(o=n),this._then(o,i,void 0,this,t)}return this}}},{"./util":36}],22:[function(t,e,n){"use strict";e.exports=function(){function n(){}function r(t,e){if(null==t||t.constructor!==i)throw new m("the promise constructor cannot be invoked directly\n\n    See http://goo.gl/MqrFmX\n");if("function"!=typeof e)throw new m("expecting a function but got "+f.classString(e))}function i(t){t!==b&&r(this,t),this._bitField=0,this._fulfillmentHandler0=void 0,this._rejectionHandler0=void 0,this._promise0=void 0,this._receiver0=void 0,this._resolveFromExecutor(t),this._promiseCreated(),this._fireEvent("promiseCreated",this)}function o(t){this.promise._resolveCallback(t)}function s(t){this.promise._rejectCallback(t,!1)}function a(t){var e=new i(b);e._fulfillmentHandler0=t,e._rejectionHandler0=t,e._promise0=t,e._receiver0=t}var c,l=function(){return new m("circular promise resolution chain\n\n    See http://goo.gl/MqrFmX\n")},u=function(){return new i.PromiseInspection(this._target())},p=function(t){return i.reject(new m(t))},h={},f=t("./util");c=f.isNode?function(){var t=process.domain;return void 0===t&&(t=null),t}:function(){return null},f.notEnumerableProp(i,"_getDomain",c);var _=t("./es5"),d=t("./async"),v=new d;_.defineProperty(i,"_async",{value:v});var y=t("./errors"),m=i.TypeError=y.TypeError;i.RangeError=y.RangeError;var g=i.CancellationError=y.CancellationError;i.TimeoutError=y.TimeoutError,i.OperationalError=y.OperationalError,i.RejectionError=y.OperationalError,i.AggregateError=y.AggregateError;var b=function(){},w={},C={},j=t("./thenables")(i,b),E=t("./promise_array")(i,b,j,p,n),k=t("./context")(i),F=k.create,x=t("./debuggability")(i,k),T=(x.CapturedTrace,t("./finally")(i,j,C)),P=t("./catch_filter")(C),R=t("./nodeback"),S=f.errorObj,O=f.tryCatch;return i.prototype.toString=function(){return"[object Promise]"},i.prototype.caught=i.prototype["catch"]=function(t){var e=arguments.length;if(e>1){var n,r=new Array(e-1),i=0;for(n=0;e-1>n;++n){var o=arguments[n];if(!f.isObject(o))return p("Catch statement predicate: expecting an object but got "+f.classString(o));r[i++]=o}return r.length=i,t=arguments[n],this.then(void 0,P(r,t,this))}return this.then(void 0,t)},i.prototype.reflect=function(){return this._then(u,u,void 0,this,void 0)},i.prototype.then=function(t,e){if(x.warnings()&&arguments.length>0&&"function"!=typeof t&&"function"!=typeof e){var n=".then() only accepts functions but was passed: "+f.classString(t);arguments.length>1&&(n+=", "+f.classString(e)),this._warn(n)}return this._then(t,e,void 0,void 0,void 0)},i.prototype.done=function(t,e){var n=this._then(t,e,void 0,void 0,void 0);n._setIsFinal()},i.prototype.spread=function(t){return"function"!=typeof t?p("expecting a function but got "+f.classString(t)):this.all()._then(t,void 0,void 0,w,void 0)},i.prototype.toJSON=function(){var t={isFulfilled:!1,isRejected:!1,fulfillmentValue:void 0,rejectionReason:void 0};return this.isFulfilled()?(t.fulfillmentValue=this.value(),t.isFulfilled=!0):this.isRejected()&&(t.rejectionReason=this.reason(),t.isRejected=!0),t},i.prototype.all=function(){return arguments.length>0&&this._warn(".all() was passed arguments but it does not take any"),new E(this).promise()},i.prototype.error=function(t){return this.caught(f.originatesFromRejection,t)},i.getNewLibraryCopy=e.exports,i.is=function(t){return t instanceof i},i.fromNode=i.fromCallback=function(t){var e=new i(b);e._captureStackTrace();var n=arguments.length>1?!!Object(arguments[1]).multiArgs:!1,r=O(t)(R(e,n));return r===S&&e._rejectCallback(r.e,!0),e._isFateSealed()||e._setAsyncGuaranteed(),e},i.all=function(t){return new E(t).promise()},i.cast=function(t){var e=j(t);return e instanceof i||(e=new i(b),e._captureStackTrace(),e._setFulfilled(),e._rejectionHandler0=t),e},i.resolve=i.fulfilled=i.cast,i.reject=i.rejected=function(t){var e=new i(b);return e._captureStackTrace(),e._rejectCallback(t,!0),e},i.setScheduler=function(t){if("function"!=typeof t)throw new m("expecting a function but got "+f.classString(t));return v.setScheduler(t)},i.prototype._then=function(t,e,n,r,o){var s=void 0!==o,a=s?o:new i(b),l=this._target(),u=l._bitField;s||(a._propagateFrom(this,3),a._captureStackTrace(),void 0===r&&0!==(2097152&this._bitField)&&(r=0!==(50397184&u)?this._boundValue():l===this?void 0:this._boundTo),this._fireEvent("promiseChained",this,a));var p=c();if(0!==(50397184&u)){var h,_,d=l._settlePromiseCtx;0!==(33554432&u)?(_=l._rejectionHandler0,h=t):0!==(16777216&u)?(_=l._fulfillmentHandler0,h=e,l._unsetRejectionIsUnhandled()):(d=l._settlePromiseLateCancellationObserver,_=new g("late cancellation observer"),l._attachExtraTrace(_),h=e),v.invoke(d,l,{handler:null===p?h:"function"==typeof h&&f.domainBind(p,h),promise:a,receiver:r,value:_})}else l._addCallbacks(t,e,a,r,p);return a},i.prototype._length=function(){return 65535&this._bitField},i.prototype._isFateSealed=function(){return 0!==(117506048&this._bitField)},i.prototype._isFollowing=function(){return 67108864===(67108864&this._bitField)},i.prototype._setLength=function(t){this._bitField=-65536&this._bitField|65535&t},i.prototype._setFulfilled=function(){this._bitField=33554432|this._bitField,this._fireEvent("promiseFulfilled",this)},i.prototype._setRejected=function(){this._bitField=16777216|this._bitField,this._fireEvent("promiseRejected",this)},i.prototype._setFollowing=function(){this._bitField=67108864|this._bitField,this._fireEvent("promiseResolved",this)},i.prototype._setIsFinal=function(){this._bitField=4194304|this._bitField},i.prototype._isFinal=function(){return(4194304&this._bitField)>0},i.prototype._unsetCancelled=function(){this._bitField=-65537&this._bitField},i.prototype._setCancelled=function(){this._bitField=65536|this._bitField,this._fireEvent("promiseCancelled",this)},i.prototype._setWillBeCancelled=function(){this._bitField=8388608|this._bitField},i.prototype._setAsyncGuaranteed=function(){v.hasCustomScheduler()||(this._bitField=134217728|this._bitField)},i.prototype._receiverAt=function(t){var e=0===t?this._receiver0:this[4*t-4+3];return e===h?void 0:void 0===e&&this._isBound()?this._boundValue():e},i.prototype._promiseAt=function(t){return this[4*t-4+2]},i.prototype._fulfillmentHandlerAt=function(t){return this[4*t-4+0]},i.prototype._rejectionHandlerAt=function(t){return this[4*t-4+1]},i.prototype._boundValue=function(){},i.prototype._migrateCallback0=function(t){var e=(t._bitField,t._fulfillmentHandler0),n=t._rejectionHandler0,r=t._promise0,i=t._receiverAt(0);void 0===i&&(i=h),this._addCallbacks(e,n,r,i,null)},i.prototype._migrateCallbackAt=function(t,e){var n=t._fulfillmentHandlerAt(e),r=t._rejectionHandlerAt(e),i=t._promiseAt(e),o=t._receiverAt(e);void 0===o&&(o=h),this._addCallbacks(n,r,i,o,null)},i.prototype._addCallbacks=function(t,e,n,r,i){var o=this._length();if(o>=65531&&(o=0,this._setLength(0)),0===o)this._promise0=n,this._receiver0=r,"function"==typeof t&&(this._fulfillmentHandler0=null===i?t:f.domainBind(i,t)),"function"==typeof e&&(this._rejectionHandler0=null===i?e:f.domainBind(i,e));else{var s=4*o-4;this[s+2]=n,this[s+3]=r,"function"==typeof t&&(this[s+0]=null===i?t:f.domainBind(i,t)),"function"==typeof e&&(this[s+1]=null===i?e:f.domainBind(i,e))}return this._setLength(o+1),o},i.prototype._proxy=function(t,e){this._addCallbacks(void 0,void 0,e,t,null)},i.prototype._resolveCallback=function(t,e){if(0===(117506048&this._bitField)){if(t===this)return this._rejectCallback(l(),!1);var n=j(t,this);if(!(n instanceof i))return this._fulfill(t);e&&this._propagateFrom(n,2);var r=n._target();if(r===this)return void this._reject(l());var o=r._bitField;if(0===(50397184&o)){var s=this._length();s>0&&r._migrateCallback0(this);for(var a=1;s>a;++a)r._migrateCallbackAt(this,a);this._setFollowing(),this._setLength(0),this._setFollowee(r)}else if(0!==(33554432&o))this._fulfill(r._value());else if(0!==(16777216&o))this._reject(r._reason());else{var c=new g("late cancellation observer");r._attachExtraTrace(c),this._reject(c)}}},i.prototype._rejectCallback=function(t,e,n){var r=f.ensureErrorObject(t),i=r===t;if(!i&&!n&&x.warnings()){var o="a promise was rejected with a non-error: "+f.classString(t);this._warn(o,!0)}this._attachExtraTrace(r,e?i:!1),this._reject(t)},i.prototype._resolveFromExecutor=function(t){if(t!==b){var e=this;this._captureStackTrace(),this._pushContext();var n=!0,r=this._execute(t,function(t){e._resolveCallback(t)},function(t){e._rejectCallback(t,n)});n=!1,this._popContext(),void 0!==r&&e._rejectCallback(r,!0)}},i.prototype._settlePromiseFromHandler=function(t,e,n,r){var i=r._bitField;if(0===(65536&i)){r._pushContext();var o;e===w?n&&"number"==typeof n.length?o=O(t).apply(this._boundValue(),n):(o=S,o.e=new m("cannot .spread() a non-array: "+f.classString(n))):o=O(t).call(e,n);var s=r._popContext();i=r._bitField,0===(65536&i)&&(o===C?r._reject(n):o===S?r._rejectCallback(o.e,!1):(x.checkForgottenReturns(o,s,"",r,this),r._resolveCallback(o)))}},i.prototype._target=function(){for(var t=this;t._isFollowing();)t=t._followee();return t},i.prototype._followee=function(){return this._rejectionHandler0},i.prototype._setFollowee=function(t){this._rejectionHandler0=t},i.prototype._settlePromise=function(t,e,r,o){var s=t instanceof i,a=this._bitField,c=0!==(134217728&a);0!==(65536&a)?(s&&t._invokeInternalOnCancel(),r instanceof T&&r.isFinallyHandler()?(r.cancelPromise=t,O(e).call(r,o)===S&&t._reject(S.e)):e===u?t._fulfill(u.call(r)):r instanceof n?r._promiseCancelled(t):s||t instanceof E?t._cancel():r.cancel()):"function"==typeof e?s?(c&&t._setAsyncGuaranteed(),this._settlePromiseFromHandler(e,r,o,t)):e.call(r,o,t):r instanceof n?r._isResolved()||(0!==(33554432&a)?r._promiseFulfilled(o,t):r._promiseRejected(o,t)):s&&(c&&t._setAsyncGuaranteed(),0!==(33554432&a)?t._fulfill(o):t._reject(o))},i.prototype._settlePromiseLateCancellationObserver=function(t){var e=t.handler,n=t.promise,r=t.receiver,o=t.value;"function"==typeof e?n instanceof i?this._settlePromiseFromHandler(e,r,o,n):e.call(r,o,n):n instanceof i&&n._reject(o)},i.prototype._settlePromiseCtx=function(t){this._settlePromise(t.promise,t.handler,t.receiver,t.value)},i.prototype._settlePromise0=function(t,e,n){var r=this._promise0,i=this._receiverAt(0);this._promise0=void 0,this._receiver0=void 0,this._settlePromise(r,t,i,e)},i.prototype._clearCallbackDataAtIndex=function(t){var e=4*t-4;this[e+2]=this[e+3]=this[e+0]=this[e+1]=void 0},i.prototype._fulfill=function(t){var e=this._bitField;if(!((117506048&e)>>>16)){if(t===this){var n=l();return this._attachExtraTrace(n),this._reject(n)}this._setFulfilled(),this._rejectionHandler0=t,(65535&e)>0&&(0!==(134217728&e)?this._settlePromises():v.settlePromises(this))}},i.prototype._reject=function(t){var e=this._bitField;if(!((117506048&e)>>>16))return this._setRejected(),this._fulfillmentHandler0=t,this._isFinal()?v.fatalError(t,f.isNode):void((65535&e)>0?v.settlePromises(this):this._ensurePossibleRejectionHandled())},i.prototype._fulfillPromises=function(t,e){for(var n=1;t>n;n++){var r=this._fulfillmentHandlerAt(n),i=this._promiseAt(n),o=this._receiverAt(n);this._clearCallbackDataAtIndex(n),this._settlePromise(i,r,o,e)}},i.prototype._rejectPromises=function(t,e){for(var n=1;t>n;n++){var r=this._rejectionHandlerAt(n),i=this._promiseAt(n),o=this._receiverAt(n);this._clearCallbackDataAtIndex(n),this._settlePromise(i,r,o,e)}},i.prototype._settlePromises=function(){var t=this._bitField,e=65535&t;if(e>0){if(0!==(16842752&t)){var n=this._fulfillmentHandler0;this._settlePromise0(this._rejectionHandler0,n,t),this._rejectPromises(e,n)}else{var r=this._rejectionHandler0;this._settlePromise0(this._fulfillmentHandler0,r,t),this._fulfillPromises(e,r)}this._setLength(0)}this._clearCancellationData()},i.prototype._settledValue=function(){var t=this._bitField;return 0!==(33554432&t)?this._rejectionHandler0:0!==(16777216&t)?this._fulfillmentHandler0:void 0},i.defer=i.pending=function(){x.deprecated("Promise.defer","new Promise");var t=new i(b);return{promise:t,resolve:o,reject:s}},f.notEnumerableProp(i,"_makeSelfResolutionError",l),t("./method")(i,b,j,p,x),t("./bind")(i,b,j,x),t("./cancel")(i,E,p,x),t("./direct_resolve")(i),t("./synchronous_inspection")(i),t("./join")(i,E,j,b,v,c),i.Promise=i,i.version="3.5.0",t("./map.js")(i,E,p,j,b,x),t("./call_get.js")(i),t("./using.js")(i,p,j,F,b,x),t("./timers.js")(i,b,x),t("./generators.js")(i,p,b,j,n,x),t("./nodeify.js")(i),t("./promisify.js")(i,b),t("./props.js")(i,E,j,p),t("./race.js")(i,b,j,p),t("./reduce.js")(i,E,p,j,b,x),t("./settle.js")(i,E,x),t("./some.js")(i,E,p),t("./filter.js")(i,b),t("./each.js")(i,b),t("./any.js")(i),f.toFastProperties(i),f.toFastProperties(i.prototype),a({a:1}),a({b:2}),a({c:3}),a(1),a(function(){}),a(void 0),a(!1),a(new i(b)),x.setBounds(d.firstLineError,f.lastLineError),i}},{"./any.js":1,"./async":2,"./bind":3,"./call_get.js":5,"./cancel":6,"./catch_filter":7,"./context":8,"./debuggability":9,"./direct_resolve":10,"./each.js":11,"./errors":12,"./es5":13,"./filter.js":14,"./finally":15,"./generators.js":16,"./join":17,"./map.js":18,"./method":19,"./nodeback":20,"./nodeify.js":21,"./promise_array":23,"./promisify.js":24,"./props.js":25,"./race.js":27,"./reduce.js":28,"./settle.js":30,"./some.js":31,"./synchronous_inspection":32,"./thenables":33,"./timers.js":34,"./using.js":35,"./util":36}],23:[function(t,e,n){"use strict";e.exports=function(e,n,r,i,o){function s(t){switch(t){case-2:return[];case-3:return{};case-6:return new Map}}function a(t){var r=this._promise=new e(n);t instanceof e&&r._propagateFrom(t,3),r._setOnCancel(this),this._values=t,this._length=0,this._totalResolved=0,this._init(void 0,-2)}var c=t("./util");c.isArray;return c.inherits(a,o),a.prototype.length=function(){return this._length},a.prototype.promise=function(){return this._promise},a.prototype._init=function l(t,n){var o=r(this._values,this._promise);if(o instanceof e){o=o._target();var a=o._bitField;if(this._values=o,0===(50397184&a))return this._promise._setAsyncGuaranteed(),o._then(l,this._reject,void 0,this,n);if(0===(33554432&a))return 0!==(16777216&a)?this._reject(o._reason()):this._cancel();o=o._value()}if(o=c.asArray(o),null===o){var u=i("expecting an array or an iterable object but got "+c.classString(o)).reason();return void this._promise._rejectCallback(u,!1)}return 0===o.length?void(-5===n?this._resolveEmptyArray():this._resolve(s(n))):void this._iterate(o)},a.prototype._iterate=function(t){var n=this.getActualLength(t.length);this._length=n,this._values=this.shouldCopyValues()?new Array(n):this._values;for(var i=this._promise,o=!1,s=null,a=0;n>a;++a){var c=r(t[a],i);c instanceof e?(c=c._target(),s=c._bitField):s=null,o?null!==s&&c.suppressUnhandledRejections():null!==s?0===(50397184&s)?(c._proxy(this,a),this._values[a]=c):o=0!==(33554432&s)?this._promiseFulfilled(c._value(),a):0!==(16777216&s)?this._promiseRejected(c._reason(),a):this._promiseCancelled(a):o=this._promiseFulfilled(c,a)}o||i._setAsyncGuaranteed()},a.prototype._isResolved=function(){return null===this._values},a.prototype._resolve=function(t){this._values=null,this._promise._fulfill(t)},a.prototype._cancel=function(){!this._isResolved()&&this._promise._isCancellable()&&(this._values=null,this._promise._cancel())},a.prototype._reject=function(t){this._values=null,this._promise._rejectCallback(t,!1)},a.prototype._promiseFulfilled=function(t,e){this._values[e]=t;var n=++this._totalResolved;return n>=this._length?(this._resolve(this._values),!0):!1},a.prototype._promiseCancelled=function(){return this._cancel(),!0},a.prototype._promiseRejected=function(t){return this._totalResolved++,this._reject(t),!0},a.prototype._resultCancelled=function(){if(!this._isResolved()){var t=this._values;if(this._cancel(),t instanceof e)t.cancel();else for(var n=0;n<t.length;++n)t[n]instanceof e&&t[n].cancel()}},a.prototype.shouldCopyValues=function(){return!0},a.prototype.getActualLength=function(t){return t},a}},{"./util":36}],24:[function(t,e,n){"use strict";e.exports=function(e,n){function r(t){return!C.test(t)}function i(t){try{return t.__isPromisified__===!0}catch(e){return!1}}function o(t,e,n){var r=f.getDataPropertyOrDefault(t,e+n,b);return r?i(r):!1}function s(t,e,n){for(var r=0;r<t.length;r+=2){var i=t[r];if(n.test(i))for(var o=i.replace(n,""),s=0;s<t.length;s+=2)if(t[s]===o)throw new m("Cannot promisify an API that has normal methods with '%s'-suffix\n\n    See http://goo.gl/MqrFmX\n".replace("%s",e))}}function a(t,e,n,r){for(var a=f.inheritedDataKeys(t),c=[],l=0;l<a.length;++l){var u=a[l],p=t[u],h=r===j?!0:j(u,p,t);"function"!=typeof p||i(p)||o(t,u,e)||!r(u,p,t,h)||c.push(u,p)}return s(c,e,n),c}function c(t,r,i,o,s,a){function c(){var i=r;r===h&&(i=this);var o=new e(n);o._captureStackTrace();var s="string"==typeof u&&this!==l?this[u]:t,c=_(o,a);try{s.apply(i,d(arguments,c))}catch(p){o._rejectCallback(v(p),!0,!0)}return o._isFateSealed()||o._setAsyncGuaranteed(),o}var l=function(){return this}(),u=t;return"string"==typeof u&&(t=o),f.notEnumerableProp(c,"__isPromisified__",!0),c}function l(t,e,n,r,i){for(var o=new RegExp(E(e)+"$"),s=a(t,e,o,n),c=0,l=s.length;l>c;c+=2){var u=s[c],p=s[c+1],_=u+e;if(r===k)t[_]=k(u,h,u,p,e,i);else{var d=r(p,function(){return k(u,h,u,p,e,i)});f.notEnumerableProp(d,"__isPromisified__",!0),t[_]=d}}return f.toFastProperties(t),t}function u(t,e,n){return k(t,e,void 0,t,null,n)}var p,h={},f=t("./util"),_=t("./nodeback"),d=f.withAppended,v=f.maybeWrapAsError,y=f.canEvaluate,m=t("./errors").TypeError,g="Async",b={__isPromisified__:!0},w=["arity","length","name","arguments","caller","callee","prototype","__isPromisified__"],C=new RegExp("^(?:"+w.join("|")+")$"),j=function(t){return f.isIdentifier(t)&&"_"!==t.charAt(0)&&"constructor"!==t},E=function(t){return t.replace(/([$])/,"\\$")},k=y?p:c;e.promisify=function(t,e){if("function"!=typeof t)throw new m("expecting a function but got "+f.classString(t));if(i(t))return t;e=Object(e);var n=void 0===e.context?h:e.context,o=!!e.multiArgs,s=u(t,n,o);return f.copyDescriptors(t,s,r),s},e.promisifyAll=function(t,e){if("function"!=typeof t&&"object"!=typeof t)throw new m("the target of promisifyAll must be an object or a function\n\n    See http://goo.gl/MqrFmX\n");e=Object(e);var n=!!e.multiArgs,r=e.suffix;"string"!=typeof r&&(r=g);var i=e.filter;"function"!=typeof i&&(i=j);var o=e.promisifier;if("function"!=typeof o&&(o=k),!f.isIdentifier(r))throw new RangeError("suffix must be a valid identifier\n\n    See http://goo.gl/MqrFmX\n");for(var s=f.inheritedDataKeys(t),a=0;a<s.length;++a){var c=t[s[a]];"constructor"!==s[a]&&f.isClass(c)&&(l(c.prototype,r,i,o,n),l(c,r,i,o,n))}return l(t,r,i,o,n)}}},{"./errors":12,"./nodeback":20,"./util":36}],25:[function(t,e,n){"use strict";e.exports=function(e,n,r,i){function o(t){var e,n=!1;if(void 0!==a&&t instanceof a)e=p(t),n=!0;else{var r=u.keys(t),i=r.length;e=new Array(2*i);for(var o=0;i>o;++o){var s=r[o];e[o]=t[s],e[o+i]=s}}this.constructor$(e),this._isMap=n,this._init$(void 0,n?-6:-3)}function s(t){var n,s=r(t);return l(s)?(n=s instanceof e?s._then(e.props,void 0,void 0,void 0,void 0):new o(s).promise(),s instanceof e&&n._propagateFrom(s,2),n):i("cannot await properties of a non-object\n\n    See http://goo.gl/MqrFmX\n")}var a,c=t("./util"),l=c.isObject,u=t("./es5");"function"==typeof Map&&(a=Map);var p=function(){function t(t,r){this[e]=t,this[e+n]=r,e++}var e=0,n=0;return function(r){n=r.size,e=0;var i=new Array(2*r.size);return r.forEach(t,i),i}}(),h=function(t){for(var e=new a,n=t.length/2|0,r=0;n>r;++r){var i=t[n+r],o=t[r];e.set(i,o)}return e};c.inherits(o,n),o.prototype._init=function(){},o.prototype._promiseFulfilled=function(t,e){this._values[e]=t;var n=++this._totalResolved;if(n>=this._length){var r;if(this._isMap)r=h(this._values);else{r={};for(var i=this.length(),o=0,s=this.length();s>o;++o)r[this._values[o+i]]=this._values[o]}return this._resolve(r),!0}return!1},o.prototype.shouldCopyValues=function(){return!1},o.prototype.getActualLength=function(t){return t>>1},e.prototype.props=function(){return s(this)},e.props=function(t){return s(t)}}},{"./es5":13,"./util":36}],26:[function(t,e,n){"use strict";function r(t,e,n,r,i){for(var o=0;i>o;++o)n[o+r]=t[o+e],t[o+e]=void 0}function i(t){this._capacity=t,this._length=0,this._front=0}i.prototype._willBeOverCapacity=function(t){return this._capacity<t},i.prototype._pushOne=function(t){var e=this.length();this._checkCapacity(e+1);var n=this._front+e&this._capacity-1;this[n]=t,this._length=e+1},i.prototype.push=function(t,e,n){var r=this.length()+3;if(this._willBeOverCapacity(r))return this._pushOne(t),this._pushOne(e),void this._pushOne(n);var i=this._front+r-3;this._checkCapacity(r);var o=this._capacity-1;this[i+0&o]=t,this[i+1&o]=e,this[i+2&o]=n,this._length=r},i.prototype.shift=function(){var t=this._front,e=this[t];return this[t]=void 0,this._front=t+1&this._capacity-1,this._length--,e},i.prototype.length=function(){return this._length},i.prototype._checkCapacity=function(t){this._capacity<t&&this._resizeTo(this._capacity<<1)},i.prototype._resizeTo=function(t){var e=this._capacity;this._capacity=t;var n=this._front,i=this._length,o=n+i&e-1;r(this,0,this,e,o)},e.exports=i},{}],27:[function(t,e,n){"use strict";e.exports=function(e,n,r,i){function o(t,o){var c=r(t);if(c instanceof e)return a(c);if(t=s.asArray(t),null===t)return i("expecting an array or an iterable object but got "+s.classString(t));var l=new e(n);void 0!==o&&l._propagateFrom(o,3);for(var u=l._fulfill,p=l._reject,h=0,f=t.length;f>h;++h){var _=t[h];(void 0!==_||h in t)&&e.cast(_)._then(u,p,void 0,l,null)}return l}var s=t("./util"),a=function(t){return t.then(function(e){return o(e,t)})};e.race=function(t){return o(t,void 0)},e.prototype.race=function(){return o(this,void 0)}}},{"./util":36}],28:[function(t,e,n){"use strict";e.exports=function(e,n,r,i,o,s){function a(t,n,r,i){this.constructor$(t);var s=h();this._fn=null===s?n:f.domainBind(s,n),void 0!==r&&(r=e.resolve(r),r._attachCancellationCallback(this)),this._initialValue=r,this._currentCancellable=null,i===o?this._eachValues=Array(this._length):0===i?this._eachValues=null:this._eachValues=void 0,this._promise._captureStackTrace(),this._init$(void 0,-5)}function c(t,e){this.isFulfilled()?e._resolve(t):e._reject(t)}function l(t,e,n,i){if("function"!=typeof e)return r("expecting a function but got "+f.classString(e));var o=new a(t,e,n,i);return o.promise()}function u(t){this.accum=t,this.array._gotAccum(t);var n=i(this.value,this.array._promise);return n instanceof e?(this.array._currentCancellable=n,n._then(p,void 0,void 0,this,void 0)):p.call(this,n)}function p(t){var n=this.array,r=n._promise,i=_(n._fn);r._pushContext();var o;o=void 0!==n._eachValues?i.call(r._boundValue(),t,this.index,this.length):i.call(r._boundValue(),this.accum,t,this.index,this.length),o instanceof e&&(n._currentCancellable=o);var a=r._popContext();return s.checkForgottenReturns(o,a,void 0!==n._eachValues?"Promise.each":"Promise.reduce",r),o}var h=e._getDomain,f=t("./util"),_=f.tryCatch;f.inherits(a,n),a.prototype._gotAccum=function(t){void 0!==this._eachValues&&null!==this._eachValues&&t!==o&&this._eachValues.push(t)},a.prototype._eachComplete=function(t){return null!==this._eachValues&&this._eachValues.push(t),this._eachValues},a.prototype._init=function(){},a.prototype._resolveEmptyArray=function(){this._resolve(void 0!==this._eachValues?this._eachValues:this._initialValue)},a.prototype.shouldCopyValues=function(){return!1},a.prototype._resolve=function(t){this._promise._resolveCallback(t),this._values=null},a.prototype._resultCancelled=function(t){return t===this._initialValue?this._cancel():void(this._isResolved()||(this._resultCancelled$(),this._currentCancellable instanceof e&&this._currentCancellable.cancel(),this._initialValue instanceof e&&this._initialValue.cancel()))},a.prototype._iterate=function(t){this._values=t;var n,r,i=t.length;if(void 0!==this._initialValue?(n=this._initialValue,r=0):(n=e.resolve(t[0]),r=1),this._currentCancellable=n,!n.isRejected())for(;i>r;++r){var o={accum:null,value:t[r],index:r,length:i,array:this};n=n._then(u,void 0,void 0,o,void 0)}void 0!==this._eachValues&&(n=n._then(this._eachComplete,void 0,void 0,this,void 0)),n._then(c,c,void 0,n,this)},e.prototype.reduce=function(t,e){return l(this,t,e,null)},e.reduce=function(t,e,n,r){return l(t,e,n,r)}}},{"./util":36}],29:[function(t,e,n){"use strict";var r,i=t("./util"),o=function(){throw new Error("No async scheduler available\n\n    See http://goo.gl/MqrFmX\n")},s=i.getNativePromise();if(i.isNode&&"undefined"==typeof MutationObserver){var a=global.setImmediate,c=process.nextTick;r=i.isRecentNode?function(t){a.call(global,t)}:function(t){c.call(process,t)}}else if("function"==typeof s&&"function"==typeof s.resolve){var l=s.resolve();r=function(t){l.then(t)}}else r="undefined"==typeof MutationObserver||"undefined"!=typeof window&&window.navigator&&(window.navigator.standalone||window.cordova)?"undefined"!=typeof setImmediate?function(t){setImmediate(t)}:"undefined"!=typeof setTimeout?function(t){setTimeout(t,0)}:o:function(){var t=document.createElement("div"),e={attributes:!0},n=!1,r=document.createElement("div"),i=new MutationObserver(function(){t.classList.toggle("foo"),n=!1});i.observe(r,e);var o=function(){n||(n=!0,r.classList.toggle("foo"))};return function(n){var r=new MutationObserver(function(){r.disconnect(),n()});r.observe(t,e),o()}}();e.exports=r},{"./util":36}],30:[function(t,e,n){"use strict";e.exports=function(e,n,r){function i(t){this.constructor$(t)}var o=e.PromiseInspection,s=t("./util");s.inherits(i,n),i.prototype._promiseResolved=function(t,e){this._values[t]=e;var n=++this._totalResolved;return n>=this._length?(this._resolve(this._values),!0):!1},i.prototype._promiseFulfilled=function(t,e){var n=new o;return n._bitField=33554432,n._settledValueField=t,this._promiseResolved(e,n)},i.prototype._promiseRejected=function(t,e){var n=new o;return n._bitField=16777216,n._settledValueField=t,this._promiseResolved(e,n)},e.settle=function(t){return r.deprecated(".settle()",".reflect()"),new i(t).promise()},e.prototype.settle=function(){return e.settle(this)}}},{"./util":36}],31:[function(t,e,n){"use strict";e.exports=function(e,n,r){function i(t){this.constructor$(t),
this._howMany=0,this._unwrap=!1,this._initialized=!1}function o(t,e){if((0|e)!==e||0>e)return r("expecting a positive integer\n\n    See http://goo.gl/MqrFmX\n");var n=new i(t),o=n.promise();return n.setHowMany(e),n.init(),o}var s=t("./util"),a=t("./errors").RangeError,c=t("./errors").AggregateError,l=s.isArray,u={};s.inherits(i,n),i.prototype._init=function(){if(this._initialized){if(0===this._howMany)return void this._resolve([]);this._init$(void 0,-5);var t=l(this._values);!this._isResolved()&&t&&this._howMany>this._canPossiblyFulfill()&&this._reject(this._getRangeError(this.length()))}},i.prototype.init=function(){this._initialized=!0,this._init()},i.prototype.setUnwrap=function(){this._unwrap=!0},i.prototype.howMany=function(){return this._howMany},i.prototype.setHowMany=function(t){this._howMany=t},i.prototype._promiseFulfilled=function(t){return this._addFulfilled(t),this._fulfilled()===this.howMany()?(this._values.length=this.howMany(),1===this.howMany()&&this._unwrap?this._resolve(this._values[0]):this._resolve(this._values),!0):!1},i.prototype._promiseRejected=function(t){return this._addRejected(t),this._checkOutcome()},i.prototype._promiseCancelled=function(){return this._values instanceof e||null==this._values?this._cancel():(this._addRejected(u),this._checkOutcome())},i.prototype._checkOutcome=function(){if(this.howMany()>this._canPossiblyFulfill()){for(var t=new c,e=this.length();e<this._values.length;++e)this._values[e]!==u&&t.push(this._values[e]);return t.length>0?this._reject(t):this._cancel(),!0}return!1},i.prototype._fulfilled=function(){return this._totalResolved},i.prototype._rejected=function(){return this._values.length-this.length()},i.prototype._addRejected=function(t){this._values.push(t)},i.prototype._addFulfilled=function(t){this._values[this._totalResolved++]=t},i.prototype._canPossiblyFulfill=function(){return this.length()-this._rejected()},i.prototype._getRangeError=function(t){var e="Input array must contain at least "+this._howMany+" items but contains only "+t+" items";return new a(e)},i.prototype._resolveEmptyArray=function(){this._reject(this._getRangeError(0))},e.some=function(t,e){return o(t,e)},e.prototype.some=function(t){return o(this,t)},e._SomePromiseArray=i}},{"./errors":12,"./util":36}],32:[function(t,e,n){"use strict";e.exports=function(t){function e(t){void 0!==t?(t=t._target(),this._bitField=t._bitField,this._settledValueField=t._isFateSealed()?t._settledValue():void 0):(this._bitField=0,this._settledValueField=void 0)}e.prototype._settledValue=function(){return this._settledValueField};var n=e.prototype.value=function(){if(!this.isFulfilled())throw new TypeError("cannot get fulfillment value of a non-fulfilled promise\n\n    See http://goo.gl/MqrFmX\n");return this._settledValue()},r=e.prototype.error=e.prototype.reason=function(){if(!this.isRejected())throw new TypeError("cannot get rejection reason of a non-rejected promise\n\n    See http://goo.gl/MqrFmX\n");return this._settledValue()},i=e.prototype.isFulfilled=function(){return 0!==(33554432&this._bitField)},o=e.prototype.isRejected=function(){return 0!==(16777216&this._bitField)},s=e.prototype.isPending=function(){return 0===(50397184&this._bitField)},a=e.prototype.isResolved=function(){return 0!==(50331648&this._bitField)};e.prototype.isCancelled=function(){return 0!==(8454144&this._bitField)},t.prototype.__isCancelled=function(){return 65536===(65536&this._bitField)},t.prototype._isCancelled=function(){return this._target().__isCancelled()},t.prototype.isCancelled=function(){return 0!==(8454144&this._target()._bitField)},t.prototype.isPending=function(){return s.call(this._target())},t.prototype.isRejected=function(){return o.call(this._target())},t.prototype.isFulfilled=function(){return i.call(this._target())},t.prototype.isResolved=function(){return a.call(this._target())},t.prototype.value=function(){return n.call(this._target())},t.prototype.reason=function(){var t=this._target();return t._unsetRejectionIsUnhandled(),r.call(t)},t.prototype._value=function(){return this._settledValue()},t.prototype._reason=function(){return this._unsetRejectionIsUnhandled(),this._settledValue()},t.PromiseInspection=e}},{}],33:[function(t,e,n){"use strict";e.exports=function(e,n){function r(t,r){if(u(t)){if(t instanceof e)return t;var i=o(t);if(i===l){r&&r._pushContext();var c=e.reject(i.e);return r&&r._popContext(),c}if("function"==typeof i){if(s(t)){var c=new e(n);return t._then(c._fulfill,c._reject,void 0,c,null),c}return a(t,i,r)}}return t}function i(t){return t.then}function o(t){try{return i(t)}catch(e){return l.e=e,l}}function s(t){try{return p.call(t,"_promise0")}catch(e){return!1}}function a(t,r,i){function o(t){a&&(a._resolveCallback(t),a=null)}function s(t){a&&(a._rejectCallback(t,p,!0),a=null)}var a=new e(n),u=a;i&&i._pushContext(),a._captureStackTrace(),i&&i._popContext();var p=!0,h=c.tryCatch(r).call(t,o,s);return p=!1,a&&h===l&&(a._rejectCallback(h.e,!0,!0),a=null),u}var c=t("./util"),l=c.errorObj,u=c.isObject,p={}.hasOwnProperty;return r}},{"./util":36}],34:[function(t,e,n){"use strict";e.exports=function(e,n,r){function i(t){this.handle=t}function o(t){return clearTimeout(this.handle),t}function s(t){throw clearTimeout(this.handle),t}var a=t("./util"),c=e.TimeoutError;i.prototype._resultCancelled=function(){clearTimeout(this.handle)};var l=function(t){return u(+this).thenReturn(t)},u=e.delay=function(t,o){var s,a;return void 0!==o?(s=e.resolve(o)._then(l,null,null,t,void 0),r.cancellation()&&o instanceof e&&s._setOnCancel(o)):(s=new e(n),a=setTimeout(function(){s._fulfill()},+t),r.cancellation()&&s._setOnCancel(new i(a)),s._captureStackTrace()),s._setAsyncGuaranteed(),s};e.prototype.delay=function(t){return u(t,this)};var p=function(t,e,n){var r;r="string"!=typeof e?e instanceof Error?e:new c("operation timed out"):new c(e),a.markAsOriginatingFromRejection(r),t._attachExtraTrace(r),t._reject(r),null!=n&&n.cancel()};e.prototype.timeout=function(t,e){t=+t;var n,a,c=new i(setTimeout(function(){n.isPending()&&p(n,e,a)},t));return r.cancellation()?(a=this.then(),n=a._then(o,s,void 0,c,void 0),n._setOnCancel(c)):n=this._then(o,s,void 0,c,void 0),n}}},{"./util":36}],35:[function(t,e,n){"use strict";e.exports=function(e,n,r,i,o,s){function a(t){setTimeout(function(){throw t},0)}function c(t){var e=r(t);return e!==t&&"function"==typeof t._isDisposable&&"function"==typeof t._getDisposer&&t._isDisposable()&&e._setDisposable(t._getDisposer()),e}function l(t,n){function i(){if(s>=l)return u._fulfill();var o=c(t[s++]);if(o instanceof e&&o._isDisposable()){try{o=r(o._getDisposer().tryDispose(n),t.promise)}catch(p){return a(p)}if(o instanceof e)return o._then(i,a,null,null,null)}i()}var s=0,l=t.length,u=new e(o);return i(),u}function u(t,e,n){this._data=t,this._promise=e,this._context=n}function p(t,e,n){this.constructor$(t,e,n)}function h(t){return u.isDisposer(t)?(this.resources[this.index]._setDisposable(t),t.promise()):t}function f(t){this.length=t,this.promise=null,this[t-1]=null}var _=t("./util"),d=t("./errors").TypeError,v=t("./util").inherits,y=_.errorObj,m=_.tryCatch,g={};u.prototype.data=function(){return this._data},u.prototype.promise=function(){return this._promise},u.prototype.resource=function(){return this.promise().isFulfilled()?this.promise().value():g},u.prototype.tryDispose=function(t){var e=this.resource(),n=this._context;void 0!==n&&n._pushContext();var r=e!==g?this.doDispose(e,t):null;return void 0!==n&&n._popContext(),this._promise._unsetDisposable(),this._data=null,r},u.isDisposer=function(t){return null!=t&&"function"==typeof t.resource&&"function"==typeof t.tryDispose},v(p,u),p.prototype.doDispose=function(t,e){var n=this.data();return n.call(t,t,e)},f.prototype._resultCancelled=function(){for(var t=this.length,n=0;t>n;++n){var r=this[n];r instanceof e&&r.cancel()}},e.using=function(){var t=arguments.length;if(2>t)return n("you must pass at least 2 arguments to Promise.using");var i=arguments[t-1];if("function"!=typeof i)return n("expecting a function but got "+_.classString(i));var o,a=!0;2===t&&Array.isArray(arguments[0])?(o=arguments[0],t=o.length,a=!1):(o=arguments,t--);for(var c=new f(t),p=0;t>p;++p){var d=o[p];if(u.isDisposer(d)){var v=d;d=d.promise(),d._setDisposable(v)}else{var g=r(d);g instanceof e&&(d=g._then(h,null,null,{resources:c,index:p},void 0))}c[p]=d}for(var b=new Array(c.length),p=0;p<b.length;++p)b[p]=e.resolve(c[p]).reflect();var w=e.all(b).then(function(t){for(var e=0;e<t.length;++e){var n=t[e];if(n.isRejected())return y.e=n.error(),y;if(!n.isFulfilled())return void w.cancel();t[e]=n.value()}C._pushContext(),i=m(i);var r=a?i.apply(void 0,t):i(t),o=C._popContext();return s.checkForgottenReturns(r,o,"Promise.using",C),r}),C=w.lastly(function(){var t=new e.PromiseInspection(w);return l(c,t)});return c.promise=C,C._setOnCancel(c),C},e.prototype._setDisposable=function(t){this._bitField=131072|this._bitField,this._disposer=t},e.prototype._isDisposable=function(){return(131072&this._bitField)>0},e.prototype._getDisposer=function(){return this._disposer},e.prototype._unsetDisposable=function(){this._bitField=-131073&this._bitField,this._disposer=void 0},e.prototype.disposer=function(t){if("function"==typeof t)return new p(t,this,i());throw new d}}},{"./errors":12,"./util":36}],36:[function(t,e,n){"use strict";function r(){try{var t=P;return P=null,t.apply(this,arguments)}catch(e){return T.e=e,T}}function i(t){return P=t,r}function o(t){return null==t||t===!0||t===!1||"string"==typeof t||"number"==typeof t}function s(t){return"function"==typeof t||"object"==typeof t&&null!==t}function a(t){return o(t)?new Error(v(t)):t}function c(t,e){var n,r=t.length,i=new Array(r+1);for(n=0;r>n;++n)i[n]=t[n];return i[n]=e,i}function l(t,e,n){if(!F.isES5)return{}.hasOwnProperty.call(t,e)?t[e]:void 0;var r=Object.getOwnPropertyDescriptor(t,e);return null!=r?null==r.get&&null==r.set?r.value:n:void 0}function u(t,e,n){if(o(t))return t;var r={value:n,configurable:!0,enumerable:!1,writable:!0};return F.defineProperty(t,e,r),t}function p(t){throw t}function h(t){try{if("function"==typeof t){var e=F.names(t.prototype),n=F.isES5&&e.length>1,r=e.length>0&&!(1===e.length&&"constructor"===e[0]),i=A.test(t+"")&&F.names(t).length>0;if(n||r||i)return!0}return!1}catch(o){return!1}}function f(t){function e(){}e.prototype=t;for(var n=8;n--;)new e;return t}function _(t){return D.test(t)}function d(t,e,n){for(var r=new Array(t),i=0;t>i;++i)r[i]=e+i+n;return r}function v(t){try{return t+""}catch(e){return"[no string representation]"}}function y(t){return null!==t&&"object"==typeof t&&"string"==typeof t.message&&"string"==typeof t.name}function m(t){try{u(t,"isOperational",!0)}catch(e){}}function g(t){return null==t?!1:t instanceof Error.__BluebirdErrorTypes__.OperationalError||t.isOperational===!0}function b(t){return y(t)&&F.propertyIsWritable(t,"stack")}function w(t){return{}.toString.call(t)}function C(t,e,n){for(var r=F.names(t),i=0;i<r.length;++i){var o=r[i];if(n(o))try{F.defineProperty(e,o,F.getDescriptor(t,o))}catch(s){}}}function j(t){return N?process.env[t]:void 0}function E(){if("function"==typeof Promise)try{var t=new Promise(function(){});if("[object Promise]"==={}.toString.call(t))return Promise}catch(e){}}function k(t,e){return t.bind(e)}var F=t("./es5"),x="undefined"==typeof navigator,T={e:{}},P,R="undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:void 0!==this?this:null,S=function(t,e){function n(){this.constructor=t,this.constructor$=e;for(var n in e.prototype)r.call(e.prototype,n)&&"$"!==n.charAt(n.length-1)&&(this[n+"$"]=e.prototype[n])}var r={}.hasOwnProperty;return n.prototype=e.prototype,t.prototype=new n,t.prototype},O=function(){var t=[Array.prototype,Object.prototype,Function.prototype],e=function(e){for(var n=0;n<t.length;++n)if(t[n]===e)return!0;return!1};if(F.isES5){var n=Object.getOwnPropertyNames;return function(t){for(var r=[],i=Object.create(null);null!=t&&!e(t);){var o;try{o=n(t)}catch(s){return r}for(var a=0;a<o.length;++a){var c=o[a];if(!i[c]){i[c]=!0;var l=Object.getOwnPropertyDescriptor(t,c);null!=l&&null==l.get&&null==l.set&&r.push(c)}}t=F.getPrototypeOf(t)}return r}}var r={}.hasOwnProperty;return function(n){if(e(n))return[];var i=[];t:for(var o in n)if(r.call(n,o))i.push(o);else{for(var s=0;s<t.length;++s)if(r.call(t[s],o))continue t;i.push(o)}return i}}(),A=/this\s*\.\s*\S+\s*=/,D=/^[a-z$_][a-z$_0-9]*$/i,V=function(){return"stack"in new Error?function(t){return b(t)?t:new Error(v(t))}:function(t){if(b(t))return t;try{throw new Error(v(t))}catch(e){return e}}}(),I=function(t){return F.isArray(t)?t:null};if("undefined"!=typeof Symbol&&Symbol.iterator){var L="function"==typeof Array.from?function(t){return Array.from(t)}:function(t){for(var e,n=[],r=t[Symbol.iterator]();!(e=r.next()).done;)n.push(e.value);return n};I=function(t){return F.isArray(t)?t:null!=t&&"function"==typeof t[Symbol.iterator]?L(t):null}}var H="undefined"!=typeof process&&"[object process]"===w(process).toLowerCase(),N="undefined"!=typeof process&&"undefined"!=typeof process.env,B={isClass:h,isIdentifier:_,inheritedDataKeys:O,getDataPropertyOrDefault:l,thrower:p,isArray:F.isArray,asArray:I,notEnumerableProp:u,isPrimitive:o,isObject:s,isError:y,canEvaluate:x,errorObj:T,tryCatch:i,inherits:S,withAppended:c,maybeWrapAsError:a,toFastProperties:f,filledRange:d,toString:v,canAttachTrace:b,ensureErrorObject:V,originatesFromRejection:g,markAsOriginatingFromRejection:m,classString:w,copyDescriptors:C,hasDevTools:"undefined"!=typeof chrome&&chrome&&"function"==typeof chrome.loadTimes,isNode:H,hasEnvVariables:N,env:j,global:R,getNativePromise:E,domainBind:k};B.isRecentNode=B.isNode&&function(){var t=process.versions.node.split(".").map(Number);return 0===t[0]&&t[1]>10||t[0]>0}(),B.isNode&&B.toFastProperties(process);try{throw new Error}catch(U){B.lastLineError=U}e.exports=B},{"./es5":13}]},{},[4])(4)}),"undefined"!=typeof window&&null!==window?window.P=window.Promise:"undefined"!=typeof self&&null!==self&&(self.P=self.Promise);

var COMPILED = !0, goog = goog || {};
goog.global = this;
goog.isDef = function(a) {
  return void 0 !== a;
};
goog.isString = function(a) {
  return "string" == typeof a;
};
goog.isBoolean = function(a) {
  return "boolean" == typeof a;
};
goog.isNumber = function(a) {
  return "number" == typeof a;
};
goog.exportPath_ = function(a, b, c) {
  a = a.split(".");
  c = c || goog.global;
  a[0] in c || !c.execScript || c.execScript("var " + a[0]);
  for (var d; a.length && (d = a.shift());) {
    !a.length && goog.isDef(b) ? c[d] = b : c = c[d] && c[d] !== Object.prototype[d] ? c[d] : c[d] = {};
  }
};
goog.define = function(a, b) {
  var c = b;
  COMPILED || (goog.global.CLOSURE_UNCOMPILED_DEFINES && void 0 === goog.global.CLOSURE_UNCOMPILED_DEFINES.nodeType && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, a) ? c = goog.global.CLOSURE_UNCOMPILED_DEFINES[a] : goog.global.CLOSURE_DEFINES && void 0 === goog.global.CLOSURE_DEFINES.nodeType && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, a) && (c = goog.global.CLOSURE_DEFINES[a]));
  goog.exportPath_(a, c);
};
goog.DEBUG = !0;
goog.LOCALE = "en";
goog.TRUSTED_SITE = !0;
goog.STRICT_MODE_COMPATIBLE = !1;
goog.DISALLOW_TEST_ONLY_CODE = COMPILED && !goog.DEBUG;
goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = !1;
goog.provide = function(a) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide can not be used within a goog.module.");
  }
  if (!COMPILED && goog.isProvided_(a)) {
    throw Error('Namespace "' + a + '" already declared.');
  }
  goog.constructNamespace_(a);
};
goog.constructNamespace_ = function(a, b) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[a];
    for (var c = a; (c = c.substring(0, c.lastIndexOf("."))) && !goog.getObjectByName(c);) {
      goog.implicitNamespaces_[c] = !0;
    }
  }
  goog.exportPath_(a, b);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(a) {
  if (!goog.isString(a) || !a || -1 == a.search(goog.VALID_MODULE_RE_)) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + a + " has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = a;
  if (!COMPILED) {
    if (goog.isProvided_(a)) {
      throw Error('Namespace "' + a + '" already declared.');
    }
    delete goog.implicitNamespaces_[a];
  }
};
goog.module.get = function(a) {
  return goog.module.getInternal_(a);
};
goog.module.getInternal_ = function(a) {
  if (!COMPILED) {
    if (a in goog.loadedModules_) {
      return goog.loadedModules_[a];
    }
    if (!goog.implicitNamespaces_[a]) {
      return a = goog.getObjectByName(a), null != a ? a : null;
    }
  }
  return null;
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return null != goog.moduleLoaderState_;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = !0;
};
goog.setTestOnly = function(a) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    throw a = a || "", Error("Importing test-only code into non-debug environment" + (a ? ": " + a : "."));
  }
};
goog.forwardDeclare = function(a) {
};
COMPILED || (goog.isProvided_ = function(a) {
  return a in goog.loadedModules_ || !goog.implicitNamespaces_[a] && goog.isDefAndNotNull(goog.getObjectByName(a));
}, goog.implicitNamespaces_ = {"goog.module":!0});
goog.getObjectByName = function(a, b) {
  for (var c = a.split("."), d = b || goog.global, e; e = c.shift();) {
    if (goog.isDefAndNotNull(d[e])) {
      d = d[e];
    } else {
      return null;
    }
  }
  return d;
};
goog.globalize = function(a, b) {
  var c = b || goog.global, d;
  for (d in a) {
    c[d] = a[d];
  }
};
goog.addDependency = function(a, b, c, d) {
  if (goog.DEPENDENCIES_ENABLED) {
    var e;
    a = a.replace(/\\/g, "/");
    var f = goog.dependencies_;
    d && "boolean" !== typeof d || (d = d ? {module:"goog"} : {});
    for (var g = 0; e = b[g]; g++) {
      f.nameToPath[e] = a, f.loadFlags[a] = d;
    }
    for (d = 0; b = c[d]; d++) {
      a in f.requires || (f.requires[a] = {}), f.requires[a][b] = !0;
    }
  }
};
goog.ENABLE_DEBUG_LOADER = !0;
goog.logToConsole_ = function(a) {
  goog.global.console && goog.global.console.error(a);
};
goog.require = function(a) {
  if (!COMPILED) {
    goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_ && goog.maybeProcessDeferredDep_(a);
    if (goog.isProvided_(a)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(a);
      }
    } else {
      if (goog.ENABLE_DEBUG_LOADER) {
        var b = goog.getPathFromDeps_(a);
        if (b) {
          goog.writeScripts_(b);
        } else {
          throw a = "goog.require could not find: " + a, goog.logToConsole_(a), Error(a);
        }
      }
    }
    return null;
  }
};
goog.basePath = "";
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(a) {
  a.instance_ = void 0;
  a.getInstance = function() {
    if (a.instance_) {
      return a.instance_;
    }
    goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = a);
    return a.instance_ = new a;
  };
};
goog.instantiatedSingletons_ = [];
goog.LOAD_MODULE_USING_EVAL = !0;
goog.SEAL_MODULE_EXPORTS = goog.DEBUG;
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.TRANSPILE = "detect";
goog.TRANSPILER = "transpile.js";
goog.DEPENDENCIES_ENABLED && (goog.dependencies_ = {loadFlags:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}}, goog.inHtmlDocument_ = function() {
  var a = goog.global.document;
  return null != a && "write" in a;
}, goog.findBasePath_ = function() {
  if (goog.isDef(goog.global.CLOSURE_BASE_PATH) && goog.isString(goog.global.CLOSURE_BASE_PATH)) {
    goog.basePath = goog.global.CLOSURE_BASE_PATH;
  } else {
    if (goog.inHtmlDocument_()) {
      var a = goog.global.document, b = a.currentScript;
      a = b ? [b] : a.getElementsByTagName("SCRIPT");
      for (b = a.length - 1; 0 <= b; --b) {
        var c = a[b].src, d = c.lastIndexOf("?");
        d = -1 == d ? c.length : d;
        if ("base.js" == c.substr(d - 7, 7)) {
          goog.basePath = c.substr(0, d - 7);
          break;
        }
      }
    }
  }
}, goog.importScript_ = function(a, b) {
  (goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_)(a, b) && (goog.dependencies_.written[a] = !0);
}, goog.IS_OLD_IE_ = !(goog.global.atob || !goog.global.document || !goog.global.document.all), goog.oldIeWaiting_ = !1, goog.importProcessedScript_ = function(a, b, c) {
  goog.importScript_("", 'goog.retrieveAndExec_("' + a + '", ' + b + ", " + c + ");");
}, goog.queuedModules_ = [], goog.wrapModule_ = function(a, b) {
  return goog.LOAD_MODULE_USING_EVAL && goog.isDef(goog.global.JSON) ? "goog.loadModule(" + goog.global.JSON.stringify(b + "\n//# sourceURL\x3d" + a + "\n") + ");" : 'goog.loadModule(function(exports) {"use strict";' + b + "\n;return exports});\n//# sourceURL\x3d" + a + "\n";
}, goog.loadQueuedModules_ = function() {
  var a = goog.queuedModules_.length;
  if (0 < a) {
    var b = goog.queuedModules_;
    goog.queuedModules_ = [];
    for (var c = 0; c < a; c++) {
      goog.maybeProcessDeferredPath_(b[c]);
    }
  }
  goog.oldIeWaiting_ = !1;
}, goog.maybeProcessDeferredDep_ = function(a) {
  goog.isDeferredModule_(a) && goog.allDepsAreAvailable_(a) && (a = goog.getPathFromDeps_(a), goog.maybeProcessDeferredPath_(goog.basePath + a));
}, goog.isDeferredModule_ = function(a) {
  var b = (a = goog.getPathFromDeps_(a)) && goog.dependencies_.loadFlags[a] || {}, c = b.lang || "es3";
  return a && ("goog" == b.module || goog.needsTranspile_(c)) ? goog.basePath + a in goog.dependencies_.deferred : !1;
}, goog.allDepsAreAvailable_ = function(a) {
  if ((a = goog.getPathFromDeps_(a)) && a in goog.dependencies_.requires) {
    for (var b in goog.dependencies_.requires[a]) {
      if (!goog.isProvided_(b) && !goog.isDeferredModule_(b)) {
        return !1;
      }
    }
  }
  return !0;
}, goog.maybeProcessDeferredPath_ = function(a) {
  if (a in goog.dependencies_.deferred) {
    var b = goog.dependencies_.deferred[a];
    delete goog.dependencies_.deferred[a];
    goog.globalEval(b);
  }
}, goog.loadModuleFromUrl = function(a) {
  goog.retrieveAndExec_(a, !0, !1);
}, goog.writeScriptSrcNode_ = function(a) {
  goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + a + '"\x3e\x3c/script\x3e');
}, goog.appendScriptSrcNode_ = function(a) {
  var b = goog.global.document, c = b.createElement("script");
  c.type = "text/javascript";
  c.src = a;
  c.defer = !1;
  c.async = !1;
  b.head.appendChild(c);
}, goog.writeScriptTag_ = function(a, b) {
  if (goog.inHtmlDocument_()) {
    var c = goog.global.document;
    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && "complete" == c.readyState) {
      if (/\bdeps.js$/.test(a)) {
        return !1;
      }
      throw Error('Cannot write "' + a + '" after document load');
    }
    if (void 0 === b) {
      if (goog.IS_OLD_IE_) {
        goog.oldIeWaiting_ = !0;
        var d = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
        c.write('\x3cscript type\x3d"text/javascript" src\x3d"' + a + '"' + d + "\x3e\x3c/script\x3e");
      } else {
        goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING ? goog.appendScriptSrcNode_(a) : goog.writeScriptSrcNode_(a);
      }
    } else {
      c.write('\x3cscript type\x3d"text/javascript"\x3e' + goog.protectScriptTag_(b) + "\x3c/script\x3e");
    }
    return !0;
  }
  return !1;
}, goog.protectScriptTag_ = function(a) {
  return a.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
}, goog.needsTranspile_ = function(a) {
  if ("always" == goog.TRANSPILE) {
    return !0;
  }
  if ("never" == goog.TRANSPILE) {
    return !1;
  }
  goog.requiresTranspilation_ || (goog.requiresTranspilation_ = goog.createRequiresTranspilation_());
  if (a in goog.requiresTranspilation_) {
    return goog.requiresTranspilation_[a];
  }
  throw Error("Unknown language mode: " + a);
}, goog.requiresTranspilation_ = null, goog.lastNonModuleScriptIndex_ = 0, goog.onScriptLoad_ = function(a, b) {
  "complete" == a.readyState && goog.lastNonModuleScriptIndex_ == b && goog.loadQueuedModules_();
  return !0;
}, goog.writeScripts_ = function(a) {
  function b(a) {
    if (!(a in e.written || a in e.visited)) {
      e.visited[a] = !0;
      if (a in e.requires) {
        for (var f in e.requires[a]) {
          if (!goog.isProvided_(f)) {
            if (f in e.nameToPath) {
              b(e.nameToPath[f]);
            } else {
              throw Error("Undefined nameToPath for " + f);
            }
          }
        }
      }
      a in d || (d[a] = !0, c.push(a));
    }
  }
  var c = [], d = {}, e = goog.dependencies_;
  b(a);
  for (a = 0; a < c.length; a++) {
    var f = c[a];
    goog.dependencies_.written[f] = !0;
  }
  var g = goog.moduleLoaderState_;
  goog.moduleLoaderState_ = null;
  for (a = 0; a < c.length; a++) {
    if (f = c[a]) {
      var h = e.loadFlags[f] || {}, k = goog.needsTranspile_(h.lang || "es3");
      "goog" == h.module || k ? goog.importProcessedScript_(goog.basePath + f, "goog" == h.module, k) : goog.importScript_(goog.basePath + f);
    } else {
      throw goog.moduleLoaderState_ = g, Error("Undefined script input");
    }
  }
  goog.moduleLoaderState_ = g;
}, goog.getPathFromDeps_ = function(a) {
  return a in goog.dependencies_.nameToPath ? goog.dependencies_.nameToPath[a] : null;
}, goog.findBasePath_(), goog.global.CLOSURE_NO_DEPS || goog.importScript_(goog.basePath + "deps.js"));
goog.hasBadLetScoping = null;
goog.useSafari10Workaround = function() {
  if (null == goog.hasBadLetScoping) {
    try {
      var a = !eval('"use strict";let x \x3d 1; function f() { return typeof x; };f() \x3d\x3d "number";');
    } catch (b) {
      a = !1;
    }
    goog.hasBadLetScoping = a;
  }
  return goog.hasBadLetScoping;
};
goog.workaroundSafari10EvalBug = function(a) {
  return "(function(){" + a + "\n;})();\n";
};
goog.loadModule = function(a) {
  var b = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:void 0, declareLegacyNamespace:!1};
    if (goog.isFunction(a)) {
      var c = a.call(void 0, {});
    } else {
      if (goog.isString(a)) {
        goog.useSafari10Workaround() && (a = goog.workaroundSafari10EvalBug(a)), c = goog.loadModuleFromSource_.call(void 0, a);
      } else {
        throw Error("Invalid module definition");
      }
    }
    var d = goog.moduleLoaderState_.moduleName;
    if (!goog.isString(d) || !d) {
      throw Error('Invalid module name "' + d + '"');
    }
    goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(d, c) : goog.SEAL_MODULE_EXPORTS && Object.seal && "object" == typeof c && null != c && Object.seal(c);
    goog.loadedModules_[d] = c;
  } finally {
    goog.moduleLoaderState_ = b;
  }
};
goog.loadModuleFromSource_ = function(a) {
  eval(a);
  return {};
};
goog.normalizePath_ = function(a) {
  a = a.split("/");
  for (var b = 0; b < a.length;) {
    "." == a[b] ? a.splice(b, 1) : b && ".." == a[b] && a[b - 1] && ".." != a[b - 1] ? a.splice(--b, 2) : b++;
  }
  return a.join("/");
};
goog.loadFileSync_ = function(a) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(a);
  }
  try {
    var b = new goog.global.XMLHttpRequest;
    b.open("get", a, !1);
    b.send();
    return 0 == b.status || 200 == b.status ? b.responseText : null;
  } catch (c) {
    return null;
  }
};
goog.retrieveAndExec_ = function(a, b, c) {
  if (!COMPILED) {
    var d = a;
    a = goog.normalizePath_(a);
    var e = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_, f = goog.loadFileSync_(a);
    if (null == f) {
      throw Error('Load of "' + a + '" failed');
    }
    c && (f = goog.transpile_.call(goog.global, f, a));
    f = b ? goog.wrapModule_(a, f) : f + ("\n//# sourceURL\x3d" + a);
    goog.IS_OLD_IE_ && goog.oldIeWaiting_ ? (goog.dependencies_.deferred[d] = f, goog.queuedModules_.push(d)) : e(a, f);
  }
};
goog.transpile_ = function(a, b) {
  var c = goog.global.$jscomp;
  c || (goog.global.$jscomp = c = {});
  var d = c.transpile;
  if (!d) {
    var e = goog.basePath + goog.TRANSPILER, f = goog.loadFileSync_(e);
    if (f) {
      eval(f + "\n//# sourceURL\x3d" + e);
      if (goog.global.$gwtExport && goog.global.$gwtExport.$jscomp && !goog.global.$gwtExport.$jscomp.transpile) {
        throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: ' + JSON.stringify(goog.global.$gwtExport));
      }
      goog.global.$jscomp.transpile = goog.global.$gwtExport.$jscomp.transpile;
      c = goog.global.$jscomp;
      d = c.transpile;
    }
  }
  d || (d = c.transpile = function(a, b) {
    goog.logToConsole_(b + " requires transpilation but no transpiler was found.");
    return a;
  });
  return d(a, b);
};
goog.typeOf = function(a) {
  var b = typeof a;
  if ("object" == b) {
    if (a) {
      if (a instanceof Array) {
        return "array";
      }
      if (a instanceof Object) {
        return b;
      }
      var c = Object.prototype.toString.call(a);
      if ("[object Window]" == c) {
        return "object";
      }
      if ("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice")) {
        return "array";
      }
      if ("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if ("function" == b && "undefined" == typeof a.call) {
      return "object";
    }
  }
  return b;
};
goog.isNull = function(a) {
  return null === a;
};
goog.isDefAndNotNull = function(a) {
  return null != a;
};
goog.isArray = function(a) {
  return "array" == goog.typeOf(a);
};
goog.isArrayLike = function(a) {
  var b = goog.typeOf(a);
  return "array" == b || "object" == b && "number" == typeof a.length;
};
goog.isDateLike = function(a) {
  return goog.isObject(a) && "function" == typeof a.getFullYear;
};
goog.isFunction = function(a) {
  return "function" == goog.typeOf(a);
};
goog.isObject = function(a) {
  var b = typeof a;
  return "object" == b && null != a || "function" == b;
};
goog.getUid = function(a) {
  return a[goog.UID_PROPERTY_] || (a[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(a) {
  return !!a[goog.UID_PROPERTY_];
};
goog.removeUid = function(a) {
  null !== a && "removeAttribute" in a && a.removeAttribute(goog.UID_PROPERTY_);
  try {
    delete a[goog.UID_PROPERTY_];
  } catch (b) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (1e9 * Math.random() >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(a) {
  var b = goog.typeOf(a);
  if ("object" == b || "array" == b) {
    if (a.clone) {
      return a.clone();
    }
    b = "array" == b ? [] : {};
    for (var c in a) {
      b[c] = goog.cloneObject(a[c]);
    }
    return b;
  }
  return a;
};
goog.bindNative_ = function(a, b, c) {
  return a.call.apply(a.bind, arguments);
};
goog.bindJs_ = function(a, b, c) {
  if (!a) {
    throw Error();
  }
  if (2 < arguments.length) {
    var d = Array.prototype.slice.call(arguments, 2);
    return function() {
      var c = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(c, d);
      return a.apply(b, c);
    };
  }
  return function() {
    return a.apply(b, arguments);
  };
};
goog.bind = function(a, b, c) {
  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;
  return goog.bind.apply(null, arguments);
};
goog.partial = function(a, b) {
  var c = Array.prototype.slice.call(arguments, 1);
  return function() {
    var b = c.slice();
    b.push.apply(b, arguments);
    return a.apply(this, b);
  };
};
goog.mixin = function(a, b) {
  for (var c in b) {
    a[c] = b[c];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(a) {
  if (goog.global.execScript) {
    goog.global.execScript(a, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (null == goog.evalWorksForGlobals_) {
        if (goog.global.eval("var _evalTest_ \x3d 1;"), "undefined" != typeof goog.global._evalTest_) {
          try {
            delete goog.global._evalTest_;
          } catch (d) {
          }
          goog.evalWorksForGlobals_ = !0;
        } else {
          goog.evalWorksForGlobals_ = !1;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(a);
      } else {
        var b = goog.global.document, c = b.createElement("SCRIPT");
        c.type = "text/javascript";
        c.defer = !1;
        c.appendChild(b.createTextNode(a));
        b.body.appendChild(c);
        b.body.removeChild(c);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.getCssName = function(a, b) {
  if ("." == String(a).charAt(0)) {
    throw Error('className passed in goog.getCssName must not start with ".". You passed: ' + a);
  }
  var c = function(a) {
    return goog.cssNameMapping_[a] || a;
  }, d = function(a) {
    a = a.split("-");
    for (var b = [], d = 0; d < a.length; d++) {
      b.push(c(a[d]));
    }
    return b.join("-");
  };
  d = goog.cssNameMapping_ ? "BY_WHOLE" == goog.cssNameMappingStyle_ ? c : d : function(a) {
    return a;
  };
  d = b ? a + "-" + d(b) : d(a);
  return goog.global.CLOSURE_CSS_NAME_MAP_FN ? goog.global.CLOSURE_CSS_NAME_MAP_FN(d) : d;
};
goog.setCssNameMapping = function(a, b) {
  goog.cssNameMapping_ = a;
  goog.cssNameMappingStyle_ = b;
};
!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING && (goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING);
goog.getMsg = function(a, b) {
  b && (a = a.replace(/\{\$([^}]+)}/g, function(a, d) {
    return null != b && d in b ? b[d] : a;
  }));
  return a;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(a, b, c) {
  goog.exportPath_(a, b, c);
};
goog.exportProperty = function(a, b, c) {
  a[b] = c;
};
goog.inherits = function(a, b) {
  function c() {
  }
  c.prototype = b.prototype;
  a.superClass_ = b.prototype;
  a.prototype = new c;
  a.prototype.constructor = a;
  a.base = function(a, c, f) {
    for (var d = Array(arguments.length - 2), e = 2; e < arguments.length; e++) {
      d[e - 2] = arguments[e];
    }
    return b.prototype[c].apply(a, d);
  };
};
goog.base = function(a, b, c) {
  var d = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !d) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (d.superClass_) {
    for (var e = Array(arguments.length - 1), f = 1; f < arguments.length; f++) {
      e[f - 1] = arguments[f];
    }
    return d.superClass_.constructor.apply(a, e);
  }
  e = Array(arguments.length - 2);
  for (f = 2; f < arguments.length; f++) {
    e[f - 2] = arguments[f];
  }
  f = !1;
  for (var g = a.constructor; g; g = g.superClass_ && g.superClass_.constructor) {
    if (g.prototype[b] === d) {
      f = !0;
    } else {
      if (f) {
        return g.prototype[b].apply(a, e);
      }
    }
  }
  if (a[b] === d) {
    return a.constructor.prototype[b].apply(a, e);
  }
  throw Error("goog.base called from a method of one name to a method of a different name");
};
goog.scope = function(a) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a goog.module.");
  }
  a.call(goog.global);
};
COMPILED || (goog.global.COMPILED = COMPILED);
goog.defineClass = function(a, b) {
  var c = b.constructor, d = b.statics;
  c && c != Object.prototype.constructor || (c = function() {
    throw Error("cannot instantiate an interface (no constructor defined).");
  });
  c = goog.defineClass.createSealingConstructor_(c, a);
  a && goog.inherits(c, a);
  delete b.constructor;
  delete b.statics;
  goog.defineClass.applyProperties_(c.prototype, b);
  null != d && (d instanceof Function ? d(c) : goog.defineClass.applyProperties_(c, d));
  return c;
};
goog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;
goog.defineClass.createSealingConstructor_ = function(a, b) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return a;
  }
  var c = !goog.defineClass.isUnsealable_(b), d = function() {
    var b = a.apply(this, arguments) || this;
    b[goog.UID_PROPERTY_] = b[goog.UID_PROPERTY_];
    this.constructor === d && c && Object.seal instanceof Function && Object.seal(b);
    return b;
  };
  return d;
};
goog.defineClass.isUnsealable_ = function(a) {
  return a && a.prototype && a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.defineClass.applyProperties_ = function(a, b) {
  for (var c in b) {
    Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);
  }
  for (var d = 0; d < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; d++) {
    c = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d], Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);
  }
};
goog.tagUnsealableClass = function(a) {
  !COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES && (a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = !0);
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.createRequiresTranspilation_ = function() {
  function a(a, b) {
    d ? c[a] = !0 : b() ? c[a] = !1 : d = c[a] = !0;
  }
  function b(a) {
    try {
      return !!eval(a);
    } catch (g) {
      return !1;
    }
  }
  var c = {es3:!1}, d = !1, e = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
  a("es5", function() {
    return b("[1,].length\x3d\x3d1");
  });
  a("es6", function() {
    var a = e.match(/Edge\/(\d+)(\.\d)*/i);
    return a && 15 > Number(a[1]) ? !1 : b('(()\x3d\x3e{"use strict";class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()\x3d\x3d3}})()');
  });
  a("es6-impl", function() {
    return !0;
  });
  a("es7", function() {
    return b("2 ** 2 \x3d\x3d 4");
  });
  a("es8", function() {
    return b("async () \x3d\x3e 1, true");
  });
  return c;
};
goog.string = {};
goog.string.DETECT_DOUBLE_ESCAPING = !1;
goog.string.FORCE_NON_DOM_HTML_UNESCAPING = !1;
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = function(a, b) {
  return 0 == a.lastIndexOf(b, 0);
};
goog.string.endsWith = function(a, b) {
  var c = a.length - b.length;
  return 0 <= c && a.indexOf(b, c) == c;
};
goog.string.caseInsensitiveStartsWith = function(a, b) {
  return 0 == goog.string.caseInsensitiveCompare(b, a.substr(0, b.length));
};
goog.string.caseInsensitiveEndsWith = function(a, b) {
  return 0 == goog.string.caseInsensitiveCompare(b, a.substr(a.length - b.length, b.length));
};
goog.string.caseInsensitiveEquals = function(a, b) {
  return a.toLowerCase() == b.toLowerCase();
};
goog.string.subs = function(a, b) {
  for (var c = a.split("%s"), d = "", e = Array.prototype.slice.call(arguments, 1); e.length && 1 < c.length;) {
    d += c.shift() + e.shift();
  }
  return d + c.join("%s");
};
goog.string.collapseWhitespace = function(a) {
  return a.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(a) {
  return /^[\s\xa0]*$/.test(a);
};
goog.string.isEmptyString = function(a) {
  return 0 == a.length;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(a) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(a) {
  return !/[^\t\n\r ]/.test(a);
};
goog.string.isAlpha = function(a) {
  return !/[^a-zA-Z]/.test(a);
};
goog.string.isNumeric = function(a) {
  return !/[^0-9]/.test(a);
};
goog.string.isAlphaNumeric = function(a) {
  return !/[^a-zA-Z0-9]/.test(a);
};
goog.string.isSpace = function(a) {
  return " " == a;
};
goog.string.isUnicodeChar = function(a) {
  return 1 == a.length && " " <= a && "~" >= a || "" <= a && "�" >= a;
};
goog.string.stripNewlines = function(a) {
  return a.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(a) {
  return a.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(a) {
  return a.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(a) {
  return a.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(a) {
  return a.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(a) {
  return a.trim();
} : function(a) {
  return a.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(a) {
  return a.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(a) {
  return a.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(a, b) {
  var c = String(a).toLowerCase(), d = String(b).toLowerCase();
  return c < d ? -1 : c == d ? 0 : 1;
};
goog.string.numberAwareCompare_ = function(a, b, c) {
  if (a == b) {
    return 0;
  }
  if (!a) {
    return -1;
  }
  if (!b) {
    return 1;
  }
  for (var d = a.toLowerCase().match(c), e = b.toLowerCase().match(c), f = Math.min(d.length, e.length), g = 0; g < f; g++) {
    c = d[g];
    var h = e[g];
    if (c != h) {
      return a = parseInt(c, 10), !isNaN(a) && (b = parseInt(h, 10), !isNaN(b) && a - b) ? a - b : c < h ? -1 : 1;
    }
  }
  return d.length != e.length ? d.length - e.length : a < b ? -1 : 1;
};
goog.string.intAwareCompare = function(a, b) {
  return goog.string.numberAwareCompare_(a, b, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(a, b) {
  return goog.string.numberAwareCompare_(a, b, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(a) {
  return encodeURIComponent(String(a));
};
goog.string.urlDecode = function(a) {
  return decodeURIComponent(a.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(a, b) {
  return a.replace(/(\r\n|\r|\n)/g, b ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(a, b) {
  if (b) {
    a = a.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;"), goog.string.DETECT_DOUBLE_ESCAPING && (a = a.replace(goog.string.E_RE_, "\x26#101;"));
  } else {
    if (!goog.string.ALL_RE_.test(a)) {
      return a;
    }
    -1 != a.indexOf("\x26") && (a = a.replace(goog.string.AMP_RE_, "\x26amp;"));
    -1 != a.indexOf("\x3c") && (a = a.replace(goog.string.LT_RE_, "\x26lt;"));
    -1 != a.indexOf("\x3e") && (a = a.replace(goog.string.GT_RE_, "\x26gt;"));
    -1 != a.indexOf('"') && (a = a.replace(goog.string.QUOT_RE_, "\x26quot;"));
    -1 != a.indexOf("'") && (a = a.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;"));
    -1 != a.indexOf("\x00") && (a = a.replace(goog.string.NULL_RE_, "\x26#0;"));
    goog.string.DETECT_DOUBLE_ESCAPING && -1 != a.indexOf("e") && (a = a.replace(goog.string.E_RE_, "\x26#101;"));
  }
  return a;
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(a) {
  return goog.string.contains(a, "\x26") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global ? goog.string.unescapeEntitiesUsingDom_(a) : goog.string.unescapePureXmlEntities_(a) : a;
};
goog.string.unescapeEntitiesWithDocument = function(a, b) {
  return goog.string.contains(a, "\x26") ? goog.string.unescapeEntitiesUsingDom_(a, b) : a;
};
goog.string.unescapeEntitiesUsingDom_ = function(a, b) {
  var c = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var d = b ? b.createElement("div") : goog.global.document.createElement("div");
  return a.replace(goog.string.HTML_ENTITY_PATTERN_, function(a, b) {
    var e = c[a];
    if (e) {
      return e;
    }
    if ("#" == b.charAt(0)) {
      var f = Number("0" + b.substr(1));
      isNaN(f) || (e = String.fromCharCode(f));
    }
    e || (d.innerHTML = a + " ", e = d.firstChild.nodeValue.slice(0, -1));
    return c[a] = e;
  });
};
goog.string.unescapePureXmlEntities_ = function(a) {
  return a.replace(/&([^;]+);/g, function(a, c) {
    switch(c) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if ("#" == c.charAt(0)) {
          var b = Number("0" + c.substr(1));
          if (!isNaN(b)) {
            return String.fromCharCode(b);
          }
        }
        return a;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(a, b) {
  return goog.string.newLineToBr(a.replace(/  /g, " \x26#160;"), b);
};
goog.string.preserveSpaces = function(a) {
  return a.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(a, b) {
  for (var c = b.length, d = 0; d < c; d++) {
    var e = 1 == c ? b : b.charAt(d);
    if (a.charAt(0) == e && a.charAt(a.length - 1) == e) {
      return a.substring(1, a.length - 1);
    }
  }
  return a;
};
goog.string.truncate = function(a, b, c) {
  c && (a = goog.string.unescapeEntities(a));
  a.length > b && (a = a.substring(0, b - 3) + "...");
  c && (a = goog.string.htmlEscape(a));
  return a;
};
goog.string.truncateMiddle = function(a, b, c, d) {
  c && (a = goog.string.unescapeEntities(a));
  if (d && a.length > b) {
    d > b && (d = b);
    var e = a.length - d;
    a = a.substring(0, b - d) + "..." + a.substring(e);
  } else {
    a.length > b && (d = Math.floor(b / 2), e = a.length - d, a = a.substring(0, d + b % 2) + "..." + a.substring(e));
  }
  c && (a = goog.string.htmlEscape(a));
  return a;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(a) {
  a = String(a);
  for (var b = ['"'], c = 0; c < a.length; c++) {
    var d = a.charAt(c), e = d.charCodeAt(0);
    b[c + 1] = goog.string.specialEscapeChars_[d] || (31 < e && 127 > e ? d : goog.string.escapeChar(d));
  }
  b.push('"');
  return b.join("");
};
goog.string.escapeString = function(a) {
  for (var b = [], c = 0; c < a.length; c++) {
    b[c] = goog.string.escapeChar(a.charAt(c));
  }
  return b.join("");
};
goog.string.escapeChar = function(a) {
  if (a in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[a];
  }
  if (a in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[a] = goog.string.specialEscapeChars_[a];
  }
  var b = a.charCodeAt(0);
  if (31 < b && 127 > b) {
    var c = a;
  } else {
    if (256 > b) {
      if (c = "\\x", 16 > b || 256 < b) {
        c += "0";
      }
    } else {
      c = "\\u", 4096 > b && (c += "0");
    }
    c += b.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[a] = c;
};
goog.string.contains = function(a, b) {
  return -1 != a.indexOf(b);
};
goog.string.caseInsensitiveContains = function(a, b) {
  return goog.string.contains(a.toLowerCase(), b.toLowerCase());
};
goog.string.countOf = function(a, b) {
  return a && b ? a.split(b).length - 1 : 0;
};
goog.string.removeAt = function(a, b, c) {
  var d = a;
  0 <= b && b < a.length && 0 < c && (d = a.substr(0, b) + a.substr(b + c, a.length - b - c));
  return d;
};
goog.string.remove = function(a, b) {
  return a.replace(b, "");
};
goog.string.removeAll = function(a, b) {
  var c = new RegExp(goog.string.regExpEscape(b), "g");
  return a.replace(c, "");
};
goog.string.replaceAll = function(a, b, c) {
  b = new RegExp(goog.string.regExpEscape(b), "g");
  return a.replace(b, c.replace(/\$/g, "$$$$"));
};
goog.string.regExpEscape = function(a) {
  return String(a).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(a, b) {
  return a.repeat(b);
} : function(a, b) {
  return Array(b + 1).join(a);
};
goog.string.padNumber = function(a, b, c) {
  a = goog.isDef(c) ? a.toFixed(c) : String(a);
  c = a.indexOf(".");
  -1 == c && (c = a.length);
  return goog.string.repeat("0", Math.max(0, b - c)) + a;
};
goog.string.makeSafe = function(a) {
  return null == a ? "" : String(a);
};
goog.string.buildString = function(a) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(a, b) {
  for (var c = 0, d = goog.string.trim(String(a)).split("."), e = goog.string.trim(String(b)).split("."), f = Math.max(d.length, e.length), g = 0; 0 == c && g < f; g++) {
    var h = d[g] || "", k = e[g] || "";
    do {
      h = /(\d*)(\D*)(.*)/.exec(h) || ["", "", "", ""];
      k = /(\d*)(\D*)(.*)/.exec(k) || ["", "", "", ""];
      if (0 == h[0].length && 0 == k[0].length) {
        break;
      }
      c = 0 == h[1].length ? 0 : parseInt(h[1], 10);
      var l = 0 == k[1].length ? 0 : parseInt(k[1], 10);
      c = goog.string.compareElements_(c, l) || goog.string.compareElements_(0 == h[2].length, 0 == k[2].length) || goog.string.compareElements_(h[2], k[2]);
      h = h[3];
      k = k[3];
    } while (0 == c);
  }
  return c;
};
goog.string.compareElements_ = function(a, b) {
  return a < b ? -1 : a > b ? 1 : 0;
};
goog.string.hashCode = function(a) {
  for (var b = 0, c = 0; c < a.length; ++c) {
    b = 31 * b + a.charCodeAt(c) >>> 0;
  }
  return b;
};
goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(a) {
  var b = Number(a);
  return 0 == b && goog.string.isEmptyOrWhitespace(a) ? NaN : b;
};
goog.string.isLowerCamelCase = function(a) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(a);
};
goog.string.isUpperCamelCase = function(a) {
  return /^([A-Z][a-z]*)+$/.test(a);
};
goog.string.toCamelCase = function(a) {
  return String(a).replace(/\-([a-z])/g, function(a, c) {
    return c.toUpperCase();
  });
};
goog.string.toSelectorCase = function(a) {
  return String(a).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(a, b) {
  var c = goog.isString(b) ? goog.string.regExpEscape(b) : "\\s";
  return a.replace(new RegExp("(^" + (c ? "|[" + c + "]+" : "") + ")([a-z])", "g"), function(a, b, c) {
    return b + c.toUpperCase();
  });
};
goog.string.capitalize = function(a) {
  return String(a.charAt(0)).toUpperCase() + String(a.substr(1)).toLowerCase();
};
goog.string.parseInt = function(a) {
  isFinite(a) && (a = String(a));
  return goog.isString(a) ? /^\s*-?0x/i.test(a) ? parseInt(a, 16) : parseInt(a, 10) : NaN;
};
goog.string.splitLimit = function(a, b, c) {
  a = a.split(b);
  for (var d = []; 0 < c && a.length;) {
    d.push(a.shift()), c--;
  }
  a.length && d.push(a.join(b));
  return d;
};
goog.string.lastComponent = function(a, b) {
  if (b) {
    "string" == typeof b && (b = [b]);
  } else {
    return a;
  }
  for (var c = -1, d = 0; d < b.length; d++) {
    if ("" != b[d]) {
      var e = a.lastIndexOf(b[d]);
      e > c && (c = e);
    }
  }
  return -1 == c ? a : a.slice(c + 1);
};
goog.string.editDistance = function(a, b) {
  var c = [], d = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var e = 0; e < b.length + 1; e++) {
    c[e] = e;
  }
  for (e = 0; e < a.length; e++) {
    d[0] = e + 1;
    for (var f = 0; f < b.length; f++) {
      d[f + 1] = Math.min(d[f] + 1, c[f + 1] + 1, c[f] + Number(a[e] != b[f]));
    }
    for (f = 0; f < c.length; f++) {
      c[f] = d[f];
    }
  }
  return d[b.length];
};
goog.debug = {};
goog.debug.Error = function(a) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var b = Error().stack;
    b && (this.stack = b);
  }
  a && (this.message = String(a));
  this.reportErrorToServer = !0;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.dom = {};
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.asserts = {};
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(a, b) {
  b.unshift(a);
  goog.debug.Error.call(this, goog.string.subs.apply(null, b));
  b.shift();
  this.messagePattern = a;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(a) {
  throw a;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(a, b, c, d) {
  var e = "Assertion failed";
  if (c) {
    e += ": " + c;
    var f = d;
  } else {
    a && (e += ": " + a, f = b);
  }
  a = new goog.asserts.AssertionError("" + e, f || []);
  goog.asserts.errorHandler_(a);
};
goog.asserts.setErrorHandler = function(a) {
  goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = a);
};
goog.asserts.assert = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !a && goog.asserts.doAssertFailure_("", null, b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.fail = function(a, b) {
  goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (a ? ": " + a : ""), Array.prototype.slice.call(arguments, 1)));
};
goog.asserts.assertNumber = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isNumber(a) && goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertString = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isString(a) && goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertFunction = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isFunction(a) && goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertObject = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isObject(a) && goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertArray = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isArray(a) && goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertBoolean = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(a) && goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertElement = function(a, b, c) {
  !goog.asserts.ENABLE_ASSERTS || goog.isObject(a) && a.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertInstanceof = function(a, b, c, d) {
  !goog.asserts.ENABLE_ASSERTS || a instanceof b || goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(b), goog.asserts.getType_(a)], c, Array.prototype.slice.call(arguments, 3));
  return a;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var a in Object.prototype) {
    goog.asserts.fail(a + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(a) {
  return a instanceof Function ? a.displayName || a.name || "unknown type name" : a instanceof Object ? a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a) : null === a ? "null" : typeof a;
};
goog.array = {};
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ASSUME_NATIVE_FUNCTIONS = !1;
goog.array.peek = function(a) {
  return a[a.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.indexOf.call(a, b, c);
} : function(a, b, c) {
  c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c;
  if (goog.isString(a)) {
    return goog.isString(b) && 1 == b.length ? a.indexOf(b, c) : -1;
  }
  for (; c < a.length; c++) {
    if (c in a && a[c] === b) {
      return c;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.lastIndexOf.call(a, b, null == c ? a.length - 1 : c);
} : function(a, b, c) {
  c = null == c ? a.length - 1 : c;
  0 > c && (c = Math.max(0, a.length + c));
  if (goog.isString(a)) {
    return goog.isString(b) && 1 == b.length ? a.lastIndexOf(b, c) : -1;
  }
  for (; 0 <= c; c--) {
    if (c in a && a[c] === b) {
      return c;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  Array.prototype.forEach.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, f = 0; f < d; f++) {
    f in e && b.call(c, e[f], f, a);
  }
};
goog.array.forEachRight = function(a, b, c) {
  var d = a.length, e = goog.isString(a) ? a.split("") : a;
  for (--d; 0 <= d; --d) {
    d in e && b.call(c, e[d], d, a);
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.filter.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = [], f = 0, g = goog.isString(a) ? a.split("") : a, h = 0; h < d; h++) {
    if (h in g) {
      var k = g[h];
      b.call(c, k, h, a) && (e[f++] = k);
    }
  }
  return e;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.map.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = Array(d), f = goog.isString(a) ? a.split("") : a, g = 0; g < d; g++) {
    g in f && (e[g] = b.call(c, f[g], g, a));
  }
  return e;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(a, b, c, d) {
  goog.asserts.assert(null != a.length);
  d && (b = goog.bind(b, d));
  return Array.prototype.reduce.call(a, b, c);
} : function(a, b, c, d) {
  var e = c;
  goog.array.forEach(a, function(c, g) {
    e = b.call(d, e, c, g, a);
  });
  return e;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(a, b, c, d) {
  goog.asserts.assert(null != a.length);
  goog.asserts.assert(null != b);
  d && (b = goog.bind(b, d));
  return Array.prototype.reduceRight.call(a, b, c);
} : function(a, b, c, d) {
  var e = c;
  goog.array.forEachRight(a, function(c, g) {
    e = b.call(d, e, c, g, a);
  });
  return e;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.some.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, f = 0; f < d; f++) {
    if (f in e && b.call(c, e[f], f, a)) {
      return !0;
    }
  }
  return !1;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.every.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, f = 0; f < d; f++) {
    if (f in e && !b.call(c, e[f], f, a)) {
      return !1;
    }
  }
  return !0;
};
goog.array.count = function(a, b, c) {
  var d = 0;
  goog.array.forEach(a, function(a, f, g) {
    b.call(c, a, f, g) && ++d;
  }, c);
  return d;
};
goog.array.find = function(a, b, c) {
  b = goog.array.findIndex(a, b, c);
  return 0 > b ? null : goog.isString(a) ? a.charAt(b) : a[b];
};
goog.array.findIndex = function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, f = 0; f < d; f++) {
    if (f in e && b.call(c, e[f], f, a)) {
      return f;
    }
  }
  return -1;
};
goog.array.findRight = function(a, b, c) {
  b = goog.array.findIndexRight(a, b, c);
  return 0 > b ? null : goog.isString(a) ? a.charAt(b) : a[b];
};
goog.array.findIndexRight = function(a, b, c) {
  var d = a.length, e = goog.isString(a) ? a.split("") : a;
  for (--d; 0 <= d; d--) {
    if (d in e && b.call(c, e[d], d, a)) {
      return d;
    }
  }
  return -1;
};
goog.array.contains = function(a, b) {
  return 0 <= goog.array.indexOf(a, b);
};
goog.array.isEmpty = function(a) {
  return 0 == a.length;
};
goog.array.clear = function(a) {
  if (!goog.isArray(a)) {
    for (var b = a.length - 1; 0 <= b; b--) {
      delete a[b];
    }
  }
  a.length = 0;
};
goog.array.insert = function(a, b) {
  goog.array.contains(a, b) || a.push(b);
};
goog.array.insertAt = function(a, b, c) {
  goog.array.splice(a, c, 0, b);
};
goog.array.insertArrayAt = function(a, b, c) {
  goog.partial(goog.array.splice, a, c, 0).apply(null, b);
};
goog.array.insertBefore = function(a, b, c) {
  var d;
  2 == arguments.length || 0 > (d = goog.array.indexOf(a, c)) ? a.push(b) : goog.array.insertAt(a, b, d);
};
goog.array.remove = function(a, b) {
  var c = goog.array.indexOf(a, b), d;
  (d = 0 <= c) && goog.array.removeAt(a, c);
  return d;
};
goog.array.removeLast = function(a, b) {
  var c = goog.array.lastIndexOf(a, b);
  return 0 <= c ? (goog.array.removeAt(a, c), !0) : !1;
};
goog.array.removeAt = function(a, b) {
  goog.asserts.assert(null != a.length);
  return 1 == Array.prototype.splice.call(a, b, 1).length;
};
goog.array.removeIf = function(a, b, c) {
  b = goog.array.findIndex(a, b, c);
  return 0 <= b ? (goog.array.removeAt(a, b), !0) : !1;
};
goog.array.removeAllIf = function(a, b, c) {
  var d = 0;
  goog.array.forEachRight(a, function(e, f) {
    b.call(c, e, f, a) && goog.array.removeAt(a, f) && d++;
  });
  return d;
};
goog.array.concat = function(a) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.join = function(a) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.toArray = function(a) {
  var b = a.length;
  if (0 < b) {
    for (var c = Array(b), d = 0; d < b; d++) {
      c[d] = a[d];
    }
    return c;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(a, b) {
  for (var c = 1; c < arguments.length; c++) {
    var d = arguments[c];
    if (goog.isArrayLike(d)) {
      var e = a.length || 0, f = d.length || 0;
      a.length = e + f;
      for (var g = 0; g < f; g++) {
        a[e + g] = d[g];
      }
    } else {
      a.push(d);
    }
  }
};
goog.array.splice = function(a, b, c, d) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.splice.apply(a, goog.array.slice(arguments, 1));
};
goog.array.slice = function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return 2 >= arguments.length ? Array.prototype.slice.call(a, b) : Array.prototype.slice.call(a, b, c);
};
goog.array.removeDuplicates = function(a, b, c) {
  b = b || a;
  var d = function(a) {
    return goog.isObject(a) ? "o" + goog.getUid(a) : (typeof a).charAt(0) + a;
  };
  c = c || d;
  d = {};
  for (var e = 0, f = 0; f < a.length;) {
    var g = a[f++], h = c(g);
    Object.prototype.hasOwnProperty.call(d, h) || (d[h] = !0, b[e++] = g);
  }
  b.length = e;
};
goog.array.binarySearch = function(a, b, c) {
  return goog.array.binarySearch_(a, c || goog.array.defaultCompare, !1, b);
};
goog.array.binarySelect = function(a, b, c) {
  return goog.array.binarySearch_(a, b, !0, void 0, c);
};
goog.array.binarySearch_ = function(a, b, c, d, e) {
  for (var f = 0, g = a.length, h; f < g;) {
    var k = f + g >> 1;
    var l = c ? b.call(e, a[k], k, a) : b(d, a[k]);
    0 < l ? f = k + 1 : (g = k, h = !l);
  }
  return h ? f : ~f;
};
goog.array.sort = function(a, b) {
  a.sort(b || goog.array.defaultCompare);
};
goog.array.stableSort = function(a, b) {
  for (var c = Array(a.length), d = 0; d < a.length; d++) {
    c[d] = {index:d, value:a[d]};
  }
  var e = b || goog.array.defaultCompare;
  goog.array.sort(c, function(a, b) {
    return e(a.value, b.value) || a.index - b.index;
  });
  for (d = 0; d < a.length; d++) {
    a[d] = c[d].value;
  }
};
goog.array.sortByKey = function(a, b, c) {
  var d = c || goog.array.defaultCompare;
  goog.array.sort(a, function(a, c) {
    return d(b(a), b(c));
  });
};
goog.array.sortObjectsByKey = function(a, b, c) {
  goog.array.sortByKey(a, function(a) {
    return a[b];
  }, c);
};
goog.array.isSorted = function(a, b, c) {
  b = b || goog.array.defaultCompare;
  for (var d = 1; d < a.length; d++) {
    var e = b(a[d - 1], a[d]);
    if (0 < e || 0 == e && c) {
      return !1;
    }
  }
  return !0;
};
goog.array.equals = function(a, b, c) {
  if (!goog.isArrayLike(a) || !goog.isArrayLike(b) || a.length != b.length) {
    return !1;
  }
  var d = a.length;
  c = c || goog.array.defaultCompareEquality;
  for (var e = 0; e < d; e++) {
    if (!c(a[e], b[e])) {
      return !1;
    }
  }
  return !0;
};
goog.array.compare3 = function(a, b, c) {
  c = c || goog.array.defaultCompare;
  for (var d = Math.min(a.length, b.length), e = 0; e < d; e++) {
    var f = c(a[e], b[e]);
    if (0 != f) {
      return f;
    }
  }
  return goog.array.defaultCompare(a.length, b.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(a, b, c) {
  c = goog.array.binarySearch(a, b, c);
  return 0 > c ? (goog.array.insertAt(a, b, -(c + 1)), !0) : !1;
};
goog.array.binaryRemove = function(a, b, c) {
  b = goog.array.binarySearch(a, b, c);
  return 0 <= b ? goog.array.removeAt(a, b) : !1;
};
goog.array.bucket = function(a, b, c) {
  for (var d = {}, e = 0; e < a.length; e++) {
    var f = a[e], g = b.call(c, f, e, a);
    goog.isDef(g) && (d[g] || (d[g] = [])).push(f);
  }
  return d;
};
goog.array.toObject = function(a, b, c) {
  var d = {};
  goog.array.forEach(a, function(e, f) {
    d[b.call(c, e, f, a)] = e;
  });
  return d;
};
goog.array.range = function(a, b, c) {
  var d = [], e = 0, f = a;
  c = c || 1;
  void 0 !== b && (e = a, f = b);
  if (0 > c * (f - e)) {
    return [];
  }
  if (0 < c) {
    for (a = e; a < f; a += c) {
      d.push(a);
    }
  } else {
    for (a = e; a > f; a += c) {
      d.push(a);
    }
  }
  return d;
};
goog.array.repeat = function(a, b) {
  for (var c = [], d = 0; d < b; d++) {
    c[d] = a;
  }
  return c;
};
goog.array.flatten = function(a) {
  for (var b = [], c = 0; c < arguments.length; c++) {
    var d = arguments[c];
    if (goog.isArray(d)) {
      for (var e = 0; e < d.length; e += 8192) {
        var f = goog.array.slice(d, e, e + 8192);
        f = goog.array.flatten.apply(null, f);
        for (var g = 0; g < f.length; g++) {
          b.push(f[g]);
        }
      }
    } else {
      b.push(d);
    }
  }
  return b;
};
goog.array.rotate = function(a, b) {
  goog.asserts.assert(null != a.length);
  a.length && (b %= a.length, 0 < b ? Array.prototype.unshift.apply(a, a.splice(-b, b)) : 0 > b && Array.prototype.push.apply(a, a.splice(0, -b)));
  return a;
};
goog.array.moveItem = function(a, b, c) {
  goog.asserts.assert(0 <= b && b < a.length);
  goog.asserts.assert(0 <= c && c < a.length);
  b = Array.prototype.splice.call(a, b, 1);
  Array.prototype.splice.call(a, c, 0, b[0]);
};
goog.array.zip = function(a) {
  if (!arguments.length) {
    return [];
  }
  for (var b = [], c = arguments[0].length, d = 1; d < arguments.length; d++) {
    arguments[d].length < c && (c = arguments[d].length);
  }
  for (d = 0; d < c; d++) {
    for (var e = [], f = 0; f < arguments.length; f++) {
      e.push(arguments[f][d]);
    }
    b.push(e);
  }
  return b;
};
goog.array.shuffle = function(a, b) {
  for (var c = b || Math.random, d = a.length - 1; 0 < d; d--) {
    var e = Math.floor(c() * (d + 1)), f = a[d];
    a[d] = a[e];
    a[e] = f;
  }
};
goog.array.copyByIndex = function(a, b) {
  var c = [];
  goog.array.forEach(b, function(b) {
    c.push(a[b]);
  });
  return c;
};
goog.array.concatMap = function(a, b, c) {
  return goog.array.concat.apply([], goog.array.map(a, b, c));
};
goog.object = {};
goog.object.is = function(a, b) {
  return a === b ? 0 !== a || 1 / a === 1 / b : a !== a && b !== b;
};
goog.object.forEach = function(a, b, c) {
  for (var d in a) {
    b.call(c, a[d], d, a);
  }
};
goog.object.filter = function(a, b, c) {
  var d = {}, e;
  for (e in a) {
    b.call(c, a[e], e, a) && (d[e] = a[e]);
  }
  return d;
};
goog.object.map = function(a, b, c) {
  var d = {}, e;
  for (e in a) {
    d[e] = b.call(c, a[e], e, a);
  }
  return d;
};
goog.object.some = function(a, b, c) {
  for (var d in a) {
    if (b.call(c, a[d], d, a)) {
      return !0;
    }
  }
  return !1;
};
goog.object.every = function(a, b, c) {
  for (var d in a) {
    if (!b.call(c, a[d], d, a)) {
      return !1;
    }
  }
  return !0;
};
goog.object.getCount = function(a) {
  var b = 0, c;
  for (c in a) {
    b++;
  }
  return b;
};
goog.object.getAnyKey = function(a) {
  for (var b in a) {
    return b;
  }
};
goog.object.getAnyValue = function(a) {
  for (var b in a) {
    return a[b];
  }
};
goog.object.contains = function(a, b) {
  return goog.object.containsValue(a, b);
};
goog.object.getValues = function(a) {
  var b = [], c = 0, d;
  for (d in a) {
    b[c++] = a[d];
  }
  return b;
};
goog.object.getKeys = function(a) {
  var b = [], c = 0, d;
  for (d in a) {
    b[c++] = d;
  }
  return b;
};
goog.object.getValueByKeys = function(a, b) {
  var c = goog.isArrayLike(b), d = c ? b : arguments;
  for (c = c ? 0 : 1; c < d.length && (a = a[d[c]], goog.isDef(a)); c++) {
  }
  return a;
};
goog.object.containsKey = function(a, b) {
  return null !== a && b in a;
};
goog.object.containsValue = function(a, b) {
  for (var c in a) {
    if (a[c] == b) {
      return !0;
    }
  }
  return !1;
};
goog.object.findKey = function(a, b, c) {
  for (var d in a) {
    if (b.call(c, a[d], d, a)) {
      return d;
    }
  }
};
goog.object.findValue = function(a, b, c) {
  return (b = goog.object.findKey(a, b, c)) && a[b];
};
goog.object.isEmpty = function(a) {
  for (var b in a) {
    return !1;
  }
  return !0;
};
goog.object.clear = function(a) {
  for (var b in a) {
    delete a[b];
  }
};
goog.object.remove = function(a, b) {
  var c;
  (c = b in a) && delete a[b];
  return c;
};
goog.object.add = function(a, b, c) {
  if (null !== a && b in a) {
    throw Error('The object already contains the key "' + b + '"');
  }
  goog.object.set(a, b, c);
};
goog.object.get = function(a, b, c) {
  return null !== a && b in a ? a[b] : c;
};
goog.object.set = function(a, b, c) {
  a[b] = c;
};
goog.object.setIfUndefined = function(a, b, c) {
  return b in a ? a[b] : a[b] = c;
};
goog.object.setWithReturnValueIfNotSet = function(a, b, c) {
  if (b in a) {
    return a[b];
  }
  c = c();
  return a[b] = c;
};
goog.object.equals = function(a, b) {
  for (var c in a) {
    if (!(c in b) || a[c] !== b[c]) {
      return !1;
    }
  }
  for (c in b) {
    if (!(c in a)) {
      return !1;
    }
  }
  return !0;
};
goog.object.clone = function(a) {
  var b = {}, c;
  for (c in a) {
    b[c] = a[c];
  }
  return b;
};
goog.object.unsafeClone = function(a) {
  var b = goog.typeOf(a);
  if ("object" == b || "array" == b) {
    if (goog.isFunction(a.clone)) {
      return a.clone();
    }
    b = "array" == b ? [] : {};
    for (var c in a) {
      b[c] = goog.object.unsafeClone(a[c]);
    }
    return b;
  }
  return a;
};
goog.object.transpose = function(a) {
  var b = {}, c;
  for (c in a) {
    b[a[c]] = c;
  }
  return b;
};
goog.object.PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.object.extend = function(a, b) {
  for (var c, d, e = 1; e < arguments.length; e++) {
    d = arguments[e];
    for (c in d) {
      a[c] = d[c];
    }
    for (var f = 0; f < goog.object.PROTOTYPE_FIELDS_.length; f++) {
      c = goog.object.PROTOTYPE_FIELDS_[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
    }
  }
};
goog.object.create = function(a) {
  var b = arguments.length;
  if (1 == b && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (b % 2) {
    throw Error("Uneven number of arguments");
  }
  for (var c = {}, d = 0; d < b; d += 2) {
    c[arguments[d]] = arguments[d + 1];
  }
  return c;
};
goog.object.createSet = function(a) {
  var b = arguments.length;
  if (1 == b && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  for (var c = {}, d = 0; d < b; d++) {
    c[arguments[d]] = !0;
  }
  return c;
};
goog.object.createImmutableView = function(a) {
  var b = a;
  Object.isFrozen && !Object.isFrozen(a) && (b = Object.create(a), Object.freeze(b));
  return b;
};
goog.object.isImmutableView = function(a) {
  return !!Object.isFrozen && Object.isFrozen(a);
};
goog.object.getAllPropertyNames = function(a, b, c) {
  if (!a) {
    return [];
  }
  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {
    return goog.object.getKeys(a);
  }
  for (var d = {}; a && (a !== Object.prototype || b) && (a !== Function.prototype || c);) {
    for (var e = Object.getOwnPropertyNames(a), f = 0; f < e.length; f++) {
      d[e[f]] = !0;
    }
    a = Object.getPrototypeOf(a);
  }
  return goog.object.getKeys(d);
};
goog.structs = {};
goog.structs.getCount = function(a) {
  return a.getCount && "function" == typeof a.getCount ? a.getCount() : goog.isArrayLike(a) || goog.isString(a) ? a.length : goog.object.getCount(a);
};
goog.structs.getValues = function(a) {
  if (a.getValues && "function" == typeof a.getValues) {
    return a.getValues();
  }
  if (goog.isString(a)) {
    return a.split("");
  }
  if (goog.isArrayLike(a)) {
    for (var b = [], c = a.length, d = 0; d < c; d++) {
      b.push(a[d]);
    }
    return b;
  }
  return goog.object.getValues(a);
};
goog.structs.getKeys = function(a) {
  if (a.getKeys && "function" == typeof a.getKeys) {
    return a.getKeys();
  }
  if (!a.getValues || "function" != typeof a.getValues) {
    if (goog.isArrayLike(a) || goog.isString(a)) {
      var b = [];
      a = a.length;
      for (var c = 0; c < a; c++) {
        b.push(c);
      }
      return b;
    }
    return goog.object.getKeys(a);
  }
};
goog.structs.contains = function(a, b) {
  return a.contains && "function" == typeof a.contains ? a.contains(b) : a.containsValue && "function" == typeof a.containsValue ? a.containsValue(b) : goog.isArrayLike(a) || goog.isString(a) ? goog.array.contains(a, b) : goog.object.containsValue(a, b);
};
goog.structs.isEmpty = function(a) {
  return a.isEmpty && "function" == typeof a.isEmpty ? a.isEmpty() : goog.isArrayLike(a) || goog.isString(a) ? goog.array.isEmpty(a) : goog.object.isEmpty(a);
};
goog.structs.clear = function(a) {
  a.clear && "function" == typeof a.clear ? a.clear() : goog.isArrayLike(a) ? goog.array.clear(a) : goog.object.clear(a);
};
goog.structs.forEach = function(a, b, c) {
  if (a.forEach && "function" == typeof a.forEach) {
    a.forEach(b, c);
  } else {
    if (goog.isArrayLike(a) || goog.isString(a)) {
      goog.array.forEach(a, b, c);
    } else {
      for (var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length, g = 0; g < f; g++) {
        b.call(c, e[g], d && d[g], a);
      }
    }
  }
};
goog.structs.filter = function(a, b, c) {
  if ("function" == typeof a.filter) {
    return a.filter(b, c);
  }
  if (goog.isArrayLike(a) || goog.isString(a)) {
    return goog.array.filter(a, b, c);
  }
  var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length;
  if (d) {
    var g = {};
    for (var h = 0; h < f; h++) {
      b.call(c, e[h], d[h], a) && (g[d[h]] = e[h]);
    }
  } else {
    for (g = [], h = 0; h < f; h++) {
      b.call(c, e[h], void 0, a) && g.push(e[h]);
    }
  }
  return g;
};
goog.structs.map = function(a, b, c) {
  if ("function" == typeof a.map) {
    return a.map(b, c);
  }
  if (goog.isArrayLike(a) || goog.isString(a)) {
    return goog.array.map(a, b, c);
  }
  var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length;
  if (d) {
    var g = {};
    for (var h = 0; h < f; h++) {
      g[d[h]] = b.call(c, e[h], d[h], a);
    }
  } else {
    for (g = [], h = 0; h < f; h++) {
      g[h] = b.call(c, e[h], void 0, a);
    }
  }
  return g;
};
goog.structs.some = function(a, b, c) {
  if ("function" == typeof a.some) {
    return a.some(b, c);
  }
  if (goog.isArrayLike(a) || goog.isString(a)) {
    return goog.array.some(a, b, c);
  }
  for (var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length, g = 0; g < f; g++) {
    if (b.call(c, e[g], d && d[g], a)) {
      return !0;
    }
  }
  return !1;
};
goog.structs.every = function(a, b, c) {
  if ("function" == typeof a.every) {
    return a.every(b, c);
  }
  if (goog.isArrayLike(a) || goog.isString(a)) {
    return goog.array.every(a, b, c);
  }
  for (var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length, g = 0; g < f; g++) {
    if (!b.call(c, e[g], d && d[g], a)) {
      return !1;
    }
  }
  return !0;
};
goog.functions = {};
goog.functions.constant = function(a) {
  return function() {
    return a;
  };
};
goog.functions.FALSE = goog.functions.constant(!1);
goog.functions.TRUE = goog.functions.constant(!0);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(a, b) {
  return a;
};
goog.functions.error = function(a) {
  return function() {
    throw Error(a);
  };
};
goog.functions.fail = function(a) {
  return function() {
    throw a;
  };
};
goog.functions.lock = function(a, b) {
  b = b || 0;
  return function() {
    return a.apply(this, Array.prototype.slice.call(arguments, 0, b));
  };
};
goog.functions.nth = function(a) {
  return function() {
    return arguments[a];
  };
};
goog.functions.partialRight = function(a, b) {
  var c = Array.prototype.slice.call(arguments, 1);
  return function() {
    var b = Array.prototype.slice.call(arguments);
    b.push.apply(b, c);
    return a.apply(this, b);
  };
};
goog.functions.withReturnValue = function(a, b) {
  return goog.functions.sequence(a, goog.functions.constant(b));
};
goog.functions.equalTo = function(a, b) {
  return function(c) {
    return b ? a == c : a === c;
  };
};
goog.functions.compose = function(a, b) {
  var c = arguments, d = c.length;
  return function() {
    var a;
    d && (a = c[d - 1].apply(this, arguments));
    for (var b = d - 2; 0 <= b; b--) {
      a = c[b].call(this, a);
    }
    return a;
  };
};
goog.functions.sequence = function(a) {
  var b = arguments, c = b.length;
  return function() {
    for (var a, e = 0; e < c; e++) {
      a = b[e].apply(this, arguments);
    }
    return a;
  };
};
goog.functions.and = function(a) {
  var b = arguments, c = b.length;
  return function() {
    for (var a = 0; a < c; a++) {
      if (!b[a].apply(this, arguments)) {
        return !1;
      }
    }
    return !0;
  };
};
goog.functions.or = function(a) {
  var b = arguments, c = b.length;
  return function() {
    for (var a = 0; a < c; a++) {
      if (b[a].apply(this, arguments)) {
        return !0;
      }
    }
    return !1;
  };
};
goog.functions.not = function(a) {
  return function() {
    return !a.apply(this, arguments);
  };
};
goog.functions.create = function(a, b) {
  var c = function() {
  };
  c.prototype = a.prototype;
  c = new c;
  a.apply(c, Array.prototype.slice.call(arguments, 1));
  return c;
};
goog.functions.CACHE_RETURN_VALUE = !0;
goog.functions.cacheReturnValue = function(a) {
  var b = !1, c;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return a();
    }
    b || (c = a(), b = !0);
    return c;
  };
};
goog.functions.once = function(a) {
  var b = a;
  return function() {
    if (b) {
      var a = b;
      b = null;
      a();
    }
  };
};
goog.functions.debounce = function(a, b, c) {
  var d = 0;
  return function(e) {
    goog.global.clearTimeout(d);
    var f = arguments;
    d = goog.global.setTimeout(function() {
      a.apply(c, f);
    }, b);
  };
};
goog.functions.throttle = function(a, b, c) {
  var d = 0, e = !1, f = [], g = function() {
    d = 0;
    e && (e = !1, h());
  }, h = function() {
    d = goog.global.setTimeout(g, b);
    a.apply(c, f);
  };
  return function(a) {
    f = arguments;
    d ? e = !0 : h();
  };
};
goog.functions.rateLimit = function(a, b, c) {
  var d = 0, e = function() {
    d = 0;
  };
  return function(f) {
    d || (d = goog.global.setTimeout(e, b), a.apply(c, arguments));
  };
};
goog.math = {};
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(a, b, c) {
  return Math.min(Math.max(a, b), c);
};
goog.math.modulo = function(a, b) {
  var c = a % b;
  return 0 > c * b ? c + b : c;
};
goog.math.lerp = function(a, b, c) {
  return a + c * (b - a);
};
goog.math.nearlyEquals = function(a, b, c) {
  return Math.abs(a - b) <= (c || 0.000001);
};
goog.math.standardAngle = function(a) {
  return goog.math.modulo(a, 360);
};
goog.math.standardAngleInRadians = function(a) {
  return goog.math.modulo(a, 2 * Math.PI);
};
goog.math.toRadians = function(a) {
  return a * Math.PI / 180;
};
goog.math.toDegrees = function(a) {
  return 180 * a / Math.PI;
};
goog.math.angleDx = function(a, b) {
  return b * Math.cos(goog.math.toRadians(a));
};
goog.math.angleDy = function(a, b) {
  return b * Math.sin(goog.math.toRadians(a));
};
goog.math.angle = function(a, b, c, d) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(d - b, c - a)));
};
goog.math.angleDifference = function(a, b) {
  var c = goog.math.standardAngle(b) - goog.math.standardAngle(a);
  180 < c ? c -= 360 : -180 >= c && (c = 360 + c);
  return c;
};
goog.math.sign = function(a) {
  return 0 < a ? 1 : 0 > a ? -1 : a;
};
goog.math.longestCommonSubsequence = function(a, b, c, d) {
  c = c || function(a, b) {
    return a == b;
  };
  d = d || function(b, c) {
    return a[b];
  };
  for (var e = a.length, f = b.length, g = [], h = 0; h < e + 1; h++) {
    g[h] = [], g[h][0] = 0;
  }
  for (var k = 0; k < f + 1; k++) {
    g[0][k] = 0;
  }
  for (h = 1; h <= e; h++) {
    for (k = 1; k <= f; k++) {
      c(a[h - 1], b[k - 1]) ? g[h][k] = g[h - 1][k - 1] + 1 : g[h][k] = Math.max(g[h - 1][k], g[h][k - 1]);
    }
  }
  var l = [];
  h = e;
  for (k = f; 0 < h && 0 < k;) {
    c(a[h - 1], b[k - 1]) ? (l.unshift(d(h - 1, k - 1)), h--, k--) : g[h - 1][k] > g[h][k - 1] ? h-- : k--;
  }
  return l;
};
goog.math.sum = function(a) {
  return goog.array.reduce(arguments, function(a, c) {
    return a + c;
  }, 0);
};
goog.math.average = function(a) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(a) {
  var b = arguments.length;
  if (2 > b) {
    return 0;
  }
  var c = goog.math.average.apply(null, arguments);
  return goog.math.sum.apply(null, goog.array.map(arguments, function(a) {
    return Math.pow(a - c, 2);
  })) / (b - 1);
};
goog.math.standardDeviation = function(a) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(a) {
  return isFinite(a) && 0 == a % 1;
};
goog.math.isFiniteNumber = function(a) {
  return isFinite(a);
};
goog.math.isNegativeZero = function(a) {
  return 0 == a && 0 > 1 / a;
};
goog.math.log10Floor = function(a) {
  if (0 < a) {
    var b = Math.round(Math.log(a) * Math.LOG10E);
    return b - (parseFloat("1e" + b) > a ? 1 : 0);
  }
  return 0 == a ? -Infinity : NaN;
};
goog.math.safeFloor = function(a, b) {
  goog.asserts.assert(!goog.isDef(b) || 0 < b);
  return Math.floor(a + (b || 2e-15));
};
goog.math.safeCeil = function(a, b) {
  goog.asserts.assert(!goog.isDef(b) || 0 < b);
  return Math.ceil(a - (b || 2e-15));
};
goog.iter = {};
goog.iter.StopIteration = "StopIteration" in goog.global ? goog.global.StopIteration : {message:"StopIteration", stack:""};
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(a) {
  return this;
};
goog.iter.toIterator = function(a) {
  if (a instanceof goog.iter.Iterator) {
    return a;
  }
  if ("function" == typeof a.__iterator__) {
    return a.__iterator__(!1);
  }
  if (goog.isArrayLike(a)) {
    var b = 0, c = new goog.iter.Iterator;
    c.next = function() {
      for (;;) {
        if (b >= a.length) {
          throw goog.iter.StopIteration;
        }
        if (b in a) {
          return a[b++];
        }
        b++;
      }
    };
    return c;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(a, b, c) {
  if (goog.isArrayLike(a)) {
    try {
      goog.array.forEach(a, b, c);
    } catch (d) {
      if (d !== goog.iter.StopIteration) {
        throw d;
      }
    }
  } else {
    a = goog.iter.toIterator(a);
    try {
      for (;;) {
        b.call(c, a.next(), void 0, a);
      }
    } catch (d) {
      if (d !== goog.iter.StopIteration) {
        throw d;
      }
    }
  }
};
goog.iter.filter = function(a, b, c) {
  var d = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  a.next = function() {
    for (;;) {
      var a = d.next();
      if (b.call(c, a, void 0, d)) {
        return a;
      }
    }
  };
  return a;
};
goog.iter.filterFalse = function(a, b, c) {
  return goog.iter.filter(a, goog.functions.not(b), c);
};
goog.iter.range = function(a, b, c) {
  var d = 0, e = a, f = c || 1;
  1 < arguments.length && (d = a, e = b);
  if (0 == f) {
    throw Error("Range step argument must not be zero");
  }
  var g = new goog.iter.Iterator;
  g.next = function() {
    if (0 < f && d >= e || 0 > f && d <= e) {
      throw goog.iter.StopIteration;
    }
    var a = d;
    d += f;
    return a;
  };
  return g;
};
goog.iter.join = function(a, b) {
  return goog.iter.toArray(a).join(b);
};
goog.iter.map = function(a, b, c) {
  var d = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  a.next = function() {
    var a = d.next();
    return b.call(c, a, void 0, d);
  };
  return a;
};
goog.iter.reduce = function(a, b, c, d) {
  var e = c;
  goog.iter.forEach(a, function(a) {
    e = b.call(d, e, a);
  });
  return e;
};
goog.iter.some = function(a, b, c) {
  a = goog.iter.toIterator(a);
  try {
    for (;;) {
      if (b.call(c, a.next(), void 0, a)) {
        return !0;
      }
    }
  } catch (d) {
    if (d !== goog.iter.StopIteration) {
      throw d;
    }
  }
  return !1;
};
goog.iter.every = function(a, b, c) {
  a = goog.iter.toIterator(a);
  try {
    for (;;) {
      if (!b.call(c, a.next(), void 0, a)) {
        return !1;
      }
    }
  } catch (d) {
    if (d !== goog.iter.StopIteration) {
      throw d;
    }
  }
  return !0;
};
goog.iter.chain = function(a) {
  return goog.iter.chainFromIterable(arguments);
};
goog.iter.chainFromIterable = function(a) {
  var b = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  var c = null;
  a.next = function() {
    for (;;) {
      if (null == c) {
        var a = b.next();
        c = goog.iter.toIterator(a);
      }
      try {
        return c.next();
      } catch (e) {
        if (e !== goog.iter.StopIteration) {
          throw e;
        }
        c = null;
      }
    }
  };
  return a;
};
goog.iter.dropWhile = function(a, b, c) {
  var d = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  var e = !0;
  a.next = function() {
    for (;;) {
      var a = d.next();
      if (!e || !b.call(c, a, void 0, d)) {
        return e = !1, a;
      }
    }
  };
  return a;
};
goog.iter.takeWhile = function(a, b, c) {
  var d = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  a.next = function() {
    var a = d.next();
    if (b.call(c, a, void 0, d)) {
      return a;
    }
    throw goog.iter.StopIteration;
  };
  return a;
};
goog.iter.toArray = function(a) {
  if (goog.isArrayLike(a)) {
    return goog.array.toArray(a);
  }
  a = goog.iter.toIterator(a);
  var b = [];
  goog.iter.forEach(a, function(a) {
    b.push(a);
  });
  return b;
};
goog.iter.equals = function(a, b, c) {
  a = goog.iter.zipLongest({}, a, b);
  var d = c || goog.array.defaultCompareEquality;
  return goog.iter.every(a, function(a) {
    return d(a[0], a[1]);
  });
};
goog.iter.nextOrValue = function(a, b) {
  try {
    return goog.iter.toIterator(a).next();
  } catch (c) {
    if (c != goog.iter.StopIteration) {
      throw c;
    }
    return b;
  }
};
goog.iter.product = function(a) {
  if (goog.array.some(arguments, function(a) {
    return !a.length;
  }) || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var b = new goog.iter.Iterator, c = arguments, d = goog.array.repeat(0, c.length);
  b.next = function() {
    if (d) {
      for (var a = goog.array.map(d, function(a, b) {
        return c[b][a];
      }), b = d.length - 1; 0 <= b; b--) {
        goog.asserts.assert(d);
        if (d[b] < c[b].length - 1) {
          d[b]++;
          break;
        }
        if (0 == b) {
          d = null;
          break;
        }
        d[b] = 0;
      }
      return a;
    }
    throw goog.iter.StopIteration;
  };
  return b;
};
goog.iter.cycle = function(a) {
  var b = goog.iter.toIterator(a), c = [], d = 0;
  a = new goog.iter.Iterator;
  var e = !1;
  a.next = function() {
    var a = null;
    if (!e) {
      try {
        return a = b.next(), c.push(a), a;
      } catch (g) {
        if (g != goog.iter.StopIteration || goog.array.isEmpty(c)) {
          throw g;
        }
        e = !0;
      }
    }
    a = c[d];
    d = (d + 1) % c.length;
    return a;
  };
  return a;
};
goog.iter.count = function(a, b) {
  var c = a || 0, d = goog.isDef(b) ? b : 1, e = new goog.iter.Iterator;
  e.next = function() {
    var a = c;
    c += d;
    return a;
  };
  return e;
};
goog.iter.repeat = function(a) {
  var b = new goog.iter.Iterator;
  b.next = goog.functions.constant(a);
  return b;
};
goog.iter.accumulate = function(a) {
  var b = goog.iter.toIterator(a), c = 0;
  a = new goog.iter.Iterator;
  a.next = function() {
    return c += b.next();
  };
  return a;
};
goog.iter.zip = function(a) {
  var b = arguments, c = new goog.iter.Iterator;
  if (0 < b.length) {
    var d = goog.array.map(b, goog.iter.toIterator);
    c.next = function() {
      return goog.array.map(d, function(a) {
        return a.next();
      });
    };
  }
  return c;
};
goog.iter.zipLongest = function(a, b) {
  var c = goog.array.slice(arguments, 1), d = new goog.iter.Iterator;
  if (0 < c.length) {
    var e = goog.array.map(c, goog.iter.toIterator);
    d.next = function() {
      var b = !1, c = goog.array.map(e, function(c) {
        try {
          var d = c.next();
          b = !0;
        } catch (l) {
          if (l !== goog.iter.StopIteration) {
            throw l;
          }
          d = a;
        }
        return d;
      });
      if (!b) {
        throw goog.iter.StopIteration;
      }
      return c;
    };
  }
  return d;
};
goog.iter.compress = function(a, b) {
  var c = goog.iter.toIterator(b);
  return goog.iter.filter(a, function() {
    return !!c.next();
  });
};
goog.iter.GroupByIterator_ = function(a, b) {
  this.iterator = goog.iter.toIterator(a);
  this.keyFunc = b || goog.functions.identity;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  for (; this.currentKey == this.targetKey;) {
    this.currentValue = this.iterator.next(), this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return [this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(a) {
  for (var b = []; this.currentKey == a;) {
    b.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (c) {
      if (c !== goog.iter.StopIteration) {
        throw c;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return b;
};
goog.iter.groupBy = function(a, b) {
  return new goog.iter.GroupByIterator_(a, b);
};
goog.iter.starMap = function(a, b, c) {
  var d = goog.iter.toIterator(a);
  a = new goog.iter.Iterator;
  a.next = function() {
    var a = goog.iter.toArray(d.next());
    return b.apply(c, goog.array.concat(a, void 0, d));
  };
  return a;
};
goog.iter.tee = function(a, b) {
  var c = goog.iter.toIterator(a), d = goog.isNumber(b) ? b : 2, e = goog.array.map(goog.array.range(d), function() {
    return [];
  }), f = function() {
    var a = c.next();
    goog.array.forEach(e, function(b) {
      b.push(a);
    });
  };
  return goog.array.map(e, function(a) {
    var b = new goog.iter.Iterator;
    b.next = function() {
      goog.array.isEmpty(a) && f();
      goog.asserts.assert(!goog.array.isEmpty(a));
      return a.shift();
    };
    return b;
  });
};
goog.iter.enumerate = function(a, b) {
  return goog.iter.zip(goog.iter.count(b), a);
};
goog.iter.limit = function(a, b) {
  goog.asserts.assert(goog.math.isInt(b) && 0 <= b);
  var c = goog.iter.toIterator(a), d = new goog.iter.Iterator, e = b;
  d.next = function() {
    if (0 < e--) {
      return c.next();
    }
    throw goog.iter.StopIteration;
  };
  return d;
};
goog.iter.consume = function(a, b) {
  goog.asserts.assert(goog.math.isInt(b) && 0 <= b);
  for (var c = goog.iter.toIterator(a); 0 < b--;) {
    goog.iter.nextOrValue(c, null);
  }
  return c;
};
goog.iter.slice = function(a, b, c) {
  goog.asserts.assert(goog.math.isInt(b) && 0 <= b);
  a = goog.iter.consume(a, b);
  goog.isNumber(c) && (goog.asserts.assert(goog.math.isInt(c) && c >= b), a = goog.iter.limit(a, c - b));
  return a;
};
goog.iter.hasDuplicates_ = function(a) {
  var b = [];
  goog.array.removeDuplicates(a, b);
  return a.length != b.length;
};
goog.iter.permutations = function(a, b) {
  var c = goog.iter.toArray(a), d = goog.isNumber(b) ? b : c.length;
  c = goog.array.repeat(c, d);
  c = goog.iter.product.apply(void 0, c);
  return goog.iter.filter(c, function(a) {
    return !goog.iter.hasDuplicates_(a);
  });
};
goog.iter.combinations = function(a, b) {
  function c(a) {
    return d[a];
  }
  var d = goog.iter.toArray(a), e = goog.iter.range(d.length);
  e = goog.iter.permutations(e, b);
  var f = goog.iter.filter(e, function(a) {
    return goog.array.isSorted(a);
  });
  e = new goog.iter.Iterator;
  e.next = function() {
    return goog.array.map(f.next(), c);
  };
  return e;
};
goog.iter.combinationsWithReplacement = function(a, b) {
  function c(a) {
    return d[a];
  }
  var d = goog.iter.toArray(a), e = goog.array.range(d.length);
  e = goog.array.repeat(e, b);
  e = goog.iter.product.apply(void 0, e);
  var f = goog.iter.filter(e, function(a) {
    return goog.array.isSorted(a);
  });
  e = new goog.iter.Iterator;
  e.next = function() {
    return goog.array.map(f.next(), c);
  };
  return e;
};
goog.structs.Map = function(a, b) {
  this.map_ = {};
  this.keys_ = [];
  this.version_ = this.count_ = 0;
  var c = arguments.length;
  if (1 < c) {
    if (c % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var d = 0; d < c; d += 2) {
      this.set(arguments[d], arguments[d + 1]);
    }
  } else {
    a && this.addAll(a);
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  for (var a = [], b = 0; b < this.keys_.length; b++) {
    a.push(this.map_[this.keys_[b]]);
  }
  return a;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat();
};
goog.structs.Map.prototype.containsKey = function(a) {
  return goog.structs.Map.hasKey_(this.map_, a);
};
goog.structs.Map.prototype.containsValue = function(a) {
  for (var b = 0; b < this.keys_.length; b++) {
    var c = this.keys_[b];
    if (goog.structs.Map.hasKey_(this.map_, c) && this.map_[c] == a) {
      return !0;
    }
  }
  return !1;
};
goog.structs.Map.prototype.equals = function(a, b) {
  if (this === a) {
    return !0;
  }
  if (this.count_ != a.getCount()) {
    return !1;
  }
  var c = b || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var d, e = 0; d = this.keys_[e]; e++) {
    if (!c(this.get(d), a.get(d))) {
      return !1;
    }
  }
  return !0;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return 0 == this.count_;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.version_ = this.count_ = this.keys_.length = 0;
};
goog.structs.Map.prototype.remove = function(a) {
  return goog.structs.Map.hasKey_(this.map_, a) ? (delete this.map_[a], this.count_--, this.version_++, this.keys_.length > 2 * this.count_ && this.cleanupKeysArray_(), !0) : !1;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    for (var a = 0, b = 0; a < this.keys_.length;) {
      var c = this.keys_[a];
      goog.structs.Map.hasKey_(this.map_, c) && (this.keys_[b++] = c);
      a++;
    }
    this.keys_.length = b;
  }
  if (this.count_ != this.keys_.length) {
    var d = {};
    for (b = a = 0; a < this.keys_.length;) {
      c = this.keys_[a], goog.structs.Map.hasKey_(d, c) || (this.keys_[b++] = c, d[c] = 1), a++;
    }
    this.keys_.length = b;
  }
};
goog.structs.Map.prototype.get = function(a, b) {
  return goog.structs.Map.hasKey_(this.map_, a) ? this.map_[a] : b;
};
goog.structs.Map.prototype.set = function(a, b) {
  goog.structs.Map.hasKey_(this.map_, a) || (this.count_++, this.keys_.push(a), this.version_++);
  this.map_[a] = b;
};
goog.structs.Map.prototype.addAll = function(a) {
  if (a instanceof goog.structs.Map) {
    var b = a.getKeys();
    a = a.getValues();
  } else {
    b = goog.object.getKeys(a), a = goog.object.getValues(a);
  }
  for (var c = 0; c < b.length; c++) {
    this.set(b[c], a[c]);
  }
};
goog.structs.Map.prototype.forEach = function(a, b) {
  for (var c = this.getKeys(), d = 0; d < c.length; d++) {
    var e = c[d], f = this.get(e);
    a.call(b, f, e, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  for (var a = new goog.structs.Map, b = 0; b < this.keys_.length; b++) {
    var c = this.keys_[b];
    a.set(this.map_[c], c);
  }
  return a;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  for (var a = {}, b = 0; b < this.keys_.length; b++) {
    var c = this.keys_[b];
    a[c] = this.map_[c];
  }
  return a;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(!0);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(!1);
};
goog.structs.Map.prototype.__iterator__ = function(a) {
  this.cleanupKeysArray_();
  var b = 0, c = this.version_, d = this, e = new goog.iter.Iterator;
  e.next = function() {
    if (c != d.version_) {
      throw Error("The map has changed since the iterator was created");
    }
    if (b >= d.keys_.length) {
      throw goog.iter.StopIteration;
    }
    var e = d.keys_[b++];
    return a ? e : d.map_[e];
  };
  return e;
};
goog.structs.Map.hasKey_ = function(a, b) {
  return Object.prototype.hasOwnProperty.call(a, b);
};
goog.uri = {};
goog.uri.utils = {};
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(a, b, c, d, e, f, g) {
  var h = "";
  a && (h += a + ":");
  c && (h += "//", b && (h += b + "@"), h += c, d && (h += ":" + d));
  e && (h += e);
  f && (h += "?" + f);
  g && (h += "#" + g);
  return h;
};
goog.uri.utils.splitRe_ = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(a) {
  return a.match(goog.uri.utils.splitRe_);
};
goog.uri.utils.decodeIfPossible_ = function(a, b) {
  return a ? b ? decodeURI(a) : decodeURIComponent(a) : a;
};
goog.uri.utils.getComponentByIndex_ = function(a, b) {
  return goog.uri.utils.split(b)[a] || null;
};
goog.uri.utils.getScheme = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, a);
};
goog.uri.utils.getEffectiveScheme = function(a) {
  a = goog.uri.utils.getScheme(a);
  !a && goog.global.self && goog.global.self.location && (a = goog.global.self.location.protocol, a = a.substr(0, a.length - 1));
  return a ? a.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, a);
};
goog.uri.utils.getUserInfo = function(a) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(a));
};
goog.uri.utils.getDomainEncoded = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, a);
};
goog.uri.utils.getDomain = function(a) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(a), !0);
};
goog.uri.utils.getPort = function(a) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, a)) || null;
};
goog.uri.utils.getPathEncoded = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, a);
};
goog.uri.utils.getPath = function(a) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(a), !0);
};
goog.uri.utils.getQueryData = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, a);
};
goog.uri.utils.getFragmentEncoded = function(a) {
  var b = a.indexOf("#");
  return 0 > b ? null : a.substr(b + 1);
};
goog.uri.utils.setFragmentEncoded = function(a, b) {
  return goog.uri.utils.removeFragment(a) + (b ? "#" + b : "");
};
goog.uri.utils.getFragment = function(a) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(a));
};
goog.uri.utils.getHost = function(a) {
  a = goog.uri.utils.split(a);
  return goog.uri.utils.buildFromEncodedParts(a[goog.uri.utils.ComponentIndex.SCHEME], a[goog.uri.utils.ComponentIndex.USER_INFO], a[goog.uri.utils.ComponentIndex.DOMAIN], a[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getOrigin = function(a) {
  a = goog.uri.utils.split(a);
  return goog.uri.utils.buildFromEncodedParts(a[goog.uri.utils.ComponentIndex.SCHEME], null, a[goog.uri.utils.ComponentIndex.DOMAIN], a[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(a) {
  a = goog.uri.utils.split(a);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, a[goog.uri.utils.ComponentIndex.PATH], a[goog.uri.utils.ComponentIndex.QUERY_DATA], a[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(a) {
  var b = a.indexOf("#");
  return 0 > b ? a : a.substr(0, b);
};
goog.uri.utils.haveSameDomain = function(a, b) {
  var c = goog.uri.utils.split(a), d = goog.uri.utils.split(b);
  return c[goog.uri.utils.ComponentIndex.DOMAIN] == d[goog.uri.utils.ComponentIndex.DOMAIN] && c[goog.uri.utils.ComponentIndex.SCHEME] == d[goog.uri.utils.ComponentIndex.SCHEME] && c[goog.uri.utils.ComponentIndex.PORT] == d[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(a) {
  goog.asserts.assert(0 > a.indexOf("#") && 0 > a.indexOf("?"), "goog.uri.utils: Fragment or query identifiers are not supported: [%s]", a);
};
goog.uri.utils.parseQueryData = function(a, b) {
  if (a) {
    for (var c = a.split("\x26"), d = 0; d < c.length; d++) {
      var e = c[d].indexOf("\x3d"), f = null;
      if (0 <= e) {
        var g = c[d].substring(0, e);
        f = c[d].substring(e + 1);
      } else {
        g = c[d];
      }
      b(g, f ? goog.string.urlDecode(f) : "");
    }
  }
};
goog.uri.utils.splitQueryData_ = function(a) {
  var b = a.indexOf("#");
  0 > b && (b = a.length);
  var c = a.indexOf("?");
  if (0 > c || c > b) {
    c = b;
    var d = "";
  } else {
    d = a.substring(c + 1, b);
  }
  return [a.substr(0, c), d, a.substr(b)];
};
goog.uri.utils.joinQueryData_ = function(a) {
  return a[0] + (a[1] ? "?" + a[1] : "") + a[2];
};
goog.uri.utils.appendQueryData_ = function(a, b) {
  return b ? a ? a + "\x26" + b : b : a;
};
goog.uri.utils.appendQueryDataToUri_ = function(a, b) {
  if (!b) {
    return a;
  }
  var c = goog.uri.utils.splitQueryData_(a);
  c[1] = goog.uri.utils.appendQueryData_(c[1], b);
  return goog.uri.utils.joinQueryData_(c);
};
goog.uri.utils.appendKeyValuePairs_ = function(a, b, c) {
  goog.asserts.assertString(a);
  if (goog.isArray(b)) {
    goog.asserts.assertArray(b);
    for (var d = 0; d < b.length; d++) {
      goog.uri.utils.appendKeyValuePairs_(a, String(b[d]), c);
    }
  } else {
    null != b && c.push(a + ("" === b ? "" : "\x3d" + goog.string.urlEncode(b)));
  }
};
goog.uri.utils.buildQueryData = function(a, b) {
  goog.asserts.assert(0 == Math.max(a.length - (b || 0), 0) % 2, "goog.uri.utils: Key/value lists must be even in length.");
  for (var c = [], d = b || 0; d < a.length; d += 2) {
    goog.uri.utils.appendKeyValuePairs_(a[d], a[d + 1], c);
  }
  return c.join("\x26");
};
goog.uri.utils.buildQueryDataFromMap = function(a) {
  var b = [], c;
  for (c in a) {
    goog.uri.utils.appendKeyValuePairs_(c, a[c], b);
  }
  return b.join("\x26");
};
goog.uri.utils.appendParams = function(a, b) {
  var c = 2 == arguments.length ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);
  return goog.uri.utils.appendQueryDataToUri_(a, c);
};
goog.uri.utils.appendParamsFromMap = function(a, b) {
  var c = goog.uri.utils.buildQueryDataFromMap(b);
  return goog.uri.utils.appendQueryDataToUri_(a, c);
};
goog.uri.utils.appendParam = function(a, b, c) {
  c = goog.isDefAndNotNull(c) ? "\x3d" + goog.string.urlEncode(c) : "";
  return goog.uri.utils.appendQueryDataToUri_(a, b + c);
};
goog.uri.utils.findParam_ = function(a, b, c, d) {
  for (var e = c.length; 0 <= (b = a.indexOf(c, b)) && b < d;) {
    var f = a.charCodeAt(b - 1);
    if (f == goog.uri.utils.CharCode_.AMPERSAND || f == goog.uri.utils.CharCode_.QUESTION) {
      if (f = a.charCodeAt(b + e), !f || f == goog.uri.utils.CharCode_.EQUAL || f == goog.uri.utils.CharCode_.AMPERSAND || f == goog.uri.utils.CharCode_.HASH) {
        return b;
      }
    }
    b += e + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(a, b) {
  return 0 <= goog.uri.utils.findParam_(a, 0, b, a.search(goog.uri.utils.hashOrEndRe_));
};
goog.uri.utils.getParamValue = function(a, b) {
  var c = a.search(goog.uri.utils.hashOrEndRe_), d = goog.uri.utils.findParam_(a, 0, b, c);
  if (0 > d) {
    return null;
  }
  var e = a.indexOf("\x26", d);
  if (0 > e || e > c) {
    e = c;
  }
  d += b.length + 1;
  return goog.string.urlDecode(a.substr(d, e - d));
};
goog.uri.utils.getParamValues = function(a, b) {
  for (var c = a.search(goog.uri.utils.hashOrEndRe_), d = 0, e, f = []; 0 <= (e = goog.uri.utils.findParam_(a, d, b, c));) {
    d = a.indexOf("\x26", e);
    if (0 > d || d > c) {
      d = c;
    }
    e += b.length + 1;
    f.push(goog.string.urlDecode(a.substr(e, d - e)));
  }
  return f;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(a, b) {
  for (var c = a.search(goog.uri.utils.hashOrEndRe_), d = 0, e, f = []; 0 <= (e = goog.uri.utils.findParam_(a, d, b, c));) {
    f.push(a.substring(d, e)), d = Math.min(a.indexOf("\x26", e) + 1 || c, c);
  }
  f.push(a.substr(d));
  return f.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(a, b, c) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(a, b), b, c);
};
goog.uri.utils.setParamsFromMap = function(a, b) {
  var c = goog.uri.utils.splitQueryData_(a), d = c[1], e = [];
  d && goog.array.forEach(d.split("\x26"), function(a) {
    var c = a.indexOf("\x3d");
    c = 0 <= c ? a.substr(0, c) : a;
    b.hasOwnProperty(c) || e.push(a);
  });
  c[1] = goog.uri.utils.appendQueryData_(e.join("\x26"), goog.uri.utils.buildQueryDataFromMap(b));
  return goog.uri.utils.joinQueryData_(c);
};
goog.uri.utils.appendPath = function(a, b) {
  goog.uri.utils.assertNoFragmentsOrQueries_(a);
  goog.string.endsWith(a, "/") && (a = a.substr(0, a.length - 1));
  goog.string.startsWith(b, "/") && (b = b.substr(1));
  return goog.string.buildString(a, "/", b);
};
goog.uri.utils.setPath = function(a, b) {
  goog.string.startsWith(b, "/") || (b = "/" + b);
  var c = goog.uri.utils.split(a);
  return goog.uri.utils.buildFromEncodedParts(c[goog.uri.utils.ComponentIndex.SCHEME], c[goog.uri.utils.ComponentIndex.USER_INFO], c[goog.uri.utils.ComponentIndex.DOMAIN], c[goog.uri.utils.ComponentIndex.PORT], b, c[goog.uri.utils.ComponentIndex.QUERY_DATA], c[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(a) {
  return goog.uri.utils.setParam(a, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.Uri = function(a, b) {
  this.domain_ = this.userInfo_ = this.scheme_ = "";
  this.port_ = null;
  this.fragment_ = this.path_ = "";
  this.ignoreCase_ = this.isReadOnly_ = !1;
  var c;
  a instanceof goog.Uri ? (this.ignoreCase_ = goog.isDef(b) ? b : a.getIgnoreCase(), this.setScheme(a.getScheme()), this.setUserInfo(a.getUserInfo()), this.setDomain(a.getDomain()), this.setPort(a.getPort()), this.setPath(a.getPath()), this.setQueryData(a.getQueryData().clone()), this.setFragment(a.getFragment())) : a && (c = goog.uri.utils.split(String(a))) ? (this.ignoreCase_ = !!b, this.setScheme(c[goog.uri.utils.ComponentIndex.SCHEME] || "", !0), this.setUserInfo(c[goog.uri.utils.ComponentIndex.USER_INFO] || 
  "", !0), this.setDomain(c[goog.uri.utils.ComponentIndex.DOMAIN] || "", !0), this.setPort(c[goog.uri.utils.ComponentIndex.PORT]), this.setPath(c[goog.uri.utils.ComponentIndex.PATH] || "", !0), this.setQueryData(c[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", !0), this.setFragment(c[goog.uri.utils.ComponentIndex.FRAGMENT] || "", !0)) : (this.ignoreCase_ = !!b, this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_));
};
goog.Uri.preserveParameterTypesCompatibilityFlag = !1;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var a = [], b = this.getScheme();
  b && a.push(goog.Uri.encodeSpecialChars_(b, goog.Uri.reDisallowedInSchemeOrUserInfo_, !0), ":");
  var c = this.getDomain();
  if (c || "file" == b) {
    a.push("//"), (b = this.getUserInfo()) && a.push(goog.Uri.encodeSpecialChars_(b, goog.Uri.reDisallowedInSchemeOrUserInfo_, !0), "@"), a.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(c))), c = this.getPort(), null != c && a.push(":", String(c));
  }
  if (c = this.getPath()) {
    this.hasDomain() && "/" != c.charAt(0) && a.push("/"), a.push(goog.Uri.encodeSpecialChars_(c, "/" == c.charAt(0) ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, !0));
  }
  (c = this.getEncodedQuery()) && a.push("?", c);
  (c = this.getFragment()) && a.push("#", goog.Uri.encodeSpecialChars_(c, goog.Uri.reDisallowedInFragment_));
  return a.join("");
};
goog.Uri.prototype.resolve = function(a) {
  var b = this.clone(), c = a.hasScheme();
  c ? b.setScheme(a.getScheme()) : c = a.hasUserInfo();
  c ? b.setUserInfo(a.getUserInfo()) : c = a.hasDomain();
  c ? b.setDomain(a.getDomain()) : c = a.hasPort();
  var d = a.getPath();
  if (c) {
    b.setPort(a.getPort());
  } else {
    if (c = a.hasPath()) {
      if ("/" != d.charAt(0)) {
        if (this.hasDomain() && !this.hasPath()) {
          d = "/" + d;
        } else {
          var e = b.getPath().lastIndexOf("/");
          -1 != e && (d = b.getPath().substr(0, e + 1) + d);
        }
      }
      d = goog.Uri.removeDotSegments(d);
    }
  }
  c ? b.setPath(d) : c = a.hasQuery();
  c ? b.setQueryData(a.getQueryData().clone()) : c = a.hasFragment();
  c && b.setFragment(a.getFragment());
  return b;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(a, b) {
  this.enforceReadOnly();
  if (this.scheme_ = b ? goog.Uri.decodeOrEmpty_(a, !0) : a) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(a, b) {
  this.enforceReadOnly();
  this.userInfo_ = b ? goog.Uri.decodeOrEmpty_(a) : a;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(a, b) {
  this.enforceReadOnly();
  this.domain_ = b ? goog.Uri.decodeOrEmpty_(a, !0) : a;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(a) {
  this.enforceReadOnly();
  if (a) {
    a = Number(a);
    if (isNaN(a) || 0 > a) {
      throw Error("Bad port number " + a);
    }
    this.port_ = a;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return null != this.port_;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(a, b) {
  this.enforceReadOnly();
  this.path_ = b ? goog.Uri.decodeOrEmpty_(a, !0) : a;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return "" !== this.queryData_.toString();
};
goog.Uri.prototype.setQueryData = function(a, b) {
  this.enforceReadOnly();
  a instanceof goog.Uri.QueryData ? (this.queryData_ = a, this.queryData_.setIgnoreCase(this.ignoreCase_)) : (b || (a = goog.Uri.encodeSpecialChars_(a, goog.Uri.reDisallowedInQuery_)), this.queryData_ = new goog.Uri.QueryData(a, null, this.ignoreCase_));
  return this;
};
goog.Uri.prototype.setQuery = function(a, b) {
  return this.setQueryData(a, b);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(a, b) {
  this.enforceReadOnly();
  this.queryData_.set(a, b);
  return this;
};
goog.Uri.prototype.setParameterValues = function(a, b) {
  this.enforceReadOnly();
  goog.isArray(b) || (b = [String(b)]);
  this.queryData_.setValues(a, b);
  return this;
};
goog.Uri.prototype.getParameterValues = function(a) {
  return this.queryData_.getValues(a);
};
goog.Uri.prototype.getParameterValue = function(a) {
  return this.queryData_.get(a);
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(a, b) {
  this.enforceReadOnly();
  this.fragment_ = b ? goog.Uri.decodeOrEmpty_(a) : a;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(a) {
  return (!this.hasDomain() && !a.hasDomain() || this.getDomain() == a.getDomain()) && (!this.hasPort() && !a.hasPort() || this.getPort() == a.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(a) {
  this.enforceReadOnly();
  this.queryData_.remove(a);
  return this;
};
goog.Uri.prototype.setReadOnly = function(a) {
  this.isReadOnly_ = a;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(a) {
  this.ignoreCase_ = a;
  this.queryData_ && this.queryData_.setIgnoreCase(a);
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(a, b) {
  return a instanceof goog.Uri ? a.clone() : new goog.Uri(a, b);
};
goog.Uri.create = function(a, b, c, d, e, f, g, h) {
  h = new goog.Uri(null, h);
  a && h.setScheme(a);
  b && h.setUserInfo(b);
  c && h.setDomain(c);
  d && h.setPort(d);
  e && h.setPath(e);
  f && h.setQueryData(f);
  g && h.setFragment(g);
  return h;
};
goog.Uri.resolve = function(a, b) {
  a instanceof goog.Uri || (a = goog.Uri.parse(a));
  b instanceof goog.Uri || (b = goog.Uri.parse(b));
  return a.resolve(b);
};
goog.Uri.removeDotSegments = function(a) {
  if (".." == a || "." == a) {
    return "";
  }
  if (goog.string.contains(a, "./") || goog.string.contains(a, "/.")) {
    var b = goog.string.startsWith(a, "/");
    a = a.split("/");
    for (var c = [], d = 0; d < a.length;) {
      var e = a[d++];
      "." == e ? b && d == a.length && c.push("") : ".." == e ? ((1 < c.length || 1 == c.length && "" != c[0]) && c.pop(), b && d == a.length && c.push("")) : (c.push(e), b = !0);
    }
    return c.join("/");
  }
  return a;
};
goog.Uri.decodeOrEmpty_ = function(a, b) {
  return a ? b ? decodeURI(a.replace(/%25/g, "%2525")) : decodeURIComponent(a) : "";
};
goog.Uri.encodeSpecialChars_ = function(a, b, c) {
  return goog.isString(a) ? (a = encodeURI(a).replace(b, goog.Uri.encodeChar_), c && (a = goog.Uri.removeDoubleEncoding_(a)), a) : null;
};
goog.Uri.encodeChar_ = function(a) {
  a = a.charCodeAt(0);
  return "%" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(a) {
  return a.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(a, b) {
  var c = goog.uri.utils.split(a), d = goog.uri.utils.split(b);
  return c[goog.uri.utils.ComponentIndex.DOMAIN] == d[goog.uri.utils.ComponentIndex.DOMAIN] && c[goog.uri.utils.ComponentIndex.PORT] == d[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(a, b, c) {
  this.count_ = this.keyMap_ = null;
  this.encodedQuery_ = a || null;
  this.ignoreCase_ = !!c;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_ && (this.keyMap_ = new goog.structs.Map, this.count_ = 0, this.encodedQuery_)) {
    var a = this;
    goog.uri.utils.parseQueryData(this.encodedQuery_, function(b, c) {
      a.add(goog.string.urlDecode(b), c);
    });
  }
};
goog.Uri.QueryData.createFromMap = function(a, b, c) {
  b = goog.structs.getKeys(a);
  if ("undefined" == typeof b) {
    throw Error("Keys are undefined");
  }
  c = new goog.Uri.QueryData(null, null, c);
  a = goog.structs.getValues(a);
  for (var d = 0; d < b.length; d++) {
    var e = b[d], f = a[d];
    goog.isArray(f) ? c.setValues(e, f) : c.add(e, f);
  }
  return c;
};
goog.Uri.QueryData.createFromKeysValues = function(a, b, c, d) {
  if (a.length != b.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  c = new goog.Uri.QueryData(null, null, d);
  for (d = 0; d < a.length; d++) {
    c.add(a[d], b[d]);
  }
  return c;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(a, b) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  a = this.getKeyName_(a);
  var c = this.keyMap_.get(a);
  c || this.keyMap_.set(a, c = []);
  c.push(b);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(a) {
  this.ensureKeyMapInitialized_();
  a = this.getKeyName_(a);
  return this.keyMap_.containsKey(a) ? (this.invalidateCache_(), this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(a).length, this.keyMap_.remove(a)) : !1;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return 0 == this.count_;
};
goog.Uri.QueryData.prototype.containsKey = function(a) {
  this.ensureKeyMapInitialized_();
  a = this.getKeyName_(a);
  return this.keyMap_.containsKey(a);
};
goog.Uri.QueryData.prototype.containsValue = function(a) {
  var b = this.getValues();
  return goog.array.contains(b, a);
};
goog.Uri.QueryData.prototype.forEach = function(a, b) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(c, d) {
    goog.array.forEach(c, function(c) {
      a.call(b, c, d, this);
    }, this);
  }, this);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  for (var a = this.keyMap_.getValues(), b = this.keyMap_.getKeys(), c = [], d = 0; d < b.length; d++) {
    for (var e = a[d], f = 0; f < e.length; f++) {
      c.push(b[d]);
    }
  }
  return c;
};
goog.Uri.QueryData.prototype.getValues = function(a) {
  this.ensureKeyMapInitialized_();
  var b = [];
  if (goog.isString(a)) {
    this.containsKey(a) && (b = goog.array.concat(b, this.keyMap_.get(this.getKeyName_(a))));
  } else {
    a = this.keyMap_.getValues();
    for (var c = 0; c < a.length; c++) {
      b = goog.array.concat(b, a[c]);
    }
  }
  return b;
};
goog.Uri.QueryData.prototype.set = function(a, b) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  a = this.getKeyName_(a);
  this.containsKey(a) && (this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(a).length);
  this.keyMap_.set(a, [b]);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.get = function(a, b) {
  var c = a ? this.getValues(a) : [];
  return goog.Uri.preserveParameterTypesCompatibilityFlag ? 0 < c.length ? c[0] : b : 0 < c.length ? String(c[0]) : b;
};
goog.Uri.QueryData.prototype.setValues = function(a, b) {
  this.remove(a);
  0 < b.length && (this.invalidateCache_(), this.keyMap_.set(this.getKeyName_(a), goog.array.clone(b)), this.count_ = goog.asserts.assertNumber(this.count_) + b.length);
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  for (var a = [], b = this.keyMap_.getKeys(), c = 0; c < b.length; c++) {
    var d = b[c], e = goog.string.urlEncode(d);
    d = this.getValues(d);
    for (var f = 0; f < d.length; f++) {
      var g = e;
      "" !== d[f] && (g += "\x3d" + goog.string.urlEncode(d[f]));
      a.push(g);
    }
  }
  return this.encodedQuery_ = a.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(a) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(b, c) {
    goog.array.contains(a, c) || this.remove(c);
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var a = new goog.Uri.QueryData;
  a.encodedQuery_ = this.encodedQuery_;
  this.keyMap_ && (a.keyMap_ = this.keyMap_.clone(), a.count_ = this.count_);
  return a;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(a) {
  a = String(a);
  this.ignoreCase_ && (a = a.toLowerCase());
  return a;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(a) {
  a && !this.ignoreCase_ && (this.ensureKeyMapInitialized_(), this.invalidateCache_(), this.keyMap_.forEach(function(a, c) {
    var b = c.toLowerCase();
    c != b && (this.remove(c), this.setValues(b, a));
  }, this));
  this.ignoreCase_ = a;
};
goog.Uri.QueryData.prototype.extend = function(a) {
  for (var b = 0; b < arguments.length; b++) {
    goog.structs.forEach(arguments[b], function(a, b) {
      this.add(b, a);
    }, this);
  }
};
goog.math.Integer = function(a, b) {
  this.bits_ = [];
  this.sign_ = b;
  for (var c = !0, d = a.length - 1; 0 <= d; d--) {
    var e = a[d] | 0;
    c && e == b || (this.bits_[d] = e, c = !1);
  }
};
goog.math.Integer.IntCache_ = {};
goog.math.Integer.fromInt = function(a) {
  if (-128 <= a && 128 > a) {
    var b = goog.math.Integer.IntCache_[a];
    if (b) {
      return b;
    }
  }
  b = new goog.math.Integer([a | 0], 0 > a ? -1 : 0);
  -128 <= a && 128 > a && (goog.math.Integer.IntCache_[a] = b);
  return b;
};
goog.math.Integer.fromNumber = function(a) {
  if (isNaN(a) || !isFinite(a)) {
    return goog.math.Integer.ZERO;
  }
  if (0 > a) {
    return goog.math.Integer.fromNumber(-a).negate();
  }
  for (var b = [], c = 1, d = 0; a >= c; d++) {
    b[d] = a / c | 0, c *= goog.math.Integer.TWO_PWR_32_DBL_;
  }
  return new goog.math.Integer(b, 0);
};
goog.math.Integer.fromBits = function(a) {
  return new goog.math.Integer(a, a[a.length - 1] & -2147483648 ? -1 : 0);
};
goog.math.Integer.fromString = function(a, b) {
  if (0 == a.length) {
    throw Error("number format error: empty string");
  }
  var c = b || 10;
  if (2 > c || 36 < c) {
    throw Error("radix out of range: " + c);
  }
  if ("-" == a.charAt(0)) {
    return goog.math.Integer.fromString(a.substring(1), c).negate();
  }
  if (0 <= a.indexOf("-")) {
    throw Error('number format error: interior "-" character');
  }
  for (var d = goog.math.Integer.fromNumber(Math.pow(c, 8)), e = goog.math.Integer.ZERO, f = 0; f < a.length; f += 8) {
    var g = Math.min(8, a.length - f), h = parseInt(a.substring(f, f + g), c);
    8 > g ? (g = goog.math.Integer.fromNumber(Math.pow(c, g)), e = e.multiply(g).add(goog.math.Integer.fromNumber(h))) : (e = e.multiply(d), e = e.add(goog.math.Integer.fromNumber(h)));
  }
  return e;
};
goog.math.Integer.TWO_PWR_32_DBL_ = 4294967296;
goog.math.Integer.ZERO = goog.math.Integer.fromInt(0);
goog.math.Integer.ONE = goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(16777216);
goog.math.Integer.prototype.toInt = function() {
  return 0 < this.bits_.length ? this.bits_[0] : this.sign_;
};
goog.math.Integer.prototype.toNumber = function() {
  if (this.isNegative()) {
    return -this.negate().toNumber();
  }
  for (var a = 0, b = 1, c = 0; c < this.bits_.length; c++) {
    a += this.getBitsUnsigned(c) * b, b *= goog.math.Integer.TWO_PWR_32_DBL_;
  }
  return a;
};
goog.math.Integer.prototype.toString = function(a) {
  a = a || 10;
  if (2 > a || 36 < a) {
    throw Error("radix out of range: " + a);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    return "-" + this.negate().toString(a);
  }
  for (var b = goog.math.Integer.fromNumber(Math.pow(a, 6)), c = this, d = "";;) {
    var e = c.divide(b), f = (c.subtract(e.multiply(b)).toInt() >>> 0).toString(a);
    c = e;
    if (c.isZero()) {
      return f + d;
    }
    for (; 6 > f.length;) {
      f = "0" + f;
    }
    d = "" + f + d;
  }
};
goog.math.Integer.prototype.getBits = function(a) {
  return 0 > a ? 0 : a < this.bits_.length ? this.bits_[a] : this.sign_;
};
goog.math.Integer.prototype.getBitsUnsigned = function(a) {
  a = this.getBits(a);
  return 0 <= a ? a : goog.math.Integer.TWO_PWR_32_DBL_ + a;
};
goog.math.Integer.prototype.getSign = function() {
  return this.sign_;
};
goog.math.Integer.prototype.isZero = function() {
  if (0 != this.sign_) {
    return !1;
  }
  for (var a = 0; a < this.bits_.length; a++) {
    if (0 != this.bits_[a]) {
      return !1;
    }
  }
  return !0;
};
goog.math.Integer.prototype.isNegative = function() {
  return -1 == this.sign_;
};
goog.math.Integer.prototype.isOdd = function() {
  return 0 == this.bits_.length && -1 == this.sign_ || 0 < this.bits_.length && 0 != (this.bits_[0] & 1);
};
goog.math.Integer.prototype.equals = function(a) {
  if (this.sign_ != a.sign_) {
    return !1;
  }
  for (var b = Math.max(this.bits_.length, a.bits_.length), c = 0; c < b; c++) {
    if (this.getBits(c) != a.getBits(c)) {
      return !1;
    }
  }
  return !0;
};
goog.math.Integer.prototype.notEquals = function(a) {
  return !this.equals(a);
};
goog.math.Integer.prototype.greaterThan = function(a) {
  return 0 < this.compare(a);
};
goog.math.Integer.prototype.greaterThanOrEqual = function(a) {
  return 0 <= this.compare(a);
};
goog.math.Integer.prototype.lessThan = function(a) {
  return 0 > this.compare(a);
};
goog.math.Integer.prototype.lessThanOrEqual = function(a) {
  return 0 >= this.compare(a);
};
goog.math.Integer.prototype.compare = function(a) {
  a = this.subtract(a);
  return a.isNegative() ? -1 : a.isZero() ? 0 : 1;
};
goog.math.Integer.prototype.shorten = function(a) {
  var b = a - 1 >> 5;
  a = (a - 1) % 32;
  for (var c = [], d = 0; d < b; d++) {
    c[d] = this.getBits(d);
  }
  d = 31 == a ? 4294967295 : (1 << a + 1) - 1;
  var e = this.getBits(b) & d;
  if (e & 1 << a) {
    return c[b] = e | 4294967295 - d, new goog.math.Integer(c, -1);
  }
  c[b] = e;
  return new goog.math.Integer(c, 0);
};
goog.math.Integer.prototype.negate = function() {
  return this.not().add(goog.math.Integer.ONE);
};
goog.math.Integer.prototype.add = function(a) {
  for (var b = Math.max(this.bits_.length, a.bits_.length), c = [], d = 0, e = 0; e <= b; e++) {
    var f = this.getBits(e) >>> 16, g = this.getBits(e) & 65535, h = a.getBits(e) >>> 16, k = a.getBits(e) & 65535;
    g = d + g + k;
    f = (g >>> 16) + f + h;
    d = f >>> 16;
    g &= 65535;
    f &= 65535;
    c[e] = f << 16 | g;
  }
  return goog.math.Integer.fromBits(c);
};
goog.math.Integer.prototype.subtract = function(a) {
  return this.add(a.negate());
};
goog.math.Integer.prototype.multiply = function(a) {
  if (this.isZero() || a.isZero()) {
    return goog.math.Integer.ZERO;
  }
  if (this.isNegative()) {
    return a.isNegative() ? this.negate().multiply(a.negate()) : this.negate().multiply(a).negate();
  }
  if (a.isNegative()) {
    return this.multiply(a.negate()).negate();
  }
  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) && a.lessThan(goog.math.Integer.TWO_PWR_24_)) {
    return goog.math.Integer.fromNumber(this.toNumber() * a.toNumber());
  }
  for (var b = this.bits_.length + a.bits_.length, c = [], d = 0; d < 2 * b; d++) {
    c[d] = 0;
  }
  for (d = 0; d < this.bits_.length; d++) {
    for (var e = 0; e < a.bits_.length; e++) {
      var f = this.getBits(d) >>> 16, g = this.getBits(d) & 65535, h = a.getBits(e) >>> 16, k = a.getBits(e) & 65535;
      c[2 * d + 2 * e] += g * k;
      goog.math.Integer.carry16_(c, 2 * d + 2 * e);
      c[2 * d + 2 * e + 1] += f * k;
      goog.math.Integer.carry16_(c, 2 * d + 2 * e + 1);
      c[2 * d + 2 * e + 1] += g * h;
      goog.math.Integer.carry16_(c, 2 * d + 2 * e + 1);
      c[2 * d + 2 * e + 2] += f * h;
      goog.math.Integer.carry16_(c, 2 * d + 2 * e + 2);
    }
  }
  for (d = 0; d < b; d++) {
    c[d] = c[2 * d + 1] << 16 | c[2 * d];
  }
  for (d = b; d < 2 * b; d++) {
    c[d] = 0;
  }
  return new goog.math.Integer(c, 0);
};
goog.math.Integer.carry16_ = function(a, b) {
  for (; (a[b] & 65535) != a[b];) {
    a[b + 1] += a[b] >>> 16, a[b] &= 65535, b++;
  }
};
goog.math.Integer.prototype.slowDivide_ = function(a) {
  if (this.isNegative() || a.isNegative()) {
    throw Error("slowDivide_ only works with positive integers.");
  }
  for (var b = goog.math.Integer.ONE; a.lessThanOrEqual(this);) {
    b = b.shiftLeft(1), a = a.shiftLeft(1);
  }
  var c = b.shiftRight(1), d = a.shiftRight(1);
  a = a.shiftRight(2);
  for (b = b.shiftRight(2); !a.isZero();) {
    var e = d.add(a);
    e.lessThanOrEqual(this) && (c = c.add(b), d = e);
    a = a.shiftRight(1);
    b = b.shiftRight(1);
  }
  return c;
};
goog.math.Integer.prototype.divide = function(a) {
  if (a.isZero()) {
    throw Error("division by zero");
  }
  if (this.isZero()) {
    return goog.math.Integer.ZERO;
  }
  if (this.isNegative()) {
    return a.isNegative() ? this.negate().divide(a.negate()) : this.negate().divide(a).negate();
  }
  if (a.isNegative()) {
    return this.divide(a.negate()).negate();
  }
  if (30 < this.bits_.length) {
    return this.slowDivide_(a);
  }
  for (var b = goog.math.Integer.ZERO, c = this; c.greaterThanOrEqual(a);) {
    var d = Math.max(1, Math.floor(c.toNumber() / a.toNumber())), e = Math.ceil(Math.log(d) / Math.LN2);
    e = 48 >= e ? 1 : Math.pow(2, e - 48);
    for (var f = goog.math.Integer.fromNumber(d), g = f.multiply(a); g.isNegative() || g.greaterThan(c);) {
      d -= e, f = goog.math.Integer.fromNumber(d), g = f.multiply(a);
    }
    f.isZero() && (f = goog.math.Integer.ONE);
    b = b.add(f);
    c = c.subtract(g);
  }
  return b;
};
goog.math.Integer.prototype.modulo = function(a) {
  return this.subtract(this.divide(a).multiply(a));
};
goog.math.Integer.prototype.not = function() {
  for (var a = this.bits_.length, b = [], c = 0; c < a; c++) {
    b[c] = ~this.bits_[c];
  }
  return new goog.math.Integer(b, ~this.sign_);
};
goog.math.Integer.prototype.and = function(a) {
  for (var b = Math.max(this.bits_.length, a.bits_.length), c = [], d = 0; d < b; d++) {
    c[d] = this.getBits(d) & a.getBits(d);
  }
  return new goog.math.Integer(c, this.sign_ & a.sign_);
};
goog.math.Integer.prototype.or = function(a) {
  for (var b = Math.max(this.bits_.length, a.bits_.length), c = [], d = 0; d < b; d++) {
    c[d] = this.getBits(d) | a.getBits(d);
  }
  return new goog.math.Integer(c, this.sign_ | a.sign_);
};
goog.math.Integer.prototype.xor = function(a) {
  for (var b = Math.max(this.bits_.length, a.bits_.length), c = [], d = 0; d < b; d++) {
    c[d] = this.getBits(d) ^ a.getBits(d);
  }
  return new goog.math.Integer(c, this.sign_ ^ a.sign_);
};
goog.math.Integer.prototype.shiftLeft = function(a) {
  var b = a >> 5;
  a %= 32;
  for (var c = this.bits_.length + b + (0 < a ? 1 : 0), d = [], e = 0; e < c; e++) {
    d[e] = 0 < a ? this.getBits(e - b) << a | this.getBits(e - b - 1) >>> 32 - a : this.getBits(e - b);
  }
  return new goog.math.Integer(d, this.sign_);
};
goog.math.Integer.prototype.shiftRight = function(a) {
  var b = a >> 5;
  a %= 32;
  for (var c = this.bits_.length - b, d = [], e = 0; e < c; e++) {
    d[e] = 0 < a ? this.getBits(e + b) >>> a | this.getBits(e + b + 1) << 32 - a : this.getBits(e + b);
  }
  return new goog.math.Integer(d, this.sign_);
};
goog.string.StringBuffer = function(a, b) {
  null != a && this.append.apply(this, arguments);
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(a) {
  this.buffer_ = "" + a;
};
goog.string.StringBuffer.prototype.append = function(a, b, c) {
  this.buffer_ += String(a);
  if (null != b) {
    for (var d = 1; d < arguments.length; d++) {
      this.buffer_ += arguments[d];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.reflect = {};
goog.reflect.object = function(a, b) {
  return b;
};
goog.reflect.objectProperty = function(a, b) {
  return a;
};
goog.reflect.sinkValue = function(a) {
  goog.reflect.sinkValue[" "](a);
  return a;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(a, b) {
  try {
    return goog.reflect.sinkValue(a[b]), !0;
  } catch (c) {
  }
  return !1;
};
goog.reflect.cache = function(a, b, c, d) {
  d = d ? d(b) : b;
  return Object.prototype.hasOwnProperty.call(a, d) ? a[d] : a[d] = c(b);
};
goog.math.Long = function(a, b) {
  this.low_ = a | 0;
  this.high_ = b | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.valueCache_ = {};
goog.math.Long.getCachedIntValue_ = function(a) {
  return goog.reflect.cache(goog.math.Long.IntCache_, a, function(a) {
    return new goog.math.Long(a, 0 > a ? -1 : 0);
  });
};
goog.math.Long.MAX_VALUE_FOR_RADIX_ = "  111111111111111111111111111111111111111111111111111111111111111 2021110011022210012102010021220101220221 13333333333333333333333333333333 1104332401304422434310311212 1540241003031030222122211 22341010611245052052300 777777777777777777777 67404283172107811827 9223372036854775807 1728002635214590697 41a792678515120367 10b269549075433c37 4340724c6c71dc7a7 160e2ad3246366807 7fffffffffffffff 33d3d8307b214008 16agh595df825fa7 ba643dci0ffeehh 5cbfjia3fh26ja7 2heiciiie82dh97 1adaibb21dckfa7 i6k448cf4192c2 acd772jnc9l0l7 64ie1focnn5g77 3igoecjbmca687 27c48l5b37oaop 1bk39f3ah3dmq7 q1se8f0m04isb hajppbc1fc207 bm03i95hia437 7vvvvvvvvvvvv 5hg4ck9jd4u37 3tdtk1v8j6tpp 2pijmikexrxp7 1y2p0ij32e8e7".split(" ");
goog.math.Long.MIN_VALUE_FOR_RADIX_ = "  -1000000000000000000000000000000000000000000000000000000000000000 -2021110011022210012102010021220101220222 -20000000000000000000000000000000 -1104332401304422434310311213 -1540241003031030222122212 -22341010611245052052301 -1000000000000000000000 -67404283172107811828 -9223372036854775808 -1728002635214590698 -41a792678515120368 -10b269549075433c38 -4340724c6c71dc7a8 -160e2ad3246366808 -8000000000000000 -33d3d8307b214009 -16agh595df825fa8 -ba643dci0ffeehi -5cbfjia3fh26ja8 -2heiciiie82dh98 -1adaibb21dckfa8 -i6k448cf4192c3 -acd772jnc9l0l8 -64ie1focnn5g78 -3igoecjbmca688 -27c48l5b37oaoq -1bk39f3ah3dmq8 -q1se8f0m04isc -hajppbc1fc208 -bm03i95hia438 -8000000000000 -5hg4ck9jd4u38 -3tdtk1v8j6tpq -2pijmikexrxp8 -1y2p0ij32e8e8".split(" ");
goog.math.Long.fromInt = function(a) {
  var b = a | 0;
  goog.asserts.assert(a === b, "value should be a 32-bit integer");
  return -128 <= b && 128 > b ? goog.math.Long.getCachedIntValue_(b) : new goog.math.Long(b, 0 > b ? -1 : 0);
};
goog.math.Long.fromNumber = function(a) {
  return isNaN(a) ? goog.math.Long.getZero() : a <= -goog.math.Long.TWO_PWR_63_DBL_ ? goog.math.Long.getMinValue() : a + 1 >= goog.math.Long.TWO_PWR_63_DBL_ ? goog.math.Long.getMaxValue() : 0 > a ? goog.math.Long.fromNumber(-a).negate() : new goog.math.Long(a % goog.math.Long.TWO_PWR_32_DBL_ | 0, a / goog.math.Long.TWO_PWR_32_DBL_ | 0);
};
goog.math.Long.fromBits = function(a, b) {
  return new goog.math.Long(a, b);
};
goog.math.Long.fromString = function(a, b) {
  if (0 == a.length) {
    throw Error("number format error: empty string");
  }
  var c = b || 10;
  if (2 > c || 36 < c) {
    throw Error("radix out of range: " + c);
  }
  if ("-" == a.charAt(0)) {
    return goog.math.Long.fromString(a.substring(1), c).negate();
  }
  if (0 <= a.indexOf("-")) {
    throw Error('number format error: interior "-" character: ' + a);
  }
  for (var d = goog.math.Long.fromNumber(Math.pow(c, 8)), e = goog.math.Long.getZero(), f = 0; f < a.length; f += 8) {
    var g = Math.min(8, a.length - f), h = parseInt(a.substring(f, f + g), c);
    8 > g ? (g = goog.math.Long.fromNumber(Math.pow(c, g)), e = e.multiply(g).add(goog.math.Long.fromNumber(h))) : (e = e.multiply(d), e = e.add(goog.math.Long.fromNumber(h)));
  }
  return e;
};
goog.math.Long.isStringInRange = function(a, b) {
  var c = b || 10;
  if (2 > c || 36 < c) {
    throw Error("radix out of range: " + c);
  }
  c = "-" == a.charAt(0) ? goog.math.Long.MIN_VALUE_FOR_RADIX_[c] : goog.math.Long.MAX_VALUE_FOR_RADIX_[c];
  return a.length < c.length ? !0 : a.length == c.length && a <= c ? !0 : !1;
};
goog.math.Long.TWO_PWR_16_DBL_ = 65536;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.getZero = function() {
  return goog.math.Long.getCachedIntValue_(0);
};
goog.math.Long.getOne = function() {
  return goog.math.Long.getCachedIntValue_(1);
};
goog.math.Long.getNegOne = function() {
  return goog.math.Long.getCachedIntValue_(-1);
};
goog.math.Long.getMaxValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MAX_VALUE, function() {
    return goog.math.Long.fromBits(-1, 2147483647);
  });
};
goog.math.Long.getMinValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MIN_VALUE, function() {
    return goog.math.Long.fromBits(0, -2147483648);
  });
};
goog.math.Long.getTwoPwr24 = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.TWO_PWR_24, function() {
    return goog.math.Long.fromInt(16777216);
  });
};
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(a) {
  a = a || 10;
  if (2 > a || 36 < a) {
    throw Error("radix out of range: " + a);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      var b = goog.math.Long.fromNumber(a), c = this.div(b);
      b = c.multiply(b).subtract(this);
      return c.toString(a) + b.toInt().toString(a);
    }
    return "-" + this.negate().toString(a);
  }
  c = goog.math.Long.fromNumber(Math.pow(a, 6));
  b = this;
  for (var d = "";;) {
    var e = b.div(c), f = (b.subtract(e.multiply(c)).toInt() >>> 0).toString(a);
    b = e;
    if (b.isZero()) {
      return f + d;
    }
    for (; 6 > f.length;) {
      f = "0" + f;
    }
    d = "" + f + d;
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return 0 <= this.low_ ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    return this.equals(goog.math.Long.getMinValue()) ? 64 : this.negate().getNumBitsAbs();
  }
  for (var a = 0 != this.high_ ? this.high_ : this.low_, b = 31; 0 < b && 0 == (a & 1 << b); b--) {
  }
  return 0 != this.high_ ? b + 33 : b + 1;
};
goog.math.Long.prototype.isZero = function() {
  return 0 == this.high_ && 0 == this.low_;
};
goog.math.Long.prototype.isNegative = function() {
  return 0 > this.high_;
};
goog.math.Long.prototype.isOdd = function() {
  return 1 == (this.low_ & 1);
};
goog.math.Long.prototype.equals = function(a) {
  return this.high_ == a.high_ && this.low_ == a.low_;
};
goog.math.Long.prototype.notEquals = function(a) {
  return this.high_ != a.high_ || this.low_ != a.low_;
};
goog.math.Long.prototype.lessThan = function(a) {
  return 0 > this.compare(a);
};
goog.math.Long.prototype.lessThanOrEqual = function(a) {
  return 0 >= this.compare(a);
};
goog.math.Long.prototype.greaterThan = function(a) {
  return 0 < this.compare(a);
};
goog.math.Long.prototype.greaterThanOrEqual = function(a) {
  return 0 <= this.compare(a);
};
goog.math.Long.prototype.compare = function(a) {
  if (this.equals(a)) {
    return 0;
  }
  var b = this.isNegative(), c = a.isNegative();
  return b && !c ? -1 : !b && c ? 1 : this.subtract(a).isNegative() ? -1 : 1;
};
goog.math.Long.prototype.negate = function() {
  return this.equals(goog.math.Long.getMinValue()) ? goog.math.Long.getMinValue() : this.not().add(goog.math.Long.getOne());
};
goog.math.Long.prototype.add = function(a) {
  var b = this.high_ >>> 16, c = this.high_ & 65535, d = this.low_ >>> 16, e = a.high_ >>> 16, f = a.high_ & 65535, g = a.low_ >>> 16;
  a = 0 + ((this.low_ & 65535) + (a.low_ & 65535));
  g = 0 + (a >>> 16) + (d + g);
  d = 0 + (g >>> 16);
  d += c + f;
  b = 0 + (d >>> 16) + (b + e) & 65535;
  return goog.math.Long.fromBits((g & 65535) << 16 | a & 65535, b << 16 | d & 65535);
};
goog.math.Long.prototype.subtract = function(a) {
  return this.add(a.negate());
};
goog.math.Long.prototype.multiply = function(a) {
  if (this.isZero() || a.isZero()) {
    return goog.math.Long.getZero();
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    return a.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  }
  if (a.equals(goog.math.Long.getMinValue())) {
    return this.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  }
  if (this.isNegative()) {
    return a.isNegative() ? this.negate().multiply(a.negate()) : this.negate().multiply(a).negate();
  }
  if (a.isNegative()) {
    return this.multiply(a.negate()).negate();
  }
  if (this.lessThan(goog.math.Long.getTwoPwr24()) && a.lessThan(goog.math.Long.getTwoPwr24())) {
    return goog.math.Long.fromNumber(this.toNumber() * a.toNumber());
  }
  var b = this.high_ >>> 16, c = this.high_ & 65535, d = this.low_ >>> 16, e = this.low_ & 65535, f = a.high_ >>> 16, g = a.high_ & 65535, h = a.low_ >>> 16;
  a = a.low_ & 65535;
  var k = 0 + e * a;
  var l = 0 + (k >>> 16) + d * a;
  var m = 0 + (l >>> 16);
  l = (l & 65535) + e * h;
  m += l >>> 16;
  m += c * a;
  var n = 0 + (m >>> 16);
  m = (m & 65535) + d * h;
  n += m >>> 16;
  m = (m & 65535) + e * g;
  n = n + (m >>> 16) + (b * a + c * h + d * g + e * f) & 65535;
  return goog.math.Long.fromBits((l & 65535) << 16 | k & 65535, n << 16 | m & 65535);
};
goog.math.Long.prototype.div = function(a) {
  if (a.isZero()) {
    throw Error("division by zero");
  }
  if (this.isZero()) {
    return goog.math.Long.getZero();
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    if (a.equals(goog.math.Long.getOne()) || a.equals(goog.math.Long.getNegOne())) {
      return goog.math.Long.getMinValue();
    }
    if (a.equals(goog.math.Long.getMinValue())) {
      return goog.math.Long.getOne();
    }
    var b = this.shiftRight(1).div(a).shiftLeft(1);
    if (b.equals(goog.math.Long.getZero())) {
      return a.isNegative() ? goog.math.Long.getOne() : goog.math.Long.getNegOne();
    }
    var c = this.subtract(a.multiply(b));
    return b.add(c.div(a));
  }
  if (a.equals(goog.math.Long.getMinValue())) {
    return goog.math.Long.getZero();
  }
  if (this.isNegative()) {
    return a.isNegative() ? this.negate().div(a.negate()) : this.negate().div(a).negate();
  }
  if (a.isNegative()) {
    return this.div(a.negate()).negate();
  }
  var d = goog.math.Long.getZero();
  for (c = this; c.greaterThanOrEqual(a);) {
    b = Math.max(1, Math.floor(c.toNumber() / a.toNumber()));
    var e = Math.ceil(Math.log(b) / Math.LN2);
    e = 48 >= e ? 1 : Math.pow(2, e - 48);
    for (var f = goog.math.Long.fromNumber(b), g = f.multiply(a); g.isNegative() || g.greaterThan(c);) {
      b -= e, f = goog.math.Long.fromNumber(b), g = f.multiply(a);
    }
    f.isZero() && (f = goog.math.Long.getOne());
    d = d.add(f);
    c = c.subtract(g);
  }
  return d;
};
goog.math.Long.prototype.modulo = function(a) {
  return this.subtract(this.div(a).multiply(a));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(a) {
  return goog.math.Long.fromBits(this.low_ & a.low_, this.high_ & a.high_);
};
goog.math.Long.prototype.or = function(a) {
  return goog.math.Long.fromBits(this.low_ | a.low_, this.high_ | a.high_);
};
goog.math.Long.prototype.xor = function(a) {
  return goog.math.Long.fromBits(this.low_ ^ a.low_, this.high_ ^ a.high_);
};
goog.math.Long.prototype.shiftLeft = function(a) {
  a &= 63;
  if (0 == a) {
    return this;
  }
  var b = this.low_;
  return 32 > a ? goog.math.Long.fromBits(b << a, this.high_ << a | b >>> 32 - a) : goog.math.Long.fromBits(0, b << a - 32);
};
goog.math.Long.prototype.shiftRight = function(a) {
  a &= 63;
  if (0 == a) {
    return this;
  }
  var b = this.high_;
  return 32 > a ? goog.math.Long.fromBits(this.low_ >>> a | b << 32 - a, b >> a) : goog.math.Long.fromBits(b >> a - 32, 0 <= b ? 0 : -1);
};
goog.math.Long.prototype.shiftRightUnsigned = function(a) {
  a &= 63;
  if (0 == a) {
    return this;
  }
  var b = this.high_;
  return 32 > a ? goog.math.Long.fromBits(this.low_ >>> a | b << 32 - a, b >>> a) : 32 == a ? goog.math.Long.fromBits(b, 0) : goog.math.Long.fromBits(b >>> a - 32, 0);
};
goog.math.Long.ValueCacheId_ = {MAX_VALUE:1, MIN_VALUE:2, TWO_PWR_24:6};
var cljs = {core:{}};
cljs.core._STAR_clojurescript_version_STAR_ = "1.9.946";
cljs.core._STAR_unchecked_if_STAR_ = !1;
cljs.core._STAR_unchecked_arrays_STAR_ = !1;
cljs.core._STAR_warn_on_infer_STAR_ = !1;
"undefined" === typeof cljs.core.PROTOCOL_SENTINEL && (cljs.core.PROTOCOL_SENTINEL = {});
cljs.core.MODULE_URIS = null;
cljs.core.MODULE_INFOS = null;
cljs.core._STAR_target_STAR_ = "nodejs";
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = !0;
"undefined" === typeof cljs.core._STAR_print_fn_STAR_ && (cljs.core._STAR_print_fn_STAR_ = null);
"undefined" === typeof cljs.core._STAR_print_err_fn_STAR_ && (cljs.core._STAR_print_err_fn_STAR_ = null);
cljs.core.set_print_fn_BANG_ = function(a) {
  return cljs.core._STAR_print_fn_STAR_ = a;
};
cljs.core.set_print_err_fn_BANG_ = function(a) {
  return cljs.core._STAR_print_err_fn_STAR_ = a;
};
cljs.core._STAR_flush_on_newline_STAR_ = !0;
cljs.core._STAR_print_newline_STAR_ = !0;
cljs.core._STAR_print_readably_STAR_ = !0;
cljs.core._STAR_print_meta_STAR_ = !1;
cljs.core._STAR_print_dup_STAR_ = !1;
cljs.core._STAR_print_namespace_maps_STAR_ = !1;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core._STAR_print_fn_bodies_STAR_ = !1;
"undefined" === typeof cljs.core._STAR_loaded_libs_STAR_ && (cljs.core._STAR_loaded_libs_STAR_ = null);
cljs.core.pr_opts = function() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function() {
  cljs.core._STAR_print_newline_STAR_ = !1;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var a = function(a) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a));
    }, b = function(b) {
      var c = null;
      if (0 < arguments.length) {
        c = 0;
        for (var e = Array(arguments.length - 0); c < e.length;) {
          e[c] = arguments[c + 0], ++c;
        }
        c = new cljs.core.IndexedSeq(e, 0, null);
      }
      return a.call(this, c);
    };
    b.cljs$lang$maxFixedArity = 0;
    b.cljs$lang$applyTo = function(b) {
      b = cljs.core.seq(b);
      return a(b);
    };
    b.cljs$core$IFn$_invoke$arity$variadic = a;
    return b;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var a = function(a) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a));
    }, b = function(b) {
      var c = null;
      if (0 < arguments.length) {
        c = 0;
        for (var e = Array(arguments.length - 0); c < e.length;) {
          e[c] = arguments[c + 0], ++c;
        }
        c = new cljs.core.IndexedSeq(e, 0, null);
      }
      return a.call(this, c);
    };
    b.cljs$lang$maxFixedArity = 0;
    b.cljs$lang$applyTo = function(b) {
      b = cljs.core.seq(b);
      return a(b);
    };
    b.cljs$core$IFn$_invoke$arity$variadic = a;
    return b;
  }();
  return null;
};
cljs.core.truth_ = function(a) {
  return null != a && !1 !== a;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function(a, b) {
  return a === b;
};
cljs.core.nil_QMARK_ = function(a) {
  return null == a;
};
cljs.core.array_QMARK_ = function(a) {
  return "nodejs" === cljs.core._STAR_target_STAR_ ? Array.isArray(a) : a instanceof Array;
};
cljs.core.number_QMARK_ = function(a) {
  return "number" === typeof a;
};
cljs.core.not = function(a) {
  return null == a ? !0 : !1 === a ? !0 : !1;
};
cljs.core.some_QMARK_ = function(a) {
  return null != a;
};
cljs.core.object_QMARK_ = function(a) {
  return null != a ? a.constructor === Object : !1;
};
cljs.core.string_QMARK_ = function(a) {
  return goog.isString(a);
};
cljs.core.char_QMARK_ = function(a) {
  return "string" === typeof a && 1 === a.length;
};
cljs.core.any_QMARK_ = function(a) {
  return !0;
};
cljs.core.native_satisfies_QMARK_ = function(a, b) {
  return a[goog.typeOf(null == b ? null : b)] ? !0 : a._ ? !0 : !1;
};
cljs.core.is_proto_ = function(a) {
  return a.constructor.prototype === a;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core._STAR_command_line_args_STAR_ = null;
cljs.core.type = function(a) {
  return null == a ? null : a.constructor;
};
cljs.core.missing_protocol = function(a, b) {
  var c = cljs.core.type(b);
  c = cljs.core.truth_(cljs.core.truth_(c) ? c.cljs$lang$type : c) ? c.cljs$lang$ctorStr : goog.typeOf(b);
  return Error(["No protocol method ", a, " defined for type ", c, ": ", b].join(""));
};
cljs.core.type__GT_str = function(a) {
  var b = a.cljs$lang$ctorStr;
  return cljs.core.truth_(b) ? b : "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.load_file = function(a) {
  return cljs.core.truth_(COMPILED) ? null : goog.nodeGlobalRequire(a);
};
"undefined" !== typeof Symbol && "function" === goog.typeOf(Symbol) ? cljs.core.ITER_SYMBOL = Symbol.iterator : cljs.core.ITER_SYMBOL = "@@iterator";
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {_RBRACE_:"}", _COLON_:":", _BANG_:"!", _QMARK_:"?", _BSLASH_:"\\\\", _SLASH_:"/", _PERCENT_:"%", _PLUS_:"+", _SHARP_:"#", _LBRACE_:"{", _BAR_:"|", _LBRACK_:"[", _EQ_:"\x3d", _:"-", _TILDE_:"~", _RBRACK_:"]", _GT_:"\x3e", _SINGLEQUOTE_:"'", _CIRCA_:"@", _AMPERSAND_:"\x26", _DOUBLEQUOTE_:'\\"', _CARET_:"^", _LT_:"\x3c", _STAR_:"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function() {
  if ("undefined" !== typeof performance && null != performance.now) {
    return performance.now();
  }
  if ("undefined" !== typeof process && null != process.hrtime) {
    var a = process.hrtime();
    return (1.0E9 * a[0] + a[1]) / 1000000.0;
  }
  return (new Date).getTime();
};
cljs.core.make_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return Array(a);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return Array(b);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a = Array(b);
  b = a.length;
  for (var d = 0;;) {
    if (d < b) {
      a[d] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, c), d += 1;
    } else {
      break;
    }
  }
  return a;
};
cljs.core.make_array.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function(a) {
  for (var b = a.length, c = Array(b), d = 0;;) {
    if (d < b) {
      c[d] = a[d], d += 1;
    } else {
      break;
    }
  }
  return c;
};
cljs.core.array = function(a) {
  for (var b = Array(arguments.length), c = 0;;) {
    if (c < b.length) {
      b[c] = arguments[c], c += 1;
    } else {
      return b;
    }
  }
};
cljs.core.maybe_warn = function(a) {
  return cljs.core.truth_(cljs.core._STAR_print_err_fn_STAR_) ? cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1(a) : cljs.core._STAR_print_err_fn_STAR_.call(null, a) : null;
};
cljs.core.checked_aget = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  try {
    if (!cljs.core.truth_(function() {
      var b = cljs.core.array_QMARK_(a);
      return b ? b : goog.isArrayLike(a);
    }())) {
      throw Error("Assert failed: (or (array? array) (js/goog.isArrayLike array))");
    }
    if ("number" !== typeof b) {
      throw Error("Assert failed: (number? idx)");
    }
    if (0 > b) {
      throw Error("Assert failed: (not (neg? idx))");
    }
    if (!(b < a.length)) {
      throw Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (c) {
    cljs.core.maybe_warn(c);
  }
  return a[b];
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(a, b), c);
};
cljs.core.checked_aget.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.checked_aget.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  try {
    if (!cljs.core.truth_(function() {
      var b = cljs.core.array_QMARK_(a);
      return b ? b : goog.isArrayLike(a);
    }())) {
      throw Error("Assert failed: (or (array? array) (js/goog.isArrayLike array))");
    }
    if ("number" !== typeof b) {
      throw Error("Assert failed: (number? idx)");
    }
    if (0 > b) {
      throw Error("Assert failed: (not (neg? idx))");
    }
    if (!(b < a.length)) {
      throw Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (d) {
    cljs.core.maybe_warn(d);
  }
  return a[b] = c;
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(a, b), c, d);
};
cljs.core.checked_aset.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.checked_aset.cljs$lang$maxFixedArity = 3;
cljs.core.checked_aget_SINGLEQUOTE_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (!cljs.core.truth_(function() {
    var b = cljs.core.array_QMARK_(a);
    return b ? b : goog.isArrayLike(a);
  }())) {
    throw Error("Assert failed: (or (array? array) (js/goog.isArrayLike array))");
  }
  if ("number" !== typeof b) {
    throw Error("Assert failed: (number? idx)");
  }
  if (0 > b) {
    throw Error("Assert failed: (not (neg? idx))");
  }
  if (!(b < a.length)) {
    throw Error("Assert failed: (\x3c idx (alength array))");
  }
  return a[b];
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(a, b), c);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset_SINGLEQUOTE_ = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (!cljs.core.truth_(function() {
    var b = cljs.core.array_QMARK_(a);
    return b ? b : goog.isArrayLike(a);
  }())) {
    throw Error("Assert failed: (or (array? array) (js/goog.isArrayLike array))");
  }
  if ("number" !== typeof b) {
    throw Error("Assert failed: (number? idx)");
  }
  if (0 > b) {
    throw Error("Assert failed: (not (neg? idx))");
  }
  if (!(b < a.length)) {
    throw Error("Assert failed: (\x3c idx (alength array))");
  }
  return a[b] = c;
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(a, b), c, d);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$maxFixedArity = 3;
cljs.core.aget = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a[b];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.aget, a[b], c);
};
cljs.core.aget.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a[b] = c;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.aset, a[b], c, d);
};
cljs.core.aset.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function(a) {
  return a.length;
};
cljs.core.into_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, a);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, b) {
    a.push(b);
    return a;
  }, [], b);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return a[b].apply(a, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(c));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$1) {
    return a.cljs$core$IFn$_invoke$arity$1(a);
  }
  var b = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._invoke._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$2) {
    return a.cljs$core$IFn$_invoke$arity$2(a, b);
  }
  var c = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._invoke._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$3) {
    return a.cljs$core$IFn$_invoke$arity$3(a, b, c);
  }
  var d = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._invoke._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$4) {
    return a.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
  }
  var e = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != e) {
    return e.cljs$core$IFn$_invoke$arity$4 ? e.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : e.call(null, a, b, c, d);
  }
  e = cljs.core._invoke._;
  if (null != e) {
    return e.cljs$core$IFn$_invoke$arity$4 ? e.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : e.call(null, a, b, c, d);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$5) {
    return a.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
  }
  var f = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != f) {
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
  }
  f = cljs.core._invoke._;
  if (null != f) {
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$6) {
    return a.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f);
  }
  var g = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != g) {
    return g.cljs$core$IFn$_invoke$arity$6 ? g.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : g.call(null, a, b, c, d, e, f);
  }
  g = cljs.core._invoke._;
  if (null != g) {
    return g.cljs$core$IFn$_invoke$arity$6 ? g.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : g.call(null, a, b, c, d, e, f);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$7) {
    return a.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g);
  }
  var h = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != h) {
    return h.cljs$core$IFn$_invoke$arity$7 ? h.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : h.call(null, a, b, c, d, e, f, g);
  }
  h = cljs.core._invoke._;
  if (null != h) {
    return h.cljs$core$IFn$_invoke$arity$7 ? h.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : h.call(null, a, b, c, d, e, f, g);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$8) {
    return a.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h);
  }
  var k = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != k) {
    return k.cljs$core$IFn$_invoke$arity$8 ? k.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : k.call(null, a, b, c, d, e, f, g, h);
  }
  k = cljs.core._invoke._;
  if (null != k) {
    return k.cljs$core$IFn$_invoke$arity$8 ? k.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : k.call(null, a, b, c, d, e, f, g, h);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$9) {
    return a.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k);
  }
  var l = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != l) {
    return l.cljs$core$IFn$_invoke$arity$9 ? l.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : l.call(null, a, b, c, d, e, f, g, h, k);
  }
  l = cljs.core._invoke._;
  if (null != l) {
    return l.cljs$core$IFn$_invoke$arity$9 ? l.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : l.call(null, a, b, c, d, e, f, g, h, k);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, l) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$10) {
    return a.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l);
  }
  var m = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != m) {
    return m.cljs$core$IFn$_invoke$arity$10 ? m.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : m.call(null, a, b, c, d, e, f, g, h, k, l);
  }
  m = cljs.core._invoke._;
  if (null != m) {
    return m.cljs$core$IFn$_invoke$arity$10 ? m.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : m.call(null, a, b, c, d, e, f, g, h, k, l);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, l, m) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$11) {
    return a.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m);
  }
  var n = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != n) {
    return n.cljs$core$IFn$_invoke$arity$11 ? n.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : n.call(null, a, b, c, d, e, f, g, h, k, l, m);
  }
  n = cljs.core._invoke._;
  if (null != n) {
    return n.cljs$core$IFn$_invoke$arity$11 ? n.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : n.call(null, a, b, c, d, e, f, g, h, k, l, m);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$12) {
    return a.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n);
  }
  var p = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != p) {
    return p.cljs$core$IFn$_invoke$arity$12 ? p.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : p.call(null, a, b, c, d, e, f, g, h, k, l, m, n);
  }
  p = cljs.core._invoke._;
  if (null != p) {
    return p.cljs$core$IFn$_invoke$arity$12 ? p.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : p.call(null, a, b, c, d, e, f, g, h, k, l, m, n);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$13) {
    return a.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p);
  }
  var q = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != q) {
    return q.cljs$core$IFn$_invoke$arity$13 ? q.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : q.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p);
  }
  q = cljs.core._invoke._;
  if (null != q) {
    return q.cljs$core$IFn$_invoke$arity$13 ? q.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : q.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$14) {
    return a.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, q);
  }
  var r = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != r) {
    return r.cljs$core$IFn$_invoke$arity$14 ? r.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, q) : r.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q);
  }
  r = cljs.core._invoke._;
  if (null != r) {
    return r.cljs$core$IFn$_invoke$arity$14 ? r.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, q) : r.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$15) {
    return a.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r);
  }
  var t = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != t) {
    return t.cljs$core$IFn$_invoke$arity$15 ? t.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) : t.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r);
  }
  t = cljs.core._invoke._;
  if (null != t) {
    return t.cljs$core$IFn$_invoke$arity$15 ? t.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) : t.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$16) {
    return a.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
  }
  var v = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != v) {
    return v.cljs$core$IFn$_invoke$arity$16 ? v.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) : v.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
  }
  v = cljs.core._invoke._;
  if (null != v) {
    return v.cljs$core$IFn$_invoke$arity$16 ? v.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) : v.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$17) {
    return a.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v);
  }
  var u = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != u) {
    return u.cljs$core$IFn$_invoke$arity$17 ? u.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v) : u.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v);
  }
  u = cljs.core._invoke._;
  if (null != u) {
    return u.cljs$core$IFn$_invoke$arity$17 ? u.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v) : u.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$18) {
    return a.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u);
  }
  var w = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != w) {
    return w.cljs$core$IFn$_invoke$arity$18 ? w.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u) : w.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u);
  }
  w = cljs.core._invoke._;
  if (null != w) {
    return w.cljs$core$IFn$_invoke$arity$18 ? w.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u) : w.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$19) {
    return a.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w);
  }
  var x = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != x) {
    return x.cljs$core$IFn$_invoke$arity$19 ? x.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w) : x.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w);
  }
  x = cljs.core._invoke._;
  if (null != x) {
    return x.cljs$core$IFn$_invoke$arity$19 ? x.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w) : x.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$20) {
    return a.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x);
  }
  var z = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != z) {
    return z.cljs$core$IFn$_invoke$arity$20 ? z.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x) : z.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x);
  }
  z = cljs.core._invoke._;
  if (null != z) {
    return z.cljs$core$IFn$_invoke$arity$20 ? z.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x) : z.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$21) {
    return a.cljs$core$IFn$_invoke$arity$21(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z);
  }
  var y = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != y) {
    return y.cljs$core$IFn$_invoke$arity$21 ? y.cljs$core$IFn$_invoke$arity$21(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z) : y.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z);
  }
  y = cljs.core._invoke._;
  if (null != y) {
    return y.cljs$core$IFn$_invoke$arity$21 ? y.cljs$core$IFn$_invoke$arity$21(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z) : y.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z, y) {
  if (null != a && null != a.cljs$core$IFn$_invoke$arity$22) {
    return a.cljs$core$IFn$_invoke$arity$22(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z, y);
  }
  var R = cljs.core._invoke[goog.typeOf(null == a ? null : a)];
  if (null != R) {
    return R.cljs$core$IFn$_invoke$arity$22 ? R.cljs$core$IFn$_invoke$arity$22(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z, y) : R.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z, y);
  }
  R = cljs.core._invoke._;
  if (null != R) {
    return R.cljs$core$IFn$_invoke$arity$22 ? R.cljs$core$IFn$_invoke$arity$22(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z, y) : R.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z, y);
  }
  throw cljs.core.missing_protocol("IFn.-invoke", a);
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function(a) {
  if (null != a && null != a.cljs$core$ICloneable$_clone$arity$1) {
    return a.cljs$core$ICloneable$_clone$arity$1(a);
  }
  var b = cljs.core._clone[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._clone._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ICloneable.-clone", a);
};
cljs.core.ICounted = function() {
};
cljs.core._count = function(a) {
  if (null != a && null != a.cljs$core$ICounted$_count$arity$1) {
    return a.cljs$core$ICounted$_count$arity$1(a);
  }
  var b = cljs.core._count[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._count._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ICounted.-count", a);
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function(a) {
  if (null != a && null != a.cljs$core$IEmptyableCollection$_empty$arity$1) {
    return a.cljs$core$IEmptyableCollection$_empty$arity$1(a);
  }
  var b = cljs.core._empty[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._empty._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IEmptyableCollection.-empty", a);
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function(a, b) {
  if (null != a && null != a.cljs$core$ICollection$_conj$arity$2) {
    return a.cljs$core$ICollection$_conj$arity$2(a, b);
  }
  var c = cljs.core._conj[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._conj._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ICollection.-conj", a);
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$IIndexed$_nth$arity$2) {
    return a.cljs$core$IIndexed$_nth$arity$2(a, b);
  }
  var c = cljs.core._nth[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._nth._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IIndexed.-nth", a);
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.cljs$core$IIndexed$_nth$arity$3) {
    return a.cljs$core$IIndexed$_nth$arity$3(a, b, c);
  }
  var d = cljs.core._nth[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._nth._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IIndexed.-nth", a);
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function(a) {
  if (null != a && null != a.cljs$core$ISeq$_first$arity$1) {
    return a.cljs$core$ISeq$_first$arity$1(a);
  }
  var b = cljs.core._first[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._first._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ISeq.-first", a);
};
cljs.core._rest = function(a) {
  if (null != a && null != a.cljs$core$ISeq$_rest$arity$1) {
    return a.cljs$core$ISeq$_rest$arity$1(a);
  }
  var b = cljs.core._rest[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._rest._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ISeq.-rest", a);
};
cljs.core.INext = function() {
};
cljs.core._next = function(a) {
  if (null != a && null != a.cljs$core$INext$_next$arity$1) {
    return a.cljs$core$INext$_next$arity$1(a);
  }
  var b = cljs.core._next[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._next._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("INext.-next", a);
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$ILookup$_lookup$arity$2) {
    return a.cljs$core$ILookup$_lookup$arity$2(a, b);
  }
  var c = cljs.core._lookup[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._lookup._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ILookup.-lookup", a);
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.cljs$core$ILookup$_lookup$arity$3) {
    return a.cljs$core$ILookup$_lookup$arity$3(a, b, c);
  }
  var d = cljs.core._lookup[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._lookup._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ILookup.-lookup", a);
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function(a, b) {
  if (null != a && null != a.cljs$core$IAssociative$_contains_key_QMARK_$arity$2) {
    return a.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(a, b);
  }
  var c = cljs.core._contains_key_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._contains_key_QMARK_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IAssociative.-contains-key?", a);
};
cljs.core._assoc = function(a, b, c) {
  if (null != a && null != a.cljs$core$IAssociative$_assoc$arity$3) {
    return a.cljs$core$IAssociative$_assoc$arity$3(a, b, c);
  }
  var d = cljs.core._assoc[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._assoc._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IAssociative.-assoc", a);
};
cljs.core.IFind = function() {
};
cljs.core._find = function(a, b) {
  if (null != a && null != a.cljs$core$IFind$_find$arity$2) {
    return a.cljs$core$IFind$_find$arity$2(a, b);
  }
  var c = cljs.core._find[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._find._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IFind.-find", a);
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function(a, b) {
  if (null != a && null != a.cljs$core$IMap$_dissoc$arity$2) {
    return a.cljs$core$IMap$_dissoc$arity$2(a, b);
  }
  var c = cljs.core._dissoc[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._dissoc._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IMap.-dissoc", a);
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function(a) {
  if (null != a && null != a.cljs$core$IMapEntry$_key$arity$1) {
    return a.cljs$core$IMapEntry$_key$arity$1(a);
  }
  var b = cljs.core._key[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._key._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMapEntry.-key", a);
};
cljs.core._val = function(a) {
  if (null != a && null != a.cljs$core$IMapEntry$_val$arity$1) {
    return a.cljs$core$IMapEntry$_val$arity$1(a);
  }
  var b = cljs.core._val[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._val._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMapEntry.-val", a);
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function(a, b) {
  if (null != a && null != a.cljs$core$ISet$_disjoin$arity$2) {
    return a.cljs$core$ISet$_disjoin$arity$2(a, b);
  }
  var c = cljs.core._disjoin[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._disjoin._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ISet.-disjoin", a);
};
cljs.core.IStack = function() {
};
cljs.core._peek = function(a) {
  if (null != a && null != a.cljs$core$IStack$_peek$arity$1) {
    return a.cljs$core$IStack$_peek$arity$1(a);
  }
  var b = cljs.core._peek[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._peek._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IStack.-peek", a);
};
cljs.core._pop = function(a) {
  if (null != a && null != a.cljs$core$IStack$_pop$arity$1) {
    return a.cljs$core$IStack$_pop$arity$1(a);
  }
  var b = cljs.core._pop[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._pop._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IStack.-pop", a);
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function(a, b, c) {
  if (null != a && null != a.cljs$core$IVector$_assoc_n$arity$3) {
    return a.cljs$core$IVector$_assoc_n$arity$3(a, b, c);
  }
  var d = cljs.core._assoc_n[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._assoc_n._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IVector.-assoc-n", a);
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function(a) {
  if (null != a && null != a.cljs$core$IDeref$_deref$arity$1) {
    return a.cljs$core$IDeref$_deref$arity$1(a);
  }
  var b = cljs.core._deref[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._deref._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IDeref.-deref", a);
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function(a, b, c) {
  if (null != a && null != a.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3) {
    return a.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(a, b, c);
  }
  var d = cljs.core._deref_with_timeout[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._deref_with_timeout._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", a);
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function(a) {
  if (null != a && null != a.cljs$core$IMeta$_meta$arity$1) {
    return a.cljs$core$IMeta$_meta$arity$1(a);
  }
  var b = cljs.core._meta[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._meta._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMeta.-meta", a);
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function(a, b) {
  if (null != a && null != a.cljs$core$IWithMeta$_with_meta$arity$2) {
    return a.cljs$core$IWithMeta$_with_meta$arity$2(a, b);
  }
  var c = cljs.core._with_meta[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._with_meta._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IWithMeta.-with-meta", a);
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$IReduce$_reduce$arity$2) {
    return a.cljs$core$IReduce$_reduce$arity$2(a, b);
  }
  var c = cljs.core._reduce[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._reduce._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IReduce.-reduce", a);
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.cljs$core$IReduce$_reduce$arity$3) {
    return a.cljs$core$IReduce$_reduce$arity$3(a, b, c);
  }
  var d = cljs.core._reduce[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._reduce._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IReduce.-reduce", a);
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function(a, b, c) {
  if (null != a && null != a.cljs$core$IKVReduce$_kv_reduce$arity$3) {
    return a.cljs$core$IKVReduce$_kv_reduce$arity$3(a, b, c);
  }
  var d = cljs.core._kv_reduce[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._kv_reduce._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", a);
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function(a, b) {
  if (null != a && null != a.cljs$core$IEquiv$_equiv$arity$2) {
    return a.cljs$core$IEquiv$_equiv$arity$2(a, b);
  }
  var c = cljs.core._equiv[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._equiv._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IEquiv.-equiv", a);
};
cljs.core.IHash = function() {
};
cljs.core._hash = function(a) {
  if (null != a && null != a.cljs$core$IHash$_hash$arity$1) {
    return a.cljs$core$IHash$_hash$arity$1(a);
  }
  var b = cljs.core._hash[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._hash._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IHash.-hash", a);
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function(a) {
  if (null != a && null != a.cljs$core$ISeqable$_seq$arity$1) {
    return a.cljs$core$ISeqable$_seq$arity$1(a);
  }
  var b = cljs.core._seq[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._seq._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ISeqable.-seq", a);
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function(a) {
  if (null != a && null != a.cljs$core$IReversible$_rseq$arity$1) {
    return a.cljs$core$IReversible$_rseq$arity$1(a);
  }
  var b = cljs.core._rseq[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._rseq._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IReversible.-rseq", a);
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function(a, b) {
  if (null != a && null != a.cljs$core$ISorted$_sorted_seq$arity$2) {
    return a.cljs$core$ISorted$_sorted_seq$arity$2(a, b);
  }
  var c = cljs.core._sorted_seq[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._sorted_seq._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ISorted.-sorted-seq", a);
};
cljs.core._sorted_seq_from = function(a, b, c) {
  if (null != a && null != a.cljs$core$ISorted$_sorted_seq_from$arity$3) {
    return a.cljs$core$ISorted$_sorted_seq_from$arity$3(a, b, c);
  }
  var d = cljs.core._sorted_seq_from[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._sorted_seq_from._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", a);
};
cljs.core._entry_key = function(a, b) {
  if (null != a && null != a.cljs$core$ISorted$_entry_key$arity$2) {
    return a.cljs$core$ISorted$_entry_key$arity$2(a, b);
  }
  var c = cljs.core._entry_key[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._entry_key._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ISorted.-entry-key", a);
};
cljs.core._comparator = function(a) {
  if (null != a && null != a.cljs$core$ISorted$_comparator$arity$1) {
    return a.cljs$core$ISorted$_comparator$arity$1(a);
  }
  var b = cljs.core._comparator[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._comparator._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ISorted.-comparator", a);
};
cljs.core.IWriter = function() {
};
cljs.core._write = function(a, b) {
  if (null != a && null != a.cljs$core$IWriter$_write$arity$2) {
    return a.cljs$core$IWriter$_write$arity$2(a, b);
  }
  var c = cljs.core._write[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._write._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IWriter.-write", a);
};
cljs.core._flush = function(a) {
  if (null != a && null != a.cljs$core$IWriter$_flush$arity$1) {
    return a.cljs$core$IWriter$_flush$arity$1(a);
  }
  var b = cljs.core._flush[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._flush._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IWriter.-flush", a);
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function(a, b, c) {
  if (null != a && null != a.cljs$core$IPrintWithWriter$_pr_writer$arity$3) {
    return a.cljs$core$IPrintWithWriter$_pr_writer$arity$3(a, b, c);
  }
  var d = cljs.core._pr_writer[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._pr_writer._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", a);
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function(a) {
  if (null != a && null != a.cljs$core$IPending$_realized_QMARK_$arity$1) {
    return a.cljs$core$IPending$_realized_QMARK_$arity$1(a);
  }
  var b = cljs.core._realized_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._realized_QMARK_._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IPending.-realized?", a);
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function(a, b, c) {
  if (null != a && null != a.cljs$core$IWatchable$_notify_watches$arity$3) {
    return a.cljs$core$IWatchable$_notify_watches$arity$3(a, b, c);
  }
  var d = cljs.core._notify_watches[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._notify_watches._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IWatchable.-notify-watches", a);
};
cljs.core._add_watch = function(a, b, c) {
  if (null != a && null != a.cljs$core$IWatchable$_add_watch$arity$3) {
    return a.cljs$core$IWatchable$_add_watch$arity$3(a, b, c);
  }
  var d = cljs.core._add_watch[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._add_watch._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IWatchable.-add-watch", a);
};
cljs.core._remove_watch = function(a, b) {
  if (null != a && null != a.cljs$core$IWatchable$_remove_watch$arity$2) {
    return a.cljs$core$IWatchable$_remove_watch$arity$2(a, b);
  }
  var c = cljs.core._remove_watch[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._remove_watch._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IWatchable.-remove-watch", a);
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function(a) {
  if (null != a && null != a.cljs$core$IEditableCollection$_as_transient$arity$1) {
    return a.cljs$core$IEditableCollection$_as_transient$arity$1(a);
  }
  var b = cljs.core._as_transient[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._as_transient._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IEditableCollection.-as-transient", a);
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$ITransientCollection$_conj_BANG_$arity$2) {
    return a.cljs$core$ITransientCollection$_conj_BANG_$arity$2(a, b);
  }
  var c = cljs.core._conj_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._conj_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ITransientCollection.-conj!", a);
};
cljs.core._persistent_BANG_ = function(a) {
  if (null != a && null != a.cljs$core$ITransientCollection$_persistent_BANG_$arity$1) {
    return a.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(a);
  }
  var b = cljs.core._persistent_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._persistent_BANG_._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ITransientCollection.-persistent!", a);
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function(a, b, c) {
  if (null != a && null != a.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3) {
    return a.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(a, b, c);
  }
  var d = cljs.core._assoc_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._assoc_BANG_._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", a);
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$ITransientMap$_dissoc_BANG_$arity$2) {
    return a.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(a, b);
  }
  var c = cljs.core._dissoc_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._dissoc_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ITransientMap.-dissoc!", a);
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function(a, b, c) {
  if (null != a && null != a.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3) {
    return a.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(a, b, c);
  }
  var d = cljs.core._assoc_n_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._assoc_n_BANG_._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", a);
};
cljs.core._pop_BANG_ = function(a) {
  if (null != a && null != a.cljs$core$ITransientVector$_pop_BANG_$arity$1) {
    return a.cljs$core$ITransientVector$_pop_BANG_$arity$1(a);
  }
  var b = cljs.core._pop_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._pop_BANG_._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ITransientVector.-pop!", a);
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$ITransientSet$_disjoin_BANG_$arity$2) {
    return a.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(a, b);
  }
  var c = cljs.core._disjoin_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._disjoin_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ITransientSet.-disjoin!", a);
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function(a, b) {
  if (null != a && null != a.cljs$core$IComparable$_compare$arity$2) {
    return a.cljs$core$IComparable$_compare$arity$2(a, b);
  }
  var c = cljs.core._compare[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._compare._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IComparable.-compare", a);
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function(a) {
  if (null != a && null != a.cljs$core$IChunk$_drop_first$arity$1) {
    return a.cljs$core$IChunk$_drop_first$arity$1(a);
  }
  var b = cljs.core._drop_first[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._drop_first._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IChunk.-drop-first", a);
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function(a) {
  if (null != a && null != a.cljs$core$IChunkedSeq$_chunked_first$arity$1) {
    return a.cljs$core$IChunkedSeq$_chunked_first$arity$1(a);
  }
  var b = cljs.core._chunked_first[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._chunked_first._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", a);
};
cljs.core._chunked_rest = function(a) {
  if (null != a && null != a.cljs$core$IChunkedSeq$_chunked_rest$arity$1) {
    return a.cljs$core$IChunkedSeq$_chunked_rest$arity$1(a);
  }
  var b = cljs.core._chunked_rest[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._chunked_rest._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", a);
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function(a) {
  if (null != a && null != a.cljs$core$IChunkedNext$_chunked_next$arity$1) {
    return a.cljs$core$IChunkedNext$_chunked_next$arity$1(a);
  }
  var b = cljs.core._chunked_next[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._chunked_next._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", a);
};
cljs.core.INamed = function() {
};
cljs.core._name = function(a) {
  if (null != a && null != a.cljs$core$INamed$_name$arity$1) {
    return a.cljs$core$INamed$_name$arity$1(a);
  }
  var b = cljs.core._name[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._name._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("INamed.-name", a);
};
cljs.core._namespace = function(a) {
  if (null != a && null != a.cljs$core$INamed$_namespace$arity$1) {
    return a.cljs$core$INamed$_namespace$arity$1(a);
  }
  var b = cljs.core._namespace[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._namespace._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("INamed.-namespace", a);
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$IReset$_reset_BANG_$arity$2) {
    return a.cljs$core$IReset$_reset_BANG_$arity$2(a, b);
  }
  var c = cljs.core._reset_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._reset_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IReset.-reset!", a);
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$ISwap$_swap_BANG_$arity$2) {
    return a.cljs$core$ISwap$_swap_BANG_$arity$2(a, b);
  }
  var c = cljs.core._swap_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._swap_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ISwap.-swap!", a);
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && null != a.cljs$core$ISwap$_swap_BANG_$arity$3) {
    return a.cljs$core$ISwap$_swap_BANG_$arity$3(a, b, c);
  }
  var d = cljs.core._swap_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._swap_BANG_._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ISwap.-swap!", a);
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  if (null != a && null != a.cljs$core$ISwap$_swap_BANG_$arity$4) {
    return a.cljs$core$ISwap$_swap_BANG_$arity$4(a, b, c, d);
  }
  var e = cljs.core._swap_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != e) {
    return e.cljs$core$IFn$_invoke$arity$4 ? e.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : e.call(null, a, b, c, d);
  }
  e = cljs.core._swap_BANG_._;
  if (null != e) {
    return e.cljs$core$IFn$_invoke$arity$4 ? e.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : e.call(null, a, b, c, d);
  }
  throw cljs.core.missing_protocol("ISwap.-swap!", a);
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  if (null != a && null != a.cljs$core$ISwap$_swap_BANG_$arity$5) {
    return a.cljs$core$ISwap$_swap_BANG_$arity$5(a, b, c, d, e);
  }
  var f = cljs.core._swap_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != f) {
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
  }
  f = cljs.core._swap_BANG_._;
  if (null != f) {
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
  }
  throw cljs.core.missing_protocol("ISwap.-swap!", a);
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$IVolatile$_vreset_BANG_$arity$2) {
    return a.cljs$core$IVolatile$_vreset_BANG_$arity$2(a, b);
  }
  var c = cljs.core._vreset_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._vreset_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IVolatile.-vreset!", a);
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function(a) {
  if (null != a && null != a.cljs$core$IIterable$_iterator$arity$1) {
    return a.cljs$core$IIterable$_iterator$arity$1(a);
  }
  var b = cljs.core._iterator[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._iterator._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IIterable.-iterator", a);
};
cljs.core.StringBufferWriter = function(a) {
  this.sb = a;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(a, b) {
  return this.sb.append(b);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(a) {
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = !0;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function(a) {
  return new cljs.core.StringBufferWriter(a);
};
cljs.core.pr_str_STAR_ = function(a) {
  var b = new goog.string.StringBuffer, c = new cljs.core.StringBufferWriter(b);
  a.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, c, cljs.core.pr_opts());
  c.cljs$core$IWriter$_flush$arity$1(null);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(b);
};
cljs.core.int_rotate_left = function(a, b) {
  return a << b | a >>> -b;
};
"undefined" !== typeof Math.imul && 0 !== Math.imul(4294967295, 5) ? cljs.core.imul = function(a, b) {
  return Math.imul(a, b);
} : cljs.core.imul = function(a, b) {
  var c = a & 65535, d = b & 65535;
  return c * d + ((a >>> 16 & 65535) * d + c * (b >>> 16 & 65535) << 16 >>> 0) | 0;
};
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = -862048943;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function(a) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(a | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function(a, b) {
  return cljs.core.imul(cljs.core.int_rotate_left((a | 0) ^ (b | 0), 13), 5) + -430675100 | 0;
};
cljs.core.m3_fmix = function(a, b) {
  var c = (a | 0) ^ b;
  c = cljs.core.imul(c ^ c >>> 16, -2048144789);
  c = cljs.core.imul(c ^ c >>> 13, -1028477387);
  return c ^ c >>> 16;
};
cljs.core.m3_hash_int = function(a) {
  if (0 === a) {
    return a;
  }
  a = cljs.core.m3_mix_K1(a);
  a = cljs.core.m3_mix_H1(cljs.core.m3_seed, a);
  return cljs.core.m3_fmix(a, 4);
};
cljs.core.m3_hash_unencoded_chars = function(a) {
  a: {
    var b = 1;
    for (var c = cljs.core.m3_seed;;) {
      if (b < a.length) {
        var d = b + 2;
        c = cljs.core.m3_mix_H1(c, cljs.core.m3_mix_K1(a.charCodeAt(b - 1) | a.charCodeAt(b) << 16));
        b = d;
      } else {
        b = c;
        break a;
      }
    }
  }
  b = 1 === (a.length & 1) ? b ^ cljs.core.m3_mix_K1(a.charCodeAt(a.length - 1)) : b;
  return cljs.core.m3_fmix(b, cljs.core.imul(2, a.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function(a) {
  if (null != a) {
    var b = a.length;
    if (0 < b) {
      for (var c = 0, d = 0;;) {
        if (c < b) {
          var e = c + 1;
          d = cljs.core.imul(31, d) + a.charCodeAt(c);
          c = e;
        } else {
          return d;
        }
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function(a) {
  var b = cljs.core.hash_string_STAR_(a);
  goog.object.set(cljs.core.string_hash_cache, a, b);
  cljs.core.string_hash_cache_count += 1;
  return b;
};
cljs.core.hash_string = function(a) {
  255 < cljs.core.string_hash_cache_count && (cljs.core.string_hash_cache = {}, cljs.core.string_hash_cache_count = 0);
  if (null == a) {
    return 0;
  }
  var b = cljs.core.string_hash_cache[a];
  return "number" === typeof b ? b : cljs.core.add_to_string_hash_cache(a);
};
cljs.core.hash = function(a) {
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 4194304 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IHash$)) {
    return a.cljs$core$IHash$_hash$arity$1(null) ^ 0;
  }
  if ("number" === typeof a) {
    if (cljs.core.truth_(isFinite(a))) {
      return Math.floor(a) % 2147483647;
    }
    switch(a) {
      case Infinity:
        return 2146435072;
      case -Infinity:
        return -1048576;
      default:
        return 2146959360;
    }
  } else {
    return !0 === a ? 1231 : !1 === a ? 1237 : "string" === typeof a ? cljs.core.m3_hash_int(cljs.core.hash_string(a)) : a instanceof Date ? a.valueOf() ^ 0 : null == a ? 0 : cljs.core._hash(a) ^ 0;
  }
};
cljs.core.hash_combine = function(a, b) {
  return a ^ b + 2654435769 + (a << 6) + (a >> 2);
};
cljs.core.instance_QMARK_ = function(a, b) {
  return b instanceof a;
};
cljs.core.symbol_QMARK_ = function(a) {
  return a instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function(a) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(a.name), cljs.core.hash_string(a.ns));
};
cljs.core.compare_symbols = function(a, b) {
  if (a.str === b.str) {
    return 0;
  }
  if (cljs.core.truth_(function() {
    var c = cljs.core.not(a.ns);
    return c ? b.ns : c;
  }())) {
    return -1;
  }
  if (cljs.core.truth_(a.ns)) {
    if (cljs.core.not(b.ns)) {
      return 1;
    }
    var c = goog.array.defaultCompare(a.ns, b.ns);
    return 0 === c ? goog.array.defaultCompare(a.name, b.name) : c;
  }
  return goog.array.defaultCompare(a.name, b.name);
};
cljs.core.Symbol = function(a, b, c, d, e) {
  this.ns = a;
  this.name = b;
  this.str = c;
  this._hash = d;
  this._meta = e;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  return this.str;
};
cljs.core.Symbol.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.Symbol ? this.str === b.str : !1;
};
cljs.core.Symbol.prototype.call = function() {
  var a = null, b = function(a, b) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(b, this);
  }, c = function(a, b, c) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, this, c);
  };
  a = function(a, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, a, e);
      case 3:
        return c.call(this, a, e, f);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}();
cljs.core.Symbol.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, this);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, this, b);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Symbol(this.ns, this.name, this.str, this._hash, b);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this._hash;
  return null != a ? a : this._hash = a = cljs.core.hash_symbol(this);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(a) {
  return this.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(a) {
  return this.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write(b, this.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = !0;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function(a, b, c, d, e) {
  return new cljs.core.Symbol(a, b, c, d, e);
};
cljs.core.symbol = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if (a instanceof cljs.core.Symbol) {
    return a;
  }
  var b = a.indexOf("/");
  return 1 > b ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, a) : cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(a.substring(0, b), a.substring(b + 1, a.length));
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = null != a ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("") : b;
  return new cljs.core.Symbol(a, b, c, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(a, b, c) {
  this.val = a;
  this.sym = b;
  this._meta = c;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.toString = function() {
  return ["#'", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.sym)].join("");
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  return this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Var(this.val, this.sym, b);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.Var ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.sym, b.sym) : !1;
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_symbol(this.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.call = function() {
  var a = null, b = function(a) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
  }, c = function(a, b) {
    a = this;
    var c = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b);
  }, d = function(a, b, c) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
  }, e = function(a, b, c, d) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d);
  }, f = function(a, b, c, d, e) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.call(null, b, c, d, e);
  }, g = function(a, b, c, d, e, f) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : a.call(null, b, c, d, e, f);
  }, h = function(a, b, c, d, e, f, g) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$6 ? a.cljs$core$IFn$_invoke$arity$6(b, c, d, e, f, g) : a.call(null, b, c, d, e, f, g);
  }, k = function(a, b, c, d, e, f, g, h) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$7 ? a.cljs$core$IFn$_invoke$arity$7(b, c, d, e, f, g, h) : a.call(null, b, c, d, e, f, g, h);
  }, l = function(a, b, c, d, e, f, g, h, k) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$8 ? a.cljs$core$IFn$_invoke$arity$8(b, c, d, e, f, g, h, k) : a.call(null, b, c, d, e, f, g, h, k);
  }, m = function(a, b, c, d, e, f, g, h, k, m) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$9 ? a.cljs$core$IFn$_invoke$arity$9(b, c, d, e, f, g, h, k, m) : a.call(null, b, c, d, e, f, g, h, k, m);
  }, n = function(a, b, c, d, e, f, g, h, k, m, l) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$10 ? a.cljs$core$IFn$_invoke$arity$10(b, c, d, e, f, g, h, k, m, l) : a.call(null, b, c, d, e, f, g, h, k, m, l);
  }, p = function(a, b, c, d, e, f, g, h, k, m, l, n) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$11 ? a.cljs$core$IFn$_invoke$arity$11(b, c, d, e, f, g, h, k, m, l, n) : a.call(null, b, c, d, e, f, g, h, k, m, l, n);
  }, q = function(a, b, c, d, e, f, g, h, k, m, l, n, p) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$12 ? a.cljs$core$IFn$_invoke$arity$12(b, c, d, e, f, g, h, k, m, l, n, p) : a.call(null, b, c, d, e, f, g, h, k, m, l, n, p);
  }, r = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$13 ? a.cljs$core$IFn$_invoke$arity$13(b, c, d, e, f, g, h, k, m, l, n, p, q) : a.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q);
  }, t = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$14 ? a.cljs$core$IFn$_invoke$arity$14(b, c, d, e, f, g, h, k, m, l, n, p, q, r) : a.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r);
  }, v = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$15 ? a.cljs$core$IFn$_invoke$arity$15(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t) : a.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t);
  }, u = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$16 ? a.cljs$core$IFn$_invoke$arity$16(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u) : a.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u);
  }, w = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$17 ? a.cljs$core$IFn$_invoke$arity$17(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v) : a.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v);
  }, x = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$18 ? a.cljs$core$IFn$_invoke$arity$18(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w) : a.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w);
  }, z = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, y) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$19 ? a.cljs$core$IFn$_invoke$arity$19(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, y) : a.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, y);
  }, y = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, y, x) {
    a = this;
    a = a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null);
    return a.cljs$core$IFn$_invoke$arity$20 ? a.cljs$core$IFn$_invoke$arity$20(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, y, x) : a.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, y, x);
  }, R = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, y, x, z) {
    a = this;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a.val.cljs$core$IFn$_invoke$arity$0 ? a.val.cljs$core$IFn$_invoke$arity$0() : a.val.call(null), b, c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f, g, h, k, m, l, n, p, q, r, t, u, v, w, y, x, z], 0));
  };
  a = function(a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M, T, U, S, Y) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, C);
      case 3:
        return d.call(this, a, C, D);
      case 4:
        return e.call(this, a, C, D, E);
      case 5:
        return f.call(this, a, C, D, E, A);
      case 6:
        return g.call(this, a, C, D, E, A, B);
      case 7:
        return h.call(this, a, C, D, E, A, B, F);
      case 8:
        return k.call(this, a, C, D, E, A, B, F, H);
      case 9:
        return l.call(this, a, C, D, E, A, B, F, H, I);
      case 10:
        return m.call(this, a, C, D, E, A, B, F, H, I, J);
      case 11:
        return n.call(this, a, C, D, E, A, B, F, H, I, J, K);
      case 12:
        return p.call(this, a, C, D, E, A, B, F, H, I, J, K, G);
      case 13:
        return q.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N);
      case 14:
        return r.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P);
      case 15:
        return t.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q);
      case 16:
        return v.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L);
      case 17:
        return u.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O);
      case 18:
        return w.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M);
      case 19:
        return x.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M, T);
      case 20:
        return z.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M, T, U);
      case 21:
        return y.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M, T, U, S);
      case 22:
        return R.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M, T, U, S, Y);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  a.cljs$core$IFn$_invoke$arity$3 = d;
  a.cljs$core$IFn$_invoke$arity$4 = e;
  a.cljs$core$IFn$_invoke$arity$5 = f;
  a.cljs$core$IFn$_invoke$arity$6 = g;
  a.cljs$core$IFn$_invoke$arity$7 = h;
  a.cljs$core$IFn$_invoke$arity$8 = k;
  a.cljs$core$IFn$_invoke$arity$9 = l;
  a.cljs$core$IFn$_invoke$arity$10 = m;
  a.cljs$core$IFn$_invoke$arity$11 = n;
  a.cljs$core$IFn$_invoke$arity$12 = p;
  a.cljs$core$IFn$_invoke$arity$13 = q;
  a.cljs$core$IFn$_invoke$arity$14 = r;
  a.cljs$core$IFn$_invoke$arity$15 = t;
  a.cljs$core$IFn$_invoke$arity$16 = v;
  a.cljs$core$IFn$_invoke$arity$17 = u;
  a.cljs$core$IFn$_invoke$arity$18 = w;
  a.cljs$core$IFn$_invoke$arity$19 = x;
  a.cljs$core$IFn$_invoke$arity$20 = z;
  a.cljs$core$IFn$_invoke$arity$21 = y;
  a.cljs$core$IFn$_invoke$arity$22 = R;
  return a;
}();
cljs.core.Var.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var a = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return e.cljs$core$IFn$_invoke$arity$4 ? e.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : e.call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var g = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return g.cljs$core$IFn$_invoke$arity$6 ? g.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : g.call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var h = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return h.cljs$core$IFn$_invoke$arity$7 ? h.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : h.call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var k = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return k.cljs$core$IFn$_invoke$arity$8 ? k.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : k.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  var l = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return l.cljs$core$IFn$_invoke$arity$9 ? l.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : l.call(null, a, b, c, d, e, f, g, h, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, l) {
  var m = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return m.cljs$core$IFn$_invoke$arity$10 ? m.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : m.call(null, a, b, c, d, e, f, g, h, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, l, m) {
  var n = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return n.cljs$core$IFn$_invoke$arity$11 ? n.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : n.call(null, a, b, c, d, e, f, g, h, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
  var p = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return p.cljs$core$IFn$_invoke$arity$12 ? p.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : p.call(null, a, b, c, d, e, f, g, h, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  var q = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return q.cljs$core$IFn$_invoke$arity$13 ? q.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : q.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
  var r = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return r.cljs$core$IFn$_invoke$arity$14 ? r.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, q) : r.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) {
  var t = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return t.cljs$core$IFn$_invoke$arity$15 ? t.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) : t.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
  var v = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return v.cljs$core$IFn$_invoke$arity$16 ? v.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) : v.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v) {
  var u = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return u.cljs$core$IFn$_invoke$arity$17 ? u.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v) : u.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u) {
  var w = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return w.cljs$core$IFn$_invoke$arity$18 ? w.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u) : w.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w) {
  var x = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return x.cljs$core$IFn$_invoke$arity$19 ? x.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w) : x.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x) {
  var z = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return z.cljs$core$IFn$_invoke$arity$20 ? z.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x) : z.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z], 0));
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = !0;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Var");
};
cljs.core.__GT_Var = function(a, b, c) {
  return new cljs.core.Var(a, b, c);
};
cljs.core.var_QMARK_ = function(a) {
  return a instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition1$ & 131072 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IIterable$ ? !0 : a.cljs$lang$protocol_mask$partition1$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, a);
};
cljs.core.clone = function(a) {
  return cljs.core._clone(a);
};
cljs.core.cloneable_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition1$ & 8192 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ICloneable$ ? !0 : a.cljs$lang$protocol_mask$partition1$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, a);
};
cljs.core.seq = function(a) {
  if (null == a) {
    return null;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeqable$)) {
    return a.cljs$core$ISeqable$_seq$arity$1(null);
  }
  if (cljs.core.array_QMARK_(a) || "string" === typeof a) {
    return 0 === a.length ? null : new cljs.core.IndexedSeq(a, 0, null);
  }
  if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, a)) {
    return cljs.core._seq(a);
  }
  throw Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " is not ISeqable"].join(""));
};
cljs.core.first = function(a) {
  if (null == a) {
    return null;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$)) {
    return a.cljs$core$ISeq$_first$arity$1(null);
  }
  a = cljs.core.seq(a);
  return null == a ? null : cljs.core._first(a);
};
cljs.core.rest = function(a) {
  return null != a ? null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? a.cljs$core$ISeq$_rest$arity$1(null) : (a = cljs.core.seq(a)) ? cljs.core._rest(a) : cljs.core.List.EMPTY : cljs.core.List.EMPTY;
};
cljs.core.next = function(a) {
  return null == a ? null : null != a && (a.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$INext$) ? a.cljs$core$INext$_next$arity$1(null) : cljs.core.seq(cljs.core.rest(a));
};
cljs.core._EQ_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == a ? null == b : a === b || cljs.core._equiv(a, b);
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b)) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(b, cljs.core.first(c));
      }
    } else {
      return !1;
    }
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(a) {
  this.s = a;
};
cljs.core.ES6Iterator.prototype.next = function() {
  if (null != this.s) {
    var a = cljs.core.first(this.s);
    this.s = cljs.core.next(this.s);
    return {value:a, done:!1};
  }
  return {value:null, done:!0};
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = !0;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function(a) {
  return new cljs.core.ES6Iterator(a);
};
cljs.core.es6_iterator = function(a) {
  return new cljs.core.ES6Iterator(cljs.core.seq(a));
};
cljs.core.ES6IteratorSeq = function(a, b, c) {
  this.value = a;
  this.iter = b;
  this._rest = c;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  null == this._rest && (this._rest = cljs.core.es6_iterator_seq(this.iter));
  return this._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = !0;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function(a, b, c) {
  return new cljs.core.ES6IteratorSeq(a, b, c);
};
cljs.core.es6_iterator_seq = function(a) {
  var b = a.next();
  return cljs.core.truth_(b.done) ? cljs.core.List.EMPTY : new cljs.core.ES6IteratorSeq(b.value, a, null);
};
cljs.core.mix_collection_hash = function(a, b) {
  var c = cljs.core.m3_seed, d = cljs.core.m3_mix_K1(a);
  c = cljs.core.m3_mix_H1(c, d);
  return cljs.core.m3_fmix(c, b);
};
cljs.core.hash_ordered_coll = function(a) {
  var b = 0, c = 1;
  for (a = cljs.core.seq(a);;) {
    if (null != a) {
      b += 1, c = cljs.core.imul(31, c) + cljs.core.hash(cljs.core.first(a)) | 0, a = cljs.core.next(a);
    } else {
      return cljs.core.mix_collection_hash(c, b);
    }
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function(a) {
  var b = 0, c = 0;
  for (a = cljs.core.seq(a);;) {
    if (null != a) {
      b += 1, c = c + cljs.core.hash(cljs.core.first(a)) | 0, a = cljs.core.next(a);
    } else {
      return cljs.core.mix_collection_hash(c, b);
    }
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
goog.object.set(cljs.core.ICounted, "null", !0);
var G__15129_15132 = cljs.core._count, G__15130_15133 = "null", G__15131_15134 = function(a, b) {
  return function(a) {
    return 0;
  };
}(G__15129_15132, G__15130_15133);
goog.object.set(G__15129_15132, G__15130_15133, G__15131_15134);
Date.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof Date && this.valueOf() === b.valueOf();
};
Date.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (b instanceof Date) {
    return goog.array.defaultCompare(this.valueOf(), b.valueOf());
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.Inst = function() {
};
cljs.core.inst_ms_STAR_ = function(a) {
  if (null != a && null != a.cljs$core$Inst$inst_ms_STAR_$arity$1) {
    return a.cljs$core$Inst$inst_ms_STAR_$arity$1(a);
  }
  var b = cljs.core.inst_ms_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core.inst_ms_STAR_._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("Inst.inst-ms*", a);
};
Date.prototype.cljs$core$Inst$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 = function(a) {
  return this.getTime();
};
cljs.core.inst_ms = function(a) {
  return cljs.core.inst_ms_STAR_(a);
};
cljs.core.inst_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$Inst$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.Inst, a) : cljs.core.native_satisfies_QMARK_(cljs.core.Inst, a);
};
goog.object.set(cljs.core.IEquiv, "number", !0);
var G__15138_15141 = cljs.core._equiv, G__15139_15142 = "number", G__15140_15143 = function(a, b) {
  return function(a, b) {
    return a === b;
  };
}(G__15138_15141, G__15139_15142);
goog.object.set(G__15138_15141, G__15139_15142, G__15140_15143);
goog.object.set(cljs.core.Fn, "function", !0);
goog.object.set(cljs.core.IMeta, "function", !0);
var G__15144_15147 = cljs.core._meta, G__15145_15148 = "function", G__15146_15149 = function(a, b) {
  return function(a) {
    return null;
  };
}(G__15144_15147, G__15145_15148);
goog.object.set(G__15144_15147, G__15145_15148, G__15146_15149);
goog.object.set(cljs.core.IHash, "_", !0);
var G__15150_15153 = cljs.core._hash, G__15151_15154 = "_", G__15152_15155 = function(a, b) {
  return function(a) {
    return goog.getUid(a);
  };
}(G__15150_15153, G__15151_15154);
goog.object.set(G__15150_15153, G__15151_15154, G__15152_15155);
cljs.core.inc = function(a) {
  return a + 1;
};
cljs.core.Reduced = function(a) {
  this.val = a;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  return this.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = !0;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function(a) {
  return new cljs.core.Reduced(a);
};
cljs.core.reduced = function(a) {
  return new cljs.core.Reduced(a);
};
cljs.core.reduced_QMARK_ = function(a) {
  return a instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function(a) {
  return cljs.core.reduced_QMARK_(a) ? a : cljs.core.reduced(a);
};
cljs.core.unreduced = function(a) {
  return cljs.core.reduced_QMARK_(a) ? cljs.core.deref(a) : a;
};
cljs.core.deref = function(a) {
  return cljs.core._deref(a);
};
cljs.core.ci_reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core._count(a);
  if (0 === c) {
    return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
  }
  for (var d = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, 0), e = 1;;) {
    if (e < c) {
      var f = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, e);
      d = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, f) : b.call(null, d, f);
      if (cljs.core.reduced_QMARK_(d)) {
        return cljs.core.deref(d);
      }
      e += 1;
    } else {
      return d;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core._count(a), e = c;
  for (c = 0;;) {
    if (c < d) {
      var f = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, c);
      e = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(e, f) : b.call(null, e, f);
      if (cljs.core.reduced_QMARK_(e)) {
        return cljs.core.deref(e);
      }
      c += 1;
    } else {
      return e;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  for (var e = cljs.core._count(a);;) {
    if (d < e) {
      var f = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, d);
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, f) : b.call(null, c, f);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      d += 1;
    } else {
      return c;
    }
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = a.length;
  if (0 === a.length) {
    return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
  }
  for (var d = a[0], e = 1;;) {
    if (e < c) {
      var f = a[e];
      d = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, f) : b.call(null, d, f);
      if (cljs.core.reduced_QMARK_(d)) {
        return cljs.core.deref(d);
      }
      e += 1;
    } else {
      return d;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = a.length, e = c;
  for (c = 0;;) {
    if (c < d) {
      var f = a[c];
      e = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(e, f) : b.call(null, e, f);
      if (cljs.core.reduced_QMARK_(e)) {
        return cljs.core.deref(e);
      }
      c += 1;
    } else {
      return e;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  for (var e = a.length;;) {
    if (d < e) {
      var f = a[d];
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, f) : b.call(null, c, f);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      d += 1;
    } else {
      return c;
    }
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ICounted$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, a);
};
cljs.core.indexed_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IIndexed$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, a);
};
cljs.core._indexOf = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(a, b, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.count(a);
  if (c >= d) {
    return -1;
  }
  !(0 < c) && 0 > c && (c += d, c = 0 > c ? 0 : c);
  for (;;) {
    if (c < d) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, c), b)) {
        return c;
      }
      c += 1;
    } else {
      return -1;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.count(a));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.count(a);
  if (0 === d) {
    return -1;
  }
  0 < c ? (--d, c = d < c ? d : c) : c = 0 > c ? d + c : c;
  for (;;) {
    if (0 <= c) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, c), b)) {
        return c;
      }
      --c;
    } else {
      return -1;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(a, b) {
  this.arr = a;
  this.i = b;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  return this.i < this.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var a = this.arr[this.i];
  this.i += 1;
  return a;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = !0;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function(a, b) {
  return new cljs.core.IndexedSeqIterator(a, b);
};
cljs.core.IndexedSeq = function(a, b, c) {
  this.arr = a;
  this.i = b;
  this.meta = c;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.IndexedSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  var c = b + this.i;
  if (0 <= c && c < this.arr.length) {
    return this.arr[c];
  }
  throw Error("Index out of bounds");
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  a = b + this.i;
  return 0 <= a && a < this.arr.length ? this.arr[a] : c;
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.IndexedSeqIterator(this.arr, this.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.IndexedSeq(this.arr, this.i, this.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return this.i + 1 < this.arr.length ? new cljs.core.IndexedSeq(this.arr, this.i + 1, null) : null;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  a = this.arr.length - this.i;
  return 0 > a ? 0 : a;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  a = this.cljs$core$ICounted$_count$arity$1(null);
  return 0 < a ? new cljs.core.RSeq(this, a - 1, null) : null;
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(this.arr, b, this.arr[this.i], this.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(this.arr, b, c, this.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.arr[this.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return this.i + 1 < this.arr.length ? new cljs.core.IndexedSeq(this.arr, this.i + 1, null) : cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this.i < this.arr.length ? this : null;
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.IndexedSeq(this.arr, this.i, b);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = !0;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function(a, b, c) {
  return new cljs.core.IndexedSeq(a, b, c);
};
var G__15198_15201 = cljs.core.IndexedSeq.prototype, G__15199_15202 = cljs.core.ITER_SYMBOL, G__15200_15203 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__15198_15201, G__15199_15202);
goog.object.set(G__15198_15201, G__15199_15202, G__15200_15203);
cljs.core.prim_seq = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(a, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return b < a.length ? new cljs.core.IndexedSeq(a, b, null) : null;
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(a, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(a, b, c) {
  this.ci = a;
  this.i = b;
  this.meta = c;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.RSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.RSeq(this.ci, this.i, this.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return 0 < this.i ? new cljs.core.RSeq(this.ci, this.i - 1, null) : null;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.ci, this.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return 0 < this.i ? new cljs.core.RSeq(this.ci, this.i - 1, null) : cljs.core.List.EMPTY;
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.RSeq(this.ci, this.i, b);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = !0;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function(a, b, c) {
  return new cljs.core.RSeq(a, b, c);
};
var G__15212_15215 = cljs.core.RSeq.prototype, G__15213_15216 = cljs.core.ITER_SYMBOL, G__15214_15217 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__15212_15215, G__15213_15216);
goog.object.set(G__15212_15215, G__15213_15216, G__15214_15217);
cljs.core.second = function(a) {
  return cljs.core.first(cljs.core.next(a));
};
cljs.core.ffirst = function(a) {
  return cljs.core.first(cljs.core.first(a));
};
cljs.core.nfirst = function(a) {
  return cljs.core.next(cljs.core.first(a));
};
cljs.core.fnext = function(a) {
  return cljs.core.first(cljs.core.next(a));
};
cljs.core.nnext = function(a) {
  return cljs.core.next(cljs.core.next(a));
};
cljs.core.last = function(a) {
  for (;;) {
    var b = cljs.core.next(a);
    if (null != b) {
      a = b;
    } else {
      return cljs.core.first(a);
    }
  }
};
goog.object.set(cljs.core.IEquiv, "_", !0);
var G__15219_15222 = cljs.core._equiv, G__15220_15223 = "_", G__15221_15224 = function(a, b) {
  return function(a, b) {
    return a === b;
  };
}(G__15219_15222, G__15220_15223);
goog.object.set(G__15219_15222, G__15220_15223, G__15221_15224);
cljs.core.conj = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != a ? cljs.core._conj(a, b) : cljs.core._conj(cljs.core.List.EMPTY, b);
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (cljs.core.truth_(c)) {
      a = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, b), b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, b);
    }
  }
};
cljs.core.conj.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function(a) {
  return null == a ? null : cljs.core._empty(a);
};
cljs.core.accumulating_seq_count = function(a) {
  a = cljs.core.seq(a);
  for (var b = 0;;) {
    if (cljs.core.counted_QMARK_(a)) {
      return b + cljs.core._count(a);
    }
    a = cljs.core.next(a);
    b += 1;
  }
};
cljs.core.count = function(a) {
  return null != a ? null != a && (a.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ICounted$) ? a.cljs$core$ICounted$_count$arity$1(null) : cljs.core.array_QMARK_(a) ? a.length : "string" === typeof a ? a.length : null != a && (a.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeqable$) ? cljs.core.accumulating_seq_count(a) : cljs.core._count(a) : 0;
};
cljs.core.linear_traversal_nth = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  for (;;) {
    if (null == a) {
      throw Error("Index out of bounds");
    }
    if (0 === b) {
      if (cljs.core.seq(a)) {
        return cljs.core.first(a);
      }
      throw Error("Index out of bounds");
    }
    if (cljs.core.indexed_QMARK_(a)) {
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, b);
    }
    if (cljs.core.seq(a)) {
      var c = cljs.core.next(a), d = b - 1;
      a = c;
      b = d;
    } else {
      throw Error("Index out of bounds");
    }
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  for (;;) {
    if (null == a) {
      return c;
    }
    if (0 === b) {
      return cljs.core.seq(a) ? cljs.core.first(a) : c;
    }
    if (cljs.core.indexed_QMARK_(a)) {
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(a, b, c);
    }
    if (cljs.core.seq(a)) {
      a = cljs.core.next(a), --b;
    } else {
      return c;
    }
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if ("number" !== typeof b) {
    throw Error("Index argument to nth must be a number");
  }
  if (null == a) {
    return a;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IIndexed$)) {
    return a.cljs$core$IIndexed$_nth$arity$2(null, b);
  }
  if (cljs.core.array_QMARK_(a)) {
    if (0 <= b && b < a.length) {
      return a[b];
    }
    throw Error("Index out of bounds");
  }
  if ("string" === typeof a) {
    if (0 <= b && b < a.length) {
      return a.charAt(b);
    }
    throw Error("Index out of bounds");
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$)) {
    return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(a, b);
  }
  if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, a)) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, b);
  }
  throw Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(a)))].join(""));
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if ("number" !== typeof b) {
    throw Error("Index argument to nth must be a number.");
  }
  if (null == a) {
    return c;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IIndexed$)) {
    return a.cljs$core$IIndexed$_nth$arity$3(null, b, c);
  }
  if (cljs.core.array_QMARK_(a)) {
    return 0 <= b && b < a.length ? a[b] : c;
  }
  if ("string" === typeof a) {
    return 0 <= b && b < a.length ? a.charAt(b) : c;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$)) {
    return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(a, b, c);
  }
  if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, a)) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(a, b, c);
  }
  throw Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(a)))].join(""));
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function(a, b) {
  for (var c = b, d = a;;) {
    if (0 < c && cljs.core.seq(d)) {
      --c, d = cljs.core.rest(d);
    } else {
      return d;
    }
  }
};
cljs.core.get = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == a ? null : null != a && (a.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ILookup$) ? a.cljs$core$ILookup$_lookup$arity$2(null, b) : cljs.core.array_QMARK_(a) ? null != b && b < a.length ? a[b | 0] : null : "string" === typeof a ? null != b && b < a.length ? a.charAt(b | 0) : null : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, a) ? cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(a, b) : null;
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != a ? null != a && (a.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ILookup$) ? a.cljs$core$ILookup$_lookup$arity$3(null, b, c) : cljs.core.array_QMARK_(a) ? null != b && 0 <= b && b < a.length ? a[b | 0] : c : "string" === typeof a ? null != b && 0 <= b && b < a.length ? a.charAt(b | 0) : c : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, a) ? cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(a, b, c) : c : c;
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != a ? cljs.core._assoc(a, b, c) : cljs.core.PersistentArrayMap.createAsIfByAssoc([b, c]);
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  for (;;) {
    if (a = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, c), cljs.core.truth_(d)) {
      b = cljs.core.first(d), c = cljs.core.second(d), d = cljs.core.nnext(d);
    } else {
      return a;
    }
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == a ? null : cljs.core._dissoc(a, b);
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (null == a) {
      return null;
    }
    a = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(a, b);
    if (cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function(a) {
  var b = goog.isFunction(a);
  return b ? b : null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$Fn$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.Fn, a) : cljs.core.native_satisfies_QMARK_(cljs.core.Fn, a);
};
cljs.core.MetaFn = function(a, b) {
  this.afn = a;
  this.meta = b;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.MetaFn(this.afn, b);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MetaFn.prototype.call = function() {
  var a = null, b = function(a) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$0 ? a.afn.cljs$core$IFn$_invoke$arity$0() : a.afn.call(null);
  }, c = function(a, b) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$1 ? a.afn.cljs$core$IFn$_invoke$arity$1(b) : a.afn.call(null, b);
  }, d = function(a, b, c) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$2 ? a.afn.cljs$core$IFn$_invoke$arity$2(b, c) : a.afn.call(null, b, c);
  }, e = function(a, b, c, d) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$3 ? a.afn.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.afn.call(null, b, c, d);
  }, f = function(a, b, c, d, e) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$4 ? a.afn.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.afn.call(null, b, c, d, e);
  }, g = function(a, b, c, d, e, f) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$5 ? a.afn.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : a.afn.call(null, b, c, d, e, f);
  }, h = function(a, b, c, d, e, f, g) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$6 ? a.afn.cljs$core$IFn$_invoke$arity$6(b, c, d, e, f, g) : a.afn.call(null, b, c, d, e, f, g);
  }, k = function(a, b, c, d, e, f, g, h) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$7 ? a.afn.cljs$core$IFn$_invoke$arity$7(b, c, d, e, f, g, h) : a.afn.call(null, b, c, d, e, f, g, h);
  }, l = function(a, b, c, d, e, f, g, h, k) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$8 ? a.afn.cljs$core$IFn$_invoke$arity$8(b, c, d, e, f, g, h, k) : a.afn.call(null, b, c, d, e, f, g, h, k);
  }, m = function(a, b, c, d, e, f, g, h, k, m) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$9 ? a.afn.cljs$core$IFn$_invoke$arity$9(b, c, d, e, f, g, h, k, m) : a.afn.call(null, b, c, d, e, f, g, h, k, m);
  }, n = function(a, b, c, d, e, f, g, h, k, m, l) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$10 ? a.afn.cljs$core$IFn$_invoke$arity$10(b, c, d, e, f, g, h, k, m, l) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l);
  }, p = function(a, b, c, d, e, f, g, h, k, m, l, n) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$11 ? a.afn.cljs$core$IFn$_invoke$arity$11(b, c, d, e, f, g, h, k, m, l, n) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n);
  }, q = function(a, b, c, d, e, f, g, h, k, m, l, n, p) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$12 ? a.afn.cljs$core$IFn$_invoke$arity$12(b, c, d, e, f, g, h, k, m, l, n, p) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p);
  }, r = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$13 ? a.afn.cljs$core$IFn$_invoke$arity$13(b, c, d, e, f, g, h, k, m, l, n, p, q) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q);
  }, t = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$14 ? a.afn.cljs$core$IFn$_invoke$arity$14(b, c, d, e, f, g, h, k, m, l, n, p, q, r) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r);
  }, v = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$15 ? a.afn.cljs$core$IFn$_invoke$arity$15(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t);
  }, u = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$16 ? a.afn.cljs$core$IFn$_invoke$arity$16(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u);
  }, w = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$17 ? a.afn.cljs$core$IFn$_invoke$arity$17(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v);
  }, x = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$18 ? a.afn.cljs$core$IFn$_invoke$arity$18(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w);
  }, z = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, y) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$19 ? a.afn.cljs$core$IFn$_invoke$arity$19(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, y) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, y);
  }, y = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, y, x) {
    a = this;
    return a.afn.cljs$core$IFn$_invoke$arity$20 ? a.afn.cljs$core$IFn$_invoke$arity$20(b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, y, x) : a.afn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, y, x);
  }, R = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, t, u, v, w, y, x, z) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(this.afn, b, c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f, g, h, k, m, l, n, p, q, r, t, u, v, w, y, x, z], 0));
  };
  a = function(a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M, T, U, S, Y) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, C);
      case 3:
        return d.call(this, a, C, D);
      case 4:
        return e.call(this, a, C, D, E);
      case 5:
        return f.call(this, a, C, D, E, A);
      case 6:
        return g.call(this, a, C, D, E, A, B);
      case 7:
        return h.call(this, a, C, D, E, A, B, F);
      case 8:
        return k.call(this, a, C, D, E, A, B, F, H);
      case 9:
        return l.call(this, a, C, D, E, A, B, F, H, I);
      case 10:
        return m.call(this, a, C, D, E, A, B, F, H, I, J);
      case 11:
        return n.call(this, a, C, D, E, A, B, F, H, I, J, K);
      case 12:
        return p.call(this, a, C, D, E, A, B, F, H, I, J, K, G);
      case 13:
        return q.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N);
      case 14:
        return r.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P);
      case 15:
        return t.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q);
      case 16:
        return v.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L);
      case 17:
        return u.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O);
      case 18:
        return w.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M);
      case 19:
        return x.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M, T);
      case 20:
        return z.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M, T, U);
      case 21:
        return y.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M, T, U, S);
      case 22:
        return R.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M, T, U, S, Y);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  a.cljs$core$IFn$_invoke$arity$3 = d;
  a.cljs$core$IFn$_invoke$arity$4 = e;
  a.cljs$core$IFn$_invoke$arity$5 = f;
  a.cljs$core$IFn$_invoke$arity$6 = g;
  a.cljs$core$IFn$_invoke$arity$7 = h;
  a.cljs$core$IFn$_invoke$arity$8 = k;
  a.cljs$core$IFn$_invoke$arity$9 = l;
  a.cljs$core$IFn$_invoke$arity$10 = m;
  a.cljs$core$IFn$_invoke$arity$11 = n;
  a.cljs$core$IFn$_invoke$arity$12 = p;
  a.cljs$core$IFn$_invoke$arity$13 = q;
  a.cljs$core$IFn$_invoke$arity$14 = r;
  a.cljs$core$IFn$_invoke$arity$15 = t;
  a.cljs$core$IFn$_invoke$arity$16 = v;
  a.cljs$core$IFn$_invoke$arity$17 = u;
  a.cljs$core$IFn$_invoke$arity$18 = w;
  a.cljs$core$IFn$_invoke$arity$19 = x;
  a.cljs$core$IFn$_invoke$arity$20 = z;
  a.cljs$core$IFn$_invoke$arity$21 = y;
  a.cljs$core$IFn$_invoke$arity$22 = R;
  return a;
}();
cljs.core.MetaFn.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  return this.afn.cljs$core$IFn$_invoke$arity$0 ? this.afn.cljs$core$IFn$_invoke$arity$0() : this.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.afn.cljs$core$IFn$_invoke$arity$1 ? this.afn.cljs$core$IFn$_invoke$arity$1(a) : this.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.afn.cljs$core$IFn$_invoke$arity$2 ? this.afn.cljs$core$IFn$_invoke$arity$2(a, b) : this.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return this.afn.cljs$core$IFn$_invoke$arity$3 ? this.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : this.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return this.afn.cljs$core$IFn$_invoke$arity$4 ? this.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : this.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return this.afn.cljs$core$IFn$_invoke$arity$5 ? this.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : this.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  return this.afn.cljs$core$IFn$_invoke$arity$6 ? this.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : this.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  return this.afn.cljs$core$IFn$_invoke$arity$7 ? this.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : this.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  return this.afn.cljs$core$IFn$_invoke$arity$8 ? this.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : this.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  return this.afn.cljs$core$IFn$_invoke$arity$9 ? this.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : this.afn.call(null, a, b, c, d, e, f, g, h, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, l) {
  return this.afn.cljs$core$IFn$_invoke$arity$10 ? this.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, l, m) {
  return this.afn.cljs$core$IFn$_invoke$arity$11 ? this.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
  return this.afn.cljs$core$IFn$_invoke$arity$12 ? this.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  return this.afn.cljs$core$IFn$_invoke$arity$13 ? this.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
  return this.afn.cljs$core$IFn$_invoke$arity$14 ? this.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, q) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) {
  return this.afn.cljs$core$IFn$_invoke$arity$15 ? this.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
  return this.afn.cljs$core$IFn$_invoke$arity$16 ? this.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v) {
  return this.afn.cljs$core$IFn$_invoke$arity$17 ? this.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u) {
  return this.afn.cljs$core$IFn$_invoke$arity$18 ? this.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w) {
  return this.afn.cljs$core$IFn$_invoke$arity$19 ? this.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x) {
  return this.afn.cljs$core$IFn$_invoke$arity$20 ? this.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(this.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z], 0));
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = !0;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function(a, b) {
  return new cljs.core.MetaFn(a, b);
};
cljs.core.with_meta = function(a, b) {
  return goog.isFunction(a) ? new cljs.core.MetaFn(a, b) : null == a ? null : cljs.core._with_meta(a, b);
};
cljs.core.meta = function(a) {
  var b = null != a;
  return (b ? null != a ? a.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IMeta$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, a) : b) ? cljs.core._meta(a) : null;
};
cljs.core.peek = function(a) {
  return null == a ? null : cljs.core._peek(a);
};
cljs.core.pop = function(a) {
  return null == a ? null : cljs.core._pop(a);
};
cljs.core.disj = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == a ? null : cljs.core._disjoin(a, b);
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (null == a) {
      return null;
    }
    a = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(a, b);
    if (cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.disj.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function(a) {
  return null == a || cljs.core.not(cljs.core.seq(a));
};
cljs.core.coll_QMARK_ = function(a) {
  return null == a ? !1 : null != a ? a.cljs$lang$protocol_mask$partition0$ & 8 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ICollection$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, a);
};
cljs.core.set_QMARK_ = function(a) {
  return null == a ? !1 : null != a ? a.cljs$lang$protocol_mask$partition0$ & 4096 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISet$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISet, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISet, a);
};
cljs.core.associative_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IAssociative$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, a);
};
cljs.core.ifind_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IFind$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IFind, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IFind, a);
};
cljs.core.sequential_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISequential$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, a);
};
cljs.core.sorted_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 268435456 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISorted$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, a);
};
cljs.core.reduceable_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IReduce$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, a);
};
cljs.core.map_QMARK_ = function(a) {
  return null == a ? !1 : null != a ? a.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IMap$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IMap, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IMap, a);
};
cljs.core.record_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IRecord$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, a);
};
cljs.core.vector_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 16384 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IVector$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IVector, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IVector, a);
};
cljs.core.chunked_seq_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition1$ & 512 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IChunkedSeq$ ? !0 : !1 : !1;
};
cljs.core.js_obj = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(b);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, a);
};
cljs.core.js_obj.cljs$lang$applyTo = function(a) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function(a) {
  return goog.object.getKeys(a);
};
cljs.core.js_delete = function(a, b) {
  return delete a[b];
};
cljs.core.array_copy = function(a, b, c, d, e) {
  for (;;) {
    if (0 === e) {
      return c;
    }
    c[d] = a[b];
    d += 1;
    --e;
    b += 1;
  }
};
cljs.core.array_copy_downward = function(a, b, c, d, e) {
  b += e - 1;
  for (d += e - 1;;) {
    if (0 === e) {
      return c;
    }
    c[d] = a[b];
    --d;
    --e;
    --b;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function(a) {
  return !1 === a;
};
cljs.core.true_QMARK_ = function(a) {
  return !0 === a;
};
cljs.core.boolean_QMARK_ = function(a) {
  return !0 === a || !1 === a;
};
cljs.core.undefined_QMARK_ = function(a) {
  return void 0 === a;
};
cljs.core.seq_QMARK_ = function(a) {
  return null == a ? !1 : null != a ? a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, a);
};
cljs.core.seqable_QMARK_ = function(a) {
  var b = null != a ? a.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeqable$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, a);
  return b ? b : cljs.core.array_QMARK_(a) || "string" === typeof a;
};
cljs.core.boolean$ = function(a) {
  return null == a ? !1 : !1 === a ? !1 : !0;
};
cljs.core.ifn_QMARK_ = function(a) {
  var b = cljs.core.fn_QMARK_(a);
  return b ? b : null != a ? a.cljs$lang$protocol_mask$partition0$ & 1 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IFn$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IFn, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IFn, a);
};
cljs.core.integer_QMARK_ = function(a) {
  return "number" === typeof a && !isNaN(a) && Infinity !== a && parseFloat(a) === parseInt(a, 10);
};
cljs.core.int_QMARK_ = function(a) {
  return cljs.core.integer_QMARK_(a) || a instanceof goog.math.Integer || a instanceof goog.math.Long;
};
cljs.core.pos_int_QMARK_ = function(a) {
  return cljs.core.integer_QMARK_(a) ? 0 < a : a instanceof goog.math.Integer ? cljs.core.not(a.isNegative()) && cljs.core.not(a.isZero()) : a instanceof goog.math.Long ? cljs.core.not(a.isNegative()) && cljs.core.not(a.isZero()) : !1;
};
cljs.core.neg_int_QMARK_ = function(a) {
  return cljs.core.integer_QMARK_(a) ? 0 > a : a instanceof goog.math.Integer ? a.isNegative() : a instanceof goog.math.Long ? a.isNegative() : !1;
};
cljs.core.nat_int_QMARK_ = function(a) {
  if (cljs.core.integer_QMARK_(a)) {
    return !(0 > a) || 0 === a;
  }
  if (a instanceof goog.math.Integer) {
    var b = cljs.core.not(a.isNegative());
    return b ? b : a.isZero();
  }
  return a instanceof goog.math.Long ? (b = cljs.core.not(a.isNegative())) ? b : a.isZero() : !1;
};
cljs.core.float_QMARK_ = function(a) {
  return "number" === typeof a;
};
cljs.core.double_QMARK_ = function(a) {
  return "number" === typeof a;
};
cljs.core.infinite_QMARK_ = function(a) {
  return a === Number.POSITIVE_INFINITY || a === Number.NEGATIVE_INFINITY;
};
cljs.core.contains_QMARK_ = function(a, b) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? !1 : !0;
};
cljs.core.find = function(a, b) {
  return cljs.core.ifind_QMARK_(a) ? cljs.core._find(a, b) : null != a && cljs.core.associative_QMARK_(a) && cljs.core.contains_QMARK_(a, b) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b)], null) : null;
};
cljs.core.distinct_QMARK_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b)) {
    return !1;
  }
  a = cljs.core.PersistentHashSet.createAsIfByAssoc([a, b]);
  for (b = c;;) {
    var d = cljs.core.first(b);
    c = cljs.core.next(b);
    if (cljs.core.truth_(b)) {
      if (cljs.core.contains_QMARK_(a, d)) {
        return !1;
      }
      a = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d);
      b = c;
    } else {
      return !0;
    }
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function(a, b) {
  if (a === b) {
    return 0;
  }
  if (null == a) {
    return -1;
  }
  if (null == b) {
    return 1;
  }
  if ("number" === typeof a) {
    if ("number" === typeof b) {
      return goog.array.defaultCompare(a, b);
    }
    throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
  }
  if (null != a ? a.cljs$lang$protocol_mask$partition1$ & 2048 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IComparable$ || (a.cljs$lang$protocol_mask$partition1$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, a)) {
    return cljs.core._compare(a, b);
  }
  if ("string" !== typeof a && !cljs.core.array_QMARK_(a) && !0 !== a && !1 !== a || cljs.core.type(a) !== cljs.core.type(b)) {
    throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
  }
  return goog.array.defaultCompare(a, b);
};
cljs.core.compare_indexed = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.count(a), d = cljs.core.count(b);
  return c < d ? -1 : c > d ? 1 : 0 === c ? 0 : cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(a, b, c, 0);
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  for (;;) {
    var e = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, d), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(b, d));
    if (0 === e && d + 1 < c) {
      d += 1;
    } else {
      return e;
    }
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function(a) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, cljs.core.compare) ? cljs.core.compare : function(b, c) {
    var d = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    return "number" === typeof d ? d : cljs.core.truth_(d) ? -1 : cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, b) : a.call(null, c, b)) ? 1 : 0;
  };
};
cljs.core.sort = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, a);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (cljs.core.seq(b)) {
    var c = cljs.core.to_array(b), d = cljs.core.fn__GT_comparator(a);
    goog.array.stableSort(c, d);
    return cljs.core.seq(c);
  }
  return cljs.core.List.EMPTY;
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(a, cljs.core.compare, b);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(c, e) {
    var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c), g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e), h = cljs.core.fn__GT_comparator(b);
    return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(d, g) : h.call(null, d, g);
  }, c);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.seq(b);
  return c ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(a, cljs.core.first(c), cljs.core.next(c)) : a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  for (c = cljs.core.seq(c);;) {
    if (c) {
      var d = cljs.core.first(c);
      b = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, d) : a.call(null, b, d);
      if (cljs.core.reduced_QMARK_(b)) {
        return cljs.core.deref(b);
      }
      c = cljs.core.next(c);
    } else {
      return b;
    }
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function(a) {
  a = cljs.core.to_array(a);
  goog.array.shuffle(a);
  return cljs.core.vec(a);
};
cljs.core.iter_reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core._iterator(a);
  if (cljs.core.truth_(c.hasNext())) {
    for (var d = c.next();;) {
      if (c.hasNext()) {
        var e = c.next();
        d = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e);
        if (cljs.core.reduced_QMARK_(d)) {
          return cljs.core.deref(d);
        }
      } else {
        return d;
      }
    }
  } else {
    return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  for (a = cljs.core._iterator(a);;) {
    if (a.hasNext()) {
      var d = a.next();
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
    } else {
      return c;
    }
  }
};
cljs.core.iter_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != b && (b.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$IReduce$) ? b.cljs$core$IReduce$_reduce$arity$2(null, a) : cljs.core.array_QMARK_(b) ? cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(b, a) : "string" === typeof b ? cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(b, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, b) ? cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(b, a) : cljs.core.iterable_QMARK_(b) ? cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(b, 
  a) : cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != c && (c.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$IReduce$) ? c.cljs$core$IReduce$_reduce$arity$3(null, a, b) : cljs.core.array_QMARK_(c) ? cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(c, a, b) : "string" === typeof c ? cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(c, a, b) : cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, c) ? cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(c, a, b) : cljs.core.iterable_QMARK_(c) ? 
  cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(c, a, b) : cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(a, b, c);
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function(a, b, c) {
  return null != c ? cljs.core._kv_reduce(c, a, b) : b;
};
cljs.core.identity = function(a) {
  return a;
};
cljs.core.completing = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(a, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function() {
      return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
    }, e = function(a) {
      return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
    }, f = function(b, c) {
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    };
    c = function(a, b) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    return c;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(a, b, b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null), c);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  a = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
  c = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(a, c, d);
  return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a + b;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, a + b, c);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return -a;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a - b;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, a - b, c);
};
cljs.core._.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a * b;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, a * b, c);
};
cljs.core._STAR_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return 1 / a;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a / b;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, a / b, c);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a < b;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a < b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b < cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a <= b;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a <= b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b <= cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a > b;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a > b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b > cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a >= b;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a >= b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b >= cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function(a) {
  return a - 1;
};
cljs.core.max = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a > b ? a : b;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, a > b ? a : b, c);
};
cljs.core.max.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a < b ? a : b;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, a < b ? a : b, c);
};
cljs.core.min.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function(a) {
  return a;
};
cljs.core.char$ = function(a) {
  if ("number" === typeof a) {
    return String.fromCharCode(a);
  }
  if ("string" === typeof a && 1 === a.length) {
    return a;
  }
  throw Error("Argument to char must be a character or number");
};
cljs.core.short$ = function(a) {
  return a;
};
cljs.core.float$ = function(a) {
  return a;
};
cljs.core.double$ = function(a) {
  return a;
};
cljs.core.unchecked_byte = function(a) {
  return a;
};
cljs.core.unchecked_char = function(a) {
  return a;
};
cljs.core.unchecked_short = function(a) {
  return a;
};
cljs.core.unchecked_float = function(a) {
  return a;
};
cljs.core.unchecked_double = function(a) {
  return a;
};
cljs.core.unchecked_add = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a + b;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, a + b, c);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a + b;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, a + b, c);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function(a) {
  return a - 1;
};
cljs.core.unchecked_dec_int = function(a) {
  return a - 1;
};
cljs.core.unchecked_divide_int = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return 1 / a;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a / b;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, a / b, c);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function(a) {
  return a + 1;
};
cljs.core.unchecked_inc_int = function(a) {
  return a + 1;
};
cljs.core.unchecked_multiply = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a * b;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, a * b, c);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a * b;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, a * b, c);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function(a) {
  return -a;
};
cljs.core.unchecked_negate_int = function(a) {
  return -a;
};
cljs.core.unchecked_remainder_int = function(a, b) {
  return cljs.core.mod(a, b);
};
cljs.core.unchecked_subtract = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return -a;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a - b;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, a - b, c);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return -a;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a - b;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, a - b, c);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function(a) {
  return 0 <= a ? Math.floor(a) : Math.ceil(a);
};
cljs.core.int$ = function(a) {
  return a | 0;
};
cljs.core.unchecked_int = function(a) {
  return cljs.core.fix(a);
};
cljs.core.long$ = function(a) {
  return cljs.core.fix(a);
};
cljs.core.unchecked_long = function(a) {
  return cljs.core.fix(a);
};
cljs.core.booleans = function(a) {
  return a;
};
cljs.core.bytes = function(a) {
  return a;
};
cljs.core.chars = function(a) {
  return a;
};
cljs.core.shorts = function(a) {
  return a;
};
cljs.core.ints = function(a) {
  return a;
};
cljs.core.floats = function(a) {
  return a;
};
cljs.core.doubles = function(a) {
  return a;
};
cljs.core.longs = function(a) {
  return a;
};
cljs.core.js_mod = function(a, b) {
  return a % b;
};
cljs.core.mod = function(a, b) {
  return (a % b + b) % b;
};
cljs.core.quot = function(a, b) {
  return cljs.core.fix((a - a % b) / b);
};
cljs.core.rem = function(a, b) {
  var c = cljs.core.quot(a, b);
  return a - b * c;
};
cljs.core.bit_xor = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a ^ b;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, a ^ b, c);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a & b;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, a & b, c);
};
cljs.core.bit_and.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a | b;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, a | b, c);
};
cljs.core.bit_or.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a & ~b;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, a & ~b, c);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function(a, b) {
  return a & ~(1 << b);
};
cljs.core.bit_flip = function(a, b) {
  return a ^ 1 << b;
};
cljs.core.bit_not = function(a) {
  return ~a;
};
cljs.core.bit_set = function(a, b) {
  return a | 1 << b;
};
cljs.core.bit_test = function(a, b) {
  return 0 != (a & 1 << b);
};
cljs.core.bit_shift_left = function(a, b) {
  return a << b;
};
cljs.core.bit_shift_right = function(a, b) {
  return a >> b;
};
cljs.core.bit_shift_right_zero_fill = function(a, b) {
  return a >>> b;
};
cljs.core.unsigned_bit_shift_right = function(a, b) {
  return a >>> b;
};
cljs.core.bit_count = function(a) {
  a -= a >> 1 & 1431655765;
  a = (a & 858993459) + (a >> 2 & 858993459);
  return 16843009 * (a + (a >> 4) & 252645135) >> 24;
};
cljs.core._EQ__EQ_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._equiv(a, b);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a === b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b === cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function(a) {
  return 0 < a;
};
cljs.core.zero_QMARK_ = function(a) {
  return 0 === a;
};
cljs.core.neg_QMARK_ = function(a) {
  return 0 > a;
};
cljs.core.nthnext = function(a, b) {
  for (var c = b, d = cljs.core.seq(a);;) {
    if (d && 0 < c) {
      --c, d = cljs.core.next(d);
    } else {
      return d;
    }
  }
};
cljs.core.str = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return null == a ? "" : "" + a;
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  for (var c = new goog.string.StringBuffer("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)), d = b;;) {
    if (cljs.core.truth_(d)) {
      c = c.append("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(d))), d = cljs.core.next(d);
    } else {
      return c.toString();
    }
  }
};
cljs.core.str.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.substring(b);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.substring(b, c);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function(a, b) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(b) ? cljs.core.counted_QMARK_(a) && cljs.core.counted_QMARK_(b) && cljs.core.count(a) !== cljs.core.count(b) ? !1 : function() {
    for (var c = cljs.core.seq(a), d = cljs.core.seq(b);;) {
      if (null == c) {
        return null == d;
      }
      if (null != d && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(c), cljs.core.first(d))) {
        c = cljs.core.next(c), d = cljs.core.next(d);
      } else {
        return !1;
      }
    }
  }() : null);
};
cljs.core.hash_coll = function(a) {
  if (cljs.core.seq(a)) {
    var b = cljs.core.hash(cljs.core.first(a));
    for (a = cljs.core.next(a);;) {
      if (null == a) {
        return b;
      }
      b = cljs.core.hash_combine(b, cljs.core.hash(cljs.core.first(a)));
      a = cljs.core.next(a);
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function(a) {
  var b = 0;
  for (a = cljs.core.seq(a);;) {
    if (a) {
      var c = cljs.core.first(a);
      b = (b + (cljs.core.hash(cljs.core.key(c)) ^ cljs.core.hash(cljs.core.val(c)))) % 4503599627370496;
      a = cljs.core.next(a);
    } else {
      return b;
    }
  }
};
cljs.core.hash_iset = function(a) {
  var b = 0;
  for (a = cljs.core.seq(a);;) {
    if (a) {
      var c = cljs.core.first(a);
      b = (b + cljs.core.hash(c)) % 4503599627370496;
      a = cljs.core.next(a);
    } else {
      return b;
    }
  }
};
cljs.core.extend_object_BANG_ = function(a, b) {
  for (var c = cljs.core.seq(b), d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = d.cljs$core$IIndexed$_nth$arity$2(null, f), h = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(g, 0, null);
      g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(g, 1, null);
      h = cljs.core.name(h);
      goog.object.set(a, h, g);
      f += 1;
    } else {
      if (c = cljs.core.seq(c)) {
        cljs.core.chunked_seq_QMARK_(c) ? (e = cljs.core.chunk_first(c), c = cljs.core.chunk_rest(c), d = e, e = cljs.core.count(e)) : (e = cljs.core.first(c), d = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 0, null), e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 1, null), d = cljs.core.name(d), goog.object.set(a, d, e), c = cljs.core.next(c), d = null, e = 0), f = 0;
      } else {
        break;
      }
    }
  }
  return a;
};
cljs.core.List = function(a, b, c, d, e) {
  this.meta = a;
  this.first = b;
  this.rest = c;
  this.count = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.List.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.List.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, this.count);
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.List(this.meta, this.first, this.rest, this.count, this.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return 1 === this.count ? null : this.rest;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return this.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return this.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return 1 === this.count ? cljs.core.List.EMPTY : this.rest;
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.List(b, this.first, this.rest, this.count, this.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.List(this.meta, b, this, this.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.List.cljs$lang$type = !0;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/List");
};
cljs.core.__GT_List = function(a, b, c, d, e) {
  return new cljs.core.List(a, b, c, d, e);
};
cljs.core.list_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 33554432 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IList$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IList, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IList, a);
};
var G__15676_15679 = cljs.core.List.prototype, G__15677_15680 = cljs.core.ITER_SYMBOL, G__15678_15681 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__15676_15679, G__15677_15680);
goog.object.set(G__15676_15679, G__15677_15680, G__15678_15681);
cljs.core.EmptyList = function(a) {
  this.meta = a;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.EmptyList.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.EmptyList(this.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  throw Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.list_QMARK_(b) || cljs.core.sequential_QMARK_(b) ? null == cljs.core.seq(b) : !1;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return this;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.EmptyList(b);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.List(this.meta, b, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = !0;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function(a) {
  return new cljs.core.EmptyList(a);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
var G__15684_15687 = cljs.core.EmptyList.prototype, G__15685_15688 = cljs.core.ITER_SYMBOL, G__15686_15689 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__15684_15687, G__15685_15688);
goog.object.set(G__15684_15687, G__15685_15688, G__15686_15689);
cljs.core.reversible_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 134217728 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IReversible$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, a);
};
cljs.core.rseq = function(a) {
  return cljs.core._rseq(a);
};
cljs.core.reverse = function(a) {
  return cljs.core.reversible_QMARK_(a) ? cljs.core.rseq(a) : cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, a);
};
cljs.core.list = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  if (a instanceof cljs.core.IndexedSeq && 0 === a.i) {
    var b = a.arr;
  } else {
    a: {
      for (b = [];;) {
        if (null != a) {
          b.push(a.cljs$core$ISeq$_first$arity$1(null)), a = a.cljs$core$INext$_next$arity$1(null);
        } else {
          break a;
        }
      }
    }
  }
  a = b.length;
  for (var c = cljs.core.List.EMPTY;;) {
    if (0 < a) {
      var d = a - 1;
      c = c.cljs$core$ICollection$_conj$arity$2(null, b[a - 1]);
      a = d;
    } else {
      return c;
    }
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(a) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.Cons = function(a, b, c, d) {
  this.meta = a;
  this.first = b;
  this.rest = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Cons.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Cons.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.Cons(this.meta, this.first, this.rest, this.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return null == this.rest ? null : cljs.core.seq(this.rest);
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return null == this.rest ? cljs.core.List.EMPTY : this.rest;
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Cons(b, this.first, this.rest, this.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.Cons(null, b, this, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Cons.cljs$lang$type = !0;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function(a, b, c, d) {
  return new cljs.core.Cons(a, b, c, d);
};
var G__15700_15703 = cljs.core.Cons.prototype, G__15701_15704 = cljs.core.ITER_SYMBOL, G__15702_15705 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__15700_15703, G__15701_15704);
goog.object.set(G__15700_15703, G__15701_15704, G__15702_15705);
cljs.core.cons = function(a, b) {
  return null == b || null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? new cljs.core.Cons(null, a, b, null) : new cljs.core.Cons(null, a, cljs.core.seq(b), null);
};
cljs.core.hash_keyword = function(a) {
  return cljs.core.hash_symbol(a) + 2654435769 | 0;
};
cljs.core.compare_keywords = function(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  }
  if (cljs.core.truth_(function() {
    var c = cljs.core.not(a.ns);
    return c ? b.ns : c;
  }())) {
    return -1;
  }
  if (cljs.core.truth_(a.ns)) {
    if (cljs.core.not(b.ns)) {
      return 1;
    }
    var c = goog.array.defaultCompare(a.ns, b.ns);
    return 0 === c ? goog.array.defaultCompare(a.name, b.name) : c;
  }
  return goog.array.defaultCompare(a.name, b.name);
};
cljs.core.Keyword = function(a, b, c, d) {
  this.ns = a;
  this.name = b;
  this.fqn = c;
  this._hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  return [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.Keyword ? this.fqn === b.fqn : !1;
};
cljs.core.Keyword.prototype.call = function() {
  var a = null, b = function(a, b) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(b, this);
  }, c = function(a, b, c) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, this, c);
  };
  a = function(a, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, a, e);
      case 3:
        return c.call(this, a, e, f);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}();
cljs.core.Keyword.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, this);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, this, b);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this._hash;
  return null != a ? a : this._hash = a = cljs.core.hash_keyword(this);
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(a) {
  return this.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(a) {
  return this.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write(b, [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Keyword.cljs$lang$type = !0;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function(a, b, c, d) {
  return new cljs.core.Keyword(a, b, c, d);
};
cljs.core.keyword_QMARK_ = function(a) {
  return a instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function(a, b) {
  return a === b ? !0 : a instanceof cljs.core.Keyword && b instanceof cljs.core.Keyword ? a.fqn === b.fqn : !1;
};
cljs.core.symbol_identical_QMARK_ = function(a, b) {
  return a === b ? !0 : a instanceof cljs.core.Symbol && b instanceof cljs.core.Symbol ? a.str === b.str : !1;
};
cljs.core.namespace = function(a) {
  if (null != a && (a.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$INamed$)) {
    return a.cljs$core$INamed$_namespace$arity$1(null);
  }
  throw Error(["Doesn't support namespace: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs.core.ident_QMARK_ = function(a) {
  return a instanceof cljs.core.Keyword || a instanceof cljs.core.Symbol;
};
cljs.core.simple_ident_QMARK_ = function(a) {
  return cljs.core.ident_QMARK_(a) && null == cljs.core.namespace(a);
};
cljs.core.qualified_ident_QMARK_ = function(a) {
  return cljs.core.boolean$(function() {
    var b = cljs.core.ident_QMARK_(a);
    return b ? (b = cljs.core.namespace(a), cljs.core.truth_(b) ? !0 : b) : b;
  }());
};
cljs.core.simple_symbol_QMARK_ = function(a) {
  return a instanceof cljs.core.Symbol && null == cljs.core.namespace(a);
};
cljs.core.qualified_symbol_QMARK_ = function(a) {
  return cljs.core.boolean$(function() {
    var b = a instanceof cljs.core.Symbol;
    return b ? (b = cljs.core.namespace(a), cljs.core.truth_(b) ? !0 : b) : b;
  }());
};
cljs.core.simple_keyword_QMARK_ = function(a) {
  return a instanceof cljs.core.Keyword && null == cljs.core.namespace(a);
};
cljs.core.qualified_keyword_QMARK_ = function(a) {
  return cljs.core.boolean$(function() {
    var b = a instanceof cljs.core.Keyword;
    return b ? (b = cljs.core.namespace(a), cljs.core.truth_(b) ? !0 : b) : b;
  }());
};
cljs.core.keyword = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if (a instanceof cljs.core.Keyword) {
    return a;
  }
  if (a instanceof cljs.core.Symbol) {
    return new cljs.core.Keyword(cljs.core.namespace(a), cljs.core.name(a), a.str, null);
  }
  if ("string" === typeof a) {
    var b = a.split("/");
    return 2 === b.length ? new cljs.core.Keyword(b[0], b[1], a, null) : new cljs.core.Keyword(null, b[0], a, null);
  }
  return null;
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = a instanceof cljs.core.Keyword ? cljs.core.name(a) : a instanceof cljs.core.Symbol ? cljs.core.name(a) : a, d = b instanceof cljs.core.Keyword ? cljs.core.name(b) : b instanceof cljs.core.Symbol ? cljs.core.name(b) : b;
  return new cljs.core.Keyword(c, d, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(c) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "/"].join("") : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(a, b, c, d) {
  this.meta = a;
  this.fn = b;
  this.s = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.LazySeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.LazySeq.prototype.sval = function() {
  null != this.fn && (this.s = this.fn.cljs$core$IFn$_invoke$arity$0 ? this.fn.cljs$core$IFn$_invoke$arity$0() : this.fn.call(null), this.fn = null);
  return this.s;
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  this.cljs$core$ISeqable$_seq$arity$1(null);
  return null == this.s ? null : cljs.core.next(this.s);
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(a) {
  return cljs.core.not(this.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  this.cljs$core$ISeqable$_seq$arity$1(null);
  return null == this.s ? null : cljs.core.first(this.s);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  this.cljs$core$ISeqable$_seq$arity$1(null);
  return null != this.s ? cljs.core.rest(this.s) : cljs.core.List.EMPTY;
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  this.sval();
  if (null == this.s) {
    return null;
  }
  for (a = this.s;;) {
    if (a instanceof cljs.core.LazySeq) {
      a = a.sval();
    } else {
      return this.s = a, cljs.core.seq(this.s);
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(b, this.fn, this.s, this.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = !0;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function(a, b, c, d) {
  return new cljs.core.LazySeq(a, b, c, d);
};
var G__15723_15726 = cljs.core.LazySeq.prototype, G__15724_15727 = cljs.core.ITER_SYMBOL, G__15725_15728 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__15723_15726, G__15724_15727);
goog.object.set(G__15723_15726, G__15724_15727, G__15725_15728);
cljs.core.ChunkBuffer = function(a, b) {
  this.buf = a;
  this.end = b;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(a) {
  this.buf[this.end] = a;
  return this.end += 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function() {
  var a = new cljs.core.ArrayChunk(this.buf, 0, this.end);
  this.buf = null;
  return a;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = !0;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function(a, b) {
  return new cljs.core.ChunkBuffer(a, b);
};
cljs.core.chunk_buffer = function(a) {
  return new cljs.core.ChunkBuffer(Array(a), 0);
};
cljs.core.ArrayChunk = function(a, b, c) {
  this.arr = a;
  this.off = b;
  this.end = c;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.end - this.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  return this.arr[this.off + b];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 <= b && b < this.end - this.off ? this.arr[this.off + b] : c;
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(a) {
  if (this.off === this.end) {
    throw Error("-drop-first of empty chunk");
  }
  return new cljs.core.ArrayChunk(this.arr, this.off + 1, this.end);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(this.arr, b, this.arr[this.off], this.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(this.arr, b, c, this.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = !0;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function(a, b, c) {
  return new cljs.core.ArrayChunk(a, b, c);
};
cljs.core.array_chunk = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.ArrayChunk(a, 0, a.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.ArrayChunk(a, b, a.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.ArrayChunk(a, b, c);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(a, b, c, d) {
  this.chunk = a;
  this.more = b;
  this.meta = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ChunkedCons.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  if (1 < cljs.core._count(this.chunk)) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(this.chunk), this.more, this.meta, null);
  }
  a = cljs.core._seq(this.more);
  return null == a ? null : a;
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return 1 < cljs.core._count(this.chunk) ? new cljs.core.ChunkedCons(cljs.core._drop_first(this.chunk), this.more, this.meta, null) : null == this.more ? cljs.core.List.EMPTY : this.more;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(a) {
  return this.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(a) {
  return null == this.more ? cljs.core.List.EMPTY : this.more;
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.ChunkedCons(this.chunk, this.more, b, this.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(a) {
  return null == this.more ? null : this.more;
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = !0;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function(a, b, c, d) {
  return new cljs.core.ChunkedCons(a, b, c, d);
};
var G__15734_15737 = cljs.core.ChunkedCons.prototype, G__15735_15738 = cljs.core.ITER_SYMBOL, G__15736_15739 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__15734_15737, G__15735_15738);
goog.object.set(G__15734_15737, G__15735_15738, G__15736_15739);
cljs.core.chunk_cons = function(a, b) {
  return 0 === cljs.core._count(a) ? b : new cljs.core.ChunkedCons(a, b, null, null);
};
cljs.core.chunk_append = function(a, b) {
  return a.add(b);
};
cljs.core.chunk = function(a) {
  return a.chunk();
};
cljs.core.chunk_first = function(a) {
  return cljs.core._chunked_first(a);
};
cljs.core.chunk_rest = function(a) {
  return cljs.core._chunked_rest(a);
};
cljs.core.chunk_next = function(a) {
  return null != a && (a.cljs$lang$protocol_mask$partition1$ & 1024 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IChunkedNext$) ? cljs.core._chunked_next(a) : cljs.core.seq(cljs.core._chunked_rest(a));
};
cljs.core.to_array = function(a) {
  var b = [];
  for (a = cljs.core.seq(a);;) {
    if (null != a) {
      b.push(cljs.core.first(a)), a = cljs.core.next(a);
    } else {
      return b;
    }
  }
};
cljs.core.to_array_2d = function(a) {
  var b = Array(cljs.core.count(a)), c = 0;
  for (a = cljs.core.seq(a);;) {
    if (null != a) {
      b[c] = cljs.core.to_array(cljs.core.first(a)), c += 1, a = cljs.core.next(a);
    } else {
      break;
    }
  }
  return b;
};
cljs.core.int_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return "number" === typeof a ? cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(a, null) : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = Array(a);
  if (cljs.core.seq_QMARK_(b)) {
    for (var d = 0, e = cljs.core.seq(b);;) {
      if (e && d < a) {
        c[d] = cljs.core.first(e), d += 1, e = cljs.core.next(e);
      } else {
        return c;
      }
    }
  } else {
    for (d = 0;;) {
      if (d < a) {
        c[d] = b, d += 1;
      } else {
        break;
      }
    }
    return c;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return "number" === typeof a ? cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(a, null) : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = Array(a);
  if (cljs.core.seq_QMARK_(b)) {
    for (var d = 0, e = cljs.core.seq(b);;) {
      if (e && d < a) {
        c[d] = cljs.core.first(e), d += 1, e = cljs.core.next(e);
      } else {
        return c;
      }
    }
  } else {
    for (d = 0;;) {
      if (d < a) {
        c[d] = b, d += 1;
      } else {
        break;
      }
    }
    return c;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return "number" === typeof a ? cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(a, null) : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = Array(a);
  if (cljs.core.seq_QMARK_(b)) {
    for (var d = 0, e = cljs.core.seq(b);;) {
      if (e && d < a) {
        c[d] = cljs.core.first(e), d += 1, e = cljs.core.next(e);
      } else {
        return c;
      }
    }
  } else {
    for (d = 0;;) {
      if (d < a) {
        c[d] = b, d += 1;
      } else {
        break;
      }
    }
    return c;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return "number" === typeof a ? cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(a, null) : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = Array(a);
  if (cljs.core.seq_QMARK_(b)) {
    for (var d = 0, e = cljs.core.seq(b);;) {
      if (e && d < a) {
        c[d] = cljs.core.first(e), d += 1, e = cljs.core.next(e);
      } else {
        return c;
      }
    }
  } else {
    for (d = 0;;) {
      if (d < a) {
        c[d] = b, d += 1;
      } else {
        break;
      }
    }
    return c;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function(a, b) {
  if (cljs.core.counted_QMARK_(b)) {
    return cljs.core.count(b);
  }
  for (var c = 0, d = cljs.core.seq(b);;) {
    if (null != d && c < a) {
      c += 1, d = cljs.core.next(d);
    } else {
      return c;
    }
  }
};
cljs.core.spread = function(a) {
  if (null == a) {
    return null;
  }
  var b = cljs.core.next(a);
  return null == b ? cljs.core.seq(cljs.core.first(a)) : cljs.core.cons(cljs.core.first(a), cljs.core.spread.cljs$core$IFn$_invoke$arity$1 ? cljs.core.spread.cljs$core$IFn$_invoke$arity$1(b) : cljs.core.spread.call(null, b));
};
cljs.core.concat = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.LazySeq(null, function() {
    return a;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(a);
    return c ? cljs.core.chunked_seq_QMARK_(c) ? cljs.core.chunk_cons(cljs.core.chunk_first(c), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(c), b)) : cljs.core.cons(cljs.core.first(c), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(c), b)) : b;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return function g(a, b) {
    return new cljs.core.LazySeq(null, function() {
      var c = cljs.core.seq(a);
      return c ? cljs.core.chunked_seq_QMARK_(c) ? cljs.core.chunk_cons(cljs.core.chunk_first(c), g(cljs.core.chunk_rest(c), b)) : cljs.core.cons(cljs.core.first(c), g(cljs.core.rest(c), b)) : cljs.core.truth_(b) ? g(cljs.core.first(b), cljs.core.next(b)) : null;
    }, null, null);
  }(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(a, b), c);
};
cljs.core.concat.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.seq(a);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.cons(a, b);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.cons(a, cljs.core.cons(b, c));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, d)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(e)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function(a) {
  return cljs.core._as_transient(a);
};
cljs.core.persistent_BANG_ = function(a) {
  return cljs.core._persistent_BANG_(a);
};
cljs.core.conj_BANG_ = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._conj_BANG_(a, b);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a = cljs.core._conj_BANG_(a, b), cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core._assoc_BANG_(a, b, c);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  for (;;) {
    if (a = cljs.core._assoc_BANG_(a, b, c), cljs.core.truth_(d)) {
      b = cljs.core.first(d), c = cljs.core.second(d), d = cljs.core.nnext(d);
    } else {
      return a;
    }
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._dissoc_BANG_(a, b);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a = cljs.core._dissoc_BANG_(a, b), cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function(a) {
  return cljs.core._pop_BANG_(a);
};
cljs.core.disj_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._disjoin_BANG_(a, b);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a = cljs.core._disjoin_BANG_(a, b), cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function(a, b, c) {
  var d = cljs.core.seq(c);
  if (0 === b) {
    return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
  }
  c = cljs.core._first(d);
  var e = cljs.core._rest(d);
  if (1 === b) {
    return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
  }
  d = cljs.core._first(e);
  var f = cljs.core._rest(e);
  if (2 === b) {
    return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d);
  }
  e = cljs.core._first(f);
  var g = cljs.core._rest(f);
  if (3 === b) {
    return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(c, d, e) : a.call(null, c, d, e);
  }
  f = cljs.core._first(g);
  var h = cljs.core._rest(g);
  if (4 === b) {
    return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(c, d, e, f) : a.call(null, c, d, e, f);
  }
  g = cljs.core._first(h);
  var k = cljs.core._rest(h);
  if (5 === b) {
    return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(c, d, e, f, g) : a.call(null, c, d, e, f, g);
  }
  h = cljs.core._first(k);
  var l = cljs.core._rest(k);
  if (6 === b) {
    return a.cljs$core$IFn$_invoke$arity$6 ? a.cljs$core$IFn$_invoke$arity$6(c, d, e, f, g, h) : a.call(null, c, d, e, f, g, h);
  }
  k = cljs.core._first(l);
  var m = cljs.core._rest(l);
  if (7 === b) {
    return a.cljs$core$IFn$_invoke$arity$7 ? a.cljs$core$IFn$_invoke$arity$7(c, d, e, f, g, h, k) : a.call(null, c, d, e, f, g, h, k);
  }
  l = cljs.core._first(m);
  var n = cljs.core._rest(m);
  if (8 === b) {
    return a.cljs$core$IFn$_invoke$arity$8 ? a.cljs$core$IFn$_invoke$arity$8(c, d, e, f, g, h, k, l) : a.call(null, c, d, e, f, g, h, k, l);
  }
  m = cljs.core._first(n);
  var p = cljs.core._rest(n);
  if (9 === b) {
    return a.cljs$core$IFn$_invoke$arity$9 ? a.cljs$core$IFn$_invoke$arity$9(c, d, e, f, g, h, k, l, m) : a.call(null, c, d, e, f, g, h, k, l, m);
  }
  n = cljs.core._first(p);
  var q = cljs.core._rest(p);
  if (10 === b) {
    return a.cljs$core$IFn$_invoke$arity$10 ? a.cljs$core$IFn$_invoke$arity$10(c, d, e, f, g, h, k, l, m, n) : a.call(null, c, d, e, f, g, h, k, l, m, n);
  }
  p = cljs.core._first(q);
  var r = cljs.core._rest(q);
  if (11 === b) {
    return a.cljs$core$IFn$_invoke$arity$11 ? a.cljs$core$IFn$_invoke$arity$11(c, d, e, f, g, h, k, l, m, n, p) : a.call(null, c, d, e, f, g, h, k, l, m, n, p);
  }
  q = cljs.core._first(r);
  var t = cljs.core._rest(r);
  if (12 === b) {
    return a.cljs$core$IFn$_invoke$arity$12 ? a.cljs$core$IFn$_invoke$arity$12(c, d, e, f, g, h, k, l, m, n, p, q) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q);
  }
  r = cljs.core._first(t);
  var v = cljs.core._rest(t);
  if (13 === b) {
    return a.cljs$core$IFn$_invoke$arity$13 ? a.cljs$core$IFn$_invoke$arity$13(c, d, e, f, g, h, k, l, m, n, p, q, r) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q, r);
  }
  t = cljs.core._first(v);
  var u = cljs.core._rest(v);
  if (14 === b) {
    return a.cljs$core$IFn$_invoke$arity$14 ? a.cljs$core$IFn$_invoke$arity$14(c, d, e, f, g, h, k, l, m, n, p, q, r, t) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
  }
  v = cljs.core._first(u);
  var w = cljs.core._rest(u);
  if (15 === b) {
    return a.cljs$core$IFn$_invoke$arity$15 ? a.cljs$core$IFn$_invoke$arity$15(c, d, e, f, g, h, k, l, m, n, p, q, r, t, v) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v);
  }
  u = cljs.core._first(w);
  var x = cljs.core._rest(w);
  if (16 === b) {
    return a.cljs$core$IFn$_invoke$arity$16 ? a.cljs$core$IFn$_invoke$arity$16(c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u);
  }
  w = cljs.core._first(x);
  var z = cljs.core._rest(x);
  if (17 === b) {
    return a.cljs$core$IFn$_invoke$arity$17 ? a.cljs$core$IFn$_invoke$arity$17(c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w);
  }
  x = cljs.core._first(z);
  var y = cljs.core._rest(z);
  if (18 === b) {
    return a.cljs$core$IFn$_invoke$arity$18 ? a.cljs$core$IFn$_invoke$arity$18(c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x);
  }
  z = cljs.core._first(y);
  y = cljs.core._rest(y);
  if (19 === b) {
    return a.cljs$core$IFn$_invoke$arity$19 ? a.cljs$core$IFn$_invoke$arity$19(c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z);
  }
  var R = cljs.core._first(y);
  cljs.core._rest(y);
  if (20 === b) {
    return a.cljs$core$IFn$_invoke$arity$20 ? a.cljs$core$IFn$_invoke$arity$20(c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z, R) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z, R);
  }
  throw Error("Only up to 20 arguments supported on functions");
};
cljs.core.apply_to_simple = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == b ? a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(a) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(a, cljs.core._first(b), cljs.core.next(b));
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null == c ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(a, b) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(a, b, cljs.core._first(c), cljs.core.next(c));
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return null == d ? a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(a, b, c) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(a, b, c, cljs.core._first(d), cljs.core.next(d));
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return null == e ? a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(a, b, c, d) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(a, b, c, d, cljs.core._first(e), cljs.core.next(e));
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  if (null == f) {
    return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.call(a, b, c, d, e);
  }
  var g = cljs.core._first(f), h = cljs.core.next(f);
  if (null == h) {
    return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(b, c, d, e, g) : a.call(a, b, c, d, e, g);
  }
  f = cljs.core._first(h);
  var k = cljs.core.next(h);
  if (null == k) {
    return a.cljs$core$IFn$_invoke$arity$6 ? a.cljs$core$IFn$_invoke$arity$6(b, c, d, e, g, f) : a.call(a, b, c, d, e, g, f);
  }
  h = cljs.core._first(k);
  var l = cljs.core.next(k);
  if (null == l) {
    return a.cljs$core$IFn$_invoke$arity$7 ? a.cljs$core$IFn$_invoke$arity$7(b, c, d, e, g, f, h) : a.call(a, b, c, d, e, g, f, h);
  }
  k = cljs.core._first(l);
  var m = cljs.core.next(l);
  if (null == m) {
    return a.cljs$core$IFn$_invoke$arity$8 ? a.cljs$core$IFn$_invoke$arity$8(b, c, d, e, g, f, h, k) : a.call(a, b, c, d, e, g, f, h, k);
  }
  l = cljs.core._first(m);
  var n = cljs.core.next(m);
  if (null == n) {
    return a.cljs$core$IFn$_invoke$arity$9 ? a.cljs$core$IFn$_invoke$arity$9(b, c, d, e, g, f, h, k, l) : a.call(a, b, c, d, e, g, f, h, k, l);
  }
  m = cljs.core._first(n);
  var p = cljs.core.next(n);
  if (null == p) {
    return a.cljs$core$IFn$_invoke$arity$10 ? a.cljs$core$IFn$_invoke$arity$10(b, c, d, e, g, f, h, k, l, m) : a.call(a, b, c, d, e, g, f, h, k, l, m);
  }
  n = cljs.core._first(p);
  var q = cljs.core.next(p);
  if (null == q) {
    return a.cljs$core$IFn$_invoke$arity$11 ? a.cljs$core$IFn$_invoke$arity$11(b, c, d, e, g, f, h, k, l, m, n) : a.call(a, b, c, d, e, g, f, h, k, l, m, n);
  }
  p = cljs.core._first(q);
  var r = cljs.core.next(q);
  if (null == r) {
    return a.cljs$core$IFn$_invoke$arity$12 ? a.cljs$core$IFn$_invoke$arity$12(b, c, d, e, g, f, h, k, l, m, n, p) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p);
  }
  q = cljs.core._first(r);
  var t = cljs.core.next(r);
  if (null == t) {
    return a.cljs$core$IFn$_invoke$arity$13 ? a.cljs$core$IFn$_invoke$arity$13(b, c, d, e, g, f, h, k, l, m, n, p, q) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, q);
  }
  r = cljs.core._first(t);
  var v = cljs.core.next(t);
  if (null == v) {
    return a.cljs$core$IFn$_invoke$arity$14 ? a.cljs$core$IFn$_invoke$arity$14(b, c, d, e, g, f, h, k, l, m, n, p, q, r) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, q, r);
  }
  t = cljs.core._first(v);
  var u = cljs.core.next(v);
  if (null == u) {
    return a.cljs$core$IFn$_invoke$arity$15 ? a.cljs$core$IFn$_invoke$arity$15(b, c, d, e, g, f, h, k, l, m, n, p, q, r, t) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, q, r, t);
  }
  v = cljs.core._first(u);
  var w = cljs.core.next(u);
  if (null == w) {
    return a.cljs$core$IFn$_invoke$arity$16 ? a.cljs$core$IFn$_invoke$arity$16(b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, v) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, v);
  }
  u = cljs.core._first(w);
  var x = cljs.core.next(w);
  if (null == x) {
    return a.cljs$core$IFn$_invoke$arity$17 ? a.cljs$core$IFn$_invoke$arity$17(b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, v, u) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, v, u);
  }
  w = cljs.core._first(x);
  var z = cljs.core.next(x);
  if (null == z) {
    return a.cljs$core$IFn$_invoke$arity$18 ? a.cljs$core$IFn$_invoke$arity$18(b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, v, u, w) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, v, u, w);
  }
  x = cljs.core._first(z);
  var y = cljs.core.next(z);
  if (null == y) {
    return a.cljs$core$IFn$_invoke$arity$19 ? a.cljs$core$IFn$_invoke$arity$19(b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, v, u, w, x) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, v, u, w, x);
  }
  z = cljs.core._first(y);
  y = cljs.core.next(y);
  if (null == y) {
    return a.cljs$core$IFn$_invoke$arity$20 ? a.cljs$core$IFn$_invoke$arity$20(b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, v, u, w, x, z) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, v, u, w, x, z);
  }
  b = [b, c, d, e, g, f, h, k, l, m, n, p, q, r, t, v, u, w, x, z];
  for (c = y;;) {
    if (c) {
      b.push(cljs.core._first(c)), c = cljs.core.next(c);
    } else {
      break;
    }
  }
  return a.apply(a, b);
};
cljs.core.apply_to_simple.cljs$lang$maxFixedArity = 6;
cljs.core.apply = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], b);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (a.cljs$lang$applyTo) {
    var c = a.cljs$lang$maxFixedArity, d = cljs.core.bounded_count(c + 1, b);
    return d <= c ? cljs.core.apply_to(a, d, b) : a.cljs$lang$applyTo(b);
  }
  return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(a, cljs.core.seq(b));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (a.cljs$lang$applyTo) {
    b = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(b, c);
    var d = a.cljs$lang$maxFixedArity;
    c = cljs.core.bounded_count(d, c) + 1;
    return c <= d ? cljs.core.apply_to(a, c, b) : a.cljs$lang$applyTo(b);
  }
  return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.seq(c));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return a.cljs$lang$applyTo ? (b = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(b, c, d), c = a.cljs$lang$maxFixedArity, d = 2 + cljs.core.bounded_count(c - 1, d), d <= c ? cljs.core.apply_to(a, d, b) : a.cljs$lang$applyTo(b)) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(a, b, c, cljs.core.seq(d));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return a.cljs$lang$applyTo ? (b = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(b, c, d, e), c = a.cljs$lang$maxFixedArity, e = 3 + cljs.core.bounded_count(c - 2, e), e <= c ? cljs.core.apply_to(a, e, b) : a.cljs$lang$applyTo(b)) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(a, b, c, d, cljs.core.seq(e));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f) {
  return a.cljs$lang$applyTo ? (f = cljs.core.spread(f), b = cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.cons(e, f)))), c = a.cljs$lang$maxFixedArity, f = 4 + cljs.core.bounded_count(c - 3, f), f <= c ? cljs.core.apply_to(a, f, b) : a.cljs$lang$applyTo(b)) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, cljs.core.spread(f));
};
cljs.core.apply.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  var f = cljs.core.next(e);
  e = cljs.core.first(f);
  f = cljs.core.next(f);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], b);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.with_meta(a, function() {
    var c = cljs.core.meta(a);
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.with_meta(a, function() {
    var d = cljs.core.meta(a);
    return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, c) : b.call(null, d, c);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.with_meta(a, function() {
    var e = cljs.core.meta(a);
    return b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(e, c, d) : b.call(null, e, c, d);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return cljs.core.with_meta(a, function() {
    var f = cljs.core.meta(a);
    return b.cljs$core$IFn$_invoke$arity$4 ? b.cljs$core$IFn$_invoke$arity$4(f, c, d, e) : b.call(null, f, c, d, e);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  return cljs.core.with_meta(a, function() {
    var g = cljs.core.meta(a);
    return b.cljs$core$IFn$_invoke$arity$5 ? b.cljs$core$IFn$_invoke$arity$5(g, c, d, e, f) : b.call(null, g, c, d, e, f);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f, g) {
  return cljs.core.with_meta(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.meta(a), c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f, g], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  var f = cljs.core.next(e);
  e = cljs.core.first(f);
  var g = cljs.core.next(f);
  f = cljs.core.first(g);
  g = cljs.core.next(g);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f, g);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !1;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, a, b, c));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function(a) {
  return cljs.core.seq(a) ? a : null;
};
cljs.core.nil_iter = function() {
  "undefined" === typeof cljs.core.t_cljs$core15904 && (cljs.core.t_cljs$core15904 = function(a) {
    this.meta15905 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.t_cljs$core15904.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.core.t_cljs$core15904(b);
  }, cljs.core.t_cljs$core15904.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta15905;
  }, cljs.core.t_cljs$core15904.prototype.hasNext = function() {
    return !1;
  }, cljs.core.t_cljs$core15904.prototype.next = function() {
    return Error("No such element");
  }, cljs.core.t_cljs$core15904.prototype.remove = function() {
    return Error("Unsupported operation");
  }, cljs.core.t_cljs$core15904.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta15905", "meta15905", -1749454161, null)], null);
  }, cljs.core.t_cljs$core15904.cljs$lang$type = !0, cljs.core.t_cljs$core15904.cljs$lang$ctorStr = "cljs.core/t_cljs$core15904", cljs.core.t_cljs$core15904.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write(b, "cljs.core/t_cljs$core15904");
  }, cljs.core.__GT_t_cljs$core15904 = function(a) {
    return new cljs.core.t_cljs$core15904(a);
  });
  return new cljs.core.t_cljs$core15904(cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(a, b) {
  this.s = a;
  this.i = b;
};
cljs.core.StringIter.prototype.hasNext = function() {
  return this.i < this.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var a = this.s.charAt(this.i);
  this.i += 1;
  return a;
};
cljs.core.StringIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.StringIter.cljs$lang$type = !0;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function(a, b) {
  return new cljs.core.StringIter(a, b);
};
cljs.core.string_iter = function(a) {
  return new cljs.core.StringIter(a, 0);
};
cljs.core.ArrayIter = function(a, b) {
  this.arr = a;
  this.i = b;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  return this.i < this.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var a = this.arr[this.i];
  this.i += 1;
  return a;
};
cljs.core.ArrayIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = !0;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function(a, b) {
  return new cljs.core.ArrayIter(a, b);
};
cljs.core.array_iter = function(a) {
  return new cljs.core.ArrayIter(a, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(a, b) {
  this._seq = a;
  this._next = b;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  this._seq === cljs.core.INIT ? (this._seq = cljs.core.START, this._next = cljs.core.seq(this._next)) : this._seq === this._next && (this._next = cljs.core.next(this._seq));
  return null != this._next;
};
cljs.core.SeqIter.prototype.next = function() {
  if (this.hasNext()) {
    return this._seq = this._next, cljs.core.first(this._next);
  }
  throw Error("No such element");
};
cljs.core.SeqIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = !0;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function(a, b) {
  return new cljs.core.SeqIter(a, b);
};
cljs.core.seq_iter = function(a) {
  return new cljs.core.SeqIter(cljs.core.INIT, a);
};
cljs.core.iter = function(a) {
  if (cljs.core.iterable_QMARK_(a)) {
    return cljs.core._iterator(a);
  }
  if (null == a) {
    return cljs.core.nil_iter();
  }
  if ("string" === typeof a) {
    return cljs.core.string_iter(a);
  }
  if (cljs.core.array_QMARK_(a)) {
    return cljs.core.array_iter(a);
  }
  if (cljs.core.seqable_QMARK_(a)) {
    return cljs.core.seq_iter(a);
  }
  throw Error(["Cannot create iterator from ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs.core.Many = function(a) {
  this.vals = a;
};
cljs.core.Many.prototype.add = function(a) {
  this.vals.push(a);
  return this;
};
cljs.core.Many.prototype.remove = function() {
  return this.vals.shift();
};
cljs.core.Many.prototype.isEmpty = function() {
  return 0 === this.vals.length;
};
cljs.core.Many.prototype.toString = function() {
  return ["Many: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.vals)].join("");
};
cljs.core.Many.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vals", "vals", -1886377036, null)], null);
};
cljs.core.Many.cljs$lang$type = !0;
cljs.core.Many.cljs$lang$ctorStr = "cljs.core/Many";
cljs.core.Many.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Many");
};
cljs.core.__GT_Many = function(a) {
  return new cljs.core.Many(a);
};
cljs.core.NONE = {};
cljs.core.Single = function(a) {
  this.val = a;
};
cljs.core.Single.prototype.add = function(a) {
  return this.val === cljs.core.NONE ? (this.val = a, this) : new cljs.core.Many([this.val, a]);
};
cljs.core.Single.prototype.remove = function() {
  if (this.val === cljs.core.NONE) {
    throw Error("Removing object from empty buffer");
  }
  var a = this.val;
  this.val = cljs.core.NONE;
  return a;
};
cljs.core.Single.prototype.isEmpty = function() {
  return this.val === cljs.core.NONE;
};
cljs.core.Single.prototype.toString = function() {
  return ["Single: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.val)].join("");
};
cljs.core.Single.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Single.cljs$lang$type = !0;
cljs.core.Single.cljs$lang$ctorStr = "cljs.core/Single";
cljs.core.Single.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Single");
};
cljs.core.__GT_Single = function(a) {
  return new cljs.core.Single(a);
};
cljs.core.Empty = function() {
};
cljs.core.Empty.prototype.add = function(a) {
  return new cljs.core.Single(a);
};
cljs.core.Empty.prototype.remove = function() {
  throw Error("Removing object from empty buffer");
};
cljs.core.Empty.prototype.isEmpty = function() {
  return !0;
};
cljs.core.Empty.prototype.toString = function() {
  return "Empty";
};
cljs.core.Empty.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.Empty.cljs$lang$type = !0;
cljs.core.Empty.cljs$lang$ctorStr = "cljs.core/Empty";
cljs.core.Empty.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Empty");
};
cljs.core.__GT_Empty = function() {
  return new cljs.core.Empty;
};
cljs.core.EMPTY = new cljs.core.Empty;
cljs.core.MultiIterator = function(a) {
  this.iters = a;
};
cljs.core.MultiIterator.prototype.hasNext = function() {
  for (var a = cljs.core.seq(this.iters);;) {
    if (null != a) {
      if (cljs.core.first(a).hasNext()) {
        a = cljs.core.next(a);
      } else {
        return !1;
      }
    } else {
      return !0;
    }
  }
};
cljs.core.MultiIterator.prototype.next = function() {
  for (var a = [], b = this.iters.length, c = 0;;) {
    if (c < b) {
      a[c] = this.iters[c].next(), c += 1;
    } else {
      break;
    }
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(a, 0);
};
cljs.core.MultiIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iters", "iters", 719353031, null)], null);
};
cljs.core.MultiIterator.cljs$lang$type = !0;
cljs.core.MultiIterator.cljs$lang$ctorStr = "cljs.core/MultiIterator";
cljs.core.MultiIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/MultiIterator");
};
cljs.core.__GT_MultiIterator = function(a) {
  return new cljs.core.MultiIterator(a);
};
cljs.core.chunkIteratorSeq = function(a) {
  return new cljs.core.LazySeq(null, function() {
    if (a.hasNext()) {
      for (var b = [], c = 0;;) {
        if (cljs.core.truth_(function() {
          var b = a.hasNext();
          return cljs.core.truth_(b) ? 32 > c : b;
        }())) {
          b[c] = a.next(), c += 1;
        } else {
          return cljs.core.chunk_cons(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(b, 0, c), cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.chunkIteratorSeq.call(null, a));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.TransformerIterator = function(a, b, c, d, e, f) {
  this.buffer = a;
  this._next = b;
  this.completed = c;
  this.xf = d;
  this.sourceIter = e;
  this.multi = f;
};
cljs.core.TransformerIterator.prototype.step = function() {
  if (this._next !== cljs.core.NONE) {
    return !0;
  }
  for (;;) {
    if (this._next === cljs.core.NONE) {
      if (this.buffer.isEmpty()) {
        if (this.completed) {
          return !1;
        }
        if (this.sourceIter.hasNext()) {
          if (this.multi) {
            var a = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(this.xf, cljs.core.cons(null, this.sourceIter.next()));
          } else {
            a = this.sourceIter.next(), a = this.xf.cljs$core$IFn$_invoke$arity$2 ? this.xf.cljs$core$IFn$_invoke$arity$2(null, a) : this.xf.call(null, null, a);
          }
          cljs.core.reduced_QMARK_(a) && (this.xf.cljs$core$IFn$_invoke$arity$1 ? this.xf.cljs$core$IFn$_invoke$arity$1(null) : this.xf.call(null, null), this.completed = !0);
        } else {
          this.xf.cljs$core$IFn$_invoke$arity$1 ? this.xf.cljs$core$IFn$_invoke$arity$1(null) : this.xf.call(null, null), this.completed = !0;
        }
      } else {
        this._next = this.buffer.remove();
      }
    } else {
      return !0;
    }
  }
};
cljs.core.TransformerIterator.prototype.hasNext = function() {
  return this.step();
};
cljs.core.TransformerIterator.prototype.next = function() {
  if (this.hasNext()) {
    var a = this._next;
    this._next = cljs.core.NONE;
    return a;
  }
  throw Error("No such element");
};
cljs.core.TransformerIterator.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.TransformerIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "completed", "completed", 1154475024, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "xf", "xf", 2042434515, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "sourceIter", "sourceIter", 1068220306, null), new cljs.core.Symbol(null, "multi", "multi", 1450238522, null)], null);
};
cljs.core.TransformerIterator.cljs$lang$type = !0;
cljs.core.TransformerIterator.cljs$lang$ctorStr = "cljs.core/TransformerIterator";
cljs.core.TransformerIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransformerIterator");
};
cljs.core.__GT_TransformerIterator = function(a, b, c, d, e, f) {
  return new cljs.core.TransformerIterator(a, b, c, d, e, f);
};
var G__15914_15917 = cljs.core.TransformerIterator.prototype, G__15915_15918 = cljs.core.ITER_SYMBOL, G__15916_15919 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__15914_15917, G__15915_15918);
goog.object.set(G__15914_15917, G__15915_15918, G__15916_15919);
cljs.core.transformer_iterator = function(a, b, c) {
  var d = new cljs.core.TransformerIterator(cljs.core.EMPTY, cljs.core.NONE, !1, null, b, c);
  d.xf = function() {
    var b = function(a) {
      return function() {
        var b = null, c = function(b, c) {
          a.buffer = a.buffer.add(c);
          return b;
        };
        b = function(a, b) {
          switch(arguments.length) {
            case 0:
              return null;
            case 1:
              return a;
            case 2:
              return c.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        b.cljs$core$IFn$_invoke$arity$0 = function() {
          return null;
        };
        b.cljs$core$IFn$_invoke$arity$1 = function(a) {
          return a;
        };
        b.cljs$core$IFn$_invoke$arity$2 = c;
        return b;
      }();
    }(d);
    return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
  }();
  return d;
};
cljs.core.TransformerIterator.create = function(a, b) {
  return cljs.core.transformer_iterator(a, b, !1);
};
cljs.core.TransformerIterator.createMulti = function(a, b) {
  return cljs.core.transformer_iterator(a, new cljs.core.MultiIterator(cljs.core.to_array(b)), !0);
};
cljs.core.sequence = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.seq_QMARK_(a) ? a : (a = cljs.core.seq(a)) ? a : cljs.core.List.EMPTY;
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.create(a, cljs.core.iter(b)));
  return cljs.core.truth_(c) ? c : cljs.core.List.EMPTY;
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.createMulti(a, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.iter, cljs.core.cons(b, c))));
  return cljs.core.truth_(a) ? a : cljs.core.List.EMPTY;
};
cljs.core.sequence.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function(a, b) {
  for (;;) {
    if (null == cljs.core.seq(b)) {
      return !0;
    }
    if (cljs.core.truth_(function() {
      var c = cljs.core.first(b);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }())) {
      var c = a, d = cljs.core.next(b);
      a = c;
      b = d;
    } else {
      return !1;
    }
  }
};
cljs.core.not_every_QMARK_ = function(a, b) {
  return !cljs.core.every_QMARK_(a, b);
};
cljs.core.some = function(a, b) {
  for (;;) {
    if (cljs.core.seq(b)) {
      var c = cljs.core.first(b);
      c = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      if (cljs.core.truth_(c)) {
        return c;
      }
      c = a;
      var d = cljs.core.next(b);
      a = c;
      b = d;
    } else {
      return null;
    }
  }
};
cljs.core.not_any_QMARK_ = function(a, b) {
  return cljs.core.not(cljs.core.some(a, b));
};
cljs.core.even_QMARK_ = function(a) {
  if (cljs.core.integer_QMARK_(a)) {
    return 0 === (a & 1);
  }
  throw Error(["Argument must be an integer: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs.core.odd_QMARK_ = function(a) {
  return !cljs.core.even_QMARK_(a);
};
cljs.core.complement = function(a) {
  return function() {
    var b = null, c = function() {
      return cljs.core.not(a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null));
    }, d = function(b) {
      return cljs.core.not(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b));
    }, e = function(b, c) {
      return cljs.core.not(a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c));
    }, f = function() {
      var b = function(b, c, d) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
      }, c = function(a, c, d) {
        var e = null;
        if (2 < arguments.length) {
          e = 0;
          for (var f = Array(arguments.length - 2); e < f.length;) {
            f[e] = arguments[e + 2], ++e;
          }
          e = new cljs.core.IndexedSeq(f, 0, null);
        }
        return b.call(this, a, c, e);
      };
      c.cljs$lang$maxFixedArity = 2;
      c.cljs$lang$applyTo = function(a) {
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.rest(a);
        return b(c, d, a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
    b = function(a, b, k) {
      switch(arguments.length) {
        case 0:
          return c.call(this);
        case 1:
          return d.call(this, a);
        case 2:
          return e.call(this, a, b);
        default:
          var g = null;
          if (2 < arguments.length) {
            g = 0;
            for (var h = Array(arguments.length - 2); g < h.length;) {
              h[g] = arguments[g + 2], ++g;
            }
            g = new cljs.core.IndexedSeq(h, 0, null);
          }
          return f.cljs$core$IFn$_invoke$arity$variadic(a, b, g);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    b.cljs$lang$maxFixedArity = 2;
    b.cljs$lang$applyTo = f.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = c;
    b.cljs$core$IFn$_invoke$arity$1 = d;
    b.cljs$core$IFn$_invoke$arity$2 = e;
    b.cljs$core$IFn$_invoke$arity$variadic = f.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
cljs.core.constantly = function(a) {
  return function() {
    var b = function(b) {
      if (0 < arguments.length) {
        for (var c = 0, e = Array(arguments.length - 0); c < e.length;) {
          e[c] = arguments[c + 0], ++c;
        }
        new cljs.core.IndexedSeq(e, 0, null);
      }
      return a;
    };
    b.cljs$lang$maxFixedArity = 0;
    b.cljs$lang$applyTo = function(b) {
      cljs.core.seq(b);
      return a;
    };
    b.cljs$core$IFn$_invoke$arity$variadic = function(b) {
      return a;
    };
    return b;
  }();
};
cljs.core.comp = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function() {
      var c = b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }, e = function(c) {
      c = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }, f = function(c, d) {
      var e = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e);
    }, g = function(c, d, e) {
      c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, d, e) : b.call(null, c, d, e);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }, h = function() {
      var c = function(c, d, e, f) {
        c = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f);
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
    c = function(a, b, c, n) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var k = null;
          if (3 < arguments.length) {
            k = 0;
            for (var m = Array(arguments.length - 3); k < m.length;) {
              m[k] = arguments[k + 3], ++k;
            }
            k = new cljs.core.IndexedSeq(m, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, k);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = h.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    c.cljs$core$IFn$_invoke$arity$3 = g;
    c.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function() {
      var d = c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null);
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    }, f = function(d) {
      d = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    }, g = function(d, e) {
      var f = c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(d, e) : c.call(null, d, e);
      f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(f) : b.call(null, f);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(f) : a.call(null, f);
    }, h = function(d, e, f) {
      d = c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(d, e, f) : c.call(null, d, e, f);
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    }, k = function() {
      var d = function(d, e, f, g) {
        d = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(c, d, e, f, g);
        d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
    d = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return e.call(this);
        case 1:
          return f.call(this, a);
        case 2:
          return g.call(this, a, b);
        case 3:
          return h.call(this, a, b, c);
        default:
          var m = null;
          if (3 < arguments.length) {
            m = 0;
            for (var l = Array(arguments.length - 3); m < l.length;) {
              l[m] = arguments[m + 3], ++m;
            }
            m = new cljs.core.IndexedSeq(l, 0, null);
          }
          return k.cljs$core$IFn$_invoke$arity$variadic(a, b, c, m);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = k.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = e;
    d.cljs$core$IFn$_invoke$arity$1 = f;
    d.cljs$core$IFn$_invoke$arity$2 = g;
    d.cljs$core$IFn$_invoke$arity$3 = h;
    d.cljs$core$IFn$_invoke$arity$variadic = k.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return function(a) {
    return function() {
      var b = function(b) {
        b = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(a), b);
        for (var c = cljs.core.next(a);;) {
          if (c) {
            var d = cljs.core.first(c);
            b = d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b);
            c = cljs.core.next(c);
          } else {
            return b;
          }
        }
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(a, b, c, d)));
};
cljs.core.comp.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function() {
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
    }, e = function(c) {
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    }, f = function(c, d) {
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d);
    }, g = function(c, d, e) {
      return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.call(null, b, c, d, e);
    }, h = function() {
      var c = function(c, d, e, f) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0));
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
    c = function(a, b, c, n) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var k = null;
          if (3 < arguments.length) {
            k = 0;
            for (var m = Array(arguments.length - 3); k < m.length;) {
              m[k] = arguments[k + 3], ++k;
            }
            k = new cljs.core.IndexedSeq(m, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, k);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = h.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    c.cljs$core$IFn$_invoke$arity$3 = g;
    c.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function() {
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    }, f = function(d) {
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d);
    }, g = function(d, e) {
      return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.call(null, b, c, d, e);
    }, h = function(d, e, f) {
      return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : a.call(null, b, c, d, e, f);
    }, k = function() {
      var d = function(d, e, f, g) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f, g], 0));
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
    d = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return e.call(this);
        case 1:
          return f.call(this, a);
        case 2:
          return g.call(this, a, b);
        case 3:
          return h.call(this, a, b, c);
        default:
          var m = null;
          if (3 < arguments.length) {
            m = 0;
            for (var l = Array(arguments.length - 3); m < l.length;) {
              l[m] = arguments[m + 3], ++m;
            }
            m = new cljs.core.IndexedSeq(l, 0, null);
          }
          return k.cljs$core$IFn$_invoke$arity$variadic(a, b, c, m);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = k.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = e;
    d.cljs$core$IFn$_invoke$arity$1 = f;
    d.cljs$core$IFn$_invoke$arity$2 = g;
    d.cljs$core$IFn$_invoke$arity$3 = h;
    d.cljs$core$IFn$_invoke$arity$variadic = k.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return function() {
    var e = null, f = function() {
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d);
    }, g = function(e) {
      return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.call(null, b, c, d, e);
    }, h = function(e, f) {
      return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : a.call(null, b, c, d, e, f);
    }, k = function(e, f, g) {
      return a.cljs$core$IFn$_invoke$arity$6 ? a.cljs$core$IFn$_invoke$arity$6(b, c, d, e, f, g) : a.call(null, b, c, d, e, f, g);
    }, l = function() {
      var e = function(e, f, g, h) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f, g, h], 0));
      }, f = function(a, b, c, d) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return e.call(this, a, b, c, f);
      };
      f.cljs$lang$maxFixedArity = 3;
      f.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.rest(a);
        return e(b, c, d, a);
      };
      f.cljs$core$IFn$_invoke$arity$variadic = e;
      return f;
    }();
    e = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return f.call(this);
        case 1:
          return g.call(this, a);
        case 2:
          return h.call(this, a, b);
        case 3:
          return k.call(this, a, b, c);
        default:
          var e = null;
          if (3 < arguments.length) {
            e = 0;
            for (var m = Array(arguments.length - 3); e < m.length;) {
              m[e] = arguments[e + 3], ++e;
            }
            e = new cljs.core.IndexedSeq(m, 0, null);
          }
          return l.cljs$core$IFn$_invoke$arity$variadic(a, b, c, e);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    e.cljs$lang$maxFixedArity = 3;
    e.cljs$lang$applyTo = l.cljs$lang$applyTo;
    e.cljs$core$IFn$_invoke$arity$0 = f;
    e.cljs$core$IFn$_invoke$arity$1 = g;
    e.cljs$core$IFn$_invoke$arity$2 = h;
    e.cljs$core$IFn$_invoke$arity$3 = k;
    e.cljs$core$IFn$_invoke$arity$variadic = l.cljs$core$IFn$_invoke$arity$variadic;
    return e;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return function() {
    var f = function(f) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, b, c, d, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(e, f));
    }, g = function(a) {
      var b = null;
      if (0 < arguments.length) {
        b = 0;
        for (var c = Array(arguments.length - 0); b < c.length;) {
          c[b] = arguments[b + 0], ++b;
        }
        b = new cljs.core.IndexedSeq(c, 0, null);
      }
      return f.call(this, b);
    };
    g.cljs$lang$maxFixedArity = 0;
    g.cljs$lang$applyTo = function(a) {
      a = cljs.core.seq(a);
      return f(a);
    };
    g.cljs$core$IFn$_invoke$arity$variadic = f;
    return g;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function(c) {
      c = null == c ? b : c;
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }, e = function(c, d) {
      var e = null == c ? b : c;
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(e, d) : a.call(null, e, d);
    }, f = function(c, d, e) {
      c = null == c ? b : c;
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(c, d, e) : a.call(null, c, d, e);
    }, g = function() {
      var c = function(c, d, e, f) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, null == c ? b : c, d, e, f);
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
    c = function(a, b, c, m) {
      switch(arguments.length) {
        case 1:
          return d.call(this, a);
        case 2:
          return e.call(this, a, b);
        case 3:
          return f.call(this, a, b, c);
        default:
          var h = null;
          if (3 < arguments.length) {
            h = 0;
            for (var k = Array(arguments.length - 3); h < k.length;) {
              k[h] = arguments[h + 3], ++h;
            }
            h = new cljs.core.IndexedSeq(k, 0, null);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(a, b, c, h);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = g.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$1 = d;
    c.cljs$core$IFn$_invoke$arity$2 = e;
    c.cljs$core$IFn$_invoke$arity$3 = f;
    c.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function(d, e) {
      var f = null == d ? b : d, g = null == e ? c : e;
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
    }, f = function(d, e, f) {
      d = null == d ? b : d;
      e = null == e ? c : e;
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(d, e, f) : a.call(null, d, e, f);
    }, g = function() {
      var d = function(d, e, f, g) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, null == d ? b : d, null == e ? c : e, f, g);
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
    d = function(a, b, c, d) {
      switch(arguments.length) {
        case 2:
          return e.call(this, a, b);
        case 3:
          return f.call(this, a, b, c);
        default:
          var h = null;
          if (3 < arguments.length) {
            h = 0;
            for (var k = Array(arguments.length - 3); h < k.length;) {
              k[h] = arguments[h + 3], ++h;
            }
            h = new cljs.core.IndexedSeq(k, 0, null);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(a, b, c, h);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = g.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$2 = e;
    d.cljs$core$IFn$_invoke$arity$3 = f;
    d.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return function() {
    var e = null, f = function(d, e) {
      var f = null == d ? b : d, g = null == e ? c : e;
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
    }, g = function(e, f, g) {
      e = null == e ? b : e;
      f = null == f ? c : f;
      g = null == g ? d : g;
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(e, f, g) : a.call(null, e, f, g);
    }, h = function() {
      var e = function(e, f, g, h) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, null == e ? b : e, null == f ? c : f, null == g ? d : g, h);
      }, f = function(a, b, c, d) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return e.call(this, a, b, c, f);
      };
      f.cljs$lang$maxFixedArity = 3;
      f.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.rest(a);
        return e(b, c, d, a);
      };
      f.cljs$core$IFn$_invoke$arity$variadic = e;
      return f;
    }();
    e = function(a, b, c, d) {
      switch(arguments.length) {
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var e = null;
          if (3 < arguments.length) {
            e = 0;
            for (var k = Array(arguments.length - 3); e < k.length;) {
              k[e] = arguments[e + 3], ++e;
            }
            e = new cljs.core.IndexedSeq(k, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, e);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    e.cljs$lang$maxFixedArity = 3;
    e.cljs$lang$applyTo = h.cljs$lang$applyTo;
    e.cljs$core$IFn$_invoke$arity$2 = f;
    e.cljs$core$IFn$_invoke$arity$3 = g;
    e.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return e;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          var f = cljs.core._vreset_BANG_(c, cljs.core._deref(c) + 1);
          f = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, e) : a.call(null, f, e);
          return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, f) : b.call(null, d, f);
        };
        d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_(-1));
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function f(b, e) {
    return new cljs.core.LazySeq(null, function() {
      var d = cljs.core.seq(e);
      if (d) {
        if (cljs.core.chunked_seq_QMARK_(d)) {
          for (var h = cljs.core.chunk_first(d), k = cljs.core.count(h), l = cljs.core.chunk_buffer(k), m = 0;;) {
            if (m < k) {
              cljs.core.chunk_append(l, function() {
                var d = b + m, e = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(h, m);
                return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(d, e) : a.call(null, d, e);
              }()), m += 1;
            } else {
              break;
            }
          }
          return cljs.core.chunk_cons(cljs.core.chunk(l), f(b + k, cljs.core.chunk_rest(d)));
        }
        return cljs.core.cons(function() {
          var e = cljs.core.first(d);
          return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, e) : a.call(null, b, e);
        }(), f(b + 1, cljs.core.rest(d)));
      }
      return null;
    }, null, null);
  }(0, b);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, e = function(a) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
      }, f = function(c, d) {
        var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
        return null == e ? c : b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, e) : b.call(null, c, e);
      };
      c = function(a, b) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
          case 2:
            return f.call(this, a, b);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      if (cljs.core.chunked_seq_QMARK_(c)) {
        for (var d = cljs.core.chunk_first(c), e = cljs.core.count(d), f = cljs.core.chunk_buffer(e), g = 0;;) {
          if (g < e) {
            var h = function() {
              var b = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(d, g);
              return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            }();
            null != h && cljs.core.chunk_append(f, h);
            g += 1;
          } else {
            break;
          }
        }
        return cljs.core.chunk_cons(cljs.core.chunk(f), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(a, cljs.core.chunk_rest(c)));
      }
      e = function() {
        var b = cljs.core.first(c);
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
      }();
      return null == e ? cljs.core.keep.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rest(c)) : cljs.core.cons(e, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rest(c)));
    }
    return null;
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(a, b, c, d) {
  this.state = a;
  this.meta = b;
  this.validator = c;
  this.watches = d;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return this === b;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  return this.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(a, b, c) {
  a = cljs.core.seq(this.watches);
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = d.cljs$core$IIndexed$_nth$arity$2(null, f), h = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(g, 0, null);
      g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(g, 1, null);
      g.cljs$core$IFn$_invoke$arity$4 ? g.cljs$core$IFn$_invoke$arity$4(h, this, b, c) : g.call(null, h, this, b, c);
      f += 1;
    } else {
      if (a = cljs.core.seq(a)) {
        cljs.core.chunked_seq_QMARK_(a) ? (d = cljs.core.chunk_first(a), a = cljs.core.chunk_rest(a), h = d, e = cljs.core.count(d), d = h) : (d = cljs.core.first(a), h = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 0, null), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 1, null), g.cljs$core$IFn$_invoke$arity$4 ? g.cljs$core$IFn$_invoke$arity$4(h, this, b, c) : g.call(null, h, this, b, c), a = cljs.core.next(a), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(a, b, c) {
  this.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.watches, b, c);
  return this;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(a, b) {
  return this.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(this.watches, b);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return goog.getUid(this);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = !0;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function(a, b, c, d) {
  return new cljs.core.Atom(a, b, c, d);
};
cljs.core.atom = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.Atom(a, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, b) : b, d = cljs.core.get.cljs$core$IFn$_invoke$arity$2(c, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  c = cljs.core.get.cljs$core$IFn$_invoke$arity$2(c, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(a, d, c, null);
};
cljs.core.atom.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function(a, b) {
  if (a instanceof cljs.core.Atom) {
    var c = a.validator;
    if (null != c && !cljs.core.truth_(c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b))) {
      throw Error("Validator rejected reference state");
    }
    c = a.state;
    a.state = b;
    null != a.watches && cljs.core._notify_watches(a, c, b);
    return b;
  }
  return cljs.core._reset_BANG_(a, b);
};
cljs.core.reset_vals_BANG_ = function(a, b) {
  var c = a.validator;
  if (null != c && !cljs.core.truth_(c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b))) {
    throw Error("Validator rejected reference state");
  }
  c = a.state;
  a.state = b;
  null != a.watches && cljs.core._notify_watches(a, c, b);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
};
cljs.core.swap_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a instanceof cljs.core.Atom ? cljs.core.reset_BANG_(a, function() {
    var c = a.state;
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
  }()) : cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a instanceof cljs.core.Atom ? cljs.core.reset_BANG_(a, function() {
    var d = a.state;
    return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, c) : b.call(null, d, c);
  }()) : cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, b, c);
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return a instanceof cljs.core.Atom ? cljs.core.reset_BANG_(a, function() {
    var e = a.state;
    return b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(e, c, d) : b.call(null, e, c, d);
  }()) : cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return a instanceof cljs.core.Atom ? cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, a.state, c, d, e)) : cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.swap_vals_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var c = a.state;
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var d = a.state;
    return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, c) : b.call(null, d, c);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var e = a.state;
    return b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(e, c, d) : b.call(null, e, c, d);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return cljs.core.reset_vals_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, a.state, c, d, e));
};
cljs.core.swap_vals_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.swap_vals_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function(a, b, c) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), b) ? (cljs.core.reset_BANG_(a, c), !0) : !1;
};
cljs.core.set_validator_BANG_ = function(a, b) {
  if (null != b && cljs.core.not(function() {
    var c = cljs.core._deref(a);
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
  }())) {
    throw Error("Validator rejected reference state");
  }
  return a.validator = b;
};
cljs.core.get_validator = function(a) {
  return a.validator;
};
cljs.core.Volatile = function(a) {
  this.state = a;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(a, b) {
  return this.state = b;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  return this.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Volatile.cljs$lang$type = !0;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function(a) {
  return new cljs.core.Volatile(a);
};
cljs.core.volatile_BANG_ = function(a) {
  return new cljs.core.Volatile(a);
};
cljs.core.volatile_QMARK_ = function(a) {
  return a instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function(a, b) {
  return cljs.core._vreset_BANG_(a, b);
};
cljs.core.keep_indexed = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          var f = cljs.core._vreset_BANG_(c, cljs.core._deref(c) + 1);
          f = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, e) : a.call(null, f, e);
          return null == f ? d : b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, f) : b.call(null, d, f);
        };
        d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_(-1));
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function f(b, e) {
    return new cljs.core.LazySeq(null, function() {
      var d = cljs.core.seq(e);
      if (d) {
        if (cljs.core.chunked_seq_QMARK_(d)) {
          for (var h = cljs.core.chunk_first(d), k = cljs.core.count(h), l = cljs.core.chunk_buffer(k), m = 0;;) {
            if (m < k) {
              var n = function() {
                var d = b + m, e = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(h, m);
                return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(d, e) : a.call(null, d, e);
              }();
              null != n && cljs.core.chunk_append(l, n);
              m += 1;
            } else {
              break;
            }
          }
          return cljs.core.chunk_cons(cljs.core.chunk(l), f(b + k, cljs.core.chunk_rest(d)));
        }
        k = function() {
          var e = cljs.core.first(d);
          return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, e) : a.call(null, b, e);
        }();
        return null == k ? f(b + 1, cljs.core.rest(d)) : cljs.core.cons(k, f(b + 1, cljs.core.rest(d)));
      }
      return null;
    }, null, null);
  }(0, b);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function() {
    var b = null, c = function(b) {
      return cljs.core.boolean$(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b));
    }, d = function(b, c) {
      return cljs.core.boolean$(function() {
        var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
        return cljs.core.truth_(d) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c) : d;
      }());
    }, e = function(b, c, d) {
      return cljs.core.boolean$(function() {
        var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
        return cljs.core.truth_(e) ? (e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c), cljs.core.truth_(e) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d) : e) : e;
      }());
    }, f = function() {
      var c = function(c, d, e, f) {
        return cljs.core.boolean$(function() {
          var g = b.cljs$core$IFn$_invoke$arity$3(c, d, e);
          return cljs.core.truth_(g) ? cljs.core.every_QMARK_(a, f) : g;
        }());
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
    b = function(a, b, k, l) {
      switch(arguments.length) {
        case 0:
          return !0;
        case 1:
          return c.call(this, a);
        case 2:
          return d.call(this, a, b);
        case 3:
          return e.call(this, a, b, k);
        default:
          var g = null;
          if (3 < arguments.length) {
            g = 0;
            for (var h = Array(arguments.length - 3); g < h.length;) {
              h[g] = arguments[g + 3], ++g;
            }
            g = new cljs.core.IndexedSeq(h, 0, null);
          }
          return f.cljs$core$IFn$_invoke$arity$variadic(a, b, k, g);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    b.cljs$lang$maxFixedArity = 3;
    b.cljs$lang$applyTo = f.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = function() {
      return !0;
    };
    b.cljs$core$IFn$_invoke$arity$1 = c;
    b.cljs$core$IFn$_invoke$arity$2 = d;
    b.cljs$core$IFn$_invoke$arity$3 = e;
    b.cljs$core$IFn$_invoke$arity$variadic = f.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function(c) {
      return cljs.core.boolean$(function() {
        var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
        return cljs.core.truth_(d) ? b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c) : d;
      }());
    }, e = function(c, d) {
      return cljs.core.boolean$(function() {
        var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
        return cljs.core.truth_(e) && (e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d), cljs.core.truth_(e)) ? (e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c), cljs.core.truth_(e) ? b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d) : e) : e;
      }());
    }, f = function(c, d, e) {
      return cljs.core.boolean$(function() {
        var f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
        return cljs.core.truth_(f) && (f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d), cljs.core.truth_(f) && (f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e), cljs.core.truth_(f) && (f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c), cljs.core.truth_(f)))) ? (f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), cljs.core.truth_(f) ? 
        b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e) : f) : f;
      }());
    }, g = function() {
      var d = function(d, e, f, g) {
        return cljs.core.boolean$(function() {
          var h = c.cljs$core$IFn$_invoke$arity$3(d, e, f);
          return cljs.core.truth_(h) ? cljs.core.every_QMARK_(function(c) {
            return function(c) {
              var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
              return cljs.core.truth_(d) ? b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c) : d;
            };
          }(h), g) : h;
        }());
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
    c = function(a, b, c, m) {
      switch(arguments.length) {
        case 0:
          return !0;
        case 1:
          return d.call(this, a);
        case 2:
          return e.call(this, a, b);
        case 3:
          return f.call(this, a, b, c);
        default:
          var h = null;
          if (3 < arguments.length) {
            h = 0;
            for (var k = Array(arguments.length - 3); h < k.length;) {
              k[h] = arguments[h + 3], ++h;
            }
            h = new cljs.core.IndexedSeq(k, 0, null);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(a, b, c, h);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = g.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = function() {
      return !0;
    };
    c.cljs$core$IFn$_invoke$arity$1 = d;
    c.cljs$core$IFn$_invoke$arity$2 = e;
    c.cljs$core$IFn$_invoke$arity$3 = f;
    c.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function(d) {
      return cljs.core.boolean$(function() {
        var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
        return cljs.core.truth_(e) ? (e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), cljs.core.truth_(e) ? c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d) : e) : e;
      }());
    }, f = function(d, e) {
      return cljs.core.boolean$(function() {
        var f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
        return cljs.core.truth_(f) && (f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), cljs.core.truth_(f) && (f = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d), cljs.core.truth_(f) && (f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e), cljs.core.truth_(f)))) ? (f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e), cljs.core.truth_(f) ? 
        c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(e) : c.call(null, e) : f) : f;
      }());
    }, g = function(d, e, f) {
      return cljs.core.boolean$(function() {
        var g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
        return cljs.core.truth_(g) && (g = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), cljs.core.truth_(g) && (g = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d), cljs.core.truth_(g) && (g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e), cljs.core.truth_(g) && (g = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e), cljs.core.truth_(g) && 
        (g = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(e) : c.call(null, e), cljs.core.truth_(g) && (g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(f) : a.call(null, f), cljs.core.truth_(g))))))) ? (g = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(f) : b.call(null, f), cljs.core.truth_(g) ? c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(f) : c.call(null, f) : g) : g;
      }());
    }, h = function() {
      var e = function(e, f, g, h) {
        return cljs.core.boolean$(function() {
          var k = d.cljs$core$IFn$_invoke$arity$3(e, f, g);
          return cljs.core.truth_(k) ? cljs.core.every_QMARK_(function(d) {
            return function(d) {
              var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
              return cljs.core.truth_(e) ? (e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), cljs.core.truth_(e) ? c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d) : e) : e;
            };
          }(k), h) : k;
        }());
      }, f = function(a, b, c, d) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return e.call(this, a, b, c, f);
      };
      f.cljs$lang$maxFixedArity = 3;
      f.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.rest(a);
        return e(b, c, d, a);
      };
      f.cljs$core$IFn$_invoke$arity$variadic = e;
      return f;
    }();
    d = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return !0;
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var k = null;
          if (3 < arguments.length) {
            k = 0;
            for (var m = Array(arguments.length - 3); k < m.length;) {
              m[k] = arguments[k + 3], ++k;
            }
            k = new cljs.core.IndexedSeq(m, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, k);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = h.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = function() {
      return !0;
    };
    d.cljs$core$IFn$_invoke$arity$1 = e;
    d.cljs$core$IFn$_invoke$arity$2 = f;
    d.cljs$core$IFn$_invoke$arity$3 = g;
    d.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return function(a) {
    return function() {
      var b = null, c = function(b) {
        return cljs.core.every_QMARK_(function(a) {
          return function(a) {
            return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
          };
        }(a), a);
      }, d = function(b, c) {
        return cljs.core.every_QMARK_(function(a) {
          return function(a) {
            var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            return cljs.core.truth_(d) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c) : d;
          };
        }(a), a);
      }, e = function(b, c, d) {
        return cljs.core.every_QMARK_(function(a) {
          return function(a) {
            var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            return cljs.core.truth_(e) ? (e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c), cljs.core.truth_(e) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d) : e) : e;
          };
        }(a), a);
      }, l = function() {
        var c = function(c, d, e, f) {
          return cljs.core.boolean$(function() {
            var g = b.cljs$core$IFn$_invoke$arity$3(c, d, e);
            return cljs.core.truth_(g) ? cljs.core.every_QMARK_(function(a, b) {
              return function(a) {
                return cljs.core.every_QMARK_(a, f);
              };
            }(g, a), a) : g;
          }());
        }, d = function(a, b, d, e) {
          var f = null;
          if (3 < arguments.length) {
            f = 0;
            for (var g = Array(arguments.length - 3); f < g.length;) {
              g[f] = arguments[f + 3], ++f;
            }
            f = new cljs.core.IndexedSeq(g, 0, null);
          }
          return c.call(this, a, b, d, f);
        };
        d.cljs$lang$maxFixedArity = 3;
        d.cljs$lang$applyTo = function(a) {
          var b = cljs.core.first(a);
          a = cljs.core.next(a);
          var d = cljs.core.first(a);
          a = cljs.core.next(a);
          var e = cljs.core.first(a);
          a = cljs.core.rest(a);
          return c(b, d, e, a);
        };
        d.cljs$core$IFn$_invoke$arity$variadic = c;
        return d;
      }();
      b = function(a, b, f, g) {
        switch(arguments.length) {
          case 0:
            return !0;
          case 1:
            return c.call(this, a);
          case 2:
            return d.call(this, a, b);
          case 3:
            return e.call(this, a, b, f);
          default:
            var h = null;
            if (3 < arguments.length) {
              h = 0;
              for (var k = Array(arguments.length - 3); h < k.length;) {
                k[h] = arguments[h + 3], ++h;
              }
              h = new cljs.core.IndexedSeq(k, 0, null);
            }
            return l.cljs$core$IFn$_invoke$arity$variadic(a, b, f, h);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      b.cljs$lang$maxFixedArity = 3;
      b.cljs$lang$applyTo = l.cljs$lang$applyTo;
      b.cljs$core$IFn$_invoke$arity$0 = function() {
        return !0;
      };
      b.cljs$core$IFn$_invoke$arity$1 = c;
      b.cljs$core$IFn$_invoke$arity$2 = d;
      b.cljs$core$IFn$_invoke$arity$3 = e;
      b.cljs$core$IFn$_invoke$arity$variadic = l.cljs$core$IFn$_invoke$arity$variadic;
      return b;
    }();
  }(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
};
cljs.core.every_pred.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function() {
    var b = null, c = function(b) {
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
    }, d = function(b, c) {
      var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
      return cljs.core.truth_(d) ? d : a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
    }, e = function(b, c, d) {
      b = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
      if (cljs.core.truth_(b)) {
        return b;
      }
      c = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      return cljs.core.truth_(c) ? c : a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    }, f = function() {
      var c = function(c, d, e, f) {
        c = b.cljs$core$IFn$_invoke$arity$3(c, d, e);
        return cljs.core.truth_(c) ? c : cljs.core.some(a, f);
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
    b = function(a, b, k, l) {
      switch(arguments.length) {
        case 0:
          return null;
        case 1:
          return c.call(this, a);
        case 2:
          return d.call(this, a, b);
        case 3:
          return e.call(this, a, b, k);
        default:
          var g = null;
          if (3 < arguments.length) {
            g = 0;
            for (var h = Array(arguments.length - 3); g < h.length;) {
              h[g] = arguments[g + 3], ++g;
            }
            g = new cljs.core.IndexedSeq(h, 0, null);
          }
          return f.cljs$core$IFn$_invoke$arity$variadic(a, b, k, g);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    b.cljs$lang$maxFixedArity = 3;
    b.cljs$lang$applyTo = f.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = function() {
      return null;
    };
    b.cljs$core$IFn$_invoke$arity$1 = c;
    b.cljs$core$IFn$_invoke$arity$2 = d;
    b.cljs$core$IFn$_invoke$arity$3 = e;
    b.cljs$core$IFn$_invoke$arity$variadic = f.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function(c) {
      var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      return cljs.core.truth_(d) ? d : b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
    }, e = function(c, d) {
      var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      if (cljs.core.truth_(e)) {
        return e;
      }
      e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      if (cljs.core.truth_(e)) {
        return e;
      }
      e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
      return cljs.core.truth_(e) ? e : b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
    }, f = function(c, d, e) {
      var f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      if (cljs.core.truth_(f)) {
        return f;
      }
      f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      if (cljs.core.truth_(f)) {
        return f;
      }
      f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e);
      if (cljs.core.truth_(f)) {
        return f;
      }
      c = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
      if (cljs.core.truth_(c)) {
        return c;
      }
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      return cljs.core.truth_(d) ? d : b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e);
    }, g = function() {
      var d = function(d, e, f, g) {
        d = c.cljs$core$IFn$_invoke$arity$3(d, e, f);
        return cljs.core.truth_(d) ? d : cljs.core.some(function(c) {
          return function(c) {
            var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
            return cljs.core.truth_(d) ? d : b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c);
          };
        }(d), g);
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
    c = function(a, b, c, m) {
      switch(arguments.length) {
        case 0:
          return null;
        case 1:
          return d.call(this, a);
        case 2:
          return e.call(this, a, b);
        case 3:
          return f.call(this, a, b, c);
        default:
          var h = null;
          if (3 < arguments.length) {
            h = 0;
            for (var k = Array(arguments.length - 3); h < k.length;) {
              k[h] = arguments[h + 3], ++h;
            }
            h = new cljs.core.IndexedSeq(k, 0, null);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(a, b, c, h);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = g.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = function() {
      return null;
    };
    c.cljs$core$IFn$_invoke$arity$1 = d;
    c.cljs$core$IFn$_invoke$arity$2 = e;
    c.cljs$core$IFn$_invoke$arity$3 = f;
    c.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function(d) {
      var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      if (cljs.core.truth_(e)) {
        return e;
      }
      e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      return cljs.core.truth_(e) ? e : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
    }, f = function(d, e) {
      var f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      if (cljs.core.truth_(f)) {
        return f;
      }
      f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      if (cljs.core.truth_(f)) {
        return f;
      }
      f = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
      if (cljs.core.truth_(f)) {
        return f;
      }
      f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e);
      if (cljs.core.truth_(f)) {
        return f;
      }
      f = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e);
      return cljs.core.truth_(f) ? f : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(e) : c.call(null, e);
    }, g = function(d, e, f) {
      var g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      if (cljs.core.truth_(g)) {
        return g;
      }
      g = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
      if (cljs.core.truth_(g)) {
        return g;
      }
      d = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
      if (cljs.core.truth_(d)) {
        return d;
      }
      d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e);
      if (cljs.core.truth_(d)) {
        return d;
      }
      d = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e);
      if (cljs.core.truth_(d)) {
        return d;
      }
      e = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(e) : c.call(null, e);
      if (cljs.core.truth_(e)) {
        return e;
      }
      e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(f) : a.call(null, f);
      if (cljs.core.truth_(e)) {
        return e;
      }
      e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(f) : b.call(null, f);
      return cljs.core.truth_(e) ? e : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(f) : c.call(null, f);
    }, h = function() {
      var e = function(e, f, g, h) {
        e = d.cljs$core$IFn$_invoke$arity$3(e, f, g);
        return cljs.core.truth_(e) ? e : cljs.core.some(function(d) {
          return function(d) {
            var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
            if (cljs.core.truth_(e)) {
              return e;
            }
            e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d);
            return cljs.core.truth_(e) ? e : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
          };
        }(e), h);
      }, f = function(a, b, c, d) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return e.call(this, a, b, c, f);
      };
      f.cljs$lang$maxFixedArity = 3;
      f.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.rest(a);
        return e(b, c, d, a);
      };
      f.cljs$core$IFn$_invoke$arity$variadic = e;
      return f;
    }();
    d = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return null;
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var k = null;
          if (3 < arguments.length) {
            k = 0;
            for (var m = Array(arguments.length - 3); k < m.length;) {
              m[k] = arguments[k + 3], ++k;
            }
            k = new cljs.core.IndexedSeq(m, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, k);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = h.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = function() {
      return null;
    };
    d.cljs$core$IFn$_invoke$arity$1 = e;
    d.cljs$core$IFn$_invoke$arity$2 = f;
    d.cljs$core$IFn$_invoke$arity$3 = g;
    d.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return function(a) {
    return function() {
      var b = null, c = function(b) {
        return cljs.core.some(function(a) {
          return function(a) {
            return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
          };
        }(a), a);
      }, d = function(b, c) {
        return cljs.core.some(function(a) {
          return function(a) {
            var d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            return cljs.core.truth_(d) ? d : a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
          };
        }(a), a);
      }, e = function(b, c, d) {
        return cljs.core.some(function(a) {
          return function(a) {
            var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            if (cljs.core.truth_(e)) {
              return e;
            }
            e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
            return cljs.core.truth_(e) ? e : a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
          };
        }(a), a);
      }, l = function() {
        var c = function(c, d, e, f) {
          c = b.cljs$core$IFn$_invoke$arity$3(c, d, e);
          return cljs.core.truth_(c) ? c : cljs.core.some(function(a, b) {
            return function(a) {
              return cljs.core.some(a, f);
            };
          }(c, a), a);
        }, d = function(a, b, d, e) {
          var f = null;
          if (3 < arguments.length) {
            f = 0;
            for (var g = Array(arguments.length - 3); f < g.length;) {
              g[f] = arguments[f + 3], ++f;
            }
            f = new cljs.core.IndexedSeq(g, 0, null);
          }
          return c.call(this, a, b, d, f);
        };
        d.cljs$lang$maxFixedArity = 3;
        d.cljs$lang$applyTo = function(a) {
          var b = cljs.core.first(a);
          a = cljs.core.next(a);
          var d = cljs.core.first(a);
          a = cljs.core.next(a);
          var e = cljs.core.first(a);
          a = cljs.core.rest(a);
          return c(b, d, e, a);
        };
        d.cljs$core$IFn$_invoke$arity$variadic = c;
        return d;
      }();
      b = function(a, b, f, g) {
        switch(arguments.length) {
          case 0:
            return null;
          case 1:
            return c.call(this, a);
          case 2:
            return d.call(this, a, b);
          case 3:
            return e.call(this, a, b, f);
          default:
            var h = null;
            if (3 < arguments.length) {
              h = 0;
              for (var k = Array(arguments.length - 3); h < k.length;) {
                k[h] = arguments[h + 3], ++h;
              }
              h = new cljs.core.IndexedSeq(k, 0, null);
            }
            return l.cljs$core$IFn$_invoke$arity$variadic(a, b, f, h);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      b.cljs$lang$maxFixedArity = 3;
      b.cljs$lang$applyTo = l.cljs$lang$applyTo;
      b.cljs$core$IFn$_invoke$arity$0 = function() {
        return null;
      };
      b.cljs$core$IFn$_invoke$arity$1 = c;
      b.cljs$core$IFn$_invoke$arity$2 = d;
      b.cljs$core$IFn$_invoke$arity$3 = e;
      b.cljs$core$IFn$_invoke$arity$variadic = l.cljs$core$IFn$_invoke$arity$variadic;
      return b;
    }();
  }(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
};
cljs.core.some_fn.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, e = function(a) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
      }, f = function(c, d) {
        var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
        return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, e) : b.call(null, c, e);
      }, g = function() {
        var c = function(c, d, e) {
          d = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(a, d, e);
          return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d);
        }, d = function(a, b, d) {
          var e = null;
          if (2 < arguments.length) {
            e = 0;
            for (var f = Array(arguments.length - 2); e < f.length;) {
              f[e] = arguments[e + 2], ++e;
            }
            e = new cljs.core.IndexedSeq(f, 0, null);
          }
          return c.call(this, a, b, e);
        };
        d.cljs$lang$maxFixedArity = 2;
        d.cljs$lang$applyTo = function(a) {
          var b = cljs.core.first(a);
          a = cljs.core.next(a);
          var d = cljs.core.first(a);
          a = cljs.core.rest(a);
          return c(b, d, a);
        };
        d.cljs$core$IFn$_invoke$arity$variadic = c;
        return d;
      }();
      c = function(a, b, c) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
          case 2:
            return f.call(this, a, b);
          default:
            var h = null;
            if (2 < arguments.length) {
              h = 0;
              for (var k = Array(arguments.length - 2); h < k.length;) {
                k[h] = arguments[h + 2], ++h;
              }
              h = new cljs.core.IndexedSeq(k, 0, null);
            }
            return g.cljs$core$IFn$_invoke$arity$variadic(a, b, h);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      c.cljs$lang$maxFixedArity = 2;
      c.cljs$lang$applyTo = g.cljs$lang$applyTo;
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      c.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
      return c;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      if (cljs.core.chunked_seq_QMARK_(c)) {
        for (var d = cljs.core.chunk_first(c), e = cljs.core.count(d), f = cljs.core.chunk_buffer(e), g = 0;;) {
          if (g < e) {
            cljs.core.chunk_append(f, function() {
              var b = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(d, g);
              return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            }()), g += 1;
          } else {
            break;
          }
        }
        return cljs.core.chunk_cons(cljs.core.chunk(f), cljs.core.map.cljs$core$IFn$_invoke$arity$2(a, cljs.core.chunk_rest(c)));
      }
      return cljs.core.cons(function() {
        var b = cljs.core.first(c);
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rest(c)));
    }
    return null;
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.seq(b), e = cljs.core.seq(c);
    return d && e ? cljs.core.cons(function() {
      var b = cljs.core.first(d), c = cljs.core.first(e);
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(a, cljs.core.rest(d), cljs.core.rest(e))) : null;
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return new cljs.core.LazySeq(null, function() {
    var e = cljs.core.seq(b), f = cljs.core.seq(c), g = cljs.core.seq(d);
    return e && f && g ? cljs.core.cons(function() {
      var b = cljs.core.first(e), c = cljs.core.first(f), d = cljs.core.first(g);
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d);
    }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(a, cljs.core.rest(e), cljs.core.rest(f), cljs.core.rest(g))) : null;
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  var f = function k(a) {
    return new cljs.core.LazySeq(null, function() {
      var b = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, a);
      return cljs.core.every_QMARK_(cljs.core.identity, b) ? cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, b), k(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, b))) : null;
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(b) {
    return function(b) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(a, b);
    };
  }(f), f(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(e, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c, b], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return function(b) {
    return function(a) {
      return function() {
        var c = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(c, d) {
          var e = cljs.core.deref(a), f = cljs.core._vreset_BANG_(a, cljs.core._deref(a) - 1);
          e = 0 < e ? b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d) : c;
          return 0 < f ? e : cljs.core.ensure_reduced(e);
        };
        c = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        c.cljs$core$IFn$_invoke$arity$0 = e;
        c.cljs$core$IFn$_invoke$arity$1 = f;
        c.cljs$core$IFn$_invoke$arity$2 = g;
        return c;
      }();
    }(cljs.core.volatile_BANG_(a));
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (0 < a) {
      var c = cljs.core.seq(b);
      return c ? cljs.core.cons(cljs.core.first(c), cljs.core.take.cljs$core$IFn$_invoke$arity$2(a - 1, cljs.core.rest(c))) : null;
    }
    return null;
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return function(b) {
    return function(a) {
      return function() {
        var c = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(c, d) {
          var e = cljs.core.deref(a);
          cljs.core._vreset_BANG_(a, cljs.core._deref(a) - 1);
          return 0 < e ? c : b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d);
        };
        c = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        c.cljs$core$IFn$_invoke$arity$0 = e;
        c.cljs$core$IFn$_invoke$arity$1 = f;
        c.cljs$core$IFn$_invoke$arity$2 = g;
        return c;
      }();
    }(cljs.core.volatile_BANG_(a));
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function(c) {
    return function() {
      return c(a, b);
    };
  }(function(a, b) {
    for (;;) {
      var c = cljs.core.seq(b);
      if (0 < a && c) {
        var d = a - 1;
        c = cljs.core.rest(c);
        a = d;
        b = c;
      } else {
        return c;
      }
    }
  }), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, a);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(a, b) {
    return a;
  }, b, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(a, b));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function(a, b) {
  for (var c = cljs.core.seq(b), d = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(a, b));;) {
    if (d) {
      c = cljs.core.next(c), d = cljs.core.next(d);
    } else {
      return c;
    }
  }
};
cljs.core.drop_while = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          var f = cljs.core.deref(c);
          if (cljs.core.truth_(cljs.core.truth_(f) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e) : f)) {
            return d;
          }
          cljs.core.vreset_BANG_(c, null);
          return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e);
        };
        d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_(!0));
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function(c) {
    return function() {
      return c(a, b);
    };
  }(function(a, b) {
    for (;;) {
      var c = cljs.core.seq(b);
      if (cljs.core.truth_(function() {
        var b = c;
        return b ? (b = cljs.core.first(c), a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b)) : b;
      }())) {
        var d = a, g = cljs.core.rest(c);
        a = d;
        b = g;
      } else {
        return c;
      }
    }
  }), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function(a) {
  return new cljs.core.LazySeq(null, function() {
    var b = cljs.core.seq(a);
    return b ? cljs.core.concat.cljs$core$IFn$_invoke$arity$2(b, cljs.core.cycle.cljs$core$IFn$_invoke$arity$1 ? cljs.core.cycle.cljs$core$IFn$_invoke$arity$1(b) : cljs.core.cycle.call(null, b)) : null;
  }, null, null);
};
cljs.core.split_at = function(a, b) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, b), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(a, b)], null);
};
cljs.core.repeat = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(a, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(a));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(b));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function(a, b) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(b));
};
cljs.core.repeatedly = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(a));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(b));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function(a, b) {
  return cljs.core.cons(b, new cljs.core.LazySeq(null, function() {
    var c = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
    return cljs.core.iterate.cljs$core$IFn$_invoke$arity$2 ? cljs.core.iterate.cljs$core$IFn$_invoke$arity$2(a, c) : cljs.core.iterate.call(null, a, c);
  }, null, null));
};
cljs.core.interleave = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.List.EMPTY;
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.LazySeq(null, function() {
    return a;
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(a), d = cljs.core.seq(b);
    return c && d ? cljs.core.cons(cljs.core.first(c), cljs.core.cons(cljs.core.first(d), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(c), cljs.core.rest(d)))) : null;
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(c, b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a], 0)));
    return cljs.core.every_QMARK_(cljs.core.identity, d) ? cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, d), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, d))) : null;
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          if (cljs.core.truth_(cljs.core.deref(c))) {
            var f = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, a) : b.call(null, d, a);
            return cljs.core.reduced_QMARK_(f) ? f : b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(f, e) : b.call(null, f, e);
          }
          cljs.core.vreset_BANG_(c, !0);
          return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e);
        };
        d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_(!1));
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(a), b));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function(a) {
  return function e(a, d) {
    return new cljs.core.LazySeq(null, function() {
      var c = cljs.core.seq(a);
      return c ? cljs.core.cons(cljs.core.first(c), e(cljs.core.rest(c), d)) : cljs.core.seq(d) ? e(cljs.core.first(d), cljs.core.rest(d)) : null;
    }, null, null);
  }(null, a);
};
cljs.core.mapcat = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(a), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, a, b));
};
cljs.core.mapcat.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, e = function(a) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
      }, f = function(c, d) {
        return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d)) ? b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d) : c;
      };
      c = function(a, b) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
          case 2:
            return f.call(this, a, b);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      if (cljs.core.chunked_seq_QMARK_(c)) {
        for (var d = cljs.core.chunk_first(c), e = cljs.core.count(d), f = cljs.core.chunk_buffer(e), g = 0;;) {
          if (g < e) {
            cljs.core.truth_(function() {
              var b = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(d, g);
              return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
            }()) && cljs.core.chunk_append(f, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(d, g)), g += 1;
          } else {
            break;
          }
        }
        return cljs.core.chunk_cons(cljs.core.chunk(f), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(a, cljs.core.chunk_rest(c)));
      }
      e = cljs.core.first(c);
      c = cljs.core.rest(c);
      return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e)) ? cljs.core.cons(e, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(a, c)) : cljs.core.filter.cljs$core$IFn$_invoke$arity$2(a, c);
    }
    return null;
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(a));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(a), b);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function(a, b, c) {
  return function f(c) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(c, cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c)], 0)) : null);
    }, null, null);
  }(c);
};
cljs.core.flatten = function(a) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(a) {
    return !cljs.core.sequential_QMARK_(a);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, a)));
};
cljs.core.into = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != a ? null != a && (a.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IEditableCollection$) ? cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(a), b)), cljs.core.meta(a)) : cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, a, b) : cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, b);
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != a && (a.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IEditableCollection$) ? cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(b, cljs.core.conj_BANG_, cljs.core.transient$(a), c)), cljs.core.meta(a)) : cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(b, cljs.core.conj, a, c);
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, d) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(b, a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), b));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(a, b, c));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function(a, b) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, d) {
    return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d)) ? cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(b, d) : b;
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), b));
};
cljs.core.partition = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(a, a, b);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.seq(c);
    if (d) {
      var e = cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, d);
      return a === cljs.core.count(e) ? cljs.core.cons(e, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(b, d))) : null;
    }
    return null;
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return new cljs.core.LazySeq(null, function() {
    var e = cljs.core.seq(d);
    if (e) {
      var f = cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, e);
      if (a === cljs.core.count(f)) {
        return cljs.core.cons(f, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(a, b, c, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(b, e)));
      }
      e = cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(f, c));
      return cljs.core._conj(cljs.core.List.EMPTY, e);
    }
    return null;
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, a, b);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.lookup_sentinel;
  for (b = cljs.core.seq(b);;) {
    if (null != b) {
      a = cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, cljs.core.first(b), d);
      if (d === a) {
        return c;
      }
      b = cljs.core.next(b);
    } else {
      return a;
    }
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function(a, b, c) {
  b = cljs.core.seq(b);
  var d = cljs.core.first(b), e = cljs.core.next(b);
  return e ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, d, function() {
    var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, d);
    return cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3 ? cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3(b, e, c) : cljs.core.assoc_in.call(null, b, e, c);
  }()) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, d, c);
};
cljs.core.update_in = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], b);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  b = cljs.core.seq(b);
  var d = cljs.core.first(b);
  return (b = cljs.core.next(b)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, d, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, d), b, c)) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, d, function() {
    var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, d);
    return c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b);
  }());
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  b = cljs.core.seq(b);
  var e = cljs.core.first(b);
  return (b = cljs.core.next(b)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, e, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, e), b, c, d)) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, e, function() {
    var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, e);
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(b, d) : c.call(null, b, d);
  }());
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  b = cljs.core.seq(b);
  var f = cljs.core.first(b);
  return (b = cljs.core.next(b)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, f, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, f), b, c, d, e)) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, f, function() {
    var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, f);
    return c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(b, d, e) : c.call(null, b, d, e);
  }());
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  b = cljs.core.seq(b);
  var g = cljs.core.first(b);
  return (b = cljs.core.next(b)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, g, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, g), b, c, d, e, f)) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, g, function() {
    var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, g);
    return c.cljs$core$IFn$_invoke$arity$4 ? c.cljs$core$IFn$_invoke$arity$4(b, d, e, f) : c.call(null, b, d, e, f);
  }());
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f, g) {
  var h = cljs.core.seq(b);
  b = cljs.core.first(h);
  return (h = cljs.core.next(h)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b), h, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g], 0))) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(c, cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b), d, e, f, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([g], 
  0)));
};
cljs.core.update_in.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  var f = cljs.core.next(e);
  e = cljs.core.first(f);
  var g = cljs.core.next(f);
  f = cljs.core.first(g);
  g = cljs.core.next(g);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f, g);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], b);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, function() {
    var d = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
    return c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, function() {
    var e = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(e, d) : c.call(null, e, d);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, function() {
    var f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
    return c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(f, d, e) : c.call(null, f, d, e);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, function() {
    var g = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
    return c.cljs$core$IFn$_invoke$arity$4 ? c.cljs$core$IFn$_invoke$arity$4(g, d, e, f) : c.call(null, g, d, e, f);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f, g) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(c, cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b), d, e, f, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([g], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  var f = cljs.core.next(e);
  e = cljs.core.first(f);
  var g = cljs.core.next(f);
  f = cljs.core.first(g);
  g = cljs.core.next(g);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f, g);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(a, b) {
  this.edit = a;
  this.arr = b;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = !0;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function(a, b) {
  return new cljs.core.VectorNode(a, b);
};
cljs.core.pv_fresh_node = function(a) {
  return new cljs.core.VectorNode(a, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function(a, b) {
  return a.arr[b];
};
cljs.core.pv_aset = function(a, b, c) {
  return a.arr[b] = c;
};
cljs.core.pv_clone_node = function(a) {
  return new cljs.core.VectorNode(a.edit, cljs.core.aclone(a.arr));
};
cljs.core.tail_off = function(a) {
  a = a.cnt;
  return 32 > a ? 0 : a - 1 >>> 5 << 5;
};
cljs.core.new_path = function(a, b, c) {
  for (;;) {
    if (0 === b) {
      return c;
    }
    var d = cljs.core.pv_fresh_node(a);
    cljs.core.pv_aset(d, 0, c);
    c = d;
    b -= 5;
  }
};
cljs.core.push_tail = function(a, b, c, d) {
  var e = cljs.core.pv_clone_node(c), f = a.cnt - 1 >>> b & 31;
  5 === b ? cljs.core.pv_aset(e, f, d) : (c = cljs.core.pv_aget(c, f), null != c ? (b -= 5, a = cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : cljs.core.push_tail.call(null, a, b, c, d)) : a = cljs.core.new_path(null, b - 5, d), cljs.core.pv_aset(e, f, a));
  return e;
};
cljs.core.vector_index_out_of_bounds = function(a, b) {
  throw Error(["No item ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " in vector of length ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.first_array_for_longvec = function(a) {
  var b = a.root;
  for (a = a.shift;;) {
    if (0 < a) {
      b = cljs.core.pv_aget(b, 0), a -= 5;
    } else {
      return b.arr;
    }
  }
};
cljs.core.unchecked_array_for = function(a, b) {
  if (b >= cljs.core.tail_off(a)) {
    return a.tail;
  }
  for (var c = a.root, d = a.shift;;) {
    if (0 < d) {
      c = cljs.core.pv_aget(c, b >>> d & 31), d -= 5;
    } else {
      return c.arr;
    }
  }
};
cljs.core.array_for = function(a, b) {
  return 0 <= b && b < a.cnt ? cljs.core.unchecked_array_for(a, b) : cljs.core.vector_index_out_of_bounds(b, a.cnt);
};
cljs.core.do_assoc = function(a, b, c, d, e) {
  var f = cljs.core.pv_clone_node(c);
  if (0 === b) {
    cljs.core.pv_aset(f, d & 31, e);
  } else {
    var g = d >>> b & 31;
    cljs.core.pv_aset(f, g, function() {
      var f = b - 5, k = cljs.core.pv_aget(c, g);
      return cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5 ? cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5(a, f, k, d, e) : cljs.core.do_assoc.call(null, a, f, k, d, e);
    }());
  }
  return f;
};
cljs.core.pop_tail = function(a, b, c) {
  var d = a.cnt - 2 >>> b & 31;
  if (5 < b) {
    b -= 5;
    var e = cljs.core.pv_aget(c, d);
    a = cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3(a, b, e) : cljs.core.pop_tail.call(null, a, b, e);
    if (null == a && 0 === d) {
      return null;
    }
    c = cljs.core.pv_clone_node(c);
    cljs.core.pv_aset(c, d, a);
    return c;
  }
  if (0 === d) {
    return null;
  }
  c = cljs.core.pv_clone_node(c);
  cljs.core.pv_aset(c, d, null);
  return c;
};
cljs.core.RangedIterator = function(a, b, c, d, e, f) {
  this.i = a;
  this.base = b;
  this.arr = c;
  this.v = d;
  this.start = e;
  this.end = f;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  return this.i < this.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  32 === this.i - this.base && (this.arr = cljs.core.unchecked_array_for(this.v, this.i), this.base += 32);
  var a = this.arr[this.i & 31];
  this.i += 1;
  return a;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = !0;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function(a, b, c, d, e, f) {
  return new cljs.core.RangedIterator(a, b, c, d, e, f);
};
cljs.core.ranged_iterator = function(a, b, c) {
  return new cljs.core.RangedIterator(b, b - b % 32, b < cljs.core.count(a) ? cljs.core.unchecked_array_for(a, b) : null, a, b, c);
};
cljs.core.pv_reduce = function(a) {
  switch(arguments.length) {
    case 4:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return c < d ? cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(a, b, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, c), c + 1, d) : b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = c;
  c = d;
  for (d = cljs.core.unchecked_array_for(a, d);;) {
    if (c < e) {
      var g = c & 31;
      d = 0 === g ? cljs.core.unchecked_array_for(a, c) : d;
      g = d[g];
      f = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(f, g) : b.call(null, f, g);
      if (cljs.core.reduced_QMARK_(f)) {
        return cljs.core.deref(f);
      }
      c += 1;
    } else {
      return f;
    }
  }
};
cljs.core.pv_reduce.cljs$lang$maxFixedArity = 5;
cljs.core.APersistentVector = function() {
};
cljs.core.PersistentVector = function(a, b, c, d, e, f) {
  this.meta = a;
  this.cnt = b;
  this.shift = c;
  this.root = d;
  this.tail = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentVector.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  return 0 <= b && b < this.cnt ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core.unchecked_array_for(this, b)[b & 31]], null) : null;
};
cljs.core.PersistentVector.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentVector.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return "number" === typeof b ? this.cljs$core$IIndexed$_nth$arity$3(null, b, c) : c;
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = 0;
  for (var d = c;;) {
    if (a < this.cnt) {
      var e = cljs.core.unchecked_array_for(this, a);
      c = e.length;
      a: {
        for (var f = 0;;) {
          if (f < c) {
            var g = f + a, h = e[f];
            d = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(d, g, h) : b.call(null, d, g, h);
            if (cljs.core.reduced_QMARK_(d)) {
              e = d;
              break a;
            }
            f += 1;
          } else {
            e = d;
            break a;
          }
        }
      }
      if (cljs.core.reduced_QMARK_(e)) {
        return cljs.core.deref(e);
      }
      a += c;
      d = e;
    } else {
      return d;
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$APersistentVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  return cljs.core.array_for(this, b)[b & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 <= b && b < this.cnt ? cljs.core.unchecked_array_for(this, b)[b & 31] : c;
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  if (0 <= b && b < this.cnt) {
    return cljs.core.tail_off(this) <= b ? (a = cljs.core.aclone(this.tail), a[b & 31] = c, new cljs.core.PersistentVector(this.meta, this.cnt, this.shift, this.root, a, null)) : new cljs.core.PersistentVector(this.meta, this.cnt, this.shift, cljs.core.do_assoc(this, this.shift, this.root, b, c), this.tail, null);
  }
  if (b === this.cnt) {
    return this.cljs$core$ICollection$_conj$arity$2(null, c);
  }
  throw Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " out of bounds  [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.cnt), "]"].join(""));
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return cljs.core.ranged_iterator(this, 0, this.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentVector(this.meta, this.cnt, this.shift, this.root, this.tail, this.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return 0 < this.cnt ? this.cljs$core$IIndexed$_nth$arity$2(null, this.cnt - 1) : null;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  if (0 === this.cnt) {
    throw Error("Can't pop empty vector");
  }
  if (1 === this.cnt) {
    return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, this.meta);
  }
  if (1 < this.cnt - cljs.core.tail_off(this)) {
    return new cljs.core.PersistentVector(this.meta, this.cnt - 1, this.shift, this.root, this.tail.slice(0, -1), null);
  }
  a = cljs.core.unchecked_array_for(this, this.cnt - 2);
  var b = cljs.core.pop_tail(this, this.shift, this.root);
  b = null == b ? cljs.core.PersistentVector.EMPTY_NODE : b;
  var c = this.cnt - 1;
  return 5 < this.shift && null == cljs.core.pv_aget(b, 1) ? new cljs.core.PersistentVector(this.meta, c, this.shift - 5, cljs.core.pv_aget(b, 0), a, null) : new cljs.core.PersistentVector(this.meta, c, this.shift, b, a, null);
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return 0 < this.cnt ? new cljs.core.RSeq(this, this.cnt - 1, null) : null;
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  if (b instanceof cljs.core.PersistentVector) {
    if (this.cnt === cljs.core.count(b)) {
      for (var c = this.cljs$core$IIterable$_iterator$arity$1(null), d = cljs.core._iterator(b);;) {
        if (c.hasNext()) {
          var e = c.next(), f = d.next();
          if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(e, f)) {
            return !1;
          }
        } else {
          return !0;
        }
      }
    } else {
      return !1;
    }
  } else {
    return cljs.core.equiv_sequential(this, b);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return new cljs.core.TransientVector(this.cnt, this.shift, cljs.core.tv_editable_root(this.root), cljs.core.tv_editable_tail(this.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, this.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(this, b, 0, this.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  a = 0;
  for (var d = c;;) {
    if (a < this.cnt) {
      var e = cljs.core.unchecked_array_for(this, a);
      c = e.length;
      a: {
        for (var f = 0;;) {
          if (f < c) {
            var g = e[f];
            d = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, g) : b.call(null, d, g);
            if (cljs.core.reduced_QMARK_(d)) {
              e = d;
              break a;
            }
            f += 1;
          } else {
            e = d;
            break a;
          }
        }
      }
      if (cljs.core.reduced_QMARK_(e)) {
        return cljs.core.deref(e);
      }
      a += c;
      d = e;
    } else {
      return d;
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  if ("number" === typeof b) {
    return this.cljs$core$IVector$_assoc_n$arity$3(null, b, c);
  }
  throw Error("Vector's key for assoc must be a number.");
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return cljs.core.integer_QMARK_(b) ? 0 <= b && b < this.cnt : !1;
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return 0 === this.cnt ? null : 32 >= this.cnt ? new cljs.core.IndexedSeq(this.tail, 0, null) : cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(this, cljs.core.first_array_for_longvec(this), 0, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentVector(b, this.cnt, this.shift, this.root, this.tail, this.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (32 > this.cnt - cljs.core.tail_off(this)) {
    for (var c = this.tail.length, d = Array(c + 1), e = 0;;) {
      if (e < c) {
        d[e] = this.tail[e], e += 1;
      } else {
        break;
      }
    }
    d[c] = b;
    return new cljs.core.PersistentVector(this.meta, this.cnt + 1, this.shift, this.root, d, null);
  }
  c = (d = this.cnt >>> 5 > 1 << this.shift) ? this.shift + 5 : this.shift;
  d ? (d = cljs.core.pv_fresh_node(null), cljs.core.pv_aset(d, 0, this.root), cljs.core.pv_aset(d, 1, cljs.core.new_path(null, this.shift, new cljs.core.VectorNode(null, this.tail)))) : d = cljs.core.push_tail(this, this.shift, this.root, new cljs.core.VectorNode(null, this.tail));
  return new cljs.core.PersistentVector(this.meta, this.cnt + 1, c, d, [b], null);
};
cljs.core.PersistentVector.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$IIndexed$_nth$arity$2(null, c);
      case 3:
        return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentVector.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, a);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, a, b);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = !0;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function(a, b, c, d, e, f) {
  return new cljs.core.PersistentVector(a, b, c, d, e, f);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(a, b) {
  var c = a.length, d = b ? a : cljs.core.aclone(a);
  if (32 > c) {
    return new cljs.core.PersistentVector(null, c, 5, cljs.core.PersistentVector.EMPTY_NODE, d, null);
  }
  for (var e = d.slice(0, 32), f = 32, g = (new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, e, null)).cljs$core$IEditableCollection$_as_transient$arity$1(null);;) {
    if (f < c) {
      e = f + 1, g = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(g, d[f]), f = e;
    } else {
      return cljs.core.persistent_BANG_(g);
    }
  }
};
var G__16487_16490 = cljs.core.PersistentVector.prototype, G__16488_16491 = cljs.core.ITER_SYMBOL, G__16489_16492 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__16487_16490, G__16488_16491);
goog.object.set(G__16487_16490, G__16488_16491, G__16489_16492);
cljs.core.vec = function(a) {
  return cljs.core.array_QMARK_(a) ? cljs.core.PersistentVector.fromArray(a, !0) : cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), a));
};
cljs.core.vector = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return a instanceof cljs.core.IndexedSeq && 0 === a.i ? cljs.core.PersistentVector.fromArray(a.arr, !0) : cljs.core.vec(a);
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(a) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.ChunkedSeq = function(a, b, c, d, e, f) {
  this.vec = a;
  this.node = b;
  this.i = c;
  this.off = d;
  this.meta = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ChunkedSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return this.off + 1 < this.node.length ? (a = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(this.vec, this.node, this.i, this.off + 1), null == a ? null : a) : this.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, this.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(this.vec, b, this.i + this.off, cljs.core.count(this.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(this.vec, b, c, this.i + this.off, cljs.core.count(this.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.node[this.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return this.off + 1 < this.node.length ? (a = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(this.vec, this.node, this.i, this.off + 1), null == a ? cljs.core.List.EMPTY : a) : this.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(a) {
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(this.node, this.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(a) {
  a = this.i + this.node.length;
  return a < cljs.core._count(this.vec) ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(this.vec, cljs.core.unchecked_array_for(this.vec, a), a, 0) : cljs.core.List.EMPTY;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(this.vec, this.node, this.i, this.off, b);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(a) {
  a = this.i + this.node.length;
  return a < cljs.core._count(this.vec) ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(this.vec, cljs.core.unchecked_array_for(this.vec, a), a, 0) : null;
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = !0;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function(a, b, c, d, e, f) {
  return new cljs.core.ChunkedSeq(a, b, c, d, e, f);
};
var G__16499_16502 = cljs.core.ChunkedSeq.prototype, G__16500_16503 = cljs.core.ITER_SYMBOL, G__16501_16504 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__16499_16502, G__16500_16503);
goog.object.set(G__16499_16502, G__16500_16503, G__16501_16504);
cljs.core.chunked_seq = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.ChunkedSeq(a, cljs.core.array_for(a, b), b, c, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return new cljs.core.ChunkedSeq(a, b, c, d, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return new cljs.core.ChunkedSeq(a, b, c, d, e, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(a, b, c, d, e) {
  this.meta = a;
  this.v = b;
  this.start = c;
  this.end = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.Subvec.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  if (0 > b) {
    return null;
  }
  var c = this.start + b;
  return c < this.end ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(this.v, c)], null) : null;
};
cljs.core.Subvec.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Subvec.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return "number" === typeof b ? this.cljs$core$IIndexed$_nth$arity$3(null, b, c) : c;
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = this.start;
  for (var d = 0;;) {
    if (a < this.end) {
      var e = d, f = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.v, a);
      c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, e, f) : b.call(null, c, e, f);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      d += 1;
      a += 1;
    } else {
      return c;
    }
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  return 0 > b || this.end <= this.start + b ? cljs.core.vector_index_out_of_bounds(b, this.end - this.start) : cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.v, this.start + b);
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 > b || this.end <= this.start + b ? c : cljs.core._nth.cljs$core$IFn$_invoke$arity$3(this.v, this.start + b, c);
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  var d = this, e = d.start + b;
  if (0 > b || d.end + 1 <= e) {
    throw Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " out of bounds [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.cljs$core$ICounted$_count$arity$1(null)), "]"].join(""));
  }
  return cljs.core.build_subvec(d.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d.v, e, c), d.start, function() {
    var a = d.end, b = e + 1;
    return a > b ? a : b;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return null != this.v && cljs.core.PROTOCOL_SENTINEL === this.v.cljs$core$APersistentVector$ ? cljs.core.ranged_iterator(this.v, this.start, this.end) : cljs.core.seq_iter(this);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.Subvec(this.meta, this.v, this.start, this.end, this.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.end - this.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.v, this.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  if (this.start === this.end) {
    throw Error("Can't pop empty vector");
  }
  return cljs.core.build_subvec(this.meta, this.v, this.start, this.end - 1, null);
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return this.start !== this.end ? new cljs.core.RSeq(this, this.end - this.start - 1, null) : null;
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, this.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return null != this.v && cljs.core.PROTOCOL_SENTINEL === this.v.cljs$core$APersistentVector$ ? cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(this.v, b, this.start, this.end) : cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return null != this.v && cljs.core.PROTOCOL_SENTINEL === this.v.cljs$core$APersistentVector$ ? cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(this.v, b, c, this.start, this.end) : cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  if ("number" === typeof b) {
    return this.cljs$core$IVector$_assoc_n$arity$3(null, b, c);
  }
  throw Error("Subvec's key for assoc must be a number.");
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  var b = this;
  return function(a) {
    return function f(c) {
      return c === b.end ? null : cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b.v, c), new cljs.core.LazySeq(null, function(a) {
        return function() {
          return f(c + 1);
        };
      }(a), null, null));
    };
  }(this)(b.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core.build_subvec(b, this.v, this.start, this.end, this.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.build_subvec(this.meta, cljs.core._assoc_n(this.v, this.end, b), this.start, this.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$IIndexed$_nth$arity$2(null, c);
      case 3:
        return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.Subvec.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, a);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, a, b);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.Subvec.cljs$lang$type = !0;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function(a, b, c, d, e) {
  return new cljs.core.Subvec(a, b, c, d, e);
};
var G__16521_16524 = cljs.core.Subvec.prototype, G__16522_16525 = cljs.core.ITER_SYMBOL, G__16523_16526 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__16521_16524, G__16522_16525);
goog.object.set(G__16521_16524, G__16522_16525, G__16523_16526);
cljs.core.build_subvec = function(a, b, c, d, e) {
  for (;;) {
    if (b instanceof cljs.core.Subvec) {
      c = b.start + c, d = b.start + d, b = b.v;
    } else {
      if (!cljs.core.vector_QMARK_(b)) {
        throw Error("v must satisfy IVector");
      }
      var f = cljs.core.count(b);
      if (0 > c || 0 > d || c > f || d > f) {
        throw Error("Index out of bounds");
      }
      return new cljs.core.Subvec(a, b, c, d, e);
    }
  }
};
cljs.core.subvec = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.count(a));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null == b || null == c) {
    throw Error("Assert failed: (and (not (nil? start)) (not (nil? end)))");
  }
  return cljs.core.build_subvec(null, a, b, c, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function(a, b) {
  return a === b.edit ? b : new cljs.core.VectorNode(a, cljs.core.aclone(b.arr));
};
cljs.core.tv_editable_root = function(a) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(a.arr));
};
cljs.core.tv_editable_tail = function(a) {
  var b = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(a, 0, b, 0, a.length);
  return b;
};
cljs.core.tv_push_tail = function(a, b, c, d) {
  var e = cljs.core.tv_ensure_editable(a.root.edit, c), f = a.cnt - 1 >>> b & 31;
  cljs.core.pv_aset(e, f, 5 === b ? d : function() {
    var c = cljs.core.pv_aget(e, f);
    if (null != c) {
      var h = b - 5;
      return cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4(a, h, c, d) : cljs.core.tv_push_tail.call(null, a, h, c, d);
    }
    return cljs.core.new_path(a.root.edit, b - 5, d);
  }());
  return e;
};
cljs.core.tv_pop_tail = function(a, b, c) {
  c = cljs.core.tv_ensure_editable(a.root.edit, c);
  var d = a.cnt - 2 >>> b & 31;
  if (5 < b) {
    b -= 5;
    var e = cljs.core.pv_aget(c, d);
    a = cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3(a, b, e) : cljs.core.tv_pop_tail.call(null, a, b, e);
    if (null == a && 0 === d) {
      return null;
    }
    cljs.core.pv_aset(c, d, a);
    return c;
  }
  if (0 === d) {
    return null;
  }
  cljs.core.pv_aset(c, d, null);
  return c;
};
cljs.core.unchecked_editable_array_for = function(a, b) {
  if (b >= cljs.core.tail_off(a)) {
    return a.tail;
  }
  for (var c = a.root, d = c, e = a.shift;;) {
    if (0 < e) {
      d = cljs.core.tv_ensure_editable(c.edit, cljs.core.pv_aget(d, b >>> e & 31)), e -= 5;
    } else {
      return d.arr;
    }
  }
};
cljs.core.TransientVector = function(a, b, c, d) {
  this.cnt = a;
  this.shift = b;
  this.root = c;
  this.tail = d;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(a, b) {
  if (this.root.edit) {
    if (32 > this.cnt - cljs.core.tail_off(this)) {
      this.tail[this.cnt & 31] = b;
    } else {
      var c = new cljs.core.VectorNode(this.root.edit, this.tail), d = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      d[0] = b;
      this.tail = d;
      if (this.cnt >>> 5 > 1 << this.shift) {
        d = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var e = this.shift + 5;
        d[0] = this.root;
        d[1] = cljs.core.new_path(this.root.edit, this.shift, c);
        this.root = new cljs.core.VectorNode(this.root.edit, d);
        this.shift = e;
      } else {
        this.root = cljs.core.tv_push_tail(this, this.shift, this.root, c);
      }
    }
    this.cnt += 1;
    return this;
  }
  throw Error("conj! after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(a) {
  if (this.root.edit) {
    this.root.edit = null;
    a = this.cnt - cljs.core.tail_off(this);
    var b = Array(a);
    cljs.core.array_copy(this.tail, 0, b, 0, a);
    return new cljs.core.PersistentVector(null, this.cnt, this.shift, this.root, b, null);
  }
  throw Error("persistent! called twice");
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(a, b, c) {
  if ("number" === typeof b) {
    return this.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(null, b, c);
  }
  throw Error("TransientVector's key for assoc! must be a number.");
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(a, b, c) {
  var d = this, e = this;
  if (d.root.edit) {
    if (0 <= b && b < d.cnt) {
      return cljs.core.tail_off(e) <= b ? d.tail[b & 31] = c : (a = function() {
        return function(a) {
          return function l(a, e) {
            var f = cljs.core.tv_ensure_editable(d.root.edit, e);
            if (0 === a) {
              cljs.core.pv_aset(f, b & 31, c);
            } else {
              var h = b >>> a & 31;
              cljs.core.pv_aset(f, h, l(a - 5, cljs.core.pv_aget(f, h)));
            }
            return f;
          };
        }(e)(d.shift, d.root);
      }(), d.root = a), e;
    }
    if (b === d.cnt) {
      return e.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, c);
    }
    throw Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " out of bounds for TransientVector of length", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d.cnt)].join(""));
  }
  throw Error("assoc! after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(a) {
  if (this.root.edit) {
    if (0 === this.cnt) {
      throw Error("Can't pop empty vector");
    }
    if (1 === this.cnt) {
      this.cnt = 0;
    } else {
      if (0 < (this.cnt - 1 & 31)) {
        --this.cnt;
      } else {
        a = cljs.core.unchecked_editable_array_for(this, this.cnt - 2);
        var b = cljs.core.tv_pop_tail(this, this.shift, this.root);
        b = null != b ? b : new cljs.core.VectorNode(this.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
        5 < this.shift && null == cljs.core.pv_aget(b, 1) ? (this.root = cljs.core.tv_ensure_editable(this.root.edit, cljs.core.pv_aget(b, 0)), this.shift -= 5) : this.root = b;
        --this.cnt;
        this.tail = a;
      }
    }
    return this;
  }
  throw Error("pop! after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  if (this.root.edit) {
    return this.cnt;
  }
  throw Error("count after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (this.root.edit) {
    return cljs.core.array_for(this, b)[b & 31];
  }
  throw Error("nth after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 <= b && b < this.cnt ? this.cljs$core$IIndexed$_nth$arity$2(null, b) : c;
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return "number" === typeof b ? this.cljs$core$IIndexed$_nth$arity$3(null, b, c) : c;
};
cljs.core.TransientVector.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.TransientVector.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = !0;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function(a, b, c, d) {
  return new cljs.core.TransientVector(a, b, c, d);
};
cljs.core.PersistentQueueIter = function(a, b) {
  this.fseq = a;
  this.riter = b;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var a = null != this.fseq && cljs.core.seq(this.fseq);
  return a ? a : (a = null != this.riter) ? this.riter.hasNext() : a;
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  if (null != this.fseq) {
    var a = cljs.core.first(this.fseq);
    this.fseq = cljs.core.next(this.fseq);
    return a;
  }
  if (null != this.riter && this.riter.hasNext()) {
    return this.riter.next();
  }
  throw Error("No such element");
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = !0;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function(a, b) {
  return new cljs.core.PersistentQueueIter(a, b);
};
cljs.core.PersistentQueueSeq = function(a, b, c, d) {
  this.meta = a;
  this.front = b;
  this.rear = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return (a = cljs.core.next(this.front)) ? new cljs.core.PersistentQueueSeq(this.meta, a, this.rear, null) : null != this.rear ? new cljs.core.PersistentQueueSeq(this.meta, this.rear, null, null) : null;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.first(this.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return (a = cljs.core.next(this.front)) ? new cljs.core.PersistentQueueSeq(this.meta, a, this.rear, null) : null == this.rear ? this.cljs$core$IEmptyableCollection$_empty$arity$1(null) : new cljs.core.PersistentQueueSeq(this.meta, this.rear, null, null);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentQueueSeq(b, this.front, this.rear, this.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = !0;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function(a, b, c, d) {
  return new cljs.core.PersistentQueueSeq(a, b, c, d);
};
var G__16552_16555 = cljs.core.PersistentQueueSeq.prototype, G__16553_16556 = cljs.core.ITER_SYMBOL, G__16554_16557 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__16552_16555, G__16553_16556);
goog.object.set(G__16552_16555, G__16553_16556, G__16554_16557);
cljs.core.PersistentQueue = function(a, b, c, d, e) {
  this.meta = a;
  this.count = b;
  this.front = c;
  this.rear = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentQueue.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, this.count.cljs$core$IFn$_invoke$arity$1 ? this.count.cljs$core$IFn$_invoke$arity$1(this) : this.count.call(null, this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.PersistentQueueIter(this.front, cljs.core._iterator(this.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentQueue(this.meta, this.count, this.front, this.rear, this.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return cljs.core.first(this.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return cljs.core.truth_(this.front) ? (a = cljs.core.next(this.front)) ? new cljs.core.PersistentQueue(this.meta, this.count - 1, a, this.rear, null) : new cljs.core.PersistentQueue(this.meta, this.count - 1, cljs.core.seq(this.rear), cljs.core.PersistentVector.EMPTY, null) : this;
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentQueue.EMPTY, this.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.first(this.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return cljs.core.rest(cljs.core.seq(this));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  var b = this, c = cljs.core.seq(b.rear);
  return cljs.core.truth_(function() {
    var a = b.front;
    return cljs.core.truth_(a) ? a : c;
  }()) ? new cljs.core.PersistentQueueSeq(null, b.front, cljs.core.seq(c), null) : null;
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentQueue(b, this.count, this.front, this.rear, this.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  var c = this;
  return cljs.core.truth_(c.front) ? new cljs.core.PersistentQueue(c.meta, c.count + 1, c.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
    var a = c.rear;
    return cljs.core.truth_(a) ? a : cljs.core.PersistentVector.EMPTY;
  }(), b), null) : new cljs.core.PersistentQueue(c.meta, c.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(c.front, b), cljs.core.PersistentVector.EMPTY, null);
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = !0;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function(a, b, c, d, e) {
  return new cljs.core.PersistentQueue(a, b, c, d, e);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
var G__16560_16563 = cljs.core.PersistentQueue.prototype, G__16561_16564 = cljs.core.ITER_SYMBOL, G__16562_16565 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__16560_16563, G__16561_16564);
goog.object.set(G__16560_16563, G__16561_16564, G__16562_16565);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return !1;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = !0;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function(a, b) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(b) && !cljs.core.record_QMARK_(b) ? cljs.core.count(a) === cljs.core.count(b) ? (null != a ? a.cljs$lang$protocol_mask$partition0$ & 1048576 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IKVReduce$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, a)) ? cljs.core.reduce_kv(function(a, d, e) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, d, cljs.core.never_equiv), e) ? !0 : cljs.core.reduced(!1);
  }, !0, a) : cljs.core.every_QMARK_(function(a) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, cljs.core.first(a), cljs.core.never_equiv), cljs.core.second(a));
  }, a) : null : null);
};
cljs.core.scan_array = function(a, b, c) {
  for (var d = c.length, e = 0;;) {
    if (e < d) {
      if (b === c[e]) {
        return e;
      }
      e += a;
    } else {
      return null;
    }
  }
};
cljs.core.obj_map_compare_keys = function(a, b) {
  var c = cljs.core.hash(a), d = cljs.core.hash(b);
  return c < d ? -1 : c > d ? 1 : 0;
};
cljs.core.obj_map__GT_hash_map = function(a, b, c) {
  var d = a.keys, e = d.length, f = a.strobj;
  a = cljs.core.meta(a);
  for (var g = 0, h = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);;) {
    if (g < e) {
      var k = d[g];
      g += 1;
      h = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(h, k, goog.object.get(f, k));
    } else {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(h, b, c)), a);
    }
  }
};
cljs.core.obj_clone = function(a, b) {
  for (var c = {}, d = b.length, e = 0;;) {
    if (e < d) {
      var f = b[e], g = c, h = f;
      f = goog.object.get(a, f);
      goog.object.set(g, h, f);
      e += 1;
    } else {
      break;
    }
  }
  return c;
};
cljs.core.ObjMap = function(a, b, c, d, e) {
  this.meta = a;
  this.keys = b;
  this.strobj = c;
  this.update_count = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  return goog.isString(b) && null != cljs.core.scan_array(1, b, this.keys) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, this.strobj[b]], null) : null;
};
cljs.core.ObjMap.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ObjMap.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return goog.isString(b) && null != cljs.core.scan_array(1, b, this.keys) ? this.strobj[b] : c;
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = this.keys.sort(cljs.core.obj_map_compare_keys);
  for (var d = c;;) {
    if (cljs.core.seq(a)) {
      var e = c = cljs.core.first(a);
      c = this.strobj[c];
      c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(d, e, c) : b.call(null, d, e, c);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      a = cljs.core.rest(a);
      d = c;
    } else {
      return d;
    }
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_map(this, b);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, this));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.ObjMap.EMPTY, this.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  if (goog.isString(b) && null != cljs.core.scan_array(1, b, this.keys)) {
    var c = cljs.core.aclone(this.keys), d = cljs.core.obj_clone(this.strobj, this.keys);
    c.splice(cljs.core.scan_array(1, b, c), 1);
    delete d[b];
    return new cljs.core.ObjMap(this.meta, c, d, this.update_count + 1, null);
  }
  return this;
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  if (goog.isString(b)) {
    if (this.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || this.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(this, b, c);
    }
    if (null != cljs.core.scan_array(1, b, this.keys)) {
      return a = cljs.core.obj_clone(this.strobj, this.keys), goog.object.set(a, b, c), new cljs.core.ObjMap(this.meta, this.keys, a, this.update_count + 1, null);
    }
    a = cljs.core.obj_clone(this.strobj, this.keys);
    var d = cljs.core.aclone(this.keys);
    goog.object.set(a, b, c);
    d.push(b);
    return new cljs.core.ObjMap(this.meta, d, a, this.update_count + 1, null);
  }
  return cljs.core.obj_map__GT_hash_map(this, b, c);
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return goog.isString(b) && null != cljs.core.scan_array(1, b, this.keys) ? !0 : !1;
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  var b = this;
  return 0 < b.keys.length ? cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(a) {
    return function(a) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b.strobj[a]], null);
    };
  }(this), b.keys.sort(cljs.core.obj_map_compare_keys)) : null;
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.ObjMap(b, this.keys, this.strobj, this.update_count, this.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_(b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 1)) : cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this, b);
};
cljs.core.ObjMap.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.ObjMap.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = !0;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function(a, b, c, d, e) {
  return new cljs.core.ObjMap(a, b, c, d, e);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(a, b) {
  return new cljs.core.ObjMap(null, a, b, 0, null);
};
cljs.core.RecordIter = function(a, b, c, d, e) {
  this.i = a;
  this.record = b;
  this.base_count = c;
  this.fields = d;
  this.ext_map_iter = e;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var a = this.i < this.base_count;
  return a ? a : this.ext_map_iter.hasNext();
};
cljs.core.RecordIter.prototype.next = function() {
  if (this.i < this.base_count) {
    var a = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this.fields, this.i);
    this.i += 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(this.record, a)], null);
  }
  return this.ext_map_iter.next();
};
cljs.core.RecordIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = !0;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function(a, b, c, d, e) {
  return new cljs.core.RecordIter(a, b, c, d, e);
};
cljs.core.ES6EntriesIterator = function(a) {
  this.s = a;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  if (null != this.s) {
    var a = cljs.core.first(this.s), b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(a, 0, null);
    a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(a, 1, null);
    this.s = cljs.core.next(this.s);
    return {value:[b, a], done:!1};
  }
  return {value:null, done:!0};
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = !0;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function(a) {
  return new cljs.core.ES6EntriesIterator(a);
};
cljs.core.es6_entries_iterator = function(a) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(a));
};
cljs.core.ES6SetEntriesIterator = function(a) {
  this.s = a;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  if (null != this.s) {
    var a = cljs.core.first(this.s);
    this.s = cljs.core.next(this.s);
    return {value:[a, a], done:!1};
  }
  return {value:null, done:!0};
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = !0;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function(a) {
  return new cljs.core.ES6SetEntriesIterator(a);
};
cljs.core.es6_set_entries_iterator = function(a) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(a));
};
cljs.core.array_index_of_nil_QMARK_ = function(a) {
  for (var b = a.length, c = 0;;) {
    if (b <= c) {
      return -1;
    }
    if (null == a[c]) {
      return c;
    }
    c += 2;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function(a, b) {
  for (var c = a.length, d = b.fqn, e = 0;;) {
    if (c <= e) {
      return -1;
    }
    if (a[e] instanceof cljs.core.Keyword && d === a[e].fqn) {
      return e;
    }
    e += 2;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function(a, b) {
  for (var c = a.length, d = b.str, e = 0;;) {
    if (c <= e) {
      return -1;
    }
    if (a[e] instanceof cljs.core.Symbol && d === a[e].str) {
      return e;
    }
    e += 2;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function(a, b) {
  for (var c = a.length, d = 0;;) {
    if (c <= d) {
      return -1;
    }
    if (b === a[d]) {
      return d;
    }
    d += 2;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function(a, b) {
  for (var c = a.length, d = 0;;) {
    if (c <= d) {
      return -1;
    }
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(b, a[d])) {
      return d;
    }
    d += 2;
  }
};
cljs.core.array_index_of = function(a, b) {
  return b instanceof cljs.core.Keyword ? cljs.core.array_index_of_keyword_QMARK_(a, b) : goog.isString(b) || "number" === typeof b ? cljs.core.array_index_of_identical_QMARK_(a, b) : b instanceof cljs.core.Symbol ? cljs.core.array_index_of_symbol_QMARK_(a, b) : null == b ? cljs.core.array_index_of_nil_QMARK_(a) : cljs.core.array_index_of_equiv_QMARK_(a, b);
};
cljs.core.array_map_index_of = function(a, b) {
  return cljs.core.array_index_of(a.arr, b);
};
cljs.core.array_extend_kv = function(a, b, c) {
  for (var d = a.length, e = Array(d + 2), f = 0;;) {
    if (f < d) {
      e[f] = a[f], f += 1;
    } else {
      break;
    }
  }
  e[d] = b;
  e[d + 1] = c;
  return e;
};
cljs.core.array_map_extend_kv = function(a, b, c) {
  return cljs.core.array_extend_kv(a.arr, b, c);
};
cljs.core.MapEntry = function(a, b, c) {
  this.key = a;
  this.val = b;
  this.__hash = c;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MapEntry.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  switch(b) {
    case 0:
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, this.key], null);
    case 1:
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, this.val], null);
    default:
      return null;
  }
};
cljs.core.MapEntry.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.MapEntry.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, null);
};
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, c);
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (0 === b) {
    return this.key;
  }
  if (1 === b) {
    return this.val;
  }
  throw Error("Index out of bounds");
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 === b ? this.key : 1 === b ? this.val : c;
};
cljs.core.MapEntry.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, b, c);
};
cljs.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_key$arity$1 = function(a) {
  return this.key;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_val$arity$1 = function(a) {
  return this.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return this.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key], null);
};
cljs.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.MapEntry.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b, c);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return 0 === b || 1 === b;
};
cljs.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  a = this.key;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, this.val), a);
};
cljs.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b);
};
cljs.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val, b], null);
};
cljs.core.MapEntry.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$IIndexed$_nth$arity$2(null, c);
      case 3:
        return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.MapEntry.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, a);
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, a, b);
};
cljs.core.MapEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.MapEntry.cljs$lang$type = !0;
cljs.core.MapEntry.cljs$lang$ctorStr = "cljs.core/MapEntry";
cljs.core.MapEntry.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/MapEntry");
};
cljs.core.__GT_MapEntry = function(a, b, c) {
  return new cljs.core.MapEntry(a, b, c);
};
cljs.core.PersistentArrayMapSeq = function(a, b, c) {
  this.arr = a;
  this.i = b;
  this._meta = c;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return this.i < this.arr.length - 2 ? new cljs.core.PersistentArrayMapSeq(this.arr, this.i + 2, this._meta) : null;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return (this.arr.length - this.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.arr[this.i], this.arr[this.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return this.i < this.arr.length - 2 ? new cljs.core.PersistentArrayMapSeq(this.arr, this.i + 2, this._meta) : cljs.core.List.EMPTY;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentArrayMapSeq(this.arr, this.i, b);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = !0;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function(a, b, c) {
  return new cljs.core.PersistentArrayMapSeq(a, b, c);
};
var G__16609_16612 = cljs.core.PersistentArrayMapSeq.prototype, G__16610_16613 = cljs.core.ITER_SYMBOL, G__16611_16614 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__16609_16612, G__16610_16613);
goog.object.set(G__16609_16612, G__16610_16613, G__16611_16614);
cljs.core.persistent_array_map_seq = function(a, b, c) {
  return b <= a.length - 2 ? new cljs.core.PersistentArrayMapSeq(a, b, c) : null;
};
cljs.core.PersistentArrayMapIterator = function(a, b, c) {
  this.arr = a;
  this.i = b;
  this.cnt = c;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  return this.i < this.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var a = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.arr[this.i], this.arr[this.i + 1]], null);
  this.i += 2;
  return a;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = !0;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function(a, b, c) {
  return new cljs.core.PersistentArrayMapIterator(a, b, c);
};
cljs.core.PersistentArrayMap = function(a, b, c, d) {
  this.meta = a;
  this.cnt = b;
  this.arr = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  var c = cljs.core.array_map_index_of(this, b);
  return -1 === c ? null : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.arr[c], this.arr[c + 1]], null);
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.keys(this));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  return cljs.core.es6_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.vals(this));
};
cljs.core.PersistentArrayMap.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentArrayMap.prototype.get = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  a = cljs.core.array_map_index_of(this, b);
  return -1 === a ? c : this.arr[a + 1];
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = this.arr.length;
  for (var d = 0;;) {
    if (d < a) {
      var e = this.arr[d], f = this.arr[d + 1];
      c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, e, f) : b.call(null, c, e, f);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      d += 2;
    } else {
      return c;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.PersistentArrayMapIterator(this.arr, 0, 2 * this.cnt);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentArrayMap(this.meta, this.cnt, this.arr, this.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  if (cljs.core.map_QMARK_(b) && !cljs.core.record_QMARK_(b)) {
    var c = this.arr.length;
    if (this.cnt === b.cljs$core$ICounted$_count$arity$1(null)) {
      for (var d = 0;;) {
        if (d < c) {
          var e = b.cljs$core$ILookup$_lookup$arity$3(null, this.arr[d], cljs.core.lookup_sentinel);
          if (e !== cljs.core.lookup_sentinel) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.arr[d + 1], e)) {
              d += 2;
            } else {
              return !1;
            }
          } else {
            return !1;
          }
        } else {
          return !0;
        }
      }
    } else {
      return !1;
    }
  } else {
    return !1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return new cljs.core.TransientArrayMap({}, this.arr.length, cljs.core.aclone(this.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, this.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  if (0 <= cljs.core.array_map_index_of(this, b)) {
    var c = this.arr.length, d = c - 2;
    if (0 === d) {
      return this.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    }
    d = Array(d);
    for (var e = 0, f = 0;;) {
      if (e >= c) {
        return new cljs.core.PersistentArrayMap(this.meta, this.cnt - 1, d, null);
      }
      cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(b, this.arr[e]) || (d[f] = this.arr[e], d[f + 1] = this.arr[e + 1], f += 2);
      e += 2;
    }
  } else {
    return this;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.array_map_index_of(this, b);
  if (-1 === a) {
    return this.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD ? (c = cljs.core.array_map_extend_kv(this, b, c), new cljs.core.PersistentArrayMap(this.meta, this.cnt + 1, c, null)) : cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, this), b, c), this.meta);
  }
  if (c === this.arr[a + 1]) {
    return this;
  }
  b = cljs.core.aclone(this.arr);
  b[a + 1] = c;
  return new cljs.core.PersistentArrayMap(this.meta, this.cnt, b, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return -1 !== cljs.core.array_map_index_of(this, b);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.persistent_array_map_seq(this.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentArrayMap(b, this.cnt, this.arr, this.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 1));
  }
  for (var c = this, d = cljs.core.seq(b);;) {
    if (null == d) {
      return c;
    }
    var e = cljs.core.first(d);
    if (cljs.core.vector_QMARK_(e)) {
      c = c.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1)), d = cljs.core.next(d);
    } else {
      throw Error("conj on a map takes map entries or seqables of map entries");
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = !0;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function(a, b, c, d) {
  return new cljs.core.PersistentArrayMap(a, b, c, d);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(a, b, c) {
  a = b ? a : cljs.core.aclone(a);
  if (!c) {
    c = [];
    for (b = 0;;) {
      if (b < a.length) {
        var d = a[b], e = a[b + 1];
        -1 === cljs.core.array_index_of(c, d) && (c.push(d), c.push(e));
        b += 2;
      } else {
        break;
      }
    }
    a = c;
  }
  return new cljs.core.PersistentArrayMap(null, a.length / 2, a, null);
};
cljs.core.PersistentArrayMap.createWithCheck = function(a) {
  for (var b = [], c = 0;;) {
    if (c < a.length) {
      var d = a[c], e = a[c + 1];
      if (-1 === cljs.core.array_index_of(b, d)) {
        var f = b;
        f.push(d);
        f.push(e);
      } else {
        throw Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""));
      }
      c += 2;
    } else {
      break;
    }
  }
  return new cljs.core.PersistentArrayMap(null, a.length / 2, a, null);
};
cljs.core.PersistentArrayMap.createAsIfByAssoc = function(a) {
  for (var b = [], c = 0;;) {
    if (c < a.length) {
      var d = a[c], e = a[c + 1], f = cljs.core.array_index_of(b, d);
      -1 === f ? (f = b, f.push(d), f.push(e)) : b[f + 1] = e;
      c += 2;
    } else {
      break;
    }
  }
  return new cljs.core.PersistentArrayMap(null, b.length / 2, b, null);
};
var G__16673_16676 = cljs.core.PersistentArrayMap.prototype, G__16674_16677 = cljs.core.ITER_SYMBOL, G__16675_16678 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__16673_16676, G__16674_16677);
goog.object.set(G__16673_16676, G__16674_16677, G__16675_16678);
cljs.core.TransientArrayMap = function(a, b, c) {
  this.editable_QMARK_ = a;
  this.len = b;
  this.arr = c;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    return cljs.core.quot(this.len, 2);
  }
  throw Error("count after persistent!");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    return a = cljs.core.array_map_index_of(this, b), -1 === a ? c : this.arr[a + 1];
  }
  throw Error("lookup after persistent!");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(a, b) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    if (null != b ? b.cljs$lang$protocol_mask$partition0$ & 2048 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$IMapEntry$ || (b.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, b)) : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, b)) {
      return this.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, cljs.core.key(b), cljs.core.val(b));
    }
    for (var c = cljs.core.seq(b), d = this;;) {
      var e = cljs.core.first(c);
      if (cljs.core.truth_(e)) {
        c = cljs.core.next(c), d = d.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, cljs.core.key(e), cljs.core.val(e));
      } else {
        return d;
      }
    }
  } else {
    throw Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(a) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    return this.editable_QMARK_ = !1, new cljs.core.PersistentArrayMap(null, cljs.core.quot(this.len, 2), this.arr, null);
  }
  throw Error("persistent! called twice");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(a, b, c) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    a = cljs.core.array_map_index_of(this, b);
    if (-1 === a) {
      return this.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD ? (this.len += 2, this.arr.push(b), this.arr.push(c), this) : cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map(this.len, this.arr), b, c);
    }
    c !== this.arr[a + 1] && (this.arr[a + 1] = c);
    return this;
  }
  throw Error("assoc! after persistent!");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(a, b) {
  if (cljs.core.truth_(this.editable_QMARK_)) {
    var c = cljs.core.array_map_index_of(this, b);
    0 <= c && (this.arr[c] = this.arr[this.len - 2], this.arr[c + 1] = this.arr[this.len - 1], c = this.arr, c.pop(), c.pop(), this.len -= 2);
    return this;
  }
  throw Error("dissoc! after persistent!");
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = !0;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function(a, b, c) {
  return new cljs.core.TransientArrayMap(a, b, c);
};
cljs.core.array__GT_transient_hash_map = function(a, b) {
  for (var c = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY), d = 0;;) {
    if (d < a) {
      c = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(c, b[d], b[d + 1]), d += 2;
    } else {
      return c;
    }
  }
};
cljs.core.Box = function(a) {
  this.val = a;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Box.cljs$lang$type = !0;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Box");
};
cljs.core.__GT_Box = function(a) {
  return new cljs.core.Box(a);
};
cljs.core.key_test = function(a, b) {
  return a === b ? !0 : cljs.core.keyword_identical_QMARK_(a, b) ? !0 : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.mask = function(a, b) {
  return a >>> b & 31;
};
cljs.core.clone_and_set = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = cljs.core.aclone(a);
  a[b] = c;
  return a;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  a = cljs.core.aclone(a);
  a[b] = c;
  a[d] = e;
  return a;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function(a, b) {
  var c = Array(a.length - 2);
  cljs.core.array_copy(a, 0, c, 0, 2 * b);
  cljs.core.array_copy(a, 2 * (b + 1), c, 2 * b, c.length - 2 * b);
  return c;
};
cljs.core.bitmap_indexed_node_index = function(a, b) {
  return cljs.core.bit_count(a & b - 1);
};
cljs.core.bitpos = function(a, b) {
  return 1 << (a >>> b & 31);
};
cljs.core.edit_and_set = function(a) {
  switch(arguments.length) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  a = a.ensure_editable(b);
  a.arr[c] = d;
  return a;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  a = a.ensure_editable(b);
  a.arr[c] = d;
  a.arr[e] = f;
  return a;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function(a, b, c) {
  for (var d = a.length, e = 0, f = c;;) {
    if (e < d) {
      c = a[e];
      if (null != c) {
        var g = a[e + 1];
        c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(f, c, g) : b.call(null, f, c, g);
      } else {
        c = a[e + 1], c = null != c ? c.kv_reduce(b, f) : f;
      }
      if (cljs.core.reduced_QMARK_(c)) {
        return c;
      }
      e += 2;
      f = c;
    } else {
      return f;
    }
  }
};
cljs.core.NodeIterator = function(a, b, c, d) {
  this.arr = a;
  this.i = b;
  this.next_entry = c;
  this.next_iter = d;
};
cljs.core.NodeIterator.prototype.advance = function() {
  for (var a = this.arr.length;;) {
    if (this.i < a) {
      var b = this.arr[this.i], c = this.arr[this.i + 1];
      null != b ? b = this.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null) : null != c ? (b = cljs.core._iterator(c), b = b.hasNext() ? this.next_iter = b : !1) : b = !1;
      this.i += 2;
      if (b) {
        return !0;
      }
    } else {
      return !1;
    }
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var a = null != this.next_entry;
  return a ? a : (a = null != this.next_iter) ? a : this.advance();
};
cljs.core.NodeIterator.prototype.next = function() {
  if (null != this.next_entry) {
    var a = this.next_entry;
    this.next_entry = null;
    return a;
  }
  if (null != this.next_iter) {
    return a = this.next_iter.next(), this.next_iter.hasNext() || (this.next_iter = null), a;
  }
  if (this.advance()) {
    return this.next();
  }
  throw Error("No such element");
};
cljs.core.NodeIterator.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = !0;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function(a, b, c, d) {
  return new cljs.core.NodeIterator(a, b, c, d);
};
cljs.core.BitmapIndexedNode = function(a, b, c) {
  this.edit = a;
  this.bitmap = b;
  this.arr = c;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(a) {
  if (a === this.edit) {
    return this;
  }
  var b = cljs.core.bit_count(this.bitmap), c = Array(0 > b ? 4 : 2 * (b + 1));
  cljs.core.array_copy(this.arr, 0, c, 0, 2 * b);
  return new cljs.core.BitmapIndexedNode(a, this.bitmap, c);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(a, b, c, d, e) {
  var f = 1 << (c >>> b & 31);
  if (0 === (this.bitmap & f)) {
    return this;
  }
  var g = cljs.core.bitmap_indexed_node_index(this.bitmap, f), h = this.arr[2 * g], k = this.arr[2 * g + 1];
  return null == h ? (b = k.inode_without_BANG_(a, b + 5, c, d, e), b === k ? this : null != b ? cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, 2 * g + 1, b) : this.bitmap === f ? null : this.edit_and_remove_pair(a, f, g)) : cljs.core.key_test(d, h) ? (e.val = !0, this.edit_and_remove_pair(a, f, g)) : this;
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(a, b, c) {
  if (this.bitmap === b) {
    return null;
  }
  a = this.ensure_editable(a);
  var d = a.arr, e = d.length;
  a.bitmap ^= b;
  cljs.core.array_copy(d, 2 * (c + 1), d, 2 * c, e - 2 * (c + 1));
  d[e - 2] = null;
  d[e - 1] = null;
  return a;
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(this.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(a, b) {
  return cljs.core.inode_kv_reduce(this.arr, a, b);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(a, b, c, d) {
  var e = 1 << (b >>> a & 31);
  if (0 === (this.bitmap & e)) {
    return d;
  }
  var f = cljs.core.bitmap_indexed_node_index(this.bitmap, e);
  e = this.arr[2 * f];
  f = this.arr[2 * f + 1];
  return null == e ? f.inode_lookup(a + 5, b, c, d) : cljs.core.key_test(c, e) ? f : d;
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(a, b, c, d, e, f) {
  var g = 1 << (c >>> b & 31), h = cljs.core.bitmap_indexed_node_index(this.bitmap, g);
  if (0 === (this.bitmap & g)) {
    var k = cljs.core.bit_count(this.bitmap);
    if (2 * k < this.arr.length) {
      return a = this.ensure_editable(a), b = a.arr, f.val = !0, cljs.core.array_copy_downward(b, 2 * h, b, 2 * (h + 1), 2 * (k - h)), b[2 * h] = d, b[2 * h + 1] = e, a.bitmap |= g, a;
    }
    if (16 <= k) {
      h = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      h[c >>> b & 31] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(a, b + 5, c, d, e, f);
      for (e = d = 0;;) {
        if (32 > d) {
          0 !== (this.bitmap >>> d & 1) && (h[d] = null != this.arr[e] ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(a, b + 5, cljs.core.hash(this.arr[e]), this.arr[e], this.arr[e + 1], f) : this.arr[e + 1], e += 2), d += 1;
        } else {
          break;
        }
      }
      return new cljs.core.ArrayNode(a, k + 1, h);
    }
    b = Array(2 * (k + 4));
    cljs.core.array_copy(this.arr, 0, b, 0, 2 * h);
    b[2 * h] = d;
    b[2 * h + 1] = e;
    cljs.core.array_copy(this.arr, 2 * h, b, 2 * (h + 1), 2 * (k - h));
    f.val = !0;
    a = this.ensure_editable(a);
    a.arr = b;
    a.bitmap |= g;
    return a;
  }
  k = this.arr[2 * h];
  g = this.arr[2 * h + 1];
  if (null == k) {
    return k = g.inode_assoc_BANG_(a, b + 5, c, d, e, f), k === g ? this : cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, 2 * h + 1, k);
  }
  if (cljs.core.key_test(d, k)) {
    return e === g ? this : cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, 2 * h + 1, e);
  }
  f.val = !0;
  return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(this, a, 2 * h, null, 2 * h + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(a, b + 5, k, g, c, d, e));
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(a, b, c, d, e) {
  var f = 1 << (b >>> a & 31), g = cljs.core.bitmap_indexed_node_index(this.bitmap, f);
  if (0 === (this.bitmap & f)) {
    var h = cljs.core.bit_count(this.bitmap);
    if (16 <= h) {
      g = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      g[b >>> a & 31] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(a + 5, b, c, d, e);
      for (d = c = 0;;) {
        if (32 > c) {
          0 !== (this.bitmap >>> c & 1) && (g[c] = null != this.arr[d] ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(a + 5, cljs.core.hash(this.arr[d]), this.arr[d], this.arr[d + 1], e) : this.arr[d + 1], d += 2), c += 1;
        } else {
          break;
        }
      }
      return new cljs.core.ArrayNode(null, h + 1, g);
    }
    a = Array(2 * (h + 1));
    cljs.core.array_copy(this.arr, 0, a, 0, 2 * g);
    a[2 * g] = c;
    a[2 * g + 1] = d;
    cljs.core.array_copy(this.arr, 2 * g, a, 2 * (g + 1), 2 * (h - g));
    e.val = !0;
    return new cljs.core.BitmapIndexedNode(null, this.bitmap | f, a);
  }
  h = this.arr[2 * g];
  f = this.arr[2 * g + 1];
  if (null == h) {
    return h = f.inode_assoc(a + 5, b, c, d, e), h === f ? this : new cljs.core.BitmapIndexedNode(null, this.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, 2 * g + 1, h));
  }
  if (cljs.core.key_test(c, h)) {
    return d === f ? this : new cljs.core.BitmapIndexedNode(null, this.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, 2 * g + 1, d));
  }
  e.val = !0;
  return new cljs.core.BitmapIndexedNode(null, this.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(this.arr, 2 * g, null, 2 * g + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(a + 5, h, f, b, c, d)));
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(a, b, c, d) {
  var e = 1 << (b >>> a & 31);
  if (0 === (this.bitmap & e)) {
    return d;
  }
  var f = cljs.core.bitmap_indexed_node_index(this.bitmap, e);
  e = this.arr[2 * f];
  f = this.arr[2 * f + 1];
  return null == e ? f.inode_find(a + 5, b, c, d) : cljs.core.key_test(c, e) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, f], null) : d;
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(a, b, c) {
  var d = 1 << (b >>> a & 31);
  if (0 === (this.bitmap & d)) {
    return this;
  }
  var e = cljs.core.bitmap_indexed_node_index(this.bitmap, d), f = this.arr[2 * e], g = this.arr[2 * e + 1];
  return null == f ? (a = g.inode_without(a + 5, b, c), a === g ? this : null != a ? new cljs.core.BitmapIndexedNode(null, this.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, 2 * e + 1, a)) : this.bitmap === d ? null : new cljs.core.BitmapIndexedNode(null, this.bitmap ^ d, cljs.core.remove_pair(this.arr, e))) : cljs.core.key_test(c, f) ? new cljs.core.BitmapIndexedNode(null, this.bitmap ^ d, cljs.core.remove_pair(this.arr, e)) : this;
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.NodeIterator(this.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = !0;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function(a, b, c) {
  return new cljs.core.BitmapIndexedNode(a, b, c);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function(a, b, c) {
  var d = a.arr, e = d.length;
  a = Array(2 * (a.cnt - 1));
  for (var f = 0, g = 1, h = 0;;) {
    if (f < e) {
      f !== c && null != d[f] && (a[g] = d[f], g += 2, h |= 1 << f), f += 1;
    } else {
      return new cljs.core.BitmapIndexedNode(b, h, a);
    }
  }
};
cljs.core.ArrayNodeIterator = function(a, b, c) {
  this.arr = a;
  this.i = b;
  this.next_iter = c;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  for (var a = this.arr.length;;) {
    if (null != this.next_iter && this.next_iter.hasNext()) {
      return !0;
    }
    if (this.i < a) {
      var b = this.arr[this.i];
      this.i += 1;
      null != b && (this.next_iter = cljs.core._iterator(b));
    } else {
      return !1;
    }
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  if (this.hasNext()) {
    return this.next_iter.next();
  }
  throw Error("No such element");
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = !0;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function(a, b, c) {
  return new cljs.core.ArrayNodeIterator(a, b, c);
};
cljs.core.ArrayNode = function(a, b, c) {
  this.edit = a;
  this.cnt = b;
  this.arr = c;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(a) {
  return a === this.edit ? this : new cljs.core.ArrayNode(a, this.cnt, cljs.core.aclone(this.arr));
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(a, b, c, d, e) {
  var f = c >>> b & 31, g = this.arr[f];
  if (null == g) {
    return this;
  }
  b = g.inode_without_BANG_(a, b + 5, c, d, e);
  if (b === g) {
    return this;
  }
  if (null == b) {
    if (8 >= this.cnt) {
      return cljs.core.pack_array_node(this, a, f);
    }
    a = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, f, b);
    --a.cnt;
    return a;
  }
  return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, f, b);
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(this.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(a, b) {
  for (var c = this.arr.length, d = 0, e = b;;) {
    if (d < c) {
      var f = this.arr[d];
      if (null != f && (e = f.kv_reduce(a, e), cljs.core.reduced_QMARK_(e))) {
        return e;
      }
      d += 1;
    } else {
      return e;
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(a, b, c, d) {
  var e = this.arr[b >>> a & 31];
  return null != e ? e.inode_lookup(a + 5, b, c, d) : d;
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(a, b, c, d, e, f) {
  var g = c >>> b & 31, h = this.arr[g];
  if (null == h) {
    return a = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, g, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(a, b + 5, c, d, e, f)), a.cnt += 1, a;
  }
  b = h.inode_assoc_BANG_(a, b + 5, c, d, e, f);
  return b === h ? this : cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, g, b);
};
cljs.core.ArrayNode.prototype.inode_assoc = function(a, b, c, d, e) {
  var f = b >>> a & 31, g = this.arr[f];
  if (null == g) {
    return new cljs.core.ArrayNode(null, this.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, f, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(a + 5, b, c, d, e)));
  }
  a = g.inode_assoc(a + 5, b, c, d, e);
  return a === g ? this : new cljs.core.ArrayNode(null, this.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, f, a));
};
cljs.core.ArrayNode.prototype.inode_find = function(a, b, c, d) {
  var e = this.arr[b >>> a & 31];
  return null != e ? e.inode_find(a + 5, b, c, d) : d;
};
cljs.core.ArrayNode.prototype.inode_without = function(a, b, c) {
  var d = b >>> a & 31, e = this.arr[d];
  return null != e ? (a = e.inode_without(a + 5, b, c), a === e ? this : null == a ? 8 >= this.cnt ? cljs.core.pack_array_node(this, null, d) : new cljs.core.ArrayNode(null, this.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, d, a)) : new cljs.core.ArrayNode(null, this.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, d, a))) : this;
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.ArrayNodeIterator(this.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = !0;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function(a, b, c) {
  return new cljs.core.ArrayNode(a, b, c);
};
cljs.core.hash_collision_node_find_index = function(a, b, c) {
  b *= 2;
  for (var d = 0;;) {
    if (d < b) {
      if (cljs.core.key_test(c, a[d])) {
        return d;
      }
      d += 2;
    } else {
      return -1;
    }
  }
};
cljs.core.HashCollisionNode = function(a, b, c, d) {
  this.edit = a;
  this.collision_hash = b;
  this.cnt = c;
  this.arr = d;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(a) {
  if (a === this.edit) {
    return this;
  }
  var b = Array(2 * (this.cnt + 1));
  cljs.core.array_copy(this.arr, 0, b, 0, 2 * this.cnt);
  return new cljs.core.HashCollisionNode(a, this.collision_hash, this.cnt, b);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(a, b, c, d, e) {
  b = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, d);
  if (-1 === b) {
    return this;
  }
  e.val = !0;
  if (1 === this.cnt) {
    return null;
  }
  a = this.ensure_editable(a);
  e = a.arr;
  e[b] = e[2 * this.cnt - 2];
  e[b + 1] = e[2 * this.cnt - 1];
  e[2 * this.cnt - 1] = null;
  e[2 * this.cnt - 2] = null;
  --a.cnt;
  return a;
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(this.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(a, b) {
  return cljs.core.inode_kv_reduce(this.arr, a, b);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(a, b, c, d) {
  a = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, c);
  return 0 > a ? d : cljs.core.key_test(c, this.arr[a]) ? this.arr[a + 1] : d;
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(a, b, c, d, e, f) {
  if (c === this.collision_hash) {
    b = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, d);
    if (-1 === b) {
      if (this.arr.length > 2 * this.cnt) {
        return a = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(this, a, 2 * this.cnt, d, 2 * this.cnt + 1, e), f.val = !0, a.cnt += 1, a;
      }
      b = this.arr.length;
      c = Array(b + 2);
      cljs.core.array_copy(this.arr, 0, c, 0, b);
      c[b] = d;
      c[b + 1] = e;
      f.val = !0;
      return this.ensure_editable_array(a, this.cnt + 1, c);
    }
    return this.arr[b + 1] === e ? this : cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, b + 1, e);
  }
  return (new cljs.core.BitmapIndexedNode(a, 1 << (this.collision_hash >>> b & 31), [null, this, null, null])).inode_assoc_BANG_(a, b, c, d, e, f);
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(a, b, c, d, e) {
  return b === this.collision_hash ? (a = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, c), -1 === a ? (a = 2 * this.cnt, b = Array(a + 2), cljs.core.array_copy(this.arr, 0, b, 0, a), b[a] = c, b[a + 1] = d, e.val = !0, new cljs.core.HashCollisionNode(null, this.collision_hash, this.cnt + 1, b)) : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.arr[a + 1], d) ? this : new cljs.core.HashCollisionNode(null, this.collision_hash, this.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, 
  a + 1, d))) : (new cljs.core.BitmapIndexedNode(null, 1 << (this.collision_hash >>> a & 31), [null, this])).inode_assoc(a, b, c, d, e);
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(a, b, c) {
  return a === this.edit ? (this.arr = c, this.cnt = b, this) : new cljs.core.HashCollisionNode(this.edit, this.collision_hash, b, c);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(a, b, c, d) {
  a = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, c);
  return 0 > a ? d : cljs.core.key_test(c, this.arr[a]) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.arr[a], this.arr[a + 1]], null) : d;
};
cljs.core.HashCollisionNode.prototype.inode_without = function(a, b, c) {
  a = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, c);
  return -1 === a ? this : 1 === this.cnt ? null : new cljs.core.HashCollisionNode(null, this.collision_hash, this.cnt - 1, cljs.core.remove_pair(this.arr, cljs.core.quot(a, 2)));
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.NodeIterator(this.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = !0;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function(a, b, c, d) {
  return new cljs.core.HashCollisionNode(a, b, c, d);
};
cljs.core.create_node = function(a) {
  switch(arguments.length) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var g = cljs.core.hash(b);
  if (g === d) {
    return new cljs.core.HashCollisionNode(null, g, 2, [b, c, e, f]);
  }
  var h = new cljs.core.Box(!1);
  return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(a, g, b, c, h).inode_assoc(a, d, e, f, h);
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var h = cljs.core.hash(c);
  if (h === e) {
    return new cljs.core.HashCollisionNode(null, h, 2, [c, d, f, g]);
  }
  var k = new cljs.core.Box(!1);
  return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(a, b, h, c, d, k).inode_assoc_BANG_(a, b, e, f, g, k);
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(a, b, c, d, e) {
  this.meta = a;
  this.nodes = b;
  this.i = c;
  this.s = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.NodeSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return null == this.s ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(this.nodes, this.i + 2, null) : cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(this.nodes, this.i, cljs.core.next(this.s));
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return null == this.s ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.nodes[this.i], this.nodes[this.i + 1]], null) : cljs.core.first(this.s);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = null == this.s ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(this.nodes, this.i + 2, null) : cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(this.nodes, this.i, cljs.core.next(this.s));
  return null != a ? a : cljs.core.List.EMPTY;
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.NodeSeq(b, this.nodes, this.i, this.s, this.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), !0], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = !0;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function(a, b, c, d, e) {
  return new cljs.core.NodeSeq(a, b, c, d, e);
};
var G__16727_16730 = cljs.core.NodeSeq.prototype, G__16728_16731 = cljs.core.ITER_SYMBOL, G__16729_16732 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__16727_16730, G__16728_16731);
goog.object.set(G__16727_16730, G__16728_16731, G__16729_16732);
cljs.core.create_inode_seq = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(a, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null == c) {
    for (c = a.length;;) {
      if (b < c) {
        if (null != a[b]) {
          return new cljs.core.NodeSeq(null, a, b, null, null);
        }
        var d = a[b + 1];
        if (cljs.core.truth_(d) && (d = d.inode_seq(), cljs.core.truth_(d))) {
          return new cljs.core.NodeSeq(null, a, b + 2, d, null);
        }
        b += 2;
      } else {
        return null;
      }
    }
  } else {
    return new cljs.core.NodeSeq(null, a, b, c, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(a, b, c, d, e) {
  this.meta = a;
  this.nodes = b;
  this.i = c;
  this.s = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, this.nodes, this.i, cljs.core.next(this.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.first(this.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, this.nodes, this.i, cljs.core.next(this.s));
  return null != a ? a : cljs.core.List.EMPTY;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.ArrayNodeSeq(b, this.nodes, this.i, this.s, this.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), !0], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = !0;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function(a, b, c, d, e) {
  return new cljs.core.ArrayNodeSeq(a, b, c, d, e);
};
var G__16740_16743 = cljs.core.ArrayNodeSeq.prototype, G__16741_16744 = cljs.core.ITER_SYMBOL, G__16742_16745 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__16740_16743, G__16741_16744);
goog.object.set(G__16740_16743, G__16741_16744, G__16742_16745);
cljs.core.create_array_node_seq = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, a, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  if (null == d) {
    for (d = b.length;;) {
      if (c < d) {
        var e = b[c];
        if (cljs.core.truth_(e) && (e = e.inode_seq(), cljs.core.truth_(e))) {
          return new cljs.core.ArrayNodeSeq(a, b, c + 1, e, null);
        }
        c += 1;
      } else {
        return null;
      }
    }
  } else {
    return new cljs.core.ArrayNodeSeq(a, b, c, d, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(a, b, c) {
  this.nil_val = a;
  this.root_iter = b;
  this.seen = c;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  return !this.seen || this.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  if (this.seen) {
    return this.root_iter.next();
  }
  this.seen = !0;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, this.nil_val], null);
};
cljs.core.HashMapIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = !0;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function(a, b, c) {
  return new cljs.core.HashMapIter(a, b, c);
};
cljs.core.PersistentHashMap = function(a, b, c, d, e, f) {
  this.meta = a;
  this.cnt = b;
  this.root = c;
  this.has_nil_QMARK_ = d;
  this.nil_val = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  return null == b ? this.has_nil_QMARK_ ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, this.nil_val], null) : null : null == this.root ? null : this.root.inode_find(0, cljs.core.hash(b), b, null);
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentHashMap.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.keys(this));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  return cljs.core.es6_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.vals(this));
};
cljs.core.PersistentHashMap.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentHashMap.prototype.get = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentHashMap.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return null == b ? this.has_nil_QMARK_ ? this.nil_val : c : null == this.root ? c : this.root.inode_lookup(0, cljs.core.hash(b), b, c);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = this.has_nil_QMARK_ ? b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, null, this.nil_val) : b.call(null, c, null, this.nil_val) : c;
  return cljs.core.reduced_QMARK_(a) ? cljs.core.deref(a) : null != this.root ? cljs.core.unreduced(this.root.kv_reduce(b, a)) : a;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  a = this.root ? cljs.core._iterator(this.root) : cljs.core.nil_iter();
  return this.has_nil_QMARK_ ? new cljs.core.HashMapIter(this.nil_val, a, !1) : a;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentHashMap(this.meta, this.cnt, this.root, this.has_nil_QMARK_, this.nil_val, this.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_map(this, b);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return new cljs.core.TransientHashMap({}, this.root, this.cnt, this.has_nil_QMARK_, this.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, this.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  if (null == b) {
    return this.has_nil_QMARK_ ? new cljs.core.PersistentHashMap(this.meta, this.cnt - 1, this.root, !1, null, null) : this;
  }
  if (null == this.root) {
    return this;
  }
  var c = this.root.inode_without(0, cljs.core.hash(b), b);
  return c === this.root ? this : new cljs.core.PersistentHashMap(this.meta, this.cnt - 1, c, this.has_nil_QMARK_, this.nil_val, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  if (null == b) {
    return this.has_nil_QMARK_ && c === this.nil_val ? this : new cljs.core.PersistentHashMap(this.meta, this.has_nil_QMARK_ ? this.cnt : this.cnt + 1, this.root, !0, c, null);
  }
  a = new cljs.core.Box(!1);
  b = (null == this.root ? cljs.core.BitmapIndexedNode.EMPTY : this.root).inode_assoc(0, cljs.core.hash(b), b, c, a);
  return b === this.root ? this : new cljs.core.PersistentHashMap(this.meta, a.val ? this.cnt + 1 : this.cnt, b, this.has_nil_QMARK_, this.nil_val, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return null == b ? this.has_nil_QMARK_ : null == this.root ? !1 : this.root.inode_lookup(0, cljs.core.hash(b), b, cljs.core.lookup_sentinel) !== cljs.core.lookup_sentinel;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return 0 < this.cnt ? (a = null != this.root ? this.root.inode_seq() : null, this.has_nil_QMARK_ ? cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, this.nil_val], null), a) : a) : null;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentHashMap(b, this.cnt, this.root, this.has_nil_QMARK_, this.nil_val, this.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 1));
  }
  for (var c = this, d = cljs.core.seq(b);;) {
    if (null == d) {
      return c;
    }
    var e = cljs.core.first(d);
    if (cljs.core.vector_QMARK_(e)) {
      c = c.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1)), d = cljs.core.next(d);
    } else {
      throw Error("conj on a map takes map entries or seqables of map entries");
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentHashMap.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = !0;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function(a, b, c, d, e, f) {
  return new cljs.core.PersistentHashMap(a, b, c, d, e, f);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, !1, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(a, b) {
  for (var c = b ? a : cljs.core.aclone(a), d = c.length, e = 0, f = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);;) {
    if (e < d) {
      var g = e + 2;
      f = cljs.core._assoc_BANG_(f, c[e], c[e + 1]);
      e = g;
    } else {
      return cljs.core._persistent_BANG_(f);
    }
  }
};
cljs.core.PersistentHashMap.fromArrays = function(a, b) {
  for (var c = a.length, d = 0, e = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);;) {
    if (d < c) {
      var f = d + 1;
      e = e.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, a[d], b[d]);
      d = f;
    } else {
      return cljs.core.persistent_BANG_(e);
    }
  }
};
cljs.core.PersistentHashMap.createWithCheck = function(a) {
  for (var b = a.length, c = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY), d = 0;;) {
    if (d < b) {
      cljs.core._assoc_BANG_(c, a[d], a[d + 1]);
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._count(c), d / 2 + 1)) {
        throw Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a[d])].join(""));
      }
      d += 2;
    } else {
      break;
    }
  }
  return cljs.core._persistent_BANG_(c);
};
var G__16785_16788 = cljs.core.PersistentHashMap.prototype, G__16786_16789 = cljs.core.ITER_SYMBOL, G__16787_16790 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__16785_16788, G__16786_16789);
goog.object.set(G__16785_16788, G__16786_16789, G__16787_16790);
cljs.core.TransientHashMap = function(a, b, c, d, e) {
  this.edit = a;
  this.root = b;
  this.count = c;
  this.has_nil_QMARK_ = d;
  this.nil_val = e;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(a) {
  if (this.edit) {
    if (null != a ? a.cljs$lang$protocol_mask$partition0$ & 2048 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IMapEntry$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, a)) {
      return this.assoc_BANG_(cljs.core.key(a), cljs.core.val(a));
    }
    a = cljs.core.seq(a);
    for (var b = this;;) {
      var c = cljs.core.first(a);
      if (cljs.core.truth_(c)) {
        a = cljs.core.next(a), b = b.assoc_BANG_(cljs.core.key(c), cljs.core.val(c));
      } else {
        return b;
      }
    }
  } else {
    throw Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(a, b) {
  if (this.edit) {
    if (null == a) {
      this.nil_val !== b && (this.nil_val = b), this.has_nil_QMARK_ || (this.count += 1, this.has_nil_QMARK_ = !0);
    } else {
      var c = new cljs.core.Box(!1), d = (null == this.root ? cljs.core.BitmapIndexedNode.EMPTY : this.root).inode_assoc_BANG_(this.edit, 0, cljs.core.hash(a), a, b, c);
      d !== this.root && (this.root = d);
      c.val && (this.count += 1);
    }
    return this;
  }
  throw Error("assoc! after persistent!");
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(a) {
  if (this.edit) {
    if (null == a) {
      this.has_nil_QMARK_ && (this.has_nil_QMARK_ = !1, this.nil_val = null, --this.count);
    } else {
      if (null != this.root) {
        var b = new cljs.core.Box(!1);
        a = this.root.inode_without_BANG_(this.edit, 0, cljs.core.hash(a), a, b);
        a !== this.root && (this.root = a);
        b.val && --this.count;
      }
    }
    return this;
  }
  throw Error("dissoc! after persistent!");
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  if (this.edit) {
    return this.edit = null, new cljs.core.PersistentHashMap(null, this.count, this.root, this.has_nil_QMARK_, this.nil_val, null);
  }
  throw Error("persistent! called twice");
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  if (this.edit) {
    return this.count;
  }
  throw Error("count after persistent!");
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return null == b ? this.has_nil_QMARK_ ? this.nil_val : null : null == this.root ? null : this.root.inode_lookup(0, cljs.core.hash(b), b);
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return null == b ? this.has_nil_QMARK_ ? this.nil_val : c : null == this.root ? c : this.root.inode_lookup(0, cljs.core.hash(b), b, c);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(a, b) {
  return this.conj_BANG_(b);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(a) {
  return this.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(a, b, c) {
  return this.assoc_BANG_(b, c);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(a, b) {
  return this.without_BANG_(b);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = !0;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function(a, b, c, d, e) {
  return new cljs.core.TransientHashMap(a, b, c, d, e);
};
cljs.core.tree_map_seq_push = function(a, b, c) {
  for (var d = b;;) {
    if (null != a) {
      b = c ? a.left : a.right, d = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(d, a), a = b;
    } else {
      return d;
    }
  }
};
cljs.core.PersistentTreeMapSeq = function(a, b, c, d, e) {
  this.meta = a;
  this.stack = b;
  this.ascending_QMARK_ = c;
  this.cnt = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  a = cljs.core.first(this.stack);
  a = cljs.core.tree_map_seq_push(this.ascending_QMARK_ ? a.right : a.left, cljs.core.next(this.stack), this.ascending_QMARK_);
  return null == a ? null : new cljs.core.PersistentTreeMapSeq(null, a, this.ascending_QMARK_, this.cnt - 1, null);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 0 > this.cnt ? cljs.core.count(cljs.core.next(this)) + 1 : this.cnt;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.peek(this.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = cljs.core.first(this.stack);
  a = cljs.core.tree_map_seq_push(this.ascending_QMARK_ ? a.right : a.left, cljs.core.next(this.stack), this.ascending_QMARK_);
  return null != a ? new cljs.core.PersistentTreeMapSeq(null, a, this.ascending_QMARK_, this.cnt - 1, null) : cljs.core.List.EMPTY;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeMapSeq(b, this.stack, this.ascending_QMARK_, this.cnt, this.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = !0;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function(a, b, c, d, e) {
  return new cljs.core.PersistentTreeMapSeq(a, b, c, d, e);
};
var G__16798_16801 = cljs.core.PersistentTreeMapSeq.prototype, G__16799_16802 = cljs.core.ITER_SYMBOL, G__16800_16803 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__16798_16801, G__16799_16802);
goog.object.set(G__16798_16801, G__16799_16802, G__16800_16803);
cljs.core.create_tree_map_seq = function(a, b, c) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(a, null, b), b, c, null);
};
cljs.core.balance_left = function(a, b, c, d) {
  return c instanceof cljs.core.RedNode ? c.left instanceof cljs.core.RedNode ? new cljs.core.RedNode(c.key, c.val, c.left.blacken(), new cljs.core.BlackNode(a, b, c.right, d, null), null) : c.right instanceof cljs.core.RedNode ? new cljs.core.RedNode(c.right.key, c.right.val, new cljs.core.BlackNode(c.key, c.val, c.left, c.right.left, null), new cljs.core.BlackNode(a, b, c.right.right, d, null), null) : new cljs.core.BlackNode(a, b, c, d, null) : new cljs.core.BlackNode(a, b, c, d, null);
};
cljs.core.balance_right = function(a, b, c, d) {
  return d instanceof cljs.core.RedNode ? d.right instanceof cljs.core.RedNode ? new cljs.core.RedNode(d.key, d.val, new cljs.core.BlackNode(a, b, c, d.left, null), d.right.blacken(), null) : d.left instanceof cljs.core.RedNode ? new cljs.core.RedNode(d.left.key, d.left.val, new cljs.core.BlackNode(a, b, c, d.left.left, null), new cljs.core.BlackNode(d.key, d.val, d.left.right, d.right, null), null) : new cljs.core.BlackNode(a, b, c, d, null) : new cljs.core.BlackNode(a, b, c, d, null);
};
cljs.core.balance_left_del = function(a, b, c, d) {
  if (c instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(a, b, c.blacken(), d, null);
  }
  if (d instanceof cljs.core.BlackNode) {
    return cljs.core.balance_right(a, b, c, d.redden());
  }
  if (d instanceof cljs.core.RedNode && d.left instanceof cljs.core.BlackNode) {
    return new cljs.core.RedNode(d.left.key, d.left.val, new cljs.core.BlackNode(a, b, c, d.left.left, null), cljs.core.balance_right(d.key, d.val, d.left.right, d.right.redden()), null);
  }
  throw Error("red-black tree invariant violation");
};
cljs.core.balance_right_del = function(a, b, c, d) {
  if (d instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(a, b, c, d.blacken(), null);
  }
  if (c instanceof cljs.core.BlackNode) {
    return cljs.core.balance_left(a, b, c.redden(), d);
  }
  if (c instanceof cljs.core.RedNode && c.right instanceof cljs.core.BlackNode) {
    return new cljs.core.RedNode(c.right.key, c.right.val, cljs.core.balance_left(c.key, c.val, c.left.redden(), c.right.left), new cljs.core.BlackNode(a, b, c.right.right, d, null), null);
  }
  throw Error("red-black tree invariant violation");
};
cljs.core.tree_map_kv_reduce = function(a, b, c) {
  var d = null != a.left ? function() {
    var d = a.left;
    return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(d, b, c) : cljs.core.tree_map_kv_reduce.call(null, d, b, c);
  }() : c;
  if (cljs.core.reduced_QMARK_(d)) {
    return d;
  }
  var e = function() {
    var c = a.key, e = a.val;
    return b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(d, c, e) : b.call(null, d, c, e);
  }();
  if (cljs.core.reduced_QMARK_(e)) {
    return e;
  }
  if (null != a.right) {
    var f = a.right;
    return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(f, b, e) : cljs.core.tree_map_kv_reduce.call(null, f, b, e);
  }
  return e;
};
cljs.core.BlackNode = function(a, b, c, d, e) {
  this.key = a;
  this.val = b;
  this.left = c;
  this.right = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  switch(b) {
    case 0:
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, this.key], null);
    case 1:
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, this.val], null);
    default:
      return null;
  }
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.BlackNode.prototype.add_right = function(a) {
  return a.balance_right(this);
};
cljs.core.BlackNode.prototype.redden = function() {
  return new cljs.core.RedNode(this.key, this.val, this.left, this.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  return this;
};
cljs.core.BlackNode.prototype.add_left = function(a) {
  return a.balance_left(this);
};
cljs.core.BlackNode.prototype.replace = function(a, b, c, d) {
  return new cljs.core.BlackNode(a, b, c, d, null);
};
cljs.core.BlackNode.prototype.balance_left = function(a) {
  return new cljs.core.BlackNode(a.key, a.val, this, a.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(a) {
  return new cljs.core.BlackNode(a.key, a.val, a.left, this, null);
};
cljs.core.BlackNode.prototype.remove_left = function(a) {
  return cljs.core.balance_left_del(this.key, this.val, a, this.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(a, b) {
  return cljs.core.tree_map_kv_reduce(this, a, b);
};
cljs.core.BlackNode.prototype.remove_right = function(a) {
  return cljs.core.balance_right_del(this.key, this.val, this.left, a);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, c);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (0 === b) {
    return this.key;
  }
  if (1 === b) {
    return this.val;
  }
  throw Error("Index out of bounds");
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 === b ? this.key : 1 === b ? this.val : c;
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, b, c);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(a) {
  return this.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(a) {
  return this.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return this.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b, c);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return 0 === b || 1 === b;
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  a = this.key;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, this.val), a);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val, b], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$IIndexed$_nth$arity$2(null, c);
      case 3:
        return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.BlackNode.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, a);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, a, b);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = !0;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function(a, b, c, d, e) {
  return new cljs.core.BlackNode(a, b, c, d, e);
};
var G__16819_16822 = cljs.core.BlackNode.prototype, G__16820_16823 = cljs.core.ITER_SYMBOL, G__16821_16824 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__16819_16822, G__16820_16823);
goog.object.set(G__16819_16822, G__16820_16823, G__16821_16824);
cljs.core.RedNode = function(a, b, c, d, e) {
  this.key = a;
  this.val = b;
  this.left = c;
  this.right = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  switch(b) {
    case 0:
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, this.key], null);
    case 1:
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, this.val], null);
    default:
      return null;
  }
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.RedNode.prototype.add_right = function(a) {
  return new cljs.core.RedNode(this.key, this.val, this.left, a, null);
};
cljs.core.RedNode.prototype.redden = function() {
  throw Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  return new cljs.core.BlackNode(this.key, this.val, this.left, this.right, null);
};
cljs.core.RedNode.prototype.add_left = function(a) {
  return new cljs.core.RedNode(this.key, this.val, a, this.right, null);
};
cljs.core.RedNode.prototype.replace = function(a, b, c, d) {
  return new cljs.core.RedNode(a, b, c, d, null);
};
cljs.core.RedNode.prototype.balance_left = function(a) {
  return this.left instanceof cljs.core.RedNode ? new cljs.core.RedNode(this.key, this.val, this.left.blacken(), new cljs.core.BlackNode(a.key, a.val, this.right, a.right, null), null) : this.right instanceof cljs.core.RedNode ? new cljs.core.RedNode(this.right.key, this.right.val, new cljs.core.BlackNode(this.key, this.val, this.left, this.right.left, null), new cljs.core.BlackNode(a.key, a.val, this.right.right, a.right, null), null) : new cljs.core.BlackNode(a.key, a.val, this, a.right, null);
};
cljs.core.RedNode.prototype.balance_right = function(a) {
  return this.right instanceof cljs.core.RedNode ? new cljs.core.RedNode(this.key, this.val, new cljs.core.BlackNode(a.key, a.val, a.left, this.left, null), this.right.blacken(), null) : this.left instanceof cljs.core.RedNode ? new cljs.core.RedNode(this.left.key, this.left.val, new cljs.core.BlackNode(a.key, a.val, a.left, this.left.left, null), new cljs.core.BlackNode(this.key, this.val, this.left.right, this.right, null), null) : new cljs.core.BlackNode(a.key, a.val, a.left, this, null);
};
cljs.core.RedNode.prototype.remove_left = function(a) {
  return new cljs.core.RedNode(this.key, this.val, a, this.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(a, b) {
  return cljs.core.tree_map_kv_reduce(this, a, b);
};
cljs.core.RedNode.prototype.remove_right = function(a) {
  return new cljs.core.RedNode(this.key, this.val, this.left, a, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, c);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (0 === b) {
    return this.key;
  }
  if (1 === b) {
    return this.val;
  }
  throw Error("Index out of bounds");
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 === b ? this.key : 1 === b ? this.val : c;
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, b, c);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(a) {
  return this.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(a) {
  return this.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return this.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b, c);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return 0 === b || 1 === b;
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  a = this.key;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, this.val), a);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val, b], null);
};
cljs.core.RedNode.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$IIndexed$_nth$arity$2(null, c);
      case 3:
        return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.RedNode.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, a);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, a, b);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.RedNode.cljs$lang$type = !0;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function(a, b, c, d, e) {
  return new cljs.core.RedNode(a, b, c, d, e);
};
var G__16831_16834 = cljs.core.RedNode.prototype, G__16832_16835 = cljs.core.ITER_SYMBOL, G__16833_16836 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__16831_16834, G__16832_16835);
goog.object.set(G__16831_16834, G__16832_16835, G__16833_16836);
cljs.core.tree_map_add = function(a, b, c, d, e) {
  if (null == b) {
    return new cljs.core.RedNode(c, d, null, null, null);
  }
  var f = function() {
    var d = b.key;
    return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d);
  }();
  if (0 === f) {
    return e[0] = b, null;
  }
  if (0 > f) {
    return f = function() {
      var f = b.left;
      return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(a, f, c, d, e) : cljs.core.tree_map_add.call(null, a, f, c, d, e);
    }(), null != f ? b.add_left(f) : null;
  }
  f = function() {
    var f = b.right;
    return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(a, f, c, d, e) : cljs.core.tree_map_add.call(null, a, f, c, d, e);
  }();
  return null != f ? b.add_right(f) : null;
};
cljs.core.tree_map_append = function(a, b) {
  if (null == a) {
    return b;
  }
  if (null == b) {
    return a;
  }
  if (a instanceof cljs.core.RedNode) {
    if (b instanceof cljs.core.RedNode) {
      var c = function() {
        var c = a.right, e = b.left;
        return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(c, e) : cljs.core.tree_map_append.call(null, c, e);
      }();
      return c instanceof cljs.core.RedNode ? new cljs.core.RedNode(c.key, c.val, new cljs.core.RedNode(a.key, a.val, a.left, c.left, null), new cljs.core.RedNode(b.key, b.val, c.right, b.right, null), null) : new cljs.core.RedNode(a.key, a.val, a.left, new cljs.core.RedNode(b.key, b.val, c, b.right, null), null);
    }
    return new cljs.core.RedNode(a.key, a.val, a.left, function() {
      var c = a.right;
      return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(c, b) : cljs.core.tree_map_append.call(null, c, b);
    }(), null);
  }
  if (b instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(b.key, b.val, function() {
      var c = b.left;
      return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(a, c) : cljs.core.tree_map_append.call(null, a, c);
    }(), b.right, null);
  }
  c = function() {
    var c = a.right, e = b.left;
    return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(c, e) : cljs.core.tree_map_append.call(null, c, e);
  }();
  return c instanceof cljs.core.RedNode ? new cljs.core.RedNode(c.key, c.val, new cljs.core.BlackNode(a.key, a.val, a.left, c.left, null), new cljs.core.BlackNode(b.key, b.val, c.right, b.right, null), null) : cljs.core.balance_left_del(a.key, a.val, a.left, new cljs.core.BlackNode(b.key, b.val, c, b.right, null));
};
cljs.core.tree_map_remove = function(a, b, c, d) {
  if (null != b) {
    var e = function() {
      var d = b.key;
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d);
    }();
    if (0 === e) {
      return d[0] = b, cljs.core.tree_map_append(b.left, b.right);
    }
    if (0 > e) {
      return e = function() {
        var e = b.left;
        return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(a, e, c, d) : cljs.core.tree_map_remove.call(null, a, e, c, d);
      }(), null != e || null != d[0] ? b.left instanceof cljs.core.BlackNode ? cljs.core.balance_left_del(b.key, b.val, e, b.right) : new cljs.core.RedNode(b.key, b.val, e, b.right, null) : null;
    }
    e = function() {
      var e = b.right;
      return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(a, e, c, d) : cljs.core.tree_map_remove.call(null, a, e, c, d);
    }();
    return null != e || null != d[0] ? b.right instanceof cljs.core.BlackNode ? cljs.core.balance_right_del(b.key, b.val, b.left, e) : new cljs.core.RedNode(b.key, b.val, b.left, e, null) : null;
  }
  return null;
};
cljs.core.tree_map_replace = function(a, b, c, d) {
  var e = b.key, f = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, e) : a.call(null, c, e);
  return 0 === f ? b.replace(e, d, b.left, b.right) : 0 > f ? b.replace(e, b.val, function() {
    var e = b.left;
    return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(a, e, c, d) : cljs.core.tree_map_replace.call(null, a, e, c, d);
  }(), b.right) : b.replace(e, b.val, b.left, function() {
    var e = b.right;
    return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(a, e, c, d) : cljs.core.tree_map_replace.call(null, a, e, c, d);
  }());
};
cljs.core.PersistentTreeMap = function(a, b, c, d, e) {
  this.comp = a;
  this.tree = b;
  this.cnt = c;
  this.meta = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  return this.entry_at(b);
};
cljs.core.PersistentTreeMap.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  return cljs.core.es6_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.keys(this));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.vals(this));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(a) {
  for (var b = this.tree;;) {
    if (null != b) {
      var c = a;
      var d = b.key;
      c = this.comp.cljs$core$IFn$_invoke$arity$2 ? this.comp.cljs$core$IFn$_invoke$arity$2(c, d) : this.comp.call(null, c, d);
      if (0 === c) {
        return b;
      }
      b = 0 > c ? b.left : b.right;
    } else {
      return null;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  a = this.entry_at(b);
  return null != a ? a.val : c;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  return null != this.tree ? cljs.core.unreduced(cljs.core.tree_map_kv_reduce(this.tree, b, c)) : c;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentTreeMap(this.comp, this.tree, this.cnt, this.meta, this.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return 0 < this.cnt ? cljs.core.create_tree_map_seq(this.tree, !1, this.cnt) : null;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_map(this, b);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return new cljs.core.PersistentTreeMap(this.comp, null, 0, this.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  var c = [null], d = cljs.core.tree_map_remove(this.comp, this.tree, b, c);
  return null == d ? null == cljs.core.nth.cljs$core$IFn$_invoke$arity$2(c, 0) ? this : new cljs.core.PersistentTreeMap(this.comp, null, 0, this.meta, null) : new cljs.core.PersistentTreeMap(this.comp, d.blacken(), this.cnt - 1, this.meta, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = [null];
  var d = cljs.core.tree_map_add(this.comp, this.tree, b, c, a);
  return null == d ? (a = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, 0), cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c, a.val) ? this : new cljs.core.PersistentTreeMap(this.comp, cljs.core.tree_map_replace(this.comp, this.tree, b, c), this.cnt, this.meta, null)) : new cljs.core.PersistentTreeMap(this.comp, d.blacken(), this.cnt + 1, this.meta, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return null != this.entry_at(b);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return 0 < this.cnt ? cljs.core.create_tree_map_seq(this.tree, !0, this.cnt) : null;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeMap(this.comp, this.tree, this.cnt, b, this.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 1));
  }
  for (var c = this, d = cljs.core.seq(b);;) {
    if (null == d) {
      return c;
    }
    var e = cljs.core.first(d);
    if (cljs.core.vector_QMARK_(e)) {
      c = c.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1)), d = cljs.core.next(d);
    } else {
      throw Error("conj on a map takes map entries or seqables of map entries");
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(a, b) {
  return 0 < this.cnt ? cljs.core.create_tree_map_seq(this.tree, b, this.cnt) : null;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(a, b, c) {
  if (0 < this.cnt) {
    a = null;
    for (var d = this.tree;;) {
      if (null != d) {
        var e = b;
        var f = d.key;
        e = this.comp.cljs$core$IFn$_invoke$arity$2 ? this.comp.cljs$core$IFn$_invoke$arity$2(e, f) : this.comp.call(null, e, f);
        if (0 === e) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d), c, -1, null);
        }
        cljs.core.truth_(c) ? 0 > e ? (a = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d), d = d.left) : d = d.right : 0 < e ? (a = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d), d = d.right) : d = d.left;
      } else {
        return null == a ? null : new cljs.core.PersistentTreeMapSeq(null, a, c, -1, null);
      }
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(a, b) {
  return cljs.core.key(b);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(a) {
  return this.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = !0;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function(a, b, c, d, e) {
  return new cljs.core.PersistentTreeMap(a, b, c, d, e);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
var G__16915_16918 = cljs.core.PersistentTreeMap.prototype, G__16916_16919 = cljs.core.ITER_SYMBOL, G__16917_16920 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__16915_16918, G__16916_16919);
goog.object.set(G__16915_16918, G__16916_16919, G__16917_16920);
cljs.core.hash_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  a = cljs.core.seq(a);
  for (var b = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);;) {
    if (a) {
      var c = cljs.core.nnext(a);
      b = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(b, cljs.core.first(a), cljs.core.second(a));
      a = c;
    } else {
      return cljs.core.persistent_BANG_(b);
    }
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(a) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.array_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  a = a instanceof cljs.core.IndexedSeq && 0 === a.i ? a.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
  return cljs.core.PersistentArrayMap.createAsIfByAssoc(a);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(a) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.obj_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  var b = [], c = {};
  for (a = cljs.core.seq(a);;) {
    if (a) {
      b.push(cljs.core.first(a));
      var d = c, e = cljs.core.first(a), f = cljs.core.second(a);
      goog.object.set(d, e, f);
      a = cljs.core.nnext(a);
    } else {
      return cljs.core.ObjMap.fromObject(b, c);
    }
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(a) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.sorted_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  a = cljs.core.seq(a);
  for (var b = cljs.core.PersistentTreeMap.EMPTY;;) {
    if (a) {
      var c = cljs.core.nnext(a);
      b = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b, cljs.core.first(a), cljs.core.second(a));
      a = c;
    } else {
      return b;
    }
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(a) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.sorted_map_by = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  for (var c = cljs.core.seq(b), d = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(a), null, 0, null, 0);;) {
    if (c) {
      var e = cljs.core.nnext(c);
      d = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d, cljs.core.first(c), cljs.core.second(c));
      c = e;
    } else {
      return d;
    }
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.KeySeq = function(a, b) {
  this.mseq = a;
  this._meta = b;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.KeySeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  a = (null != this.mseq ? this.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === this.mseq.cljs$core$INext$ || (this.mseq.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) ? this.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(this.mseq);
  return null == a ? null : new cljs.core.KeySeq(a, this._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.mseq.cljs$core$ISeq$_first$arity$1(null).cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = (null != this.mseq ? this.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === this.mseq.cljs$core$INext$ || (this.mseq.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) ? this.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(this.mseq);
  return null != a ? new cljs.core.KeySeq(a, this._meta) : cljs.core.List.EMPTY;
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.KeySeq(this.mseq, b);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = !0;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function(a, b) {
  return new cljs.core.KeySeq(a, b);
};
var G__16961_16964 = cljs.core.KeySeq.prototype, G__16962_16965 = cljs.core.ITER_SYMBOL, G__16963_16966 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__16961_16964, G__16962_16965);
goog.object.set(G__16961_16964, G__16962_16965, G__16963_16966);
cljs.core.keys = function(a) {
  return (a = cljs.core.seq(a)) ? new cljs.core.KeySeq(a, null) : null;
};
cljs.core.key = function(a) {
  return cljs.core._key(a);
};
cljs.core.ValSeq = function(a, b) {
  this.mseq = a;
  this._meta = b;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ValSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  a = (null != this.mseq ? this.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === this.mseq.cljs$core$INext$ || (this.mseq.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) ? this.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(this.mseq);
  return null == a ? null : new cljs.core.ValSeq(a, this._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.mseq.cljs$core$ISeq$_first$arity$1(null).cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = (null != this.mseq ? this.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === this.mseq.cljs$core$INext$ || (this.mseq.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) ? this.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(this.mseq);
  return null != a ? new cljs.core.ValSeq(a, this._meta) : cljs.core.List.EMPTY;
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.ValSeq(this.mseq, b);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = !0;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function(a, b) {
  return new cljs.core.ValSeq(a, b);
};
var G__16971_16974 = cljs.core.ValSeq.prototype, G__16972_16975 = cljs.core.ITER_SYMBOL, G__16973_16976 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__16971_16974, G__16972_16975);
goog.object.set(G__16971_16974, G__16972_16975, G__16973_16976);
cljs.core.vals = function(a) {
  return (a = cljs.core.seq(a)) ? new cljs.core.ValSeq(a, null) : null;
};
cljs.core.val = function(a) {
  return cljs.core._val(a);
};
cljs.core.merge = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.truth_(cljs.core.some(cljs.core.identity, a)) ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(a, c) {
    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.truth_(a) ? a : cljs.core.PersistentArrayMap.EMPTY, c);
  }, a) : null;
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(a) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.merge_with = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, b))) {
    var c = function(a) {
      return function(b, c) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(a, cljs.core.truth_(b) ? b : cljs.core.PersistentArrayMap.EMPTY, cljs.core.seq(c));
      };
    }(function(b, c) {
      var d = cljs.core.first(c), e = cljs.core.second(c);
      return cljs.core.contains_QMARK_(b, d) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b, d, function() {
        var c = cljs.core.get.cljs$core$IFn$_invoke$arity$2(b, d);
        return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, e) : a.call(null, c, e);
      }()) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b, d, e);
    });
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(c, b);
  }
  return null;
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.select_keys = function(a, b) {
  for (var c = cljs.core.PersistentArrayMap.EMPTY, d = cljs.core.seq(b);;) {
    if (d) {
      var e = cljs.core.first(d), f = cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, e, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      c = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(f, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c, e, f) : c;
      d = cljs.core.next(d);
    } else {
      return cljs.core._with_meta(c, cljs.core.meta(a));
    }
  }
};
cljs.core.HashSetIter = function(a) {
  this.iter = a;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  return this.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  if (this.iter.hasNext()) {
    return this.iter.next().tail[0];
  }
  throw Error("No such element");
};
cljs.core.HashSetIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = !0;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function(a) {
  return new cljs.core.HashSetIter(a);
};
cljs.core.PersistentHashSet = function(a, b, c) {
  this.meta = a;
  this.hash_map = b;
  this.__hash = c;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentHashSet.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.seq(this));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.seq(this));
};
cljs.core.PersistentHashSet.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentHashSet.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return cljs.core._contains_key_QMARK_(this.hash_map, b) ? b : c;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.HashSetIter(cljs.core._iterator(this.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentHashSet(this.meta, this.hash_map, this.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core._count(this.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.set_QMARK_(b) && cljs.core.count(this) === cljs.core.count(b) && cljs.core.reduce_kv(function(a) {
    return function(a, c) {
      var d = cljs.core.contains_QMARK_(b, c);
      return d ? d : cljs.core.reduced(!1);
    };
  }(this), !0, this.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return new cljs.core.TransientHashSet(cljs.core._as_transient(this.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentHashSet.EMPTY, this.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(a, b) {
  return new cljs.core.PersistentHashSet(this.meta, cljs.core._dissoc(this.hash_map, b), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.keys(this.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentHashSet(b, this.hash_map, this.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentHashSet(this.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.hash_map, b, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentHashSet.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = !0;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function(a, b, c) {
  return new cljs.core.PersistentHashSet(a, b, c);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(a, b) {
  var c = a.length;
  if (c <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    b || cljs.core.aclone(a);
    for (var d = 0, e = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);;) {
      if (d < c) {
        var f = d + 1;
        e = cljs.core._assoc_BANG_(e, a[d], null);
        d = f;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(e), null);
      }
    }
  } else {
    for (d = 0, e = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);;) {
      if (d < c) {
        f = d + 1, e = cljs.core._conj_BANG_(e, a[d]), d = f;
      } else {
        return cljs.core._persistent_BANG_(e);
      }
    }
  }
};
cljs.core.PersistentHashSet.createWithCheck = function(a) {
  for (var b = a.length, c = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY), d = 0;;) {
    if (d < b) {
      cljs.core._conj_BANG_(c, a[d]);
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(c), d + 1)) {
        throw Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a[d])].join(""));
      }
      d += 1;
    } else {
      break;
    }
  }
  return cljs.core._persistent_BANG_(c);
};
cljs.core.PersistentHashSet.createAsIfByAssoc = function(a) {
  for (var b = a.length, c = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY), d = 0;;) {
    if (d < b) {
      cljs.core._conj_BANG_(c, a[d]), d += 1;
    } else {
      break;
    }
  }
  return cljs.core._persistent_BANG_(c);
};
var G__17028_17031 = cljs.core.PersistentHashSet.prototype, G__17029_17032 = cljs.core.ITER_SYMBOL, G__17030_17033 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__17028_17031, G__17029_17032);
goog.object.set(G__17028_17031, G__17029_17032, G__17030_17033);
cljs.core.TransientHashSet = function(a) {
  this.transient_map = a;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(a, b) {
  this.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(this.transient_map, b, null);
  return this;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(a) {
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(this.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(a, b) {
  this.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(this.transient_map, b);
  return this;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core.count(this.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, b, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? c : b;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var a = null, b = function(a, b) {
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, b, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? null : b;
  }, c = function(a, b, c) {
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, b, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? c : b;
  };
  a = function(a, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, a, e);
      case 3:
        return c.call(this, a, e, f);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}();
cljs.core.TransientHashSet.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, a, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? null : a;
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, a, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? b : a;
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = !0;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function(a) {
  return new cljs.core.TransientHashSet(a);
};
cljs.core.PersistentTreeSet = function(a, b, c) {
  this.meta = a;
  this.tree_map = b;
  this.__hash = c;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.seq(this));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.seq(this));
};
cljs.core.PersistentTreeSet.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  a = this.tree_map.entry_at(b);
  return null != a ? a.key : c;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentTreeSet(this.meta, this.tree_map, this.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core.count(this.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return 0 < cljs.core.count(this.tree_map) ? cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(this.tree_map)) : null;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.set_QMARK_(b) && cljs.core.count(this) === cljs.core.count(b) && cljs.core.reduce_kv(function(a) {
    return function(a, c) {
      var d = cljs.core.contains_QMARK_(b, c);
      return d ? d : cljs.core.reduced(!1);
    };
  }(this), !0, this.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return new cljs.core.PersistentTreeSet(this.meta, cljs.core._empty(this.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeSet(this.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(this.tree_map, b), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.keys(this.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeSet(b, this.tree_map, this.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeSet(this.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.tree_map, b, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var a = null;
  a = function(a, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(a, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(a, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(a, b) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(this.tree_map, b));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(a, b, c) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(this.tree_map, b, c));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(a, b) {
  return b;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(a) {
  return cljs.core._comparator(this.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = !0;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function(a, b, c) {
  return new cljs.core.PersistentTreeSet(a, b, c);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
var G__17062_17065 = cljs.core.PersistentTreeSet.prototype, G__17063_17066 = cljs.core.ITER_SYMBOL, G__17064_17067 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__17062_17065, G__17063_17066);
goog.object.set(G__17062_17065, G__17063_17066, G__17064_17067);
cljs.core.set_from_indexed_seq = function(a) {
  a = a.arr;
  a: {
    for (var b = a.length, c = 0, d = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);;) {
      if (c < b) {
        var e = c + 1;
        d = d.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, a[c]);
        c = e;
      } else {
        break a;
      }
    }
  }
  return d.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function(a) {
  a = cljs.core.seq(a);
  if (null == a) {
    return cljs.core.PersistentHashSet.EMPTY;
  }
  if (a instanceof cljs.core.IndexedSeq && 0 === a.i) {
    return cljs.core.PersistentHashSet.createAsIfByAssoc(a.arr);
  }
  for (var b = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);;) {
    if (null != a) {
      var c = cljs.core.next(a);
      b = b.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, a.cljs$core$ISeq$_first$arity$1(null));
      a = c;
    } else {
      return cljs.core.persistent_BANG_(b);
    }
  }
};
cljs.core.hash_set = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(b);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.set(a);
};
cljs.core.hash_set.cljs$lang$applyTo = function(a) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, a);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(a) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.sorted_set_by = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(a), 0), b);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.replace = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(b) {
    var c = cljs.core.find(a, b);
    return cljs.core.truth_(c) ? cljs.core.val(c) : b;
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    var c = cljs.core.count(b);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b) {
      return function(b, c) {
        var d = cljs.core.find(a, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(b, c));
        return cljs.core.truth_(d) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b, c, cljs.core.second(d)) : b;
      };
    }(c), b, cljs.core.take.cljs$core$IFn$_invoke$arity$2(c, cljs.core.iterate(cljs.core.inc, 0)));
  }
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(b) {
    var c = cljs.core.find(a, b);
    return cljs.core.truth_(c) ? cljs.core.second(c) : b;
  }, b);
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(a) {
    return function(b) {
      return function() {
        var c = null, d = function() {
          return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
        }, e = function(b) {
          return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
        }, f = function(c, d) {
          if (cljs.core.contains_QMARK_(cljs.core.deref(b), d)) {
            return c;
          }
          cljs.core._vreset_BANG_(b, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(b), d));
          return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d);
        };
        c = function(a, b) {
          switch(arguments.length) {
            case 0:
              return d.call(this);
            case 1:
              return e.call(this, a);
            case 2:
              return f.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        c.cljs$core$IFn$_invoke$arity$0 = d;
        c.cljs$core$IFn$_invoke$arity$1 = e;
        c.cljs$core$IFn$_invoke$arity$2 = f;
        return c;
      }();
    }(cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY));
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function e(a, d) {
    return new cljs.core.LazySeq(null, function() {
      var c;
      a: {
        var g = a;
        for (c = d;;) {
          var h = g;
          g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(h, 0, null);
          if (h = cljs.core.seq(h)) {
            if (cljs.core.contains_QMARK_(c, g)) {
              g = cljs.core.rest(h);
            } else {
              c = cljs.core.cons(g, e(cljs.core.rest(h), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(c, g)));
              break a;
            }
          } else {
            c = null;
            break a;
          }
        }
      }
      return c;
    }, null, null);
  }(a, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function(a) {
  for (var b = cljs.core.PersistentVector.EMPTY;;) {
    if (cljs.core.next(a)) {
      b = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(b, cljs.core.first(a)), a = cljs.core.next(a);
    } else {
      return cljs.core.seq(b);
    }
  }
};
cljs.core.name = function(a) {
  if (null != a && (a.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$INamed$)) {
    return a.cljs$core$INamed$_name$arity$1(null);
  }
  if ("string" === typeof a) {
    return a;
  }
  throw Error(["Doesn't support name: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs.core.zipmap = function(a, b) {
  for (var c = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.seq(a), e = cljs.core.seq(b);;) {
    if (d && e) {
      c = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(c, cljs.core.first(d), cljs.core.first(e)), d = cljs.core.next(d), e = cljs.core.next(e);
    } else {
      return cljs.core.persistent_BANG_(c);
    }
  }
};
cljs.core.max_key = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return b;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b)) > (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c)) ? b : c;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, c) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(a, b, c);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(a, b, c), d);
};
cljs.core.max_key.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return b;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b)) < (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c)) ? b : c;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, c) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(a, b, c);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(a, b, c), d);
};
cljs.core.min_key.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(a) {
  this.arr = a;
};
cljs.core.ArrayList.prototype.add = function(a) {
  return this.arr.push(a);
};
cljs.core.ArrayList.prototype.size = function() {
  return this.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  return this.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  return 0 === this.arr.length;
};
cljs.core.ArrayList.prototype.toArray = function() {
  return this.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = !0;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function(a) {
  return new cljs.core.ArrayList(a);
};
cljs.core.array_list = function() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          if (!cljs.core.truth_(c.isEmpty())) {
            var d = cljs.core.vec(c.toArray());
            c.clear();
            a = cljs.core.unreduced(b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(a, d) : b.call(null, a, d));
          }
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          c.add(e);
          if (a === c.size()) {
            var f = cljs.core.vec(c.toArray());
            c.clear();
            return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, f) : b.call(null, d, f);
          }
          return d;
        };
        d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.array_list());
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(a, a, b);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.seq(c);
    return d ? cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, d), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(b, d))) : null;
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, e = function(a) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
      }, f = function(c, d) {
        return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d)) ? b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d) : cljs.core.reduced(c);
      };
      c = function(a, b) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
          case 2:
            return f.call(this, a, b);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    return c ? cljs.core.truth_(function() {
      var b = cljs.core.first(c);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
    }()) ? cljs.core.cons(cljs.core.first(c), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rest(c))) : null : null;
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function(a, b, c) {
  return function(d) {
    var e = cljs.core._comparator(a);
    d = cljs.core._entry_key(a, d);
    e = e.cljs$core$IFn$_invoke$arity$2 ? e.cljs$core$IFn$_invoke$arity$2(d, c) : e.call(null, d, c);
    return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(e, 0) : b.call(null, e, 0);
  };
};
cljs.core.subseq = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.mk_bound_fn(a, b, c);
  return cljs.core.truth_(function() {
    var a = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._GT_, cljs.core._GT__EQ_]);
    return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
  }()) ? (a = cljs.core._sorted_seq_from(a, c, !0), cljs.core.truth_(a) ? (c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(a, 0, null), cljs.core.truth_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(c) : d.call(null, c)) ? a : cljs.core.next(a)) : null) : cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(d, cljs.core._sorted_seq(a, !0));
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = cljs.core._sorted_seq_from(a, c, !0);
  if (cljs.core.truth_(f)) {
    var g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(a, d, e), cljs.core.truth_(function() {
      var d = cljs.core.mk_bound_fn(a, b, c);
      return d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(g) : d.call(null, g);
    }()) ? f : cljs.core.next(f));
  }
  return null;
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.mk_bound_fn(a, b, c);
  return cljs.core.truth_(function() {
    var a = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._LT_, cljs.core._LT__EQ_]);
    return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
  }()) ? (a = cljs.core._sorted_seq_from(a, c, !1), cljs.core.truth_(a) ? (c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(a, 0, null), cljs.core.truth_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(c) : d.call(null, c)) ? a : cljs.core.next(a)) : null) : cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(d, cljs.core._sorted_seq(a, !1));
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = cljs.core._sorted_seq_from(a, e, !1);
  if (cljs.core.truth_(f)) {
    var g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(a, b, c), cljs.core.truth_(function() {
      var b = cljs.core.mk_bound_fn(a, d, e);
      return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(g) : b.call(null, g);
    }()) ? f : cljs.core.next(f));
  }
  return null;
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(a, b, c) {
  this.i = a;
  this.end = b;
  this.step = c;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  return 0 < this.step ? this.i < this.end : this.i > this.end;
};
cljs.core.RangeIterator.prototype.next = function() {
  var a = this.i;
  this.i += this.step;
  return a;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = !0;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function(a, b, c) {
  return new cljs.core.RangeIterator(a, b, c);
};
cljs.core.Range = function(a, b, c, d, e) {
  this.meta = a;
  this.start = b;
  this.end = c;
  this.step = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.Range.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Range.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Range.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (0 <= b && b < this.cljs$core$ICounted$_count$arity$1(null)) {
    return this.start + b * this.step;
  }
  if (0 <= b && this.start > this.end && 0 === this.step) {
    return this.start;
  }
  throw Error("Index out of bounds");
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 <= b && b < this.cljs$core$ICounted$_count$arity$1(null) ? this.start + b * this.step : 0 <= b && this.start > this.end && 0 === this.step ? this.start : c;
};
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RangeIterator(this.start, this.end, this.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.Range(this.meta, this.start, this.end, this.step, this.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return 0 < this.step ? this.start + this.step < this.end ? new cljs.core.Range(this.meta, this.start + this.step, this.end, this.step, null) : null : this.start + this.step > this.end ? new cljs.core.Range(this.meta, this.start + this.step, this.end, this.step, null) : null;
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core.not(this.cljs$core$ISeqable$_seq$arity$1(null)) ? 0 : Math.ceil((this.end - this.start) / this.step);
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  for (a = this.start;;) {
    if (0 < this.step ? a < this.end : a > this.end) {
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, a) : b.call(null, c, a);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      a += this.step;
    } else {
      return c;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return null == this.cljs$core$ISeqable$_seq$arity$1(null) ? null : this.start;
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return null != this.cljs$core$ISeqable$_seq$arity$1(null) ? new cljs.core.Range(this.meta, this.start + this.step, this.end, this.step, null) : cljs.core.List.EMPTY;
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return 0 < this.step ? this.start < this.end ? this : null : 0 > this.step ? this.start > this.end ? this : null : this.start === this.end ? null : this;
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Range(b, this.start, this.end, this.step, this.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.Range.cljs$lang$type = !0;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Range");
};
cljs.core.__GT_Range = function(a, b, c, d, e) {
  return new cljs.core.Range(a, b, c, d, e);
};
var G__17178_17181 = cljs.core.Range.prototype, G__17179_17182 = cljs.core.ITER_SYMBOL, G__17180_17183 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__17178_17181, G__17179_17182);
goog.object.set(G__17178_17181, G__17179_17182, G__17180_17183);
cljs.core.range = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, a, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(a, b, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.Range(null, a, b, c, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return function(b) {
    return function(c) {
      return function() {
        var d = null, e = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, f = function(a) {
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, g = function(d, e) {
          var f = cljs.core._vreset_BANG_(c, cljs.core._deref(c) + 1);
          return 0 === cljs.core.rem(f, a) ? b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e) : d;
        };
        d = function(a, b) {
          switch(arguments.length) {
            case 0:
              return e.call(this);
            case 1:
              return f.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        d.cljs$core$IFn$_invoke$arity$0 = e;
        d.cljs$core$IFn$_invoke$arity$1 = f;
        d.cljs$core$IFn$_invoke$arity$2 = g;
        return d;
      }();
    }(cljs.core.volatile_BANG_(-1));
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    return c ? cljs.core.cons(cljs.core.first(c), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(a, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(a, c))) : null;
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function(a, b) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(a, b), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(a, b)], null);
};
cljs.core.partition_by = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    var c = cljs.core.array_list(), d = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(c, d) {
      return function() {
        var e = null, f = function() {
          return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
        }, k = function(a) {
          if (!cljs.core.truth_(c.isEmpty())) {
            var d = cljs.core.vec(c.toArray());
            c.clear();
            a = cljs.core.unreduced(b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(a, d) : b.call(null, a, d));
          }
          return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
        }, l = function(e, f) {
          var g = cljs.core.deref(d), h = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(f) : a.call(null, f);
          cljs.core.vreset_BANG_(d, h);
          if (cljs.core.keyword_identical_QMARK_(g, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(h, g)) {
            return c.add(f), e;
          }
          g = cljs.core.vec(c.toArray());
          c.clear();
          g = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(e, g) : b.call(null, e, g);
          cljs.core.reduced_QMARK_(g) || c.add(f);
          return g;
        };
        e = function(a, b) {
          switch(arguments.length) {
            case 0:
              return f.call(this);
            case 1:
              return k.call(this, a);
            case 2:
              return l.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        e.cljs$core$IFn$_invoke$arity$0 = f;
        e.cljs$core$IFn$_invoke$arity$1 = k;
        e.cljs$core$IFn$_invoke$arity$2 = l;
        return e;
      }();
    }(c, d);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      var d = cljs.core.first(c), e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
      d = cljs.core.cons(d, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(b, c, d, e) {
        return function(b) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c, a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b));
        };
      }(d, e, c, c), cljs.core.next(c)));
      return cljs.core.cons(d, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(a, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(d), c))));
    }
    return null;
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function(a) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, c) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(a, c, cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, c, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), a));
};
cljs.core.reductions = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(a, cljs.core.first(c), cljs.core.rest(c));
    }
    c = a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
    return cljs.core._conj(cljs.core.List.EMPTY, c);
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (cljs.core.reduced_QMARK_(b)) {
    var d = cljs.core.deref(b);
    return cljs.core._conj(cljs.core.List.EMPTY, d);
  }
  return cljs.core.cons(b, new cljs.core.LazySeq(null, function() {
    var d = cljs.core.seq(c);
    return d ? cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(a, function() {
      var c = cljs.core.first(d);
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    }(), cljs.core.rest(d)) : null;
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function() {
    var b = null, c = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null)], null);
    }, d = function(b) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b)], null);
    }, e = function(b, c) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c)], null);
    }, f = function(b, c, d) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d)], null);
    }, g = function() {
      var b = function(b, c, d, e) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)], null);
      }, c = function(a, c, d, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return b.call(this, a, c, d, f);
      };
      c.cljs$lang$maxFixedArity = 3;
      c.cljs$lang$applyTo = function(a) {
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return b(c, d, e, a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
    b = function(a, b, l, m) {
      switch(arguments.length) {
        case 0:
          return c.call(this);
        case 1:
          return d.call(this, a);
        case 2:
          return e.call(this, a, b);
        case 3:
          return f.call(this, a, b, l);
        default:
          var h = null;
          if (3 < arguments.length) {
            h = 0;
            for (var k = Array(arguments.length - 3); h < k.length;) {
              k[h] = arguments[h + 3], ++h;
            }
            h = new cljs.core.IndexedSeq(k, 0, null);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(a, b, l, h);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    b.cljs$lang$maxFixedArity = 3;
    b.cljs$lang$applyTo = g.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = c;
    b.cljs$core$IFn$_invoke$arity$1 = d;
    b.cljs$core$IFn$_invoke$arity$2 = e;
    b.cljs$core$IFn$_invoke$arity$3 = f;
    b.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null)], null);
    }, e = function(c) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c), b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(c) : b.call(null, c)], null);
    }, f = function(c, d) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d), b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d)], null);
    }, g = function(c, d, e) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(c, d, e) : a.call(null, c, d, e), b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, d, e) : b.call(null, c, d, e)], null);
    }, h = function() {
      var c = function(c, d, e, f) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, c, d, e, f), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f)], null);
      }, d = function(a, b, d, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return c.call(this, a, b, d, f);
      };
      d.cljs$lang$maxFixedArity = 3;
      d.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var d = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return c(b, d, e, a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
    c = function(a, b, c, n) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, a);
        case 2:
          return f.call(this, a, b);
        case 3:
          return g.call(this, a, b, c);
        default:
          var k = null;
          if (3 < arguments.length) {
            k = 0;
            for (var m = Array(arguments.length - 3); k < m.length;) {
              m[k] = arguments[k + 3], ++k;
            }
            k = new cljs.core.IndexedSeq(m, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(a, b, c, k);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = h.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    c.cljs$core$IFn$_invoke$arity$3 = g;
    c.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null), c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null)], null);
    }, f = function(d) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d), b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(d) : b.call(null, d), c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d)], null);
    }, g = function(d, e) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(d, e) : a.call(null, d, e), b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, e) : b.call(null, d, e), c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(d, e) : c.call(null, d, e)], null);
    }, h = function(d, e, f) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(d, e, f) : a.call(null, d, e, f), b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(d, e, f) : b.call(null, d, e, f), c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(d, e, f) : c.call(null, d, e, f)], null);
    }, k = function() {
      var d = function(d, e, f, g) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, d, e, f, g), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, d, e, f, g), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(c, d, e, f, g)], null);
      }, e = function(a, b, c, e) {
        var f = null;
        if (3 < arguments.length) {
          f = 0;
          for (var g = Array(arguments.length - 3); f < g.length;) {
            g[f] = arguments[f + 3], ++f;
          }
          f = new cljs.core.IndexedSeq(g, 0, null);
        }
        return d.call(this, a, b, c, f);
      };
      e.cljs$lang$maxFixedArity = 3;
      e.cljs$lang$applyTo = function(a) {
        var b = cljs.core.first(a);
        a = cljs.core.next(a);
        var c = cljs.core.first(a);
        a = cljs.core.next(a);
        var e = cljs.core.first(a);
        a = cljs.core.rest(a);
        return d(b, c, e, a);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
    d = function(a, b, c, d) {
      switch(arguments.length) {
        case 0:
          return e.call(this);
        case 1:
          return f.call(this, a);
        case 2:
          return g.call(this, a, b);
        case 3:
          return h.call(this, a, b, c);
        default:
          var m = null;
          if (3 < arguments.length) {
            m = 0;
            for (var l = Array(arguments.length - 3); m < l.length;) {
              l[m] = arguments[m + 3], ++m;
            }
            m = new cljs.core.IndexedSeq(l, 0, null);
          }
          return k.cljs$core$IFn$_invoke$arity$variadic(a, b, c, m);
      }
      throw Error("Invalid arity: " + (arguments.length - 1));
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = k.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = e;
    d.cljs$core$IFn$_invoke$arity$1 = f;
    d.cljs$core$IFn$_invoke$arity$2 = g;
    d.cljs$core$IFn$_invoke$arity$3 = h;
    d.cljs$core$IFn$_invoke$arity$variadic = k.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return function(a) {
    return function() {
      var b = null, c = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a) {
          return function(a, b) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null));
          };
        }(a), cljs.core.PersistentVector.EMPTY, a);
      }, d = function(b) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a) {
          return function(a, c) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b));
          };
        }(a), cljs.core.PersistentVector.EMPTY, a);
      }, e = function(b, c) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a) {
          return function(a, d) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d.cljs$core$IFn$_invoke$arity$2 ? d.cljs$core$IFn$_invoke$arity$2(b, c) : d.call(null, b, c));
          };
        }(a), cljs.core.PersistentVector.EMPTY, a);
      }, l = function(b, c, d) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a) {
          return function(a, e) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, e.cljs$core$IFn$_invoke$arity$3 ? e.cljs$core$IFn$_invoke$arity$3(b, c, d) : e.call(null, b, c, d));
          };
        }(a), cljs.core.PersistentVector.EMPTY, a);
      }, m = function() {
        var b = function(b, c, d, e) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a) {
            return function(a, f) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, b, c, d, e));
            };
          }(a), cljs.core.PersistentVector.EMPTY, a);
        }, c = function(a, c, d, e) {
          var f = null;
          if (3 < arguments.length) {
            f = 0;
            for (var g = Array(arguments.length - 3); f < g.length;) {
              g[f] = arguments[f + 3], ++f;
            }
            f = new cljs.core.IndexedSeq(g, 0, null);
          }
          return b.call(this, a, c, d, f);
        };
        c.cljs$lang$maxFixedArity = 3;
        c.cljs$lang$applyTo = function(a) {
          var c = cljs.core.first(a);
          a = cljs.core.next(a);
          var d = cljs.core.first(a);
          a = cljs.core.next(a);
          var e = cljs.core.first(a);
          a = cljs.core.rest(a);
          return b(c, d, e, a);
        };
        c.cljs$core$IFn$_invoke$arity$variadic = b;
        return c;
      }();
      b = function(a, b, f, g) {
        switch(arguments.length) {
          case 0:
            return c.call(this);
          case 1:
            return d.call(this, a);
          case 2:
            return e.call(this, a, b);
          case 3:
            return l.call(this, a, b, f);
          default:
            var h = null;
            if (3 < arguments.length) {
              h = 0;
              for (var k = Array(arguments.length - 3); h < k.length;) {
                k[h] = arguments[h + 3], ++h;
              }
              h = new cljs.core.IndexedSeq(k, 0, null);
            }
            return m.cljs$core$IFn$_invoke$arity$variadic(a, b, f, h);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      b.cljs$lang$maxFixedArity = 3;
      b.cljs$lang$applyTo = m.cljs$lang$applyTo;
      b.cljs$core$IFn$_invoke$arity$0 = c;
      b.cljs$core$IFn$_invoke$arity$1 = d;
      b.cljs$core$IFn$_invoke$arity$2 = e;
      b.cljs$core$IFn$_invoke$arity$3 = l;
      b.cljs$core$IFn$_invoke$arity$variadic = m.cljs$core$IFn$_invoke$arity$variadic;
      return b;
    }();
  }(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
};
cljs.core.juxt.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(a) {
  for (;;) {
    if (cljs.core.seq(a)) {
      a = cljs.core.next(a);
    } else {
      return null;
    }
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  for (;;) {
    if (cljs.core.seq(b) && 0 < a) {
      var c = a - 1, d = cljs.core.next(b);
      a = c;
      b = d;
    } else {
      return null;
    }
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(a) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(a);
  return a;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(a, b);
  return b;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function(a) {
  return a instanceof RegExp;
};
cljs.core.re_matches = function(a, b) {
  if ("string" === typeof b) {
    var c = a.exec(b);
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(c), b) ? 1 === cljs.core.count(c) ? cljs.core.first(c) : cljs.core.vec(c) : null;
  }
  throw new TypeError("re-matches must match against a string.");
};
cljs.core.re_find = function(a, b) {
  if ("string" === typeof b) {
    var c = a.exec(b);
    return null == c ? null : 1 === cljs.core.count(c) ? cljs.core.first(c) : cljs.core.vec(c);
  }
  throw new TypeError("re-find must match against a string.");
};
cljs.core.re_seq = function(a, b) {
  var c = cljs.core.re_find(a, b), d = b.search(a), e = cljs.core.coll_QMARK_(c) ? cljs.core.first(c) : c, f = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(b, d + cljs.core.count(e));
  return cljs.core.truth_(c) ? new cljs.core.LazySeq(null, function(b, c, d, e) {
    return function() {
      return cljs.core.cons(b, cljs.core.seq(e) ? cljs.core.re_seq.cljs$core$IFn$_invoke$arity$2 ? cljs.core.re_seq.cljs$core$IFn$_invoke$arity$2(a, e) : cljs.core.re_seq.call(null, a, e) : null);
    };
  }(c, d, e, f), null, null) : null;
};
cljs.core.re_pattern = function(a) {
  if (a instanceof RegExp) {
    return a;
  }
  var b = cljs.core.re_find(/^\(\?([idmsux]*)\)/, a), c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(b, 0, null);
  b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(b, 1, null);
  a = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(a, cljs.core.count(c));
  c = RegExp;
  b = cljs.core.truth_(b) ? b : "";
  return new c(a, b);
};
cljs.core.pr_sequential_writer = function(a, b, c, d, e, f, g) {
  var h = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = null == cljs.core._STAR_print_level_STAR_ ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (null != cljs.core._STAR_print_level_STAR_ && 0 > cljs.core._STAR_print_level_STAR_) {
      return cljs.core._write(a, "#");
    }
    cljs.core._write(a, c);
    if (0 === (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(f)) {
      cljs.core.seq(g) && cljs.core._write(a, function() {
        var a = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(f);
        return cljs.core.truth_(a) ? a : "...";
      }());
    } else {
      if (cljs.core.seq(g)) {
        var k = cljs.core.first(g);
        b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(k, a, f) : b.call(null, k, a, f);
      }
      for (var l = cljs.core.next(g), m = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(f) - 1;;) {
        if (!l || null != m && 0 === m) {
          cljs.core.seq(l) && 0 === m && (cljs.core._write(a, d), cljs.core._write(a, function() {
            var a = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(f);
            return cljs.core.truth_(a) ? a : "...";
          }()));
          break;
        } else {
          cljs.core._write(a, d);
          var n = cljs.core.first(l);
          c = a;
          g = f;
          b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(n, c, g) : b.call(null, n, c, g);
          var p = cljs.core.next(l);
          c = m - 1;
          l = p;
          m = c;
        }
      }
    }
    return cljs.core._write(a, e);
  } finally {
    cljs.core._STAR_print_level_STAR_ = h;
  }
};
cljs.core.write_all = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  for (var c = cljs.core.seq(b), d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = d.cljs$core$IIndexed$_nth$arity$2(null, f);
      cljs.core._write(a, g);
      f += 1;
    } else {
      if (c = cljs.core.seq(c)) {
        d = c, cljs.core.chunked_seq_QMARK_(d) ? (c = cljs.core.chunk_first(d), e = cljs.core.chunk_rest(d), d = c, g = cljs.core.count(c), c = e, e = g) : (g = cljs.core.first(d), cljs.core._write(a, g), c = cljs.core.next(d), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.string_print = function(a) {
  if (null == cljs.core._STAR_print_fn_STAR_) {
    throw Error("No *print-fn* fn set for evaluation environment");
  }
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(a) : cljs.core._STAR_print_fn_STAR_.call(null, a);
  return null;
};
cljs.core.flush = function() {
  return null;
};
cljs.core.char_escapes = function() {
  return {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
}();
cljs.core.quote_string = function(a) {
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1('"'), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(a) {
    return cljs.core.char_escapes[a];
  })), cljs.core.str.cljs$core$IFn$_invoke$arity$1('"')].join("");
};
cljs.core.print_meta_QMARK_ = function(a, b) {
  var c = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  return c ? (c = null != b ? b.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$IMeta$ ? !0 : !1 : !1) ? null != cljs.core.meta(b) : c : c;
};
cljs.core.pr_writer_impl = function(a, b, c) {
  if (null == a) {
    return cljs.core._write(b, "nil");
  }
  cljs.core.print_meta_QMARK_(c, a) && (cljs.core._write(b, "^"), cljs.core.pr_writer(cljs.core.meta(a), b, c), cljs.core._write(b, " "));
  if (a.cljs$lang$type) {
    return a.cljs$lang$ctorPrWriter(a, b, c);
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 2147483648 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IPrintWithWriter$)) {
    return a.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, b, c);
  }
  if (!0 === a || !1 === a) {
    return cljs.core._write(b, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a));
  }
  if ("number" === typeof a) {
    return cljs.core._write(b, isNaN(a) ? "##NaN" : a === Number.POSITIVE_INFINITY ? "##Inf" : a === Number.NEGATIVE_INFINITY ? "##-Inf" : "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a));
  }
  if (cljs.core.object_QMARK_(a)) {
    return cljs.core._write(b, "#js "), cljs.core.print_map(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(b) {
      var c = cljs.core.PersistentVector, d = cljs.core.PersistentVector.EMPTY_NODE;
      var e = null != cljs.core.re_matches(/[A-Za-z_\*\+\?!\-'][\w\*\+\?!\-']*/, b) ? cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(b) : b;
      return new c(null, 2, 5, d, [e, a[b]], null);
    }, cljs.core.js_keys(a)), cljs.core.pr_writer, b, c);
  }
  if (cljs.core.array_QMARK_(a)) {
    return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "#js [", " ", "]", c, a);
  }
  if (goog.isString(a)) {
    return cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(c)) ? cljs.core._write(b, cljs.core.quote_string(a)) : cljs.core._write(b, a);
  }
  if (goog.isFunction(a)) {
    var d = a.name;
    c = cljs.core.truth_(function() {
      var a = null == d;
      return a ? a : goog.string.isEmpty(d);
    }()) ? "Function" : d;
    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", c, cljs.core._STAR_print_fn_bodies_STAR_ ? [' "', cljs.core.str.cljs$core$IFn$_invoke$arity$1("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)), '"'].join("") : "", "]"], 0));
  }
  if (a instanceof Date) {
    return c = function(a, b) {
      for (var c = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a);;) {
        if (cljs.core.count(c) < b) {
          c = ["0", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("");
        } else {
          return c;
        }
      }
    }, cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#inst "', "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a.getUTCFullYear()), "-", c(a.getUTCMonth() + 1, 2), "-", c(a.getUTCDate(), 2), "T", c(a.getUTCHours(), 2), ":", c(a.getUTCMinutes(), 2), ":", c(a.getUTCSeconds(), 2), ".", c(a.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
  }
  if (cljs.core.regexp_QMARK_(a)) {
    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#"', a.source, '"'], 0));
  }
  if (cljs.core.truth_(function() {
    var b = null == a ? null : a.constructor;
    return null == b ? null : b.cljs$lang$ctorStr;
  }())) {
    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", a.constructor.cljs$lang$ctorStr.replace(RegExp("/", "g"), "."), "]"], 0));
  }
  d = function() {
    var b = null == a ? null : a.constructor;
    return null == b ? null : b.name;
  }();
  c = cljs.core.truth_(function() {
    var a = null == d;
    return a ? a : goog.string.isEmpty(d);
  }()) ? "Object" : d;
  return null == a.constructor ? cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", c, "]"], 0)) : cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", c, " ", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "]"], 0));
};
cljs.core.pr_writer = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(c);
  return cljs.core.truth_(d) ? (c = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl), d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c)) : cljs.core.pr_writer_impl(a, b, c);
};
cljs.core.pr_seq_writer = function(a, b, c) {
  cljs.core.pr_writer(cljs.core.first(a), b, c);
  a = cljs.core.seq(cljs.core.next(a));
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = d.cljs$core$IIndexed$_nth$arity$2(null, f);
      cljs.core._write(b, " ");
      cljs.core.pr_writer(g, b, c);
      f += 1;
    } else {
      if (a = cljs.core.seq(a)) {
        d = a, cljs.core.chunked_seq_QMARK_(d) ? (a = cljs.core.chunk_first(d), e = cljs.core.chunk_rest(d), d = a, g = cljs.core.count(a), a = e, e = g) : (g = cljs.core.first(d), cljs.core._write(b, " "), cljs.core.pr_writer(g, b, c), a = cljs.core.next(d), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_sb_with_opts = function(a, b) {
  var c = new goog.string.StringBuffer, d = new cljs.core.StringBufferWriter(c);
  cljs.core.pr_seq_writer(a, d, b);
  d.cljs$core$IWriter$_flush$arity$1(null);
  return c;
};
cljs.core.pr_str_with_opts = function(a, b) {
  return cljs.core.empty_QMARK_(a) ? "" : "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts(a, b));
};
cljs.core.prn_str_with_opts = function(a, b) {
  if (cljs.core.empty_QMARK_(a)) {
    return "\n";
  }
  var c = cljs.core.pr_sb_with_opts(a, b);
  c.append("\n");
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(c);
};
cljs.core.pr_with_opts = function(a, b) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(a, b));
};
cljs.core.newline = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(a) {
  cljs.core.string_print("\n");
  return cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939))) ? cljs.core.flush() : null;
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.pr_str_with_opts(a, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(a) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.prn_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.prn_str_with_opts(a, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(a) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.pr = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.pr_with_opts(a, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(a) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.print = function() {
  var a = function(a) {
    return cljs.core.pr_with_opts(a, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), !1));
  }, b = function(b) {
    var c = null;
    if (0 < arguments.length) {
      c = 0;
      for (var e = Array(arguments.length - 0); c < e.length;) {
        e[c] = arguments[c + 0], ++c;
      }
      c = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, c);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(b) {
    b = cljs.core.seq(b);
    return a(b);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}();
cljs.core.print_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.pr_str_with_opts(a, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), !1));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(a) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.println = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  cljs.core.pr_with_opts(a, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), !1));
  return cljs.core._STAR_print_newline_STAR_ ? cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts()) : null;
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(a) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.println_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.prn_str_with_opts(a, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), !1));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(a) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.prn = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  cljs.core.pr_with_opts(a, cljs.core.pr_opts());
  return cljs.core._STAR_print_newline_STAR_ ? cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts()) : null;
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(a) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.strip_ns = function(a) {
  return a instanceof cljs.core.Symbol ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(a)) : cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(a));
};
cljs.core.lift_ns = function(a) {
  if (cljs.core._STAR_print_namespace_maps_STAR_) {
    var b = cljs.core.seq(a), c = cljs.core.seq(b), d = cljs.core.first(c);
    cljs.core.next(c);
    cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 0, null);
    cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 1, null);
    c = cljs.core.empty(a);
    for (a = null;;) {
      d = a;
      b = cljs.core.seq(b);
      a = cljs.core.first(b);
      var e = cljs.core.next(b), f = a;
      a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      if (cljs.core.truth_(f)) {
        if (a instanceof cljs.core.Keyword || a instanceof cljs.core.Symbol) {
          if (cljs.core.truth_(d)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(d, cljs.core.namespace(a))) {
              c = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c, cljs.core.strip_ns(a), b), a = d, b = e;
            } else {
              return null;
            }
          } else {
            if (d = cljs.core.namespace(a), cljs.core.truth_(d)) {
              c = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c, cljs.core.strip_ns(a), b), a = d, b = e;
            } else {
              return null;
            }
          }
        } else {
          return null;
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, c], null);
      }
    }
  } else {
    return null;
  }
};
cljs.core.print_prefix_map = function(a, b, c, d, e) {
  return cljs.core.pr_sequential_writer(d, function(a, b, d) {
    var e = cljs.core.key(a);
    c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(e, b, d) : c.call(null, e, b, d);
    cljs.core._write(b, " ");
    a = cljs.core.val(a);
    return c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(a, b, d) : c.call(null, a, b, d);
  }, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "{"].join(""), ", ", "}", e, cljs.core.seq(b));
};
cljs.core.print_map = function(a, b, c, d) {
  var e = cljs.core.map_QMARK_(a) ? cljs.core.lift_ns(a) : null, f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 0, null);
  e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 1, null);
  return cljs.core.truth_(f) ? cljs.core.print_prefix_map(["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(f)].join(""), e, b, c, d) : cljs.core.print_prefix_map(null, a, b, c, d);
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), this.state], null), b, c);
  return cljs.core._write(b, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, "#'");
  return cljs.core.pr_writer(this.sym, b, c);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "#{", " ", "}", c, this);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.print_map(this, cljs.core.pr_writer, b, c);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.print_map(this, cljs.core.pr_writer, b, c);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.print_map(this, cljs.core.pr_writer, b, c);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "#{", " ", "}", c, this);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), this.state], null), b, c);
  return cljs.core._write(b, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write(b, "()");
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "#queue [", " ", "]", c, cljs.core.seq(this));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.print_map(this, cljs.core.pr_writer, b, c);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (b instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (b instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.MapEntry.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.BlackNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.RedNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.alter_meta_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return a.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(b, a.meta, c);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.reset_meta_BANG_ = function(a, b) {
  return a.meta = b;
};
cljs.core.add_watch = function(a, b, c) {
  cljs.core._add_watch(a, b, c);
  return a;
};
cljs.core.remove_watch = function(a, b) {
  cljs.core._remove_watch(a, b);
  return a;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(a) {
  null == cljs.core.gensym_counter && (cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0));
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(a, b) {
  this.f = a;
  this.value = b;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  cljs.core.truth_(this.f) && (this.value = this.f.cljs$core$IFn$_invoke$arity$0 ? this.f.cljs$core$IFn$_invoke$arity$0() : this.f.call(null), this.f = null);
  return this.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(a) {
  return cljs.core.not(this.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Delay.cljs$lang$type = !0;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function(a, b) {
  return new cljs.core.Delay(a, b);
};
cljs.core.delay_QMARK_ = function(a) {
  return a instanceof cljs.core.Delay;
};
cljs.core.force = function(a) {
  return cljs.core.delay_QMARK_(a) ? cljs.core.deref(a) : a;
};
cljs.core.realized_QMARK_ = function(a) {
  return cljs.core._realized_QMARK_(a);
};
cljs.core.preserving_reduced = function(a) {
  return function(b, c) {
    var d = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    return cljs.core.reduced_QMARK_(d) ? cljs.core.reduced(d) : d;
  };
};
cljs.core.cat = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
      }, e = function(b) {
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
      }, f = function(a, c) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(b, a, c);
      };
      c = function(a, b) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, a);
          case 2:
            return f.call(this, a, b);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  }(cljs.core.preserving_reduced(a));
};
cljs.core.halt_when = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(a, null);
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function(c) {
    return function() {
      var d = null, e = function() {
        return c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null);
      }, f = function(a) {
        return cljs.core.map_QMARK_(a) && cljs.core.contains_QMARK_(a, new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715)) ? (new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715)).cljs$core$IFn$_invoke$arity$1(a) : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(a) : c.call(null, a);
      }, g = function(d, e) {
        return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e)) ? cljs.core.reduced(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715), cljs.core.truth_(b) ? function() {
          var a = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(d) : c.call(null, d);
          return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(a, e) : b.call(null, a, e);
        }() : e], null)) : c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(d, e) : c.call(null, d, e);
      };
      d = function(a, b) {
        switch(arguments.length) {
          case 0:
            return e.call(this);
          case 1:
            return f.call(this, a);
          case 2:
            return g.call(this, a, b);
        }
        throw Error("Invalid arity: " + (arguments.length - 1));
      };
      d.cljs$core$IFn$_invoke$arity$0 = e;
      d.cljs$core$IFn$_invoke$arity$1 = f;
      d.cljs$core$IFn$_invoke$arity$2 = g;
      return d;
    }();
  };
};
cljs.core.halt_when.cljs$lang$maxFixedArity = 2;
cljs.core.dedupe = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(a) {
    return function(b) {
      return function() {
        var c = null, d = function() {
          return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
        }, e = function(b) {
          return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
        }, f = function(c, d) {
          var e = cljs.core.deref(b);
          cljs.core.vreset_BANG_(b, d);
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(e, d) ? c : a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d);
        };
        c = function(a, b) {
          switch(arguments.length) {
            case 0:
              return d.call(this);
            case 1:
              return e.call(this, a);
            case 2:
              return f.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        c.cljs$core$IFn$_invoke$arity$0 = d;
        c.cljs$core$IFn$_invoke$arity$1 = e;
        c.cljs$core$IFn$_invoke$arity$2 = f;
        return c;
      }();
    }(cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)));
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), a);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(b) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < a;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(b) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < a;
  }, b);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(a, b) {
  this.xform = a;
  this.coll = b;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, 0);
  }, c = function(a, b) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var a = null, b = function(a) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, cljs.core.count(this));
  }, c = function(a, b) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Eduction.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return cljs.core.TransformerIterator.create(this.xform, cljs.core.iter(this.coll));
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(this.xform, this.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(this.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(b), this.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(this.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(b), c, this.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = !0;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function(a, b) {
  return new cljs.core.Eduction(a, b);
};
var G__17421_17424 = cljs.core.Eduction.prototype, G__17422_17425 = cljs.core.ITER_SYMBOL, G__17423_17426 = function(a, b) {
  return function() {
    return cljs.core.es6_iterator(this);
  };
}(G__17421_17424, G__17422_17425);
goog.object.set(G__17421_17424, G__17422_17425, G__17423_17426);
cljs.core.eduction = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(a)), cljs.core.last(a));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(a) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.run_BANG_ = function(a, b) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, d) {
    return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
  }, null, b);
  return null;
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function(a) {
  if (null != a && null != a.cljs$core$IEncodeJS$_clj__GT_js$arity$1) {
    return a.cljs$core$IEncodeJS$_clj__GT_js$arity$1(a);
  }
  var b = cljs.core._clj__GT_js[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._clj__GT_js._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", a);
};
cljs.core._key__GT_js = function(a) {
  if (null != a && null != a.cljs$core$IEncodeJS$_key__GT_js$arity$1) {
    return a.cljs$core$IEncodeJS$_key__GT_js$arity$1(a);
  }
  var b = cljs.core._key__GT_js[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._key__GT_js._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", a);
};
cljs.core.key__GT_js = function(a) {
  return (null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IEncodeJS$ || (a.cljs$lang$protocol_mask$partition$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, a)) ? cljs.core._clj__GT_js(a) : "string" === typeof a || "number" === typeof a || a instanceof cljs.core.Keyword || a instanceof cljs.core.Symbol ? cljs.core.clj__GT_js(a) : cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a], 
  0));
};
cljs.core.clj__GT_js = function(a) {
  if (null == a) {
    return null;
  }
  if (null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IEncodeJS$ || (a.cljs$lang$protocol_mask$partition$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, a)) {
    return cljs.core._clj__GT_js(a);
  }
  if (a instanceof cljs.core.Keyword) {
    return cljs.core.name(a);
  }
  if (a instanceof cljs.core.Symbol) {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a);
  }
  if (cljs.core.map_QMARK_(a)) {
    var b = {};
    a = cljs.core.seq(a);
    for (var c = null, d = 0, e = 0;;) {
      if (e < d) {
        var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null), h = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
        f = b;
        g = cljs.core.key__GT_js(g);
        h = cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(h) : cljs.core.clj__GT_js.call(null, h);
        goog.object.set(f, g, h);
        e += 1;
      } else {
        if (a = cljs.core.seq(a)) {
          cljs.core.chunked_seq_QMARK_(a) ? (d = cljs.core.chunk_first(a), a = cljs.core.chunk_rest(a), c = d, d = cljs.core.count(d)) : (c = cljs.core.first(a), d = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), c = b, d = cljs.core.key__GT_js(d), e = cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.clj__GT_js.call(null, e), goog.object.set(c, d, e), a = cljs.core.next(a), 
          c = null, d = 0), e = 0;
        } else {
          break;
        }
      }
    }
    return b;
  }
  if (cljs.core.coll_QMARK_(a)) {
    b = [];
    a = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.clj__GT_js, a));
    c = null;
    for (e = d = 0;;) {
      if (e < d) {
        f = c.cljs$core$IIndexed$_nth$arity$2(null, e), b.push(f), e += 1;
      } else {
        if (a = cljs.core.seq(a)) {
          c = a, cljs.core.chunked_seq_QMARK_(c) ? (a = cljs.core.chunk_first(c), e = cljs.core.chunk_rest(c), c = a, d = cljs.core.count(a), a = e) : (a = cljs.core.first(c), b.push(a), a = cljs.core.next(c), c = null, d = 0), e = 0;
        } else {
          break;
        }
      }
    }
    return b;
  }
  return a;
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function(a, b) {
  if (null != a && null != a.cljs$core$IEncodeClojure$_js__GT_clj$arity$2) {
    return a.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(a, b);
  }
  var c = cljs.core._js__GT_clj[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._js__GT_clj._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", a);
};
cljs.core.js__GT_clj = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(a, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !1], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, b) : b, d = cljs.core.get.cljs$core$IFn$_invoke$arity$2(c, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252)), e = cljs.core.truth_(d) ? cljs.core.keyword : cljs.core.str;
  return function(a, c, d, e) {
    return function n(f) {
      return (null != f ? cljs.core.PROTOCOL_SENTINEL === f.cljs$core$IEncodeClojure$ || (f.cljs$lang$protocol_mask$partition$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, f)) : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, f)) ? cljs.core._js__GT_clj(f, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, b)) : cljs.core.seq_QMARK_(f) ? cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(n, f)) : cljs.core.coll_QMARK_(f) ? 
      cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(f), cljs.core.map.cljs$core$IFn$_invoke$arity$2(n, f)) : cljs.core.array_QMARK_(f) ? cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(n, f)) : cljs.core.type(f) === Object ? cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
        return function(a, b, c, d) {
          return function w(e) {
            return new cljs.core.LazySeq(null, function(a, b, c, d) {
              return function() {
                for (;;) {
                  var a = cljs.core.seq(e);
                  if (a) {
                    if (cljs.core.chunked_seq_QMARK_(a)) {
                      var b = cljs.core.chunk_first(a), c = cljs.core.count(b), g = cljs.core.chunk_buffer(c);
                      a: {
                        for (var h = 0;;) {
                          if (h < c) {
                            var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, h);
                            cljs.core.chunk_append(g, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(k) : d.call(null, k), n(f[k])], null));
                            h += 1;
                          } else {
                            b = !0;
                            break a;
                          }
                        }
                      }
                      return b ? cljs.core.chunk_cons(cljs.core.chunk(g), w(cljs.core.chunk_rest(a))) : cljs.core.chunk_cons(cljs.core.chunk(g), null);
                    }
                    g = cljs.core.first(a);
                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(g) : d.call(null, g), n(f[g])], null), w(cljs.core.rest(a)));
                  }
                  return null;
                }
              };
            }(a, b, c, d), null, null);
          };
        }(a, c, d, e)(cljs.core.js_keys(f));
      }()) : f;
    };
  }(b, c, d, e)(a);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function(a) {
  return function(b) {
    return function() {
      var c = function(c) {
        var d = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(b), c, cljs.core.lookup_sentinel);
        d === cljs.core.lookup_sentinel && (d = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(a, c), cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(b, cljs.core.assoc, c, d));
        return d;
      }, d = function(a) {
        var b = null;
        if (0 < arguments.length) {
          b = 0;
          for (var d = Array(arguments.length - 0); b < d.length;) {
            d[b] = arguments[b + 0], ++b;
          }
          b = new cljs.core.IndexedSeq(d, 0, null);
        }
        return c.call(this, b);
      };
      d.cljs$lang$maxFixedArity = 0;
      d.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return c(a);
      };
      d.cljs$core$IFn$_invoke$arity$variadic = c;
      return d;
    }();
  }(cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY));
};
cljs.core.trampoline = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(a) {
  for (;;) {
    if (a = a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), !cljs.core.fn_QMARK_(a)) {
      return a;
    }
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(a, b);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return Math.random() * a;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function(a) {
  return Math.floor(Math.random() * a);
};
cljs.core.rand_nth = function(a) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rand_int(cljs.core.count(a)));
};
cljs.core.group_by = function(a, b) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, d) {
    var c = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(b, c, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, c, cljs.core.PersistentVector.EMPTY), d));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), b));
};
cljs.core.make_hierarchy = function() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function() {
  null == cljs.core._global_hierarchy && (cljs.core._global_hierarchy = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy()));
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), a, b);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.isa_QMARK_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()), a, b);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(b, c);
  if (!d && !(d = cljs.core.contains_QMARK_(function() {
    var c = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(a);
    return c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b);
  }(), c)) && (d = cljs.core.vector_QMARK_(c)) && (d = cljs.core.vector_QMARK_(b))) {
    if (d = cljs.core.count(c) === cljs.core.count(b)) {
      d = !0;
      for (var e = 0;;) {
        if (d && e !== cljs.core.count(c)) {
          d = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(a, b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e), c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(e) : c.call(null, e)), e += 1;
        } else {
          return d;
        }
      }
    } else {
      return d;
    }
  } else {
    return d;
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), a);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(a), b));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), a);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(a), b));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), a);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(a), b));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (!cljs.core.truth_(cljs.core.namespace(b))) {
    throw Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a, b], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (!cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(b, c)) {
    throw Error("Assert failed: (not\x3d tag parent)");
  }
  var d = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(a), e = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(a), f = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(a), g = function(a, b, c) {
    return function(d, e, f, g, h) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, b, c) {
        return function(a, b) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(h, b, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(g, h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(g) : h.call(null, g))));
        };
      }(a, b, c), d, cljs.core.cons(e, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(e) : f.call(null, e)));
    };
  }(d, e, f);
  if (cljs.core.contains_QMARK_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b), c)) {
    b = null;
  } else {
    if (cljs.core.contains_QMARK_(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(b) : f.call(null, b), c)) {
      throw Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "already has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "as ancestor"].join(""));
    }
    if (cljs.core.contains_QMARK_(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(c) : f.call(null, c), b)) {
      throw Error(["Cyclic derivation:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "as ancestor"].join(""));
    }
    b = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(a), b, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(d, b, cljs.core.PersistentHashSet.EMPTY), c)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), g((new cljs.core.Keyword(null, "ancestors", 
    "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(a), b, e, c, f), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), g((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(a), c, f, b, e)], null);
  }
  return cljs.core.truth_(b) ? b : a;
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a, b], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(a), e = cljs.core.truth_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b), c) : cljs.core.PersistentHashSet.EMPTY, f = cljs.core.truth_(cljs.core.not_empty(e)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d, b, e) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(d, 
  b), g = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(a, b, c) {
    return function(a) {
      return cljs.core.cons(cljs.core.first(a), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(a), cljs.core.second(a)));
    };
  }(d, e, f), cljs.core.seq(f)));
  return cljs.core.contains_QMARK_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b), c) ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, b, c, d) {
    return function(a, b) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, a, b);
    };
  }(d, e, f, g), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, g)) : a;
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function(a, b, c, d) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, function(a) {
    return cljs.core.deref(b);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(c, function(a) {
    return cljs.core.deref(d);
  });
};
cljs.core.prefers_STAR_ = function(a, b, c) {
  var d = function() {
    var b = cljs.core.deref(c);
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }();
  d = cljs.core.truth_(cljs.core.truth_(d) ? d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b) : d) ? !0 : null;
  if (cljs.core.truth_(d)) {
    return d;
  }
  d = function() {
    for (var d = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(b);;) {
      if (0 < cljs.core.count(d)) {
        cljs.core.truth_(function() {
          var b = cljs.core.first(d);
          return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(a, b, c) : cljs.core.prefers_STAR_.call(null, a, b, c);
        }()), d = cljs.core.rest(d);
      } else {
        return null;
      }
    }
  }();
  if (cljs.core.truth_(d)) {
    return d;
  }
  d = function() {
    for (var d = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(a);;) {
      if (0 < cljs.core.count(d)) {
        cljs.core.truth_(function() {
          var a = cljs.core.first(d);
          return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(a, b, c) : cljs.core.prefers_STAR_.call(null, a, b, c);
        }()), d = cljs.core.rest(d);
      } else {
        return null;
      }
    }
  }();
  return cljs.core.truth_(d) ? d : !1;
};
cljs.core.dominates = function(a, b, c, d) {
  c = cljs.core.prefers_STAR_(a, b, c);
  return cljs.core.truth_(c) ? c : cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(d, a, b);
};
cljs.core.find_and_cache_best_method = function(a, b, c, d, e, f, g, h) {
  var k = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(d, f) {
    var g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
    cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(c), b, g)) {
      var h = cljs.core.truth_(function() {
        var a = null == d;
        return a ? a : cljs.core.dominates(g, cljs.core.first(d), e, cljs.core.deref(c));
      }()) ? f : d;
      if (!cljs.core.truth_(cljs.core.dominates(cljs.core.first(h), g, e, cljs.core.deref(c)))) {
        throw Error(["Multiple methods in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "' match dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " -\x3e ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(g), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(h)), ", and neither is preferred"].join(""));
      }
      return h;
    }
    return d;
  }, null, cljs.core.deref(d)), l = function() {
    var a;
    if (a = null == k) {
      a = cljs.core.deref(d), a = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h);
    }
    return cljs.core.truth_(a) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, a], null) : k;
  }();
  if (cljs.core.truth_(l)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(g), cljs.core.deref(c))) {
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(f, cljs.core.assoc, b, cljs.core.second(l)), cljs.core.second(l);
    }
    cljs.core.reset_cache(f, d, g, c);
    return cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8 ? cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : cljs.core.find_and_cache_best_method.call(null, a, b, c, d, e, f, g, h);
  }
  return null;
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function(a) {
  if (null != a && null != a.cljs$core$IMultiFn$_reset$arity$1) {
    return a.cljs$core$IMultiFn$_reset$arity$1(a);
  }
  var b = cljs.core._reset[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._reset._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-reset", a);
};
cljs.core._add_method = function(a, b, c) {
  if (null != a && null != a.cljs$core$IMultiFn$_add_method$arity$3) {
    return a.cljs$core$IMultiFn$_add_method$arity$3(a, b, c);
  }
  var d = cljs.core._add_method[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._add_method._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IMultiFn.-add-method", a);
};
cljs.core._remove_method = function(a, b) {
  if (null != a && null != a.cljs$core$IMultiFn$_remove_method$arity$2) {
    return a.cljs$core$IMultiFn$_remove_method$arity$2(a, b);
  }
  var c = cljs.core._remove_method[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._remove_method._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IMultiFn.-remove-method", a);
};
cljs.core._prefer_method = function(a, b, c) {
  if (null != a && null != a.cljs$core$IMultiFn$_prefer_method$arity$3) {
    return a.cljs$core$IMultiFn$_prefer_method$arity$3(a, b, c);
  }
  var d = cljs.core._prefer_method[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._prefer_method._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IMultiFn.-prefer-method", a);
};
cljs.core._get_method = function(a, b) {
  if (null != a && null != a.cljs$core$IMultiFn$_get_method$arity$2) {
    return a.cljs$core$IMultiFn$_get_method$arity$2(a, b);
  }
  var c = cljs.core._get_method[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._get_method._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IMultiFn.-get-method", a);
};
cljs.core._methods = function(a) {
  if (null != a && null != a.cljs$core$IMultiFn$_methods$arity$1) {
    return a.cljs$core$IMultiFn$_methods$arity$1(a);
  }
  var b = cljs.core._methods[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._methods._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-methods", a);
};
cljs.core._prefers = function(a) {
  if (null != a && null != a.cljs$core$IMultiFn$_prefers$arity$1) {
    return a.cljs$core$IMultiFn$_prefers$arity$1(a);
  }
  var b = cljs.core._prefers[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._prefers._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-prefers", a);
};
cljs.core._default_dispatch_val = function(a) {
  if (null != a && null != a.cljs$core$IMultiFn$_default_dispatch_val$arity$1) {
    return a.cljs$core$IMultiFn$_default_dispatch_val$arity$1(a);
  }
  var b = cljs.core._default_dispatch_val[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._default_dispatch_val._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", a);
};
cljs.core._dispatch_fn = function(a) {
  if (null != a && null != a.cljs$core$IMultiFn$_dispatch_fn$arity$1) {
    return a.cljs$core$IMultiFn$_dispatch_fn$arity$1(a);
  }
  var b = cljs.core._dispatch_fn[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._dispatch_fn._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", a);
};
cljs.core.throw_no_method_error = function(a, b) {
  throw Error(["No method in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "' for dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.MultiFn = function(a, b, c, d, e, f, g, h) {
  this.name = a;
  this.dispatch_fn = b;
  this.default_dispatch_val = c;
  this.hierarchy = d;
  this.method_table = e;
  this.prefer_table = f;
  this.method_cache = g;
  this.cached_hierarchy = h;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var a = null, b = function(a) {
    a = this;
    var b = a.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : a.dispatch_fn.call(null), c = this.cljs$core$IMultiFn$_get_method$arity$2(null, b);
    cljs.core.truth_(c) || cljs.core.throw_no_method_error(a.name, b);
    return c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null);
  }, c = function(a, b) {
    a = this;
    var c = a.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$1(b) : a.dispatch_fn.call(null, b), d = this.cljs$core$IMultiFn$_get_method$arity$2(null, c);
    cljs.core.truth_(d) || cljs.core.throw_no_method_error(a.name, c);
    return d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b);
  }, d = function(a, b, c) {
    a = this;
    var d = a.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$2(b, c) : a.dispatch_fn.call(null, b, c), e = this.cljs$core$IMultiFn$_get_method$arity$2(null, d);
    cljs.core.truth_(e) || cljs.core.throw_no_method_error(a.name, d);
    return e.cljs$core$IFn$_invoke$arity$2 ? e.cljs$core$IFn$_invoke$arity$2(b, c) : e.call(null, b, c);
  }, e = function(a, b, c, d) {
    a = this;
    var e = a.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.dispatch_fn.call(null, b, c, d), f = this.cljs$core$IMultiFn$_get_method$arity$2(null, e);
    cljs.core.truth_(f) || cljs.core.throw_no_method_error(a.name, e);
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(b, c, d) : f.call(null, b, c, d);
  }, f = function(a, b, c, d, e) {
    a = this;
    var f = a.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.dispatch_fn.call(null, b, c, d, e), g = this.cljs$core$IMultiFn$_get_method$arity$2(null, f);
    cljs.core.truth_(g) || cljs.core.throw_no_method_error(a.name, f);
    return g.cljs$core$IFn$_invoke$arity$4 ? g.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : g.call(null, b, c, d, e);
  }, g = function(a, b, c, d, e, f) {
    a = this;
    var g = a.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : a.dispatch_fn.call(null, b, c, d, e, f), h = this.cljs$core$IMultiFn$_get_method$arity$2(null, g);
    cljs.core.truth_(h) || cljs.core.throw_no_method_error(a.name, g);
    return h.cljs$core$IFn$_invoke$arity$5 ? h.cljs$core$IFn$_invoke$arity$5(b, c, d, e, f) : h.call(null, b, c, d, e, f);
  }, h = function(a, b, c, d, e, f, g) {
    a = this;
    var h = a.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$6(b, c, d, e, f, g) : a.dispatch_fn.call(null, b, c, d, e, f, g), k = this.cljs$core$IMultiFn$_get_method$arity$2(null, h);
    cljs.core.truth_(k) || cljs.core.throw_no_method_error(a.name, h);
    return k.cljs$core$IFn$_invoke$arity$6 ? k.cljs$core$IFn$_invoke$arity$6(b, c, d, e, f, g) : k.call(null, b, c, d, e, f, g);
  }, k = function(a, b, c, d, e, f, g, h) {
    a = this;
    var k = a.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$7(b, c, d, e, f, g, h) : a.dispatch_fn.call(null, b, c, d, e, f, g, h), m = this.cljs$core$IMultiFn$_get_method$arity$2(null, k);
    cljs.core.truth_(m) || cljs.core.throw_no_method_error(a.name, k);
    return m.cljs$core$IFn$_invoke$arity$7 ? m.cljs$core$IFn$_invoke$arity$7(b, c, d, e, f, g, h) : m.call(null, b, c, d, e, f, g, h);
  }, l = function(a, b, c, d, e, f, g, h, k) {
    a = this;
    var m = a.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$8(b, c, d, e, f, g, h, k) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k), l = this.cljs$core$IMultiFn$_get_method$arity$2(null, m);
    cljs.core.truth_(l) || cljs.core.throw_no_method_error(a.name, m);
    return l.cljs$core$IFn$_invoke$arity$8 ? l.cljs$core$IFn$_invoke$arity$8(b, c, d, e, f, g, h, k) : l.call(null, b, c, d, e, f, g, h, k);
  }, m = function(a, b, c, d, e, f, g, h, k, m) {
    a = this;
    var l = a.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$9(b, c, d, e, f, g, h, k, m) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m), n = this.cljs$core$IMultiFn$_get_method$arity$2(null, l);
    cljs.core.truth_(n) || cljs.core.throw_no_method_error(a.name, l);
    return n.cljs$core$IFn$_invoke$arity$9 ? n.cljs$core$IFn$_invoke$arity$9(b, c, d, e, f, g, h, k, m) : n.call(null, b, c, d, e, f, g, h, k, m);
  }, n = function(a, b, c, d, e, f, g, h, k, m, l) {
    a = this;
    var n = a.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$10(b, c, d, e, f, g, h, k, m, l) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l), p = this.cljs$core$IMultiFn$_get_method$arity$2(null, n);
    cljs.core.truth_(p) || cljs.core.throw_no_method_error(a.name, n);
    return p.cljs$core$IFn$_invoke$arity$10 ? p.cljs$core$IFn$_invoke$arity$10(b, c, d, e, f, g, h, k, m, l) : p.call(null, b, c, d, e, f, g, h, k, m, l);
  }, p = function(a, b, c, d, e, f, g, h, k, m, l, n) {
    a = this;
    var p = a.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$11(b, c, d, e, f, g, h, k, m, l, n) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n), q = this.cljs$core$IMultiFn$_get_method$arity$2(null, p);
    cljs.core.truth_(q) || cljs.core.throw_no_method_error(a.name, p);
    return q.cljs$core$IFn$_invoke$arity$11 ? q.cljs$core$IFn$_invoke$arity$11(b, c, d, e, f, g, h, k, m, l, n) : q.call(null, b, c, d, e, f, g, h, k, m, l, n);
  }, q = function(a, b, c, d, e, f, g, h, k, m, l, n, p) {
    a = this;
    var q = a.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$12(b, c, d, e, f, g, h, k, m, l, n, p) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p), r = this.cljs$core$IMultiFn$_get_method$arity$2(null, q);
    cljs.core.truth_(r) || cljs.core.throw_no_method_error(a.name, q);
    return r.cljs$core$IFn$_invoke$arity$12 ? r.cljs$core$IFn$_invoke$arity$12(b, c, d, e, f, g, h, k, m, l, n, p) : r.call(null, b, c, d, e, f, g, h, k, m, l, n, p);
  }, r = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q) {
    a = this;
    var r = a.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$13(b, c, d, e, f, g, h, k, m, l, n, p, q) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q), u = this.cljs$core$IMultiFn$_get_method$arity$2(null, r);
    cljs.core.truth_(u) || cljs.core.throw_no_method_error(a.name, r);
    return u.cljs$core$IFn$_invoke$arity$13 ? u.cljs$core$IFn$_invoke$arity$13(b, c, d, e, f, g, h, k, m, l, n, p, q) : u.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q);
  }, t = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r) {
    a = this;
    var u = a.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$14(b, c, d, e, f, g, h, k, m, l, n, p, q, r) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r), t = this.cljs$core$IMultiFn$_get_method$arity$2(null, u);
    cljs.core.truth_(t) || cljs.core.throw_no_method_error(a.name, u);
    return t.cljs$core$IFn$_invoke$arity$14 ? t.cljs$core$IFn$_invoke$arity$14(b, c, d, e, f, g, h, k, m, l, n, p, q, r) : t.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r);
  }, v = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u) {
    a = this;
    var t = a.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$15(b, c, d, e, f, g, h, k, m, l, n, p, q, r, u) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u), v = this.cljs$core$IMultiFn$_get_method$arity$2(null, t);
    cljs.core.truth_(v) || cljs.core.throw_no_method_error(a.name, t);
    return v.cljs$core$IFn$_invoke$arity$15 ? v.cljs$core$IFn$_invoke$arity$15(b, c, d, e, f, g, h, k, m, l, n, p, q, r, u) : v.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u);
  }, u = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t) {
    a = this;
    var v = a.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$16(b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t), w = this.cljs$core$IMultiFn$_get_method$arity$2(null, v);
    cljs.core.truth_(w) || cljs.core.throw_no_method_error(a.name, v);
    return w.cljs$core$IFn$_invoke$arity$16 ? w.cljs$core$IFn$_invoke$arity$16(b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t) : w.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t);
  }, w = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v) {
    a = this;
    var w = a.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$17(b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v), y = this.cljs$core$IMultiFn$_get_method$arity$2(null, w);
    cljs.core.truth_(y) || cljs.core.throw_no_method_error(a.name, w);
    return y.cljs$core$IFn$_invoke$arity$17 ? y.cljs$core$IFn$_invoke$arity$17(b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v) : y.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v);
  }, x = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v, w) {
    a = this;
    var y = a.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$18(b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v, w) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v, w), A = this.cljs$core$IMultiFn$_get_method$arity$2(null, y);
    cljs.core.truth_(A) || cljs.core.throw_no_method_error(a.name, y);
    return A.cljs$core$IFn$_invoke$arity$18 ? A.cljs$core$IFn$_invoke$arity$18(b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v, w) : A.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v, w);
  }, z = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v, w, y) {
    a = this;
    var A = a.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$19(b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v, w, y) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v, w, y), B = this.cljs$core$IMultiFn$_get_method$arity$2(null, A);
    cljs.core.truth_(B) || cljs.core.throw_no_method_error(a.name, A);
    return B.cljs$core$IFn$_invoke$arity$19 ? B.cljs$core$IFn$_invoke$arity$19(b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v, w, y) : B.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v, w, y);
  }, y = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v, w, y, x) {
    a = this;
    var A = a.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? a.dispatch_fn.cljs$core$IFn$_invoke$arity$20(b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v, w, y, x) : a.dispatch_fn.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v, w, y, x), B = this.cljs$core$IMultiFn$_get_method$arity$2(null, A);
    cljs.core.truth_(B) || cljs.core.throw_no_method_error(a.name, A);
    return B.cljs$core$IFn$_invoke$arity$20 ? B.cljs$core$IFn$_invoke$arity$20(b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v, w, y, x) : B.call(null, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v, w, y, x);
  }, R = function(a, b, c, d, e, f, g, h, k, m, l, n, p, q, r, u, t, v, w, y, x, z) {
    a = this;
    var A = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a.dispatch_fn, b, c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f, g, h, k, m, l, n, p, q, r, u, t, v, w, y, x, z], 0)), B = this.cljs$core$IMultiFn$_get_method$arity$2(null, A);
    cljs.core.truth_(B) || cljs.core.throw_no_method_error(a.name, A);
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(B, b, c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f, g, h, k, m, l, n, p, q, r, u, t, v, w, y, x, z], 0));
  };
  a = function(a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M, T, U, S, Y) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, C);
      case 3:
        return d.call(this, a, C, D);
      case 4:
        return e.call(this, a, C, D, E);
      case 5:
        return f.call(this, a, C, D, E, A);
      case 6:
        return g.call(this, a, C, D, E, A, B);
      case 7:
        return h.call(this, a, C, D, E, A, B, F);
      case 8:
        return k.call(this, a, C, D, E, A, B, F, H);
      case 9:
        return l.call(this, a, C, D, E, A, B, F, H, I);
      case 10:
        return m.call(this, a, C, D, E, A, B, F, H, I, J);
      case 11:
        return n.call(this, a, C, D, E, A, B, F, H, I, J, K);
      case 12:
        return p.call(this, a, C, D, E, A, B, F, H, I, J, K, G);
      case 13:
        return q.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N);
      case 14:
        return r.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P);
      case 15:
        return t.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q);
      case 16:
        return v.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L);
      case 17:
        return u.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O);
      case 18:
        return w.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M);
      case 19:
        return x.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M, T);
      case 20:
        return z.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M, T, U);
      case 21:
        return y.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M, T, U, S);
      case 22:
        return R.call(this, a, C, D, E, A, B, F, H, I, J, K, G, N, P, Q, L, O, M, T, U, S, Y);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  a.cljs$core$IFn$_invoke$arity$3 = d;
  a.cljs$core$IFn$_invoke$arity$4 = e;
  a.cljs$core$IFn$_invoke$arity$5 = f;
  a.cljs$core$IFn$_invoke$arity$6 = g;
  a.cljs$core$IFn$_invoke$arity$7 = h;
  a.cljs$core$IFn$_invoke$arity$8 = k;
  a.cljs$core$IFn$_invoke$arity$9 = l;
  a.cljs$core$IFn$_invoke$arity$10 = m;
  a.cljs$core$IFn$_invoke$arity$11 = n;
  a.cljs$core$IFn$_invoke$arity$12 = p;
  a.cljs$core$IFn$_invoke$arity$13 = q;
  a.cljs$core$IFn$_invoke$arity$14 = r;
  a.cljs$core$IFn$_invoke$arity$15 = t;
  a.cljs$core$IFn$_invoke$arity$16 = v;
  a.cljs$core$IFn$_invoke$arity$17 = u;
  a.cljs$core$IFn$_invoke$arity$18 = w;
  a.cljs$core$IFn$_invoke$arity$19 = x;
  a.cljs$core$IFn$_invoke$arity$20 = z;
  a.cljs$core$IFn$_invoke$arity$21 = y;
  a.cljs$core$IFn$_invoke$arity$22 = R;
  return a;
}();
cljs.core.MultiFn.prototype.apply = function(a, b) {
  return this.call.apply(this, [this].concat(cljs.core.aclone(b)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var a = this.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : this.dispatch_fn.call(null), b = this.cljs$core$IMultiFn$_get_method$arity$2(null, a);
  cljs.core.truth_(b) || cljs.core.throw_no_method_error(this.name, a);
  return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = this.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : this.dispatch_fn.call(null, a), c = this.cljs$core$IMultiFn$_get_method$arity$2(null, b);
  cljs.core.truth_(c) || cljs.core.throw_no_method_error(this.name, b);
  return c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(a) : c.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = this.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : this.dispatch_fn.call(null, a, b), d = this.cljs$core$IMultiFn$_get_method$arity$2(null, c);
  cljs.core.truth_(d) || cljs.core.throw_no_method_error(this.name, c);
  return d.cljs$core$IFn$_invoke$arity$2 ? d.cljs$core$IFn$_invoke$arity$2(a, b) : d.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = this.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : this.dispatch_fn.call(null, a, b, c), e = this.cljs$core$IMultiFn$_get_method$arity$2(null, d);
  cljs.core.truth_(e) || cljs.core.throw_no_method_error(this.name, d);
  return e.cljs$core$IFn$_invoke$arity$3 ? e.cljs$core$IFn$_invoke$arity$3(a, b, c) : e.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = this.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : this.dispatch_fn.call(null, a, b, c, d), f = this.cljs$core$IMultiFn$_get_method$arity$2(null, e);
  cljs.core.truth_(f) || cljs.core.throw_no_method_error(this.name, e);
  return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : f.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = this.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : this.dispatch_fn.call(null, a, b, c, d, e), g = this.cljs$core$IMultiFn$_get_method$arity$2(null, f);
  cljs.core.truth_(g) || cljs.core.throw_no_method_error(this.name, f);
  return g.cljs$core$IFn$_invoke$arity$5 ? g.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : g.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var g = this.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : this.dispatch_fn.call(null, a, b, c, d, e, f), h = this.cljs$core$IMultiFn$_get_method$arity$2(null, g);
  cljs.core.truth_(h) || cljs.core.throw_no_method_error(this.name, g);
  return h.cljs$core$IFn$_invoke$arity$6 ? h.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : h.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var h = this.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : this.dispatch_fn.call(null, a, b, c, d, e, f, g), k = this.cljs$core$IMultiFn$_get_method$arity$2(null, h);
  cljs.core.truth_(k) || cljs.core.throw_no_method_error(this.name, h);
  return k.cljs$core$IFn$_invoke$arity$7 ? k.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : k.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var k = this.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h), l = this.cljs$core$IMultiFn$_get_method$arity$2(null, k);
  cljs.core.truth_(l) || cljs.core.throw_no_method_error(this.name, k);
  return l.cljs$core$IFn$_invoke$arity$8 ? l.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : l.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  var l = this.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k), m = this.cljs$core$IMultiFn$_get_method$arity$2(null, l);
  cljs.core.truth_(m) || cljs.core.throw_no_method_error(this.name, l);
  return m.cljs$core$IFn$_invoke$arity$9 ? m.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : m.call(null, a, b, c, d, e, f, g, h, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, l) {
  var m = this.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l), n = this.cljs$core$IMultiFn$_get_method$arity$2(null, m);
  cljs.core.truth_(n) || cljs.core.throw_no_method_error(this.name, m);
  return n.cljs$core$IFn$_invoke$arity$10 ? n.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : n.call(null, a, b, c, d, e, f, g, h, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, l, m) {
  var n = this.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m), p = this.cljs$core$IMultiFn$_get_method$arity$2(null, n);
  cljs.core.truth_(p) || cljs.core.throw_no_method_error(this.name, n);
  return p.cljs$core$IFn$_invoke$arity$11 ? p.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : p.call(null, a, b, c, d, e, f, g, h, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
  var p = this.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n), q = this.cljs$core$IMultiFn$_get_method$arity$2(null, p);
  cljs.core.truth_(q) || cljs.core.throw_no_method_error(this.name, p);
  return q.cljs$core$IFn$_invoke$arity$12 ? q.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : q.call(null, a, b, c, d, e, f, g, h, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  var q = this.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p), r = this.cljs$core$IMultiFn$_get_method$arity$2(null, q);
  cljs.core.truth_(r) || cljs.core.throw_no_method_error(this.name, q);
  return r.cljs$core$IFn$_invoke$arity$13 ? r.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : r.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q) {
  var r = this.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, q) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q), t = this.cljs$core$IMultiFn$_get_method$arity$2(null, r);
  cljs.core.truth_(t) || cljs.core.throw_no_method_error(this.name, r);
  return t.cljs$core$IFn$_invoke$arity$14 ? t.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, q) : t.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) {
  var t = this.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r), v = this.cljs$core$IMultiFn$_get_method$arity$2(null, t);
  cljs.core.truth_(v) || cljs.core.throw_no_method_error(this.name, t);
  return v.cljs$core$IFn$_invoke$arity$15 ? v.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r) : v.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) {
  var v = this.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t), u = this.cljs$core$IMultiFn$_get_method$arity$2(null, v);
  cljs.core.truth_(u) || cljs.core.throw_no_method_error(this.name, v);
  return u.cljs$core$IFn$_invoke$arity$16 ? u.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t) : u.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v) {
  var u = this.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v), w = this.cljs$core$IMultiFn$_get_method$arity$2(null, u);
  cljs.core.truth_(w) || cljs.core.throw_no_method_error(this.name, u);
  return w.cljs$core$IFn$_invoke$arity$17 ? w.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v) : w.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u) {
  var w = this.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u), x = this.cljs$core$IMultiFn$_get_method$arity$2(null, w);
  cljs.core.truth_(x) || cljs.core.throw_no_method_error(this.name, w);
  return x.cljs$core$IFn$_invoke$arity$18 ? x.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u) : x.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w) {
  var x = this.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w), z = this.cljs$core$IMultiFn$_get_method$arity$2(null, x);
  cljs.core.truth_(z) || cljs.core.throw_no_method_error(this.name, x);
  return z.cljs$core$IFn$_invoke$arity$19 ? z.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w) : z.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x) {
  var z = this.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x), y = this.cljs$core$IMultiFn$_get_method$arity$2(null, z);
  cljs.core.truth_(y) || cljs.core.throw_no_method_error(this.name, z);
  return y.cljs$core$IFn$_invoke$arity$20 ? y.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x) : y.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z) {
  var y = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(this.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z], 0)), R = this.cljs$core$IMultiFn$_get_method$arity$2(null, y);
  cljs.core.truth_(R) || cljs.core.throw_no_method_error(this.name, y);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(R, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, k, l, m, n, p, q, r, t, v, u, w, x, z], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(a, b, c) {
  if (cljs.core.truth_(cljs.core.prefers_STAR_(b, c, this.prefer_table))) {
    throw Error(["Preference conflict in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.name), "': ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), " is already preferred to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.prefer_table, function(a) {
    return function(a) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.PersistentHashSet.EMPTY), c));
    };
  }(this));
  return cljs.core.reset_cache(this.method_cache, this.method_table, this.cached_hierarchy, this.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(a) {
  return this.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(a, b) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(this.method_table, cljs.core.dissoc, b);
  cljs.core.reset_cache(this.method_cache, this.method_table, this.cached_hierarchy, this.hierarchy);
  return this;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(a) {
  return cljs.core.deref(this.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(a) {
  return cljs.core.deref(this.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(a) {
  return this.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(a, b, c) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(this.method_table, cljs.core.assoc, b, c);
  cljs.core.reset_cache(this.method_cache, this.method_table, this.cached_hierarchy, this.hierarchy);
  return this;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(a) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.method_table, function(a) {
    return function(a) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(this));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.method_cache, function(a) {
    return function(a) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(this));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.prefer_table, function(a) {
    return function(a) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(this));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.cached_hierarchy, function(a) {
    return function(a) {
      return null;
    };
  }(this));
  return this;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(a, b) {
  cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(this.cached_hierarchy), cljs.core.deref(this.hierarchy)) || cljs.core.reset_cache(this.method_cache, this.method_table, this.cached_hierarchy, this.hierarchy);
  var c = cljs.core.deref(this.method_cache);
  c = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b);
  return cljs.core.truth_(c) ? c : cljs.core.find_and_cache_best_method(this.name, b, this.hierarchy, this.method_table, this.prefer_table, this.method_cache, this.cached_hierarchy, this.default_dispatch_val);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(a) {
  return cljs.core._name(this.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(a) {
  return cljs.core._namespace(this.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return goog.getUid(this);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = !0;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function(a, b, c, d, e, f, g, h) {
  return new cljs.core.MultiFn(a, b, c, d, e, f, g, h);
};
cljs.core.remove_all_methods = function(a) {
  return cljs.core._reset(a);
};
cljs.core.remove_method = function(a, b) {
  return cljs.core._remove_method(a, b);
};
cljs.core.prefer_method = function(a, b, c) {
  return cljs.core._prefer_method(a, b, c);
};
cljs.core.methods$ = function(a) {
  return cljs.core._methods(a);
};
cljs.core.get_method = function(a, b) {
  return cljs.core._get_method(a, b);
};
cljs.core.prefers = function(a) {
  return cljs.core._prefers(a);
};
cljs.core.default_dispatch_val = function(a) {
  return cljs.core._default_dispatch_val(a);
};
cljs.core.dispatch_fn = function(a) {
  return cljs.core._dispatch_fn(a);
};
cljs.core.IUUID = function() {
};
cljs.core.UUID = function(a, b) {
  this.uuid = a;
  this.__hash = b;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.cljs$core$IUUID$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.toString = function() {
  return this.uuid;
};
cljs.core.UUID.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.UUID && this.uuid === b.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write(b, ['#uuid "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.uuid), '"'].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  null == this.__hash && (this.__hash = cljs.core.hash(this.uuid));
  return this.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  return goog.array.defaultCompare(this.uuid, b.uuid);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.UUID.cljs$lang$type = !0;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function(a, b) {
  return new cljs.core.UUID(a, b);
};
cljs.core.uuid = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? s)");
  }
  return new cljs.core.UUID(a.toLowerCase(), null);
};
cljs.core.random_uuid = function() {
  var a = function() {
    return cljs.core.rand_int(16).toString(16);
  }, b = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), "-4", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(a())].join(""));
};
cljs.core.uuid_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IUUID$ ? !0 : !1 : !1;
};
cljs.core.pr_writer_ex_info = function(a, b, c) {
  cljs.core._write(b, "#error {:message ");
  cljs.core.pr_writer(a.message, b, c);
  cljs.core.truth_(a.data) && (cljs.core._write(b, ", :data "), cljs.core.pr_writer(a.data, b, c));
  cljs.core.truth_(a.cause) && (cljs.core._write(b, ", :cause "), cljs.core.pr_writer(a.cause, b, c));
  return cljs.core._write(b, "}");
};
cljs.core.ExceptionInfo = function(a, b, c) {
  var d = Error(a);
  this.message = a;
  this.data = b;
  this.cause = c;
  this.name = d.name;
  this.description = d.description;
  this.number = d.number;
  this.fileName = d.fileName;
  this.lineNumber = d.lineNumber;
  this.columnNumber = d.columnNumber;
  this.stack = d.stack;
  return this;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_writer_ex_info(this, b, c);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ex_info = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(a, b, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.ExceptionInfo(a, b, c);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function(a) {
  return a instanceof cljs.core.ExceptionInfo ? a.data : null;
};
cljs.core.ex_message = function(a) {
  return a instanceof Error ? a.message : null;
};
cljs.core.ex_cause = function(a) {
  return a instanceof cljs.core.ExceptionInfo ? a.cause : null;
};
cljs.core.comparator = function(a) {
  return function(b, c) {
    return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c)) ? -1 : cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, b) : a.call(null, c, b)) ? 1 : 0;
  };
};
cljs.core.special_symbol_QMARK_ = function(a) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 23, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "ns*", "ns*", 1840949383, null), null, new cljs.core.Symbol(null, "finally", "finally", -1065347064, null), null, new cljs.core.Symbol(null, 
  "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, 
  null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "var", "var", 870848730, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, 
  "catch", "catch", -1616370245, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), a);
};
cljs.core.test = function(a) {
  a = a.cljs$lang$test;
  return cljs.core.truth_(a) ? (a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), new cljs.core.Keyword(null, "ok", "ok", 967785236)) : new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
};
cljs.core.TaggedLiteral = function(a, b) {
  this.tag = a;
  this.form = b;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.tag, b.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.form, b.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return 31 * cljs.core.hash(this.tag) + cljs.core.hash(this.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "tag":
      return this.tag;
    case "form":
      return this.form;
    default:
      return c;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.tag), " "].join(""));
  return cljs.core.pr_writer(this.form, b, c);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = !0;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function(a, b) {
  return new cljs.core.TaggedLiteral(a, b);
};
cljs.core.tagged_literal_QMARK_ = function(a) {
  return a instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function(a, b) {
  if (!(a instanceof cljs.core.Symbol)) {
    throw Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(a, b);
};
cljs.core.js_reserved_arr = "arguments abstract await boolean break byte case catch char class const continue debugger default delete do double else enum export extends final finally float for function goto if implements import in instanceof int interface let long native new package private protected public return short static super switch synchronized this throw throws transient try typeof var void volatile while with yield methods null constructor".split(" ");
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function(a) {
  null == cljs.core.js_reserved && (cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, c) {
    goog.object.set(a, c, !0);
    return a;
  }, {}, cljs.core.js_reserved_arr));
  return cljs.core.js_reserved.hasOwnProperty(a);
};
cljs.core.demunge_pattern = function() {
  cljs.core.truth_(cljs.core.DEMUNGE_PATTERN) || (cljs.core.DEMUNGE_PATTERN = function() {
    for (var a = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
      return b.length - a.length;
    }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP)), b = "";;) {
      if (cljs.core.seq(a)) {
        var c = cljs.core.next(a), d = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(function() {
          var a = b;
          return "" !== b ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "|"].join("") : a;
        }()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(a))].join("");
        a = c;
        b = d;
      } else {
        return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "|\\$"].join("");
      }
    }
  }());
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function(a) {
  for (var b = new goog.string.StringBuffer, c = 0;;) {
    if (c < a.length) {
      var d = a.charAt(c), e = goog.object.get(cljs.core.CHAR_MAP, d);
      null != e ? b.append(e) : b.append(d);
      c += 1;
    } else {
      break;
    }
  }
  return b.toString();
};
cljs.core.munge = function(a) {
  var b = cljs.core.munge_str("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a));
  b = ".." === b ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(b)) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "$"].join("") : b;
  return a instanceof cljs.core.Symbol ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(b) : b;
};
cljs.core.demunge_str = function(a) {
  var b = new RegExp(cljs.core.demunge_pattern(), "g");
  a = cljs.core.truth_(goog.string.endsWith(a, "$")) ? a.substring(0, a.length - 1) : a;
  for (var c = "", d = 0;;) {
    var e = b.exec(a);
    if (cljs.core.truth_(e)) {
      e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 0, null), c = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a.substring(d, b.lastIndex - e.length)), cljs.core.str.cljs$core$IFn$_invoke$arity$1("$" === e ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, e))].join(""), d = b.lastIndex;
    } else {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a.substring(d, a.length))].join("");
    }
  }
};
cljs.core.demunge = function(a) {
  var b = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a);
  b = "_DOT__DOT_" === b ? ".." : cljs.core.demunge_str(b);
  a = a instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str;
  return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
};
cljs.core.ns_lookup = function(a, b) {
  return function() {
    return goog.object.get(a, b);
  };
};
cljs.core.Namespace = function(a, b) {
  this.obj = a;
  this.name = b;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(a) {
  var b = cljs.core.munge("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a));
  if (goog.object.containsKey(this.obj, b)) {
    a = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.name), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a));
    var c = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this], null);
    return new cljs.core.Var(cljs.core.ns_lookup(this.obj, b), a, c);
  }
  return null;
};
cljs.core.Namespace.prototype.getName = function() {
  return this.name;
};
cljs.core.Namespace.prototype.toString = function() {
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.name);
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.Namespace ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.name, b.name) : !1;
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash(this.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = !0;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function(a, b) {
  return new cljs.core.Namespace(a, b);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function(a, b) {
  for (;;) {
    if (null == a) {
      return null;
    }
    if (null == b) {
      return a;
    }
    var c = a;
    var d = cljs.core.first(b);
    c = goog.object.get(c, d);
    d = cljs.core.next(b);
    a = c;
    b = d;
  }
};
cljs.core.find_ns_obj = function(a) {
  var b = cljs.core.munge("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)).split(".");
  switch(cljs.core._STAR_target_STAR_) {
    case "nodejs":
      return COMPILED ? cljs.core.find_ns_obj_STAR_(function() {
        try {
          var a = function() {
            var a = cljs.core.first(b);
            return eval(a);
          }();
          return cljs.core.truth_(cljs.core.truth_(a) ? cljs.core.object_QMARK_(a) : a) ? a : null;
        } catch (d) {
          if (d instanceof ReferenceError) {
            return null;
          }
          throw d;
        }
      }(), cljs.core.next(b)) : cljs.core.find_ns_obj_STAR_(global, b);
    case "default":
      return cljs.core.find_ns_obj_STAR_(goog.global, b);
    default:
      throw Error(["find-ns-obj not supported for target ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core._STAR_target_STAR_)].join(""));
  }
};
cljs.core.ns_interns_STAR_ = function(a) {
  var b = cljs.core.find_ns_obj(a), c = new cljs.core.Namespace(b, a);
  c = function(b, c) {
    return function(d, e) {
      var f = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(e));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d, f, new cljs.core.Var(function(a, b, c) {
        return function() {
          return goog.object.get(b, e);
        };
      }(f, b, c), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(f)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), c], null)));
    };
  }(b, c);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(c, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(b));
};
cljs.core.create_ns = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(a, cljs.core.find_ns_obj(a));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.Namespace(b, a);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function(a) {
  null == cljs.core.NS_CACHE && (cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY));
  var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), a);
  if (null != b) {
    return b;
  }
  b = cljs.core.find_ns_obj(a);
  if (null == b) {
    return null;
  }
  b = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(a, b);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, a, b);
  return b;
};
cljs.core.find_macros_ns = function(a) {
  null == cljs.core.NS_CACHE && (cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY));
  var b = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a);
  a = goog.string.contains(b, "$macros") ? a : cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "$macros"].join(""));
  b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), a);
  if (null != b) {
    return b;
  }
  b = cljs.core.find_ns_obj(a);
  if (null == b) {
    return null;
  }
  b = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(a, b);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, a, b);
  return b;
};
cljs.core.ns_name = function(a) {
  return a.name;
};
cljs.core.uri_QMARK_ = function(a) {
  return a instanceof goog.Uri;
};
var promesa = {protocols:{}};
promesa.protocols.IPromise = function() {
};
promesa.protocols._map = function(a, b) {
  if (null != a && null != a.promesa$protocols$IPromise$_map$arity$2) {
    return a.promesa$protocols$IPromise$_map$arity$2(a, b);
  }
  var c = promesa.protocols._map[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = promesa.protocols._map._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IPromise.-map", a);
};
promesa.protocols._bind = function(a, b) {
  if (null != a && null != a.promesa$protocols$IPromise$_bind$arity$2) {
    return a.promesa$protocols$IPromise$_bind$arity$2(a, b);
  }
  var c = promesa.protocols._bind[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = promesa.protocols._bind._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IPromise.-bind", a);
};
promesa.protocols._catch = function(a, b) {
  if (null != a && null != a.promesa$protocols$IPromise$_catch$arity$2) {
    return a.promesa$protocols$IPromise$_catch$arity$2(a, b);
  }
  var c = promesa.protocols._catch[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = promesa.protocols._catch._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IPromise.-catch", a);
};
promesa.protocols.IState = function() {
};
promesa.protocols._extract = function(a) {
  if (null != a && null != a.promesa$protocols$IState$_extract$arity$1) {
    return a.promesa$protocols$IState$_extract$arity$1(a);
  }
  var b = promesa.protocols._extract[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = promesa.protocols._extract._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IState.-extract", a);
};
promesa.protocols._resolved_QMARK_ = function(a) {
  if (null != a && null != a.promesa$protocols$IState$_resolved_QMARK_$arity$1) {
    return a.promesa$protocols$IState$_resolved_QMARK_$arity$1(a);
  }
  var b = promesa.protocols._resolved_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = promesa.protocols._resolved_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IState.-resolved?", a);
};
promesa.protocols._rejected_QMARK_ = function(a) {
  if (null != a && null != a.promesa$protocols$IState$_rejected_QMARK_$arity$1) {
    return a.promesa$protocols$IState$_rejected_QMARK_$arity$1(a);
  }
  var b = promesa.protocols._rejected_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = promesa.protocols._rejected_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IState.-rejected?", a);
};
promesa.protocols._pending_QMARK_ = function(a) {
  if (null != a && null != a.promesa$protocols$IState$_pending_QMARK_$arity$1) {
    return a.promesa$protocols$IState$_pending_QMARK_$arity$1(a);
  }
  var b = promesa.protocols._pending_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = promesa.protocols._pending_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IState.-pending?", a);
};
promesa.protocols.IPromiseFactory = function() {
};
promesa.protocols._promise = function(a) {
  if (null != a && null != a.promesa$protocols$IPromiseFactory$_promise$arity$1) {
    return a.promesa$protocols$IPromiseFactory$_promise$arity$1(a);
  }
  var b = promesa.protocols._promise[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = promesa.protocols._promise._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IPromiseFactory.-promise", a);
};
promesa.protocols.ICancellable = function() {
};
promesa.protocols._cancel = function(a) {
  if (null != a && null != a.promesa$protocols$ICancellable$_cancel$arity$1) {
    return a.promesa$protocols$ICancellable$_cancel$arity$1(a);
  }
  var b = promesa.protocols._cancel[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = promesa.protocols._cancel._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "ICancellable.-cancel", a);
};
promesa.protocols._cancelled_QMARK_ = function(a) {
  if (null != a && null != a.promesa$protocols$ICancellable$_cancelled_QMARK_$arity$1) {
    return a.promesa$protocols$ICancellable$_cancelled_QMARK_$arity$1(a);
  }
  var b = promesa.protocols._cancelled_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = promesa.protocols._cancelled_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "ICancellable.-cancelled?", a);
};
promesa.protocols.IScheduler = function() {
};
promesa.protocols._schedule = function(a, b, c) {
  if (null != a && null != a.promesa$protocols$IScheduler$_schedule$arity$3) {
    return a.promesa$protocols$IScheduler$_schedule$arity$3(a, b, c);
  }
  var d = promesa.protocols._schedule[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = promesa.protocols._schedule._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "IScheduler.-schedule", a);
};
promesa.impl = {};
promesa.impl.Promise = Promise.noConflict();
promesa.impl.Promise.prototype.promesa$protocols$IPromise$ = cljs.core.PROTOCOL_SENTINEL;
promesa.impl.Promise.prototype.promesa$protocols$IPromise$_map$arity$2 = function(a, b) {
  return this.then(function(a) {
    return function(a) {
      return b.call(null, a);
    };
  }(this));
};
promesa.impl.Promise.prototype.promesa$protocols$IPromise$_bind$arity$2 = function(a, b) {
  return this.then(function(a) {
    return function(a) {
      return b.call(null, a);
    };
  }(this));
};
promesa.impl.Promise.prototype.promesa$protocols$IPromise$_catch$arity$2 = function(a, b) {
  return this.caught(function(a) {
    return function(a) {
      return b.call(null, a);
    };
  }(this));
};
promesa.impl.Promise.prototype.promesa$protocols$IState$ = cljs.core.PROTOCOL_SENTINEL;
promesa.impl.Promise.prototype.promesa$protocols$IState$_extract$arity$1 = function(a) {
  return cljs.core.truth_(this.isRejected()) ? this.reason() : this.value();
};
promesa.impl.Promise.prototype.promesa$protocols$IState$_resolved_QMARK_$arity$1 = function(a) {
  return this.isFulfilled();
};
promesa.impl.Promise.prototype.promesa$protocols$IState$_rejected_QMARK_$arity$1 = function(a) {
  return this.isRejected();
};
promesa.impl.Promise.prototype.promesa$protocols$IState$_pending_QMARK_$arity$1 = function(a) {
  return this.isPending();
};
goog.object.set(promesa.protocols.IPromise, "_", !0);
goog.object.set(promesa.protocols._map, "_", function(a, b) {
  return promesa.protocols._map.call(null, promesa.impl.resolved.call(null, a), b);
});
goog.object.set(promesa.protocols._bind, "_", function(a, b) {
  return promesa.protocols._bind.call(null, promesa.impl.resolved.call(null, a), b);
});
goog.object.set(promesa.protocols._catch, "_", function(a, b) {
  return promesa.protocols._catch.call(null, promesa.impl.resolved.call(null, a), b);
});
promesa.impl.resolved = function(a) {
  return promesa.impl.Promise.resolve(a);
};
promesa.impl.rejected = function(a) {
  return promesa.impl.Promise.reject(a);
};
goog.object.set(promesa.protocols.IPromiseFactory, "function", !0);
goog.object.set(promesa.protocols._promise, "function", function(a) {
  return new promesa.impl.Promise(a);
});
promesa.impl.Promise.prototype.promesa$protocols$IPromiseFactory$ = cljs.core.PROTOCOL_SENTINEL;
promesa.impl.Promise.prototype.promesa$protocols$IPromiseFactory$_promise$arity$1 = function(a) {
  return this;
};
Error.prototype.promesa$protocols$IPromiseFactory$ = cljs.core.PROTOCOL_SENTINEL;
Error.prototype.promesa$protocols$IPromiseFactory$_promise$arity$1 = function(a) {
  return promesa.impl.rejected.call(null, this);
};
goog.object.set(promesa.protocols.IPromiseFactory, "object", !0);
goog.object.set(promesa.protocols._promise, "object", function(a) {
  return promesa.impl.resolved.call(null, a);
});
goog.object.set(promesa.protocols.IPromiseFactory, "number", !0);
goog.object.set(promesa.protocols._promise, "number", function(a) {
  return promesa.impl.resolved.call(null, a);
});
goog.object.set(promesa.protocols.IPromiseFactory, "boolean", !0);
goog.object.set(promesa.protocols._promise, "boolean", function(a) {
  return promesa.impl.resolved.call(null, a);
});
goog.object.set(promesa.protocols.IPromiseFactory, "string", !0);
goog.object.set(promesa.protocols._promise, "string", function(a) {
  return promesa.impl.resolved.call(null, a);
});
goog.object.set(promesa.protocols.IPromiseFactory, "null", !0);
goog.object.set(promesa.protocols._promise, "null", function(a) {
  return promesa.impl.resolved.call(null, a);
});
promesa.impl.promise__GT_str = function(a) {
  return ["#\x3cPromise[", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(promesa.protocols._pending_QMARK_.call(null, a)) ? "~" : cljs.core.truth_(promesa.protocols._rejected_QMARK_.call(null, a)) ? ["error\x3d", cljs.core.str.cljs$core$IFn$_invoke$arity$1(promesa.protocols._extract.call(null, a))].join("") : ["value\x3d", cljs.core.str.cljs$core$IFn$_invoke$arity$1(promesa.protocols._extract.call(null, a))].join("")), "]\x3e"].join("");
};
promesa.impl.Promise.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
promesa.impl.Promise.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write.call(null, b, promesa.impl.promise__GT_str.call(null, this));
};
promesa.impl.scheduler = {};
promesa.impl.scheduler.scheduled_task = function(a, b) {
  var c = cljs.core.volatile_BANG_.call(null, !1);
  "undefined" === typeof promesa.impl.scheduler.t_promesa$impl$scheduler17731 && (promesa.impl.scheduler.t_promesa$impl$scheduler17731 = function(a, b, c, g) {
    this.cur = a;
    this.done_QMARK_ = b;
    this.cancelled = c;
    this.meta17732 = g;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 1;
  }, promesa.impl.scheduler.t_promesa$impl$scheduler17731.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
    return function(a, b) {
      return new promesa.impl.scheduler.t_promesa$impl$scheduler17731(this.cur, this.done_QMARK_, this.cancelled, b);
    };
  }(c), promesa.impl.scheduler.t_promesa$impl$scheduler17731.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return function(a) {
      return this.meta17732;
    };
  }(c), promesa.impl.scheduler.t_promesa$impl$scheduler17731.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(a) {
    return function(a) {
      return cljs.core.deref.call(null, this.done_QMARK_);
    };
  }(c), promesa.impl.scheduler.t_promesa$impl$scheduler17731.prototype.promesa$protocols$ICancellable$ = cljs.core.PROTOCOL_SENTINEL, promesa.impl.scheduler.t_promesa$impl$scheduler17731.prototype.promesa$protocols$ICancellable$_cancelled_QMARK_$arity$1 = function(a) {
    return function(a) {
      return cljs.core.deref.call(null, this.cancelled);
    };
  }(c), promesa.impl.scheduler.t_promesa$impl$scheduler17731.prototype.promesa$protocols$ICancellable$_cancel$arity$1 = function(a) {
    return function(a) {
      if (cljs.core.truth_(cljs.core.deref.call(null, this.cancelled))) {
        return null;
      }
      cljs.core.vreset_BANG_.call(null, this.cancelled, !0);
      return clearTimeout(this.cur);
    };
  }(c), promesa.impl.scheduler.t_promesa$impl$scheduler17731.getBasis = function(a) {
    return function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "cur", "cur", -1501245170, null), new cljs.core.Symbol(null, "done?", "done?", -206470191, null), new cljs.core.Symbol(null, "cancelled", "cancelled", 2129257751, null), new cljs.core.Symbol(null, "meta17732", "meta17732", -636657683, null)], null);
    };
  }(c), promesa.impl.scheduler.t_promesa$impl$scheduler17731.cljs$lang$type = !0, promesa.impl.scheduler.t_promesa$impl$scheduler17731.cljs$lang$ctorStr = "promesa.impl.scheduler/t_promesa$impl$scheduler17731", promesa.impl.scheduler.t_promesa$impl$scheduler17731.cljs$lang$ctorPrWriter = function(a) {
    return function(a, b, c) {
      return cljs.core._write.call(null, b, "promesa.impl.scheduler/t_promesa$impl$scheduler17731");
    };
  }(c), promesa.impl.scheduler.__GT_t_promesa$impl$scheduler17731 = function(a) {
    return function(a, b, c, d) {
      return new promesa.impl.scheduler.t_promesa$impl$scheduler17731(a, b, c, d);
    };
  }(c));
  return new promesa.impl.scheduler.t_promesa$impl$scheduler17731(a, b, c, cljs.core.PersistentArrayMap.EMPTY);
};
promesa.impl.scheduler.scheduler = function() {
  "undefined" === typeof promesa.impl.scheduler.t_promesa$impl$scheduler17734 && (promesa.impl.scheduler.t_promesa$impl$scheduler17734 = function(a) {
    this.meta17735 = a;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, promesa.impl.scheduler.t_promesa$impl$scheduler17734.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new promesa.impl.scheduler.t_promesa$impl$scheduler17734(b);
  }, promesa.impl.scheduler.t_promesa$impl$scheduler17734.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta17735;
  }, promesa.impl.scheduler.t_promesa$impl$scheduler17734.prototype.promesa$protocols$IScheduler$ = cljs.core.PROTOCOL_SENTINEL, promesa.impl.scheduler.t_promesa$impl$scheduler17734.prototype.promesa$protocols$IScheduler$_schedule$arity$3 = function(a, b, c) {
    a = cljs.core.volatile_BANG_.call(null, !1);
    var d = function(a, b) {
      return function() {
        try {
          return c.call(null);
        } finally {
          cljs.core.vreset_BANG_.call(null, a, !0);
        }
      };
    }(a, this);
    b = setTimeout(d, b);
    return promesa.impl.scheduler.scheduled_task.call(null, b, a);
  }, promesa.impl.scheduler.t_promesa$impl$scheduler17734.getBasis = function() {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta17735", "meta17735", -1736893460, null)], null);
  }, promesa.impl.scheduler.t_promesa$impl$scheduler17734.cljs$lang$type = !0, promesa.impl.scheduler.t_promesa$impl$scheduler17734.cljs$lang$ctorStr = "promesa.impl.scheduler/t_promesa$impl$scheduler17734", promesa.impl.scheduler.t_promesa$impl$scheduler17734.cljs$lang$ctorPrWriter = function(a, b, c) {
    return cljs.core._write.call(null, b, "promesa.impl.scheduler/t_promesa$impl$scheduler17734");
  }, promesa.impl.scheduler.__GT_t_promesa$impl$scheduler17734 = function(a) {
    return new promesa.impl.scheduler.t_promesa$impl$scheduler17734(a);
  });
  return new promesa.impl.scheduler.t_promesa$impl$scheduler17734(cljs.core.PersistentArrayMap.EMPTY);
};
promesa.impl.scheduler._PLUS_scheduler_PLUS_ = new cljs.core.Delay(function() {
  return promesa.impl.scheduler.scheduler.call(null);
}, null);
promesa.impl.scheduler.schedule = function(a, b) {
  return promesa.protocols._schedule.call(null, cljs.core.deref.call(null, promesa.impl.scheduler._PLUS_scheduler_PLUS_), a, b);
};
promesa.core = {};
promesa.core.Promise = promesa.impl.Promise;
promesa.core.schedule = function(a, b) {
  return promesa.impl.scheduler.schedule.call(null, a, b);
};
promesa.core.resolved = function(a) {
  return promesa.impl.resolved.call(null, a);
};
promesa.core.rejected = function(a) {
  return promesa.impl.rejected.call(null, a);
};
promesa.core.promise = function(a) {
  return promesa.protocols._promise.call(null, a);
};
promesa.core.promise_QMARK_ = function(a) {
  return a instanceof promesa.core.Promise;
};
promesa.core.resolved_QMARK_ = function(a) {
  return promesa.protocols._resolved_QMARK_.call(null, a);
};
promesa.core.rejected_QMARK_ = function(a) {
  return promesa.protocols._rejected_QMARK_.call(null, a);
};
promesa.core.pending_QMARK_ = function(a) {
  return promesa.protocols._pending_QMARK_.call(null, a);
};
promesa.core.extract = function(a) {
  return promesa.protocols._extract.call(null, a);
};
promesa.core.done_QMARK_ = cljs.core.complement.call(null, promesa.core.pending_QMARK_);
promesa.core.map = function(a, b) {
  return promesa.protocols._map.call(null, b, a);
};
promesa.core.mapcat = function(a, b) {
  return promesa.protocols._bind.call(null, b, a);
};
promesa.core.bind = function(a, b) {
  return promesa.protocols._bind.call(null, a, b);
};
promesa.core.then = function(a, b) {
  return promesa.protocols._map.call(null, a, b);
};
promesa.core.chain = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.reduce.call(null, function(a, b) {
    return promesa.core.then.call(null, a, b);
  }, a, b);
};
promesa.core.chain.cljs$lang$maxFixedArity = 1;
promesa.core.chain.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
promesa.core.branch = function(a, b, c) {
  return promesa.protocols._catch.call(null, promesa.protocols._map.call(null, a, b), c);
};
promesa.core.catch$ = function(a) {
  switch(arguments.length) {
    case 2:
      return promesa.core.catch$.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return promesa.core.catch$.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
promesa.core.catch$.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return promesa.protocols._catch.call(null, a, b);
};
promesa.core.catch$.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.ifn_QMARK_.call(null, b) ? b : function(a) {
    return a instanceof b;
  };
  return promesa.protocols._catch.call(null, a, function(a) {
    return function(b) {
      return cljs.core.truth_(a.call(null, b)) ? c.call(null, b) : promesa.impl.rejected.call(null, b);
    };
  }(d));
};
promesa.core.catch$.cljs$lang$maxFixedArity = 3;
promesa.core.error = function(a) {
  switch(arguments.length) {
    case 2:
      return promesa.core.error.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return promesa.core.error.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
promesa.core.error.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return promesa.core.catch$.call(null, b, a);
};
promesa.core.error.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return promesa.core.catch$.call(null, c, b, a);
};
promesa.core.error.cljs$lang$maxFixedArity = 3;
promesa.core.err = promesa.core.error;
promesa.core.finally$ = function(a, b) {
  return a.lastly(b);
};
promesa.core.all = function(a) {
  return promesa.core.then.call(null, promesa.core.Promise.all(cljs.core.into_array.call(null, a)), cljs.core.vec);
};
promesa.core.any = function(a) {
  return promesa.core.Promise.any(cljs.core.into_array.call(null, a));
};
promesa.core.cancel_BANG_ = function(a) {
  promesa.protocols._cancel.call(null, a);
  return a;
};
promesa.core.cancelled_QMARK_ = function(a) {
  return promesa.protocols._cancelled_QMARK_.call(null, a);
};
promesa.core.promisify = function(a) {
  return function() {
    var b = function(b) {
      return promesa.core.promise.call(null, function(c, d) {
        var e = cljs.core.conj.call(null, cljs.core.vec.call(null, b), c);
        try {
          return cljs.core.apply.call(null, a, e);
        } catch (h) {
          if (h instanceof Error) {
            return d.call(null, h);
          }
          throw h;
        }
      });
    }, c = function(a) {
      var c = null;
      if (0 < arguments.length) {
        c = 0;
        for (var d = Array(arguments.length - 0); c < d.length;) {
          d[c] = arguments[c + 0], ++c;
        }
        c = new cljs.core.IndexedSeq(d, 0, null);
      }
      return b.call(this, c);
    };
    c.cljs$lang$maxFixedArity = 0;
    c.cljs$lang$applyTo = function(a) {
      a = cljs.core.seq(a);
      return b(a);
    };
    c.cljs$core$IFn$_invoke$arity$variadic = b;
    return c;
  }();
};
promesa.core.timeout = function(a) {
  switch(arguments.length) {
    case 2:
      return promesa.core.timeout.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return promesa.core.timeout.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
promesa.core.timeout.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.timeout(b);
};
promesa.core.timeout.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.timeout(b, c);
};
promesa.core.timeout.cljs$lang$maxFixedArity = 3;
promesa.core.delay = function(a) {
  switch(arguments.length) {
    case 1:
      return promesa.core.delay.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return promesa.core.delay.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
promesa.core.delay.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return promesa.core.delay.call(null, a, null);
};
promesa.core.delay.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return promesa.core.promise.call(null, function(c, d) {
    return promesa.core.schedule.call(null, a, function() {
      return c.call(null, b);
    });
  });
};
promesa.core.delay.cljs$lang$maxFixedArity = 2;
promesa.core.attempt = function(a) {
  return promesa.core.promise.call(null, function(b) {
    return b.call(null, a.call(null));
  });
};
promesa.core.await$ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return promesa.core.await$.cljs$core$IFn$_invoke$arity$variadic(b);
};
promesa.core.await$.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  throw cljs.core.ex_info.call(null, "Should be only used in alet macro.", cljs.core.PersistentArrayMap.EMPTY);
};
promesa.core.await$.cljs$lang$maxFixedArity = 0;
promesa.core.await$.cljs$lang$applyTo = function(a) {
  return promesa.core.await$.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.nodejs = {};
cljs.nodejs.require = require;
cljs.nodejs.process = process;
cljs.nodejs.enable_util_print_BANG_ = function() {
  cljs.core._STAR_print_newline_STAR_ = !1;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var a = function(a) {
      return console.log.apply(console, cljs.core.into_array.call(null, a));
    }, b = function(b) {
      var c = null;
      if (0 < arguments.length) {
        c = 0;
        for (var e = Array(arguments.length - 0); c < e.length;) {
          e[c] = arguments[c + 0], ++c;
        }
        c = new cljs.core.IndexedSeq(e, 0, null);
      }
      return a.call(this, c);
    };
    b.cljs$lang$maxFixedArity = 0;
    b.cljs$lang$applyTo = function(b) {
      b = cljs.core.seq(b);
      return a(b);
    };
    b.cljs$core$IFn$_invoke$arity$variadic = a;
    return b;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var a = function(a) {
      return console.error.apply(console, cljs.core.into_array.call(null, a));
    }, b = function(b) {
      var c = null;
      if (0 < arguments.length) {
        c = 0;
        for (var e = Array(arguments.length - 0); c < e.length;) {
          e[c] = arguments[c + 0], ++c;
        }
        c = new cljs.core.IndexedSeq(e, 0, null);
      }
      return a.call(this, c);
    };
    b.cljs$lang$maxFixedArity = 0;
    b.cljs$lang$applyTo = function(b) {
      b = cljs.core.seq(b);
      return a(b);
    };
    b.cljs$core$IFn$_invoke$arity$variadic = a;
    return b;
  }();
  return null;
};
cljs.core.async = {};
cljs.core.async.impl = {};
cljs.core.async.impl.protocols = {};
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
};
cljs.core.async.impl.protocols.take_BANG_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2) {
    return a.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(a, b);
  }
  var c = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.impl.protocols.take_BANG_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "ReadPort.take!", a);
};
cljs.core.async.impl.protocols.WritePort = function() {
};
cljs.core.async.impl.protocols.put_BANG_ = function(a, b, c) {
  if (null != a && null != a.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3) {
    return a.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(a, b, c);
  }
  var d = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = cljs.core.async.impl.protocols.put_BANG_._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "WritePort.put!", a);
};
cljs.core.async.impl.protocols.Channel = function() {
};
cljs.core.async.impl.protocols.close_BANG_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1) {
    return a.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.close_BANG_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Channel.close!", a);
};
cljs.core.async.impl.protocols.closed_QMARK_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1) {
    return a.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.closed_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Channel.closed?", a);
};
cljs.core.async.impl.protocols.Handler = function() {
};
cljs.core.async.impl.protocols.active_QMARK_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1) {
    return a.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.active_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Handler.active?", a);
};
cljs.core.async.impl.protocols.blockable_QMARK_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1) {
    return a.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.blockable_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.blockable_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Handler.blockable?", a);
};
cljs.core.async.impl.protocols.commit = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Handler$commit$arity$1) {
    return a.cljs$core$async$impl$protocols$Handler$commit$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.commit[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.commit._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Handler.commit", a);
};
cljs.core.async.impl.protocols.Buffer = function() {
};
cljs.core.async.impl.protocols.full_QMARK_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1) {
    return a.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.full_QMARK_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Buffer.full?", a);
};
cljs.core.async.impl.protocols.remove_BANG_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1) {
    return a.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.remove_BANG_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Buffer.remove!", a);
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2) {
    return a.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.impl.protocols.add_BANG__STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Buffer.add!*", a);
};
cljs.core.async.impl.protocols.close_buf_BANG_ = function(a) {
  if (null != a && null != a.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1) {
    return a.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1(a);
  }
  var b = cljs.core.async.impl.protocols.close_buf_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.protocols.close_buf_BANG_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Buffer.close-buf!", a);
};
cljs.core.async.impl.protocols.add_BANG_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null == b) {
    throw Error("Assert failed: (not (nil? itm))");
  }
  return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, a, b);
};
cljs.core.async.impl.protocols.add_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
};
cljs.core.async.impl.buffers = {};
cljs.core.async.impl.buffers.acopy = function(a, b, c, d, e) {
  for (var f = 0;;) {
    if (f < e) {
      c[d + f] = a[b + f], f += 1;
    } else {
      return null;
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(a, b, c, d) {
  this.head = a;
  this.tail = b;
  this.length = c;
  this.arr = d;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  if (0 === this.length) {
    return null;
  }
  var a = this.arr[this.tail];
  this.arr[this.tail] = null;
  this.tail = (this.tail + 1) % this.arr.length;
  --this.length;
  return a;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(a) {
  this.arr[this.head] = a;
  this.head = (this.head + 1) % this.arr.length;
  this.length += 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(a) {
  this.length + 1 === this.arr.length && this.resize();
  return this.unshift(a);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var a = Array(2 * this.arr.length);
  return this.tail < this.head ? (cljs.core.async.impl.buffers.acopy.call(null, this.arr, this.tail, a, 0, this.length), this.tail = 0, this.head = this.length, this.arr = a) : this.tail > this.head ? (cljs.core.async.impl.buffers.acopy.call(null, this.arr, this.tail, a, 0, this.arr.length - this.tail), cljs.core.async.impl.buffers.acopy.call(null, this.arr, 0, a, this.arr.length - this.tail, this.head), this.tail = 0, this.head = this.length, this.arr = a) : this.tail === this.head ? (this.head = 
  this.tail = 0, this.arr = a) : null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(a) {
  for (var b = this.length, c = 0;;) {
    if (c < b) {
      var d = this.pop();
      a.call(null, d) && this.unshift(d);
      c += 1;
    } else {
      return null;
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "head", "head", 869147608, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "length", "length", -2065447907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = !0;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function(a, b, c, d) {
  return new cljs.core.async.impl.buffers.RingBuffer(a, b, c, d);
};
cljs.core.async.impl.buffers.ring_buffer = function(a) {
  if (!(0 < a)) {
    throw Error("Assert failed: Can't create a ring buffer of size 0\n(\x3e n 0)");
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, Array(a));
};
cljs.core.async.impl.buffers.FixedBuffer = function(a, b) {
  this.buf = a;
  this.n = b;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(a) {
  return this.buf.length === this.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(a) {
  return this.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(a, b) {
  this.buf.unbounded_unshift(b);
  return this;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(a) {
  return null;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = !0;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function(a, b) {
  return new cljs.core.async.impl.buffers.FixedBuffer(a, b);
};
cljs.core.async.impl.buffers.fixed_buffer = function(a) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, a), a);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(a, b) {
  this.buf = a;
  this.n = b;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(a) {
  return !1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(a) {
  return this.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(a, b) {
  this.buf.length !== this.n && this.buf.unshift(b);
  return this;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(a) {
  return null;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = !0;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function(a, b) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(a, b);
};
cljs.core.async.impl.buffers.dropping_buffer = function(a) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, a), a);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(a, b) {
  this.buf = a;
  this.n = b;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(a) {
  return !1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(a) {
  return this.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(a, b) {
  this.buf.length === this.n && cljs.core.async.impl.protocols.remove_BANG_.call(null, this);
  this.buf.unshift(b);
  return this;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(a) {
  return null;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = !0;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function(a, b) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(a, b);
};
cljs.core.async.impl.buffers.sliding_buffer = function(a) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, a), a);
};
"undefined" === typeof cljs.core.async.impl.buffers.NO_VAL && (cljs.core.async.impl.buffers.NO_VAL = {});
cljs.core.async.impl.buffers.undelivered_QMARK_ = function(a) {
  return cljs.core.async.impl.buffers.NO_VAL === a;
};
cljs.core.async.impl.buffers.PromiseBuffer = function(a) {
  this.val = a;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(a) {
  return !1;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(a) {
  return this.val;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(a, b) {
  cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, this.val)) && (this.val = b);
  return this;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(a) {
  return cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, this.val)) ? this.val = null : null;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, this.val)) ? 0 : 1;
};
cljs.core.async.impl.buffers.PromiseBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$type = !0;
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/PromiseBuffer";
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.buffers/PromiseBuffer");
};
cljs.core.async.impl.buffers.__GT_PromiseBuffer = function(a) {
  return new cljs.core.async.impl.buffers.PromiseBuffer(a);
};
cljs.core.async.impl.buffers.promise_buffer = function() {
  return new cljs.core.async.impl.buffers.PromiseBuffer(cljs.core.async.impl.buffers.NO_VAL);
};
goog.debug.entryPointRegistry = {};
goog.debug.EntryPointMonitor = function() {
};
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = !1;
goog.debug.entryPointRegistry.register = function(a) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = a;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    for (var b = goog.debug.entryPointRegistry.monitors_, c = 0; c < b.length; c++) {
      a(goog.bind(b[c].wrap, b[c]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(a) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = !0;
  for (var b = goog.bind(a.wrap, a), c = 0; c < goog.debug.entryPointRegistry.refList_.length; c++) {
    goog.debug.entryPointRegistry.refList_[c](b);
  }
  goog.debug.entryPointRegistry.monitors_.push(a);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(a) {
  var b = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(a == b[b.length - 1], "Only the most recent monitor can be unwrapped.");
  a = goog.bind(a.unwrap, a);
  for (var c = 0; c < goog.debug.entryPointRegistry.refList_.length; c++) {
    goog.debug.entryPointRegistry.refList_[c](a);
  }
  b.length--;
};
goog.dom.HtmlElement = function() {
};
goog.dom.TagName = function(a) {
  this.tagName_ = a;
};
goog.dom.TagName.prototype.toString = function() {
  return this.tagName_;
};
goog.dom.TagName.A = new goog.dom.TagName("A");
goog.dom.TagName.ABBR = new goog.dom.TagName("ABBR");
goog.dom.TagName.ACRONYM = new goog.dom.TagName("ACRONYM");
goog.dom.TagName.ADDRESS = new goog.dom.TagName("ADDRESS");
goog.dom.TagName.APPLET = new goog.dom.TagName("APPLET");
goog.dom.TagName.AREA = new goog.dom.TagName("AREA");
goog.dom.TagName.ARTICLE = new goog.dom.TagName("ARTICLE");
goog.dom.TagName.ASIDE = new goog.dom.TagName("ASIDE");
goog.dom.TagName.AUDIO = new goog.dom.TagName("AUDIO");
goog.dom.TagName.B = new goog.dom.TagName("B");
goog.dom.TagName.BASE = new goog.dom.TagName("BASE");
goog.dom.TagName.BASEFONT = new goog.dom.TagName("BASEFONT");
goog.dom.TagName.BDI = new goog.dom.TagName("BDI");
goog.dom.TagName.BDO = new goog.dom.TagName("BDO");
goog.dom.TagName.BIG = new goog.dom.TagName("BIG");
goog.dom.TagName.BLOCKQUOTE = new goog.dom.TagName("BLOCKQUOTE");
goog.dom.TagName.BODY = new goog.dom.TagName("BODY");
goog.dom.TagName.BR = new goog.dom.TagName("BR");
goog.dom.TagName.BUTTON = new goog.dom.TagName("BUTTON");
goog.dom.TagName.CANVAS = new goog.dom.TagName("CANVAS");
goog.dom.TagName.CAPTION = new goog.dom.TagName("CAPTION");
goog.dom.TagName.CENTER = new goog.dom.TagName("CENTER");
goog.dom.TagName.CITE = new goog.dom.TagName("CITE");
goog.dom.TagName.CODE = new goog.dom.TagName("CODE");
goog.dom.TagName.COL = new goog.dom.TagName("COL");
goog.dom.TagName.COLGROUP = new goog.dom.TagName("COLGROUP");
goog.dom.TagName.COMMAND = new goog.dom.TagName("COMMAND");
goog.dom.TagName.DATA = new goog.dom.TagName("DATA");
goog.dom.TagName.DATALIST = new goog.dom.TagName("DATALIST");
goog.dom.TagName.DD = new goog.dom.TagName("DD");
goog.dom.TagName.DEL = new goog.dom.TagName("DEL");
goog.dom.TagName.DETAILS = new goog.dom.TagName("DETAILS");
goog.dom.TagName.DFN = new goog.dom.TagName("DFN");
goog.dom.TagName.DIALOG = new goog.dom.TagName("DIALOG");
goog.dom.TagName.DIR = new goog.dom.TagName("DIR");
goog.dom.TagName.DIV = new goog.dom.TagName("DIV");
goog.dom.TagName.DL = new goog.dom.TagName("DL");
goog.dom.TagName.DT = new goog.dom.TagName("DT");
goog.dom.TagName.EM = new goog.dom.TagName("EM");
goog.dom.TagName.EMBED = new goog.dom.TagName("EMBED");
goog.dom.TagName.FIELDSET = new goog.dom.TagName("FIELDSET");
goog.dom.TagName.FIGCAPTION = new goog.dom.TagName("FIGCAPTION");
goog.dom.TagName.FIGURE = new goog.dom.TagName("FIGURE");
goog.dom.TagName.FONT = new goog.dom.TagName("FONT");
goog.dom.TagName.FOOTER = new goog.dom.TagName("FOOTER");
goog.dom.TagName.FORM = new goog.dom.TagName("FORM");
goog.dom.TagName.FRAME = new goog.dom.TagName("FRAME");
goog.dom.TagName.FRAMESET = new goog.dom.TagName("FRAMESET");
goog.dom.TagName.H1 = new goog.dom.TagName("H1");
goog.dom.TagName.H2 = new goog.dom.TagName("H2");
goog.dom.TagName.H3 = new goog.dom.TagName("H3");
goog.dom.TagName.H4 = new goog.dom.TagName("H4");
goog.dom.TagName.H5 = new goog.dom.TagName("H5");
goog.dom.TagName.H6 = new goog.dom.TagName("H6");
goog.dom.TagName.HEAD = new goog.dom.TagName("HEAD");
goog.dom.TagName.HEADER = new goog.dom.TagName("HEADER");
goog.dom.TagName.HGROUP = new goog.dom.TagName("HGROUP");
goog.dom.TagName.HR = new goog.dom.TagName("HR");
goog.dom.TagName.HTML = new goog.dom.TagName("HTML");
goog.dom.TagName.I = new goog.dom.TagName("I");
goog.dom.TagName.IFRAME = new goog.dom.TagName("IFRAME");
goog.dom.TagName.IMG = new goog.dom.TagName("IMG");
goog.dom.TagName.INPUT = new goog.dom.TagName("INPUT");
goog.dom.TagName.INS = new goog.dom.TagName("INS");
goog.dom.TagName.ISINDEX = new goog.dom.TagName("ISINDEX");
goog.dom.TagName.KBD = new goog.dom.TagName("KBD");
goog.dom.TagName.KEYGEN = new goog.dom.TagName("KEYGEN");
goog.dom.TagName.LABEL = new goog.dom.TagName("LABEL");
goog.dom.TagName.LEGEND = new goog.dom.TagName("LEGEND");
goog.dom.TagName.LI = new goog.dom.TagName("LI");
goog.dom.TagName.LINK = new goog.dom.TagName("LINK");
goog.dom.TagName.MAP = new goog.dom.TagName("MAP");
goog.dom.TagName.MARK = new goog.dom.TagName("MARK");
goog.dom.TagName.MATH = new goog.dom.TagName("MATH");
goog.dom.TagName.MENU = new goog.dom.TagName("MENU");
goog.dom.TagName.META = new goog.dom.TagName("META");
goog.dom.TagName.METER = new goog.dom.TagName("METER");
goog.dom.TagName.NAV = new goog.dom.TagName("NAV");
goog.dom.TagName.NOFRAMES = new goog.dom.TagName("NOFRAMES");
goog.dom.TagName.NOSCRIPT = new goog.dom.TagName("NOSCRIPT");
goog.dom.TagName.OBJECT = new goog.dom.TagName("OBJECT");
goog.dom.TagName.OL = new goog.dom.TagName("OL");
goog.dom.TagName.OPTGROUP = new goog.dom.TagName("OPTGROUP");
goog.dom.TagName.OPTION = new goog.dom.TagName("OPTION");
goog.dom.TagName.OUTPUT = new goog.dom.TagName("OUTPUT");
goog.dom.TagName.P = new goog.dom.TagName("P");
goog.dom.TagName.PARAM = new goog.dom.TagName("PARAM");
goog.dom.TagName.PRE = new goog.dom.TagName("PRE");
goog.dom.TagName.PROGRESS = new goog.dom.TagName("PROGRESS");
goog.dom.TagName.Q = new goog.dom.TagName("Q");
goog.dom.TagName.RP = new goog.dom.TagName("RP");
goog.dom.TagName.RT = new goog.dom.TagName("RT");
goog.dom.TagName.RUBY = new goog.dom.TagName("RUBY");
goog.dom.TagName.S = new goog.dom.TagName("S");
goog.dom.TagName.SAMP = new goog.dom.TagName("SAMP");
goog.dom.TagName.SCRIPT = new goog.dom.TagName("SCRIPT");
goog.dom.TagName.SECTION = new goog.dom.TagName("SECTION");
goog.dom.TagName.SELECT = new goog.dom.TagName("SELECT");
goog.dom.TagName.SMALL = new goog.dom.TagName("SMALL");
goog.dom.TagName.SOURCE = new goog.dom.TagName("SOURCE");
goog.dom.TagName.SPAN = new goog.dom.TagName("SPAN");
goog.dom.TagName.STRIKE = new goog.dom.TagName("STRIKE");
goog.dom.TagName.STRONG = new goog.dom.TagName("STRONG");
goog.dom.TagName.STYLE = new goog.dom.TagName("STYLE");
goog.dom.TagName.SUB = new goog.dom.TagName("SUB");
goog.dom.TagName.SUMMARY = new goog.dom.TagName("SUMMARY");
goog.dom.TagName.SUP = new goog.dom.TagName("SUP");
goog.dom.TagName.SVG = new goog.dom.TagName("SVG");
goog.dom.TagName.TABLE = new goog.dom.TagName("TABLE");
goog.dom.TagName.TBODY = new goog.dom.TagName("TBODY");
goog.dom.TagName.TD = new goog.dom.TagName("TD");
goog.dom.TagName.TEMPLATE = new goog.dom.TagName("TEMPLATE");
goog.dom.TagName.TEXTAREA = new goog.dom.TagName("TEXTAREA");
goog.dom.TagName.TFOOT = new goog.dom.TagName("TFOOT");
goog.dom.TagName.TH = new goog.dom.TagName("TH");
goog.dom.TagName.THEAD = new goog.dom.TagName("THEAD");
goog.dom.TagName.TIME = new goog.dom.TagName("TIME");
goog.dom.TagName.TITLE = new goog.dom.TagName("TITLE");
goog.dom.TagName.TR = new goog.dom.TagName("TR");
goog.dom.TagName.TRACK = new goog.dom.TagName("TRACK");
goog.dom.TagName.TT = new goog.dom.TagName("TT");
goog.dom.TagName.U = new goog.dom.TagName("U");
goog.dom.TagName.UL = new goog.dom.TagName("UL");
goog.dom.TagName.VAR = new goog.dom.TagName("VAR");
goog.dom.TagName.VIDEO = new goog.dom.TagName("VIDEO");
goog.dom.TagName.WBR = new goog.dom.TagName("WBR");
goog.labs = {};
goog.labs.userAgent = {};
goog.labs.userAgent.util = {};
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var a = goog.labs.userAgent.util.getNavigator_();
  return a && (a = a.userAgent) ? a : "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(a) {
  goog.labs.userAgent.util.userAgent_ = a || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(a) {
  var b = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(b, a);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(a) {
  var b = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(b, a);
};
goog.labs.userAgent.util.extractVersionTuples = function(a) {
  for (var b = RegExp("(\\w[\\w ]+)/([^\\s]+)\\s*(?:\\((.*?)\\))?", "g"), c = [], d; d = b.exec(a);) {
    c.push([d[1], d[2], d[3] || void 0]);
  }
  return c;
};
goog.labs.userAgent.browser = {};
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  function a(a) {
    a = goog.array.find(a, d);
    return c[a] || "";
  }
  var b = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(b);
  }
  b = goog.labs.userAgent.util.extractVersionTuples(b);
  var c = {};
  goog.array.forEach(b, function(a) {
    c[a[0]] = a[1];
  });
  var d = goog.partial(goog.object.containsKey, c);
  return goog.labs.userAgent.browser.isOpera() ? a(["Version", "Opera"]) : goog.labs.userAgent.browser.isEdge() ? a(["Edge"]) : goog.labs.userAgent.browser.isChrome() ? a(["Chrome", "CriOS"]) : (b = b[2]) && b[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(a) {
  return 0 <= goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), a);
};
goog.labs.userAgent.browser.getIEVersion_ = function(a) {
  var b = /rv: *([\d\.]*)/.exec(a);
  if (b && b[1]) {
    return b[1];
  }
  b = "";
  var c = /MSIE +([\d\.]+)/.exec(a);
  if (c && c[1]) {
    if (a = /Trident\/(\d.\d)/.exec(a), "7.0" == c[1]) {
      if (a && a[1]) {
        switch(a[1]) {
          case "4.0":
            b = "8.0";
            break;
          case "5.0":
            b = "9.0";
            break;
          case "6.0":
            b = "10.0";
            break;
          case "7.0":
            b = "11.0";
        }
      } else {
        b = "7.0";
      }
    } else {
      b = c[1];
    }
  }
  return b;
};
goog.labs.userAgent.engine = {};
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var a = goog.labs.userAgent.util.getUserAgent();
  if (a) {
    a = goog.labs.userAgent.util.extractVersionTuples(a);
    var b = goog.labs.userAgent.engine.getEngineTuple_(a);
    if (b) {
      return "Gecko" == b[0] ? goog.labs.userAgent.engine.getVersionForKey_(a, "Firefox") : b[1];
    }
    a = a[0];
    var c;
    if (a && (c = a[2]) && (c = /Trident\/([^\s;]+)/.exec(c))) {
      return c[1];
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(a) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return a[1];
  }
  for (var b = 0; b < a.length; b++) {
    var c = a[b];
    if ("Edge" == c[0]) {
      return c;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(a) {
  return 0 <= goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), a);
};
goog.labs.userAgent.engine.getVersionForKey_ = function(a, b) {
  var c = goog.array.find(a, function(a) {
    return b == a[0];
  });
  return c && c[1] || "";
};
goog.async = {};
goog.async.throwException = function(a) {
  goog.global.setTimeout(function() {
    throw a;
  }, 0);
};
goog.async.nextTick = function(a, b, c) {
  var d = a;
  b && (d = goog.bind(a, b));
  d = goog.async.nextTick.wrapCallback_(d);
  goog.isFunction(goog.global.setImmediate) && (c || goog.async.nextTick.useSetImmediate_()) ? goog.global.setImmediate(d) : (goog.async.nextTick.setImmediate_ || (goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_()), goog.async.nextTick.setImmediate_(d));
};
goog.async.nextTick.useSetImmediate_ = function() {
  return goog.global.Window && goog.global.Window.prototype && !goog.labs.userAgent.browser.isEdge() && goog.global.Window.prototype.setImmediate == goog.global.setImmediate ? !1 : !0;
};
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var a = goog.global.MessageChannel;
  "undefined" === typeof a && "undefined" !== typeof window && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto() && (a = function() {
    var a = document.createElement("IFRAME");
    a.style.display = "none";
    a.src = "";
    document.documentElement.appendChild(a);
    var b = a.contentWindow;
    a = b.document;
    a.open();
    a.write("");
    a.close();
    var c = "callImmediate" + Math.random(), d = "file:" == b.location.protocol ? "*" : b.location.protocol + "//" + b.location.host;
    a = goog.bind(function(a) {
      if (("*" == d || a.origin == d) && a.data == c) {
        this.port1.onmessage();
      }
    }, this);
    b.addEventListener("message", a, !1);
    this.port1 = {};
    this.port2 = {postMessage:function() {
      b.postMessage(c, d);
    }};
  });
  if ("undefined" !== typeof a && !goog.labs.userAgent.browser.isIE()) {
    var b = new a, c = {}, d = c;
    b.port1.onmessage = function() {
      if (goog.isDef(c.next)) {
        c = c.next;
        var a = c.cb;
        c.cb = null;
        a();
      }
    };
    return function(a) {
      d.next = {cb:a};
      d = d.next;
      b.port2.postMessage(0);
    };
  }
  return "undefined" !== typeof document && "onreadystatechange" in document.createElement("SCRIPT") ? function(a) {
    var b = document.createElement("SCRIPT");
    b.onreadystatechange = function() {
      b.onreadystatechange = null;
      b.parentNode.removeChild(b);
      b = null;
      a();
      a = null;
    };
    document.documentElement.appendChild(b);
  } : function(a) {
    goog.global.setTimeout(a, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(a) {
  goog.async.nextTick.wrapCallback_ = a;
});
cljs.core.async.impl.dispatch = {};
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = !1;
cljs.core.async.impl.dispatch.queued_QMARK_ = !1;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function() {
  cljs.core.async.impl.dispatch.running_QMARK_ = !0;
  cljs.core.async.impl.dispatch.queued_QMARK_ = !1;
  for (var a = 0;;) {
    var b = cljs.core.async.impl.dispatch.tasks.pop();
    if (null != b && (b.call(null), a < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE)) {
      a += 1;
      continue;
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = !1;
  return 0 < cljs.core.async.impl.dispatch.tasks.length ? cljs.core.async.impl.dispatch.queue_dispatcher.call(null) : null;
};
cljs.core.async.impl.dispatch.queue_dispatcher = function() {
  if (cljs.core.async.impl.dispatch.queued_QMARK_ && cljs.core.async.impl.dispatch.running_QMARK_) {
    return null;
  }
  cljs.core.async.impl.dispatch.queued_QMARK_ = !0;
  return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
};
cljs.core.async.impl.dispatch.run = function(a) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(a);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function(a, b) {
  return setTimeout(a, b);
};
cljs.core.async.impl.channels = {};
cljs.core.async.impl.channels.box = function(a) {
  "undefined" === typeof cljs.core.async.impl.channels.t_cljs$core$async$impl$channels17648 && (cljs.core.async.impl.channels.t_cljs$core$async$impl$channels17648 = function(a, c) {
    this.val = a;
    this.meta17649 = c;
    this.cljs$lang$protocol_mask$partition0$ = 425984;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels17648.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels17648(this.val, c);
  }, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels17648.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta17649;
  }, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels17648.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
    return this.val;
  }, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels17648.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "meta17649", "meta17649", -1157673628, null)], null);
  }, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels17648.cljs$lang$type = !0, cljs.core.async.impl.channels.t_cljs$core$async$impl$channels17648.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels17648", cljs.core.async.impl.channels.t_cljs$core$async$impl$channels17648.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels17648");
  }, cljs.core.async.impl.channels.__GT_t_cljs$core$async$impl$channels17648 = function(a, c) {
    return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels17648(a, c);
  });
  return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels17648(a, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(a, b) {
  this.handler = a;
  this.val = b;
};
cljs.core.async.impl.channels.PutBox.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "handler", "handler", 1444934915, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = !0;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function(a, b) {
  return new cljs.core.async.impl.channels.PutBox(a, b);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function(a) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, a.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
};
cljs.core.async.impl.channels.abort = function(a) {
  if (null != a && null != a.cljs$core$async$impl$channels$MMC$abort$arity$1) {
    return a.cljs$core$async$impl$channels$MMC$abort$arity$1(a);
  }
  var b = cljs.core.async.impl.channels.abort[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.impl.channels.abort._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "MMC.abort", a);
};
cljs.core.async.impl.channels.ManyToManyChannel = function(a, b, c, d, e, f, g) {
  this.takes = a;
  this.dirty_takes = b;
  this.puts = c;
  this.dirty_puts = d;
  this.buf = e;
  this.closed = f;
  this.add_BANG_ = g;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(a) {
  for (;;) {
    a = this.puts.pop();
    if (null != a) {
      var b = a.handler, c = a.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, b)) {
        var d = cljs.core.async.impl.protocols.commit.call(null, b);
        cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, k) {
          return function() {
            return a.call(null, !0);
          };
        }(d, b, c, a, this));
      } else {
        continue;
      }
    }
    break;
  }
  this.puts.cleanup(cljs.core.constantly.call(null, !1));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this);
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(a, b, c) {
  var d = this, e = this;
  if (null == b) {
    throw Error("Assert failed: Can't put nil on a channel\n(not (nil? val))");
  }
  var f = d.closed;
  if (f || !cljs.core.async.impl.protocols.active_QMARK_.call(null, c)) {
    return cljs.core.async.impl.channels.box.call(null, !f);
  }
  if (cljs.core.truth_(function() {
    var a = d.buf;
    return cljs.core.truth_(a) ? cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, d.buf)) : a;
  }())) {
    cljs.core.async.impl.protocols.commit.call(null, c);
    var g = cljs.core.reduced_QMARK_.call(null, d.add_BANG_.call(null, d.buf, b));
    c = function() {
      for (var a = cljs.core.PersistentVector.EMPTY;;) {
        if (0 < d.takes.length && 0 < cljs.core.count.call(null, d.buf)) {
          var b = d.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, b)) {
            var c = cljs.core.async.impl.protocols.commit.call(null, b), h = cljs.core.async.impl.protocols.remove_BANG_.call(null, d.buf);
            a = cljs.core.conj.call(null, a, function(a, b, c, d, e, f, g) {
              return function() {
                return b.call(null, c);
              };
            }(a, c, h, b, g, f, e));
          }
        } else {
          return a;
        }
      }
    }();
    g && cljs.core.async.impl.channels.abort.call(null, e);
    if (cljs.core.seq.call(null, c)) {
      c = cljs.core.seq.call(null, c);
      a = null;
      for (var h = 0, k = 0;;) {
        if (k < h) {
          var l = cljs.core._nth.call(null, a, k);
          cljs.core.async.impl.dispatch.run.call(null, l);
          k += 1;
        } else {
          if (c = cljs.core.seq.call(null, c)) {
            a = c, cljs.core.chunked_seq_QMARK_.call(null, a) ? (c = cljs.core.chunk_first.call(null, a), k = cljs.core.chunk_rest.call(null, a), a = c, h = cljs.core.count.call(null, c), c = k) : (c = cljs.core.first.call(null, a), cljs.core.async.impl.dispatch.run.call(null, c), c = cljs.core.next.call(null, a), a = null, h = 0), k = 0;
          } else {
            break;
          }
        }
      }
    }
    return cljs.core.async.impl.channels.box.call(null, !0);
  }
  a = function() {
    for (;;) {
      var a = d.takes.pop();
      if (cljs.core.truth_(a)) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, a))) {
          return a;
        }
      } else {
        return null;
      }
    }
  }();
  if (cljs.core.truth_(a)) {
    return h = cljs.core.async.impl.protocols.commit.call(null, a), cljs.core.async.impl.protocols.commit.call(null, c), cljs.core.async.impl.dispatch.run.call(null, function(a, c, d, e) {
      return function() {
        return a.call(null, b);
      };
    }(h, a, f, e)), cljs.core.async.impl.channels.box.call(null, !0);
  }
  64 < d.dirty_puts ? (d.dirty_puts = 0, d.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_)) : d.dirty_puts += 1;
  if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, c))) {
    if (!(1024 > d.puts.length)) {
      throw Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(["No more than ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(1024), " pending puts are allowed on a single channel. Consider using a windowed buffer."].join("")), "\n(\x3c (.-length puts) impl/MAX-QUEUE-SIZE)"].join(""));
    }
    d.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(c, b));
  }
  return null;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(a, b) {
  var c = this;
  if (cljs.core.async.impl.protocols.active_QMARK_.call(null, b)) {
    if (null != c.buf && 0 < cljs.core.count.call(null, c.buf)) {
      var d = cljs.core.async.impl.protocols.commit.call(null, b);
      if (cljs.core.truth_(d)) {
        var e = cljs.core.async.impl.protocols.remove_BANG_.call(null, c.buf), f = 0 < c.puts.length ? function() {
          for (var a = cljs.core.PersistentVector.EMPTY;;) {
            var b = c.puts.pop(), d = b.handler;
            b = b.val;
            var e = cljs.core.async.impl.protocols.active_QMARK_.call(null, d);
            d = e ? cljs.core.async.impl.protocols.commit.call(null, d) : e;
            a = cljs.core.truth_(d) ? cljs.core.conj.call(null, a, d) : a;
            b = cljs.core.truth_(d) ? cljs.core.reduced_QMARK_.call(null, c.add_BANG_.call(null, c.buf, b)) : null;
            if (!(cljs.core.not.call(null, b) && cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, c.buf)) && 0 < c.puts.length)) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a], null);
            }
          }
        }() : null, g = cljs.core.nth.call(null, f, 0, null), h = cljs.core.nth.call(null, f, 1, null);
        cljs.core.truth_(g) && cljs.core.async.impl.channels.abort.call(null, this);
        for (var k = cljs.core.seq.call(null, h), l = null, m = 0, n = 0;;) {
          if (n < m) {
            var p = cljs.core._nth.call(null, l, n);
            cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g, h, k, m, l, n) {
              return function() {
                return e.call(null, !0);
              };
            }(k, l, m, n, p, e, f, g, h, d, d, this));
            n += 1;
          } else {
            var q = cljs.core.seq.call(null, k);
            if (q) {
              p = q;
              if (cljs.core.chunked_seq_QMARK_.call(null, p)) {
                k = cljs.core.chunk_first.call(null, p), n = cljs.core.chunk_rest.call(null, p), l = k, m = cljs.core.count.call(null, k), k = n;
              } else {
                var r = cljs.core.first.call(null, p);
                cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g, h, k, m, l, n, p, q) {
                  return function() {
                    return e.call(null, !0);
                  };
                }(k, l, m, n, r, p, q, e, f, g, h, d, d, this));
                k = cljs.core.next.call(null, p);
                l = null;
                m = 0;
              }
              n = 0;
            } else {
              break;
            }
          }
        }
        return cljs.core.async.impl.channels.box.call(null, e);
      }
      return null;
    }
    d = function() {
      for (;;) {
        var a = c.puts.pop();
        if (cljs.core.truth_(a)) {
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, a.handler)) {
            return a;
          }
        } else {
          return null;
        }
      }
    }();
    if (cljs.core.truth_(d)) {
      return e = cljs.core.async.impl.protocols.commit.call(null, d.handler), cljs.core.async.impl.protocols.commit.call(null, b), cljs.core.async.impl.dispatch.run.call(null, function(a, b, c) {
        return function() {
          return a.call(null, !0);
        };
      }(e, d, this)), cljs.core.async.impl.channels.box.call(null, d.val);
    }
    if (cljs.core.truth_(c.closed)) {
      return cljs.core.truth_(c.buf) && c.add_BANG_.call(null, c.buf), cljs.core.truth_(function() {
        var a = cljs.core.async.impl.protocols.active_QMARK_.call(null, b);
        return cljs.core.truth_(a) ? cljs.core.async.impl.protocols.commit.call(null, b) : a;
      }()) ? (d = function() {
        var a = c.buf;
        return cljs.core.truth_(a) ? 0 < cljs.core.count.call(null, c.buf) : a;
      }(), e = cljs.core.truth_(d) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, c.buf) : null, cljs.core.async.impl.channels.box.call(null, e)) : null;
    }
    64 < c.dirty_takes ? (c.dirty_takes = 0, c.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_)) : c.dirty_takes += 1;
    if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, b))) {
      if (!(1024 > c.takes.length)) {
        throw Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(["No more than ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(1024), " pending takes are allowed on a single channel."].join("")), "\n(\x3c (.-length takes) impl/MAX-QUEUE-SIZE)"].join(""));
      }
      c.takes.unbounded_unshift(b);
    }
  }
  return null;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(a) {
  return this.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(a) {
  var b = this;
  if (!b.closed) {
    b.closed = !0;
    for (cljs.core.truth_(function() {
      var a = b.buf;
      return cljs.core.truth_(a) ? 0 === b.puts.length : a;
    }()) && b.add_BANG_.call(null, b.buf);;) {
      if (a = b.takes.pop(), null != a) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, a)) {
          var c = cljs.core.async.impl.protocols.commit.call(null, a), d = cljs.core.truth_(function() {
            var a = b.buf;
            return cljs.core.truth_(a) ? 0 < cljs.core.count.call(null, b.buf) : a;
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, b.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d) {
            return function() {
              return a.call(null, b);
            };
          }(c, d, a, this));
        }
      } else {
        break;
      }
    }
    cljs.core.truth_(b.buf) && cljs.core.async.impl.protocols.close_buf_BANG_.call(null, b.buf);
  }
  return null;
};
cljs.core.async.impl.channels.ManyToManyChannel.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "takes", "takes", 298247964, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-takes", "dirty-takes", 575642138, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-puts", "dirty-puts", 
  57041148, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "closed", "closed", 720856168, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "add!", "add!", 2046056845, null)], null);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = !0;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function(a, b, c, d, e, f, g) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(a, b, c, d, e, f, g);
};
cljs.core.async.impl.channels.ex_handler = function(a) {
  console.log(a);
  return null;
};
cljs.core.async.impl.channels.handle = function(a, b, c) {
  b = cljs.core.truth_(b) ? b : cljs.core.async.impl.channels.ex_handler;
  c = b.call(null, c);
  return null == c ? a : cljs.core.async.impl.protocols.add_BANG_.call(null, a, c);
};
cljs.core.async.impl.channels.chan = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.impl.channels.chan.call(null, a, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.impl.channels.chan.call(null, a, b, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, a, !1, function() {
    return function(a) {
      return function() {
        var b = null, d = function(b) {
          try {
            return a.call(null, b);
          } catch (k) {
            return cljs.core.async.impl.channels.handle.call(null, b, c, k);
          }
        }, g = function(b, d) {
          try {
            return a.call(null, b, d);
          } catch (l) {
            return cljs.core.async.impl.channels.handle.call(null, b, c, l);
          }
        };
        b = function(a, b) {
          switch(arguments.length) {
            case 1:
              return d.call(this, a);
            case 2:
              return g.call(this, a, b);
          }
          throw Error("Invalid arity: " + (arguments.length - 1));
        };
        b.cljs$core$IFn$_invoke$arity$1 = d;
        b.cljs$core$IFn$_invoke$arity$2 = g;
        return b;
      }();
    }(cljs.core.truth_(b) ? b.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_);
  }());
};
cljs.core.async.impl.channels.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.ioc_helpers = {};
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function(a, b, c) {
  return a[b][c];
};
cljs.core.async.impl.ioc_helpers.aget_object = function(a, b) {
  return a[b];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function(a) {
  return cljs.core.keyword_identical_QMARK_.call(null, a[1], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function(a) {
  "undefined" === typeof cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers19365 && (cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers19365 = function(a, c) {
    this.f = a;
    this.meta19366 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers19365.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, c) {
    return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers19365(this.f, c);
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers19365.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta19366;
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers19365.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers19365.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(a) {
    return !0;
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers19365.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(a) {
    return !0;
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers19365.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(a) {
    return this.f;
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers19365.getBasis = function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta19366", "meta19366", 376507926, null)], null);
  }, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers19365.cljs$lang$type = !0, cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers19365.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers19365", cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers19365.cljs$lang$ctorPrWriter = function(a, c, d) {
    return cljs.core._write.call(null, c, "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers19365");
  }, cljs.core.async.impl.ioc_helpers.__GT_t_cljs$core$async$impl$ioc_helpers19365 = function(a, c) {
    return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers19365(a, c);
  });
  return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers19365(a, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function(a) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, a, 0).call(null, a);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function(a) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, a);
  } catch (c) {
    if (c instanceof Object) {
      var b = c;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, a, 6));
      throw b;
    }
    throw c;
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function(a, b, c) {
  c = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
    a[2] = c;
    a[1] = b;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, a);
  }));
  return cljs.core.truth_(c) ? (a[2] = cljs.core.deref.call(null, c), a[1] = b, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function(a, b, c, d) {
  c = cljs.core.async.impl.protocols.put_BANG_.call(null, c, d, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
    a[2] = c;
    a[1] = b;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, a);
  }));
  return cljs.core.truth_(c) ? (a[2] = cljs.core.deref.call(null, c), a[1] = b, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
};
cljs.core.async.impl.ioc_helpers.return_chan = function(a, b) {
  var c = a[6];
  null != b && cljs.core.async.impl.protocols.put_BANG_.call(null, c, b, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(a) {
    return function() {
      return null;
    };
  }(c)));
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(a, b, c, d, e, f, g, h) {
  this.catch_block = a;
  this.catch_exception = b;
  this.finally_block = c;
  this.continue_block = d;
  this.prev = e;
  this.__meta = f;
  this.__extmap = g;
  this.__hash = h;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "catch-block":
      return this.catch_block;
    case "catch-exception":
      return this.catch_exception;
    case "finally-block":
      return this.finally_block;
    case "continue-block":
      return this.continue_block;
    case "prev":
      return this.prev;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), this.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "catch-exception", "catch-exception", -1997306795), this.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), this.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), this.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), this.prev], null)], null), this.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)], null), cljs.core.truth_(this.__extmap) ? 
  cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, this.finally_block, this.continue_block, this.prev, this.__meta, this.__extmap, this.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 5 + cljs.core.count.call(null, this.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = function(a, c) {
    return function(a) {
      return 846900531 ^ cljs.core.hash_unordered_coll.call(null, a);
    };
  }(a, this).call(null, this);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.catch_block, b.catch_block) && cljs.core._EQ_.call(null, this.catch_exception, b.catch_exception) && cljs.core._EQ_.call(null, this.finally_block, b.finally_block) && cljs.core._EQ_.call(null, this.continue_block, b.continue_block) && cljs.core._EQ_.call(null, this.prev, b.prev) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, this.finally_block, this.continue_block, this.prev, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), b)) ? new cljs.core.async.impl.ioc_helpers.ExceptionFrame(c, this.catch_exception, this.finally_block, this.continue_block, this.prev, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), b)) ? new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, c, this.finally_block, this.continue_block, 
  this.prev, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), b)) ? new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, c, this.continue_block, this.prev, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), b)) ? new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, 
  this.catch_exception, this.finally_block, c, this.prev, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), b)) ? new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, this.finally_block, this.continue_block, c, this.__meta, this.__extmap, null) : new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, this.finally_block, this.continue_block, this.prev, 
  this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), this.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), this.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), this.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), this.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), this.prev], null)], null), this.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(this.catch_block, this.catch_exception, this.finally_block, this.continue_block, this.prev, b, this.__extmap, this.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "catch-block", "catch-block", -1479223021, null), cljs.core.with_meta(new cljs.core.Symbol(null, "catch-exception", "catch-exception", -356775268, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "Class", "Class", 2064526977, null)], null)), new cljs.core.Symbol(null, "finally-block", "finally-block", 
  -1821453297, null), new cljs.core.Symbol(null, "continue-block", "continue-block", -211516323, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null)], null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = !0;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(a) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function(a, b, c, d, e) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(a, b, c, d, e, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function(a) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226))), null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function(a, b, c, d, e) {
  a[4] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, b, c, d, e, cljs.core.async.impl.ioc_helpers.aget_object.call(null, a, 4));
  return a;
};
cljs.core.async.impl.ioc_helpers.process_exception = function(a) {
  for (;;) {
    var b = cljs.core.async.impl.ioc_helpers.aget_object.call(null, a, 4), c = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(b), d = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(b), e = cljs.core.async.impl.ioc_helpers.aget_object.call(null, a, 5);
    if (cljs.core.truth_(function() {
      var a = e;
      return cljs.core.truth_(a) ? cljs.core.not.call(null, b) : a;
    }())) {
      throw e;
    }
    if (cljs.core.truth_(function() {
      var a = e;
      return cljs.core.truth_(a) ? (a = c, cljs.core.truth_(a) ? cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), d) || e instanceof d : a) : a;
    }())) {
      return a[1] = c, a[2] = e, a[5] = null, a[4] = cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null), a;
    }
    if (cljs.core.truth_(function() {
      var a = e;
      return cljs.core.truth_(a) ? cljs.core.not.call(null, c) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(b)) : a;
    }())) {
      a[4] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(b);
    } else {
      if (cljs.core.truth_(function() {
        var a = e;
        return cljs.core.truth_(a) ? (a = cljs.core.not.call(null, c)) ? (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(b) : a : a;
      }()) || cljs.core.truth_(function() {
        var a = cljs.core.not.call(null, e);
        return a ? (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(b) : a;
      }())) {
        return a[1] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(b), a[4] = cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null), a;
      }
      if (cljs.core.not.call(null, e) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(b))) {
        return a[1] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(b), a[4] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(b), a;
      }
      throw Error("No matching clause");
    }
  }
};
cljs.core.async.impl.timers = {};
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = .5;
cljs.core.async.impl.timers.random_level = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.impl.timers.random_level.call(null, 0);
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1 = function(a) {
  for (;;) {
    if (Math.random() < cljs.core.async.impl.timers.P && a < cljs.core.async.impl.timers.MAX_LEVEL) {
      a += 1;
    } else {
      return a;
    }
  }
};
cljs.core.async.impl.timers.random_level.cljs$lang$maxFixedArity = 1;
cljs.core.async.impl.timers.SkipListNode = function(a, b, c) {
  this.key = a;
  this.val = b;
  this.forward = c;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  a = this.key;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, this.val), a);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.async.impl.timers.SkipListNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "forward", "forward", 1083186224, null)], null);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = !0;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function(a, b, c) {
  return new cljs.core.async.impl.timers.SkipListNode(a, b, c);
};
cljs.core.async.impl.timers.skip_list_node = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 3:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.impl.timers.skip_list_node.call(null, null, null, a);
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = Array(c + 1);
  for (var d = 0;;) {
    if (d < c.length) {
      c[d] = null, d += 1;
    } else {
      break;
    }
  }
  return new cljs.core.async.impl.timers.SkipListNode(a, b, c);
};
cljs.core.async.impl.timers.skip_list_node.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.timers.least_greater_node = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.async.impl.timers.least_greater_node.call(null, a, b, c, null);
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  for (;;) {
    if (0 > c) {
      return a;
    }
    a: {
      for (;;) {
        var e = c < a.forward.length ? a.forward[c] : null;
        if (cljs.core.truth_(e)) {
          if (e.key < b) {
            a = e;
          } else {
            break a;
          }
        } else {
          break a;
        }
      }
    }
    null != d && (d[c] = a);
    --c;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$lang$maxFixedArity = 4;
cljs.core.async.impl.timers.SkipList = function(a, b) {
  this.header = a;
  this.level = b;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(a, b) {
  var c = Array(cljs.core.async.impl.timers.MAX_LEVEL), d = cljs.core.async.impl.timers.least_greater_node.call(null, this.header, a, this.level, c).forward[0];
  if (null != d && d.key === a) {
    return d.val = b;
  }
  d = cljs.core.async.impl.timers.random_level.call(null);
  if (d > this.level) {
    for (var e = this.level + 1;;) {
      if (e <= d + 1) {
        c[e] = this.header, e += 1;
      } else {
        break;
      }
    }
    this.level = d;
  }
  for (d = cljs.core.async.impl.timers.skip_list_node.call(null, a, b, Array(d));;) {
    return 0 <= this.level ? (c = c[0].forward, d.forward[0] = c[0], c[0] = d) : null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(a) {
  var b = Array(cljs.core.async.impl.timers.MAX_LEVEL), c = cljs.core.async.impl.timers.least_greater_node.call(null, this.header, a, this.level, b);
  c = 0 === c.forward.length ? null : c.forward[0];
  if (null != c && c.key === a) {
    for (a = 0;;) {
      if (a <= this.level) {
        var d = b[a].forward;
        c === (a < d.length ? d[a] : null) && (d[a] = c.forward[a]);
        a += 1;
      } else {
        break;
      }
    }
    for (;;) {
      if (0 < this.level && this.level < this.header.forward.length && null == this.header.forward[this.level]) {
        --this.level;
      } else {
        return null;
      }
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(a) {
  for (var b = this.header, c = this.level;;) {
    if (0 > c) {
      return b === this.header ? null : b;
    }
    var d;
    a: {
      for (d = b;;) {
        if (d = c < d.forward.length ? d.forward[c] : null, null == d) {
          d = null;
          break a;
        } else {
          if (d.key >= a) {
            break a;
          }
        }
      }
    }
    null != d ? (--c, b = d) : --c;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(a) {
  for (var b = this.header, c = this.level;;) {
    if (0 > c) {
      return b === this.header ? null : b;
    }
    var d;
    a: {
      for (d = b;;) {
        var e = c < d.forward.length ? d.forward[c] : null;
        if (null != e) {
          if (e.key > a) {
            break a;
          }
          d = e;
        } else {
          d = 0 === c ? d : null;
          break a;
        }
      }
    }
    cljs.core.truth_(d) ? (--c, b = d) : --c;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return function(a) {
    return function e(b) {
      return new cljs.core.LazySeq(null, function(a) {
        return function() {
          return null == b ? null : cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b.key, b.val], null), e.call(null, b.forward[0]));
        };
      }(a), null, null);
    };
  }(this).call(null, this.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  a = function(a) {
    return function(a) {
      return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, a);
    };
  }(this);
  return cljs.core.pr_sequential_writer.call(null, b, a, "{", ", ", "}", c, this);
};
cljs.core.async.impl.timers.SkipList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "header", "header", 1759972661, null), cljs.core.with_meta(new cljs.core.Symbol(null, "level", "level", -1363938217, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = !0;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function(a, b) {
  return new cljs.core.async.impl.timers.SkipList(a, b);
};
cljs.core.async.impl.timers.skip_list = function() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function(a) {
  var b = (new Date).valueOf() + a, c = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(b), d = cljs.core.truth_(cljs.core.truth_(c) ? c.key < b + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS : c) ? c.val : null;
  if (cljs.core.truth_(d)) {
    return d;
  }
  var e = cljs.core.async.impl.channels.chan.call(null, null);
  cljs.core.async.impl.timers.timeouts_map.put(b, e);
  cljs.core.async.impl.dispatch.queue_delay.call(null, function(a, b, c, d) {
    return function() {
      cljs.core.async.impl.timers.timeouts_map.remove(c);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, a);
    };
  }(e, d, b, c), a);
  return e;
};
cljs.core.async.fn_handler = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.fn_handler.call(null, a, !0);
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  "undefined" === typeof cljs.core.async.t_cljs$core$async19501 && (cljs.core.async.t_cljs$core$async19501 = function(a, b, e) {
    this.f = a;
    this.blockable = b;
    this.meta19502 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async19501.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.core.async.t_cljs$core$async19501(this.f, this.blockable, b);
  }, cljs.core.async.t_cljs$core$async19501.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta19502;
  }, cljs.core.async.t_cljs$core$async19501.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async19501.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(a) {
    return !0;
  }, cljs.core.async.t_cljs$core$async19501.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(a) {
    return this.blockable;
  }, cljs.core.async.t_cljs$core$async19501.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(a) {
    return this.f;
  }, cljs.core.async.t_cljs$core$async19501.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "blockable", "blockable", -28395259, null), new cljs.core.Symbol(null, "meta19502", "meta19502", -182880143, null)], null);
  }, cljs.core.async.t_cljs$core$async19501.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async19501.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async19501", cljs.core.async.t_cljs$core$async19501.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async19501");
  }, cljs.core.async.__GT_t_cljs$core$async19501 = function(a, b, e) {
    return new cljs.core.async.t_cljs$core$async19501(a, b, e);
  });
  return new cljs.core.async.t_cljs$core$async19501(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.fn_handler.cljs$lang$maxFixedArity = 2;
cljs.core.async.buffer = function(a) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, a);
};
cljs.core.async.dropping_buffer = function(a) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, a);
};
cljs.core.async.sliding_buffer = function(a) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, a);
};
cljs.core.async.unblocking_buffer_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$async$impl$protocols$UnblockingBuffer$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, a) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, a);
};
cljs.core.async.chan = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.chan.call(null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.chan.call(null, a, null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.chan.call(null, a, b, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = cljs.core._EQ_.call(null, a, 0) ? null : a;
  if (cljs.core.truth_(b) && !cljs.core.truth_(a)) {
    throw Error("Assert failed: buffer must be supplied when transducer is\nbuf-or-n");
  }
  return cljs.core.async.impl.channels.chan.call(null, "number" === typeof a ? cljs.core.async.buffer.call(null, a) : a, b, c);
};
cljs.core.async.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.promise_chan = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.promise_chan.call(null, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.promise_chan.call(null, a, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.chan.call(null, cljs.core.async.impl.buffers.promise_buffer.call(null), a, b);
};
cljs.core.async.promise_chan.cljs$lang$maxFixedArity = 2;
cljs.core.async.timeout = function(a) {
  return cljs.core.async.impl.timers.timeout.call(null, a);
};
cljs.core.async._LT__BANG_ = function(a) {
  throw Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.take_BANG_.call(null, a, b, !0);
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = cljs.core.async.impl.protocols.take_BANG_.call(null, a, cljs.core.async.fn_handler.call(null, b));
  if (cljs.core.truth_(a)) {
    var d = cljs.core.deref.call(null, a);
    cljs.core.truth_(c) ? b.call(null, d) : cljs.core.async.impl.dispatch.run.call(null, function(a, c) {
      return function() {
        return b.call(null, a);
      };
    }(d, a));
  }
  return null;
};
cljs.core.async.take_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.nop = function(a) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function(a, b) {
  throw Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.async.impl.protocols.put_BANG_.call(null, a, b, cljs.core.async.fhnop);
  return cljs.core.truth_(c) ? cljs.core.deref.call(null, c) : !0;
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.async.put_BANG_.call(null, a, b, c, !0);
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  a = cljs.core.async.impl.protocols.put_BANG_.call(null, a, b, cljs.core.async.fn_handler.call(null, c));
  return cljs.core.truth_(a) ? (b = cljs.core.deref.call(null, a), cljs.core.truth_(d) ? c.call(null, b) : cljs.core.async.impl.dispatch.run.call(null, function(a, b, d) {
    return function() {
      return c.call(null, a);
    };
  }(b, a, a)), b) : !0;
};
cljs.core.async.put_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.async.close_BANG_ = function(a) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, a);
};
cljs.core.async.random_array = function(a) {
  for (var b = Array(a), c = 0;;) {
    if (c < a) {
      b[c] = 0, c += 1;
    } else {
      break;
    }
  }
  for (c = 1;;) {
    if (cljs.core._EQ_.call(null, c, a)) {
      return b;
    }
    var d = cljs.core.rand_int.call(null, c);
    b[c] = b[d];
    b[d] = c;
    c += 1;
  }
};
cljs.core.async.alt_flag = function() {
  var a = cljs.core.atom.call(null, !0);
  "undefined" === typeof cljs.core.async.t_cljs$core$async19523 && (cljs.core.async.t_cljs$core$async19523 = function(a, c) {
    this.flag = a;
    this.meta19524 = c;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async19523.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
    return function(a, b) {
      return new cljs.core.async.t_cljs$core$async19523(this.flag, b);
    };
  }(a), cljs.core.async.t_cljs$core$async19523.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return function(a) {
      return this.meta19524;
    };
  }(a), cljs.core.async.t_cljs$core$async19523.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async19523.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(a) {
    return function(a) {
      return cljs.core.deref.call(null, this.flag);
    };
  }(a), cljs.core.async.t_cljs$core$async19523.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(a) {
    return function(a) {
      return !0;
    };
  }(a), cljs.core.async.t_cljs$core$async19523.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(a) {
    return function(a) {
      cljs.core.reset_BANG_.call(null, this.flag, null);
      return !0;
    };
  }(a), cljs.core.async.t_cljs$core$async19523.getBasis = function(a) {
    return function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "meta19524", "meta19524", -1721241686, null)], null);
    };
  }(a), cljs.core.async.t_cljs$core$async19523.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async19523.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async19523", cljs.core.async.t_cljs$core$async19523.cljs$lang$ctorPrWriter = function(a) {
    return function(a, b, e) {
      return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async19523");
    };
  }(a), cljs.core.async.__GT_t_cljs$core$async19523 = function(a) {
    return function(a, b) {
      return new cljs.core.async.t_cljs$core$async19523(a, b);
    };
  }(a));
  return new cljs.core.async.t_cljs$core$async19523(a, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function(a, b) {
  "undefined" === typeof cljs.core.async.t_cljs$core$async19526 && (cljs.core.async.t_cljs$core$async19526 = function(a, b, e) {
    this.flag = a;
    this.cb = b;
    this.meta19527 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async19526.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.core.async.t_cljs$core$async19526(this.flag, this.cb, b);
  }, cljs.core.async.t_cljs$core$async19526.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta19527;
  }, cljs.core.async.t_cljs$core$async19526.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async19526.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(a) {
    return cljs.core.async.impl.protocols.active_QMARK_.call(null, this.flag);
  }, cljs.core.async.t_cljs$core$async19526.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(a) {
    return !0;
  }, cljs.core.async.t_cljs$core$async19526.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(a) {
    cljs.core.async.impl.protocols.commit.call(null, this.flag);
    return this.cb;
  }, cljs.core.async.t_cljs$core$async19526.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null), new cljs.core.Symbol(null, "meta19527", "meta19527", 1799989886, null)], null);
  }, cljs.core.async.t_cljs$core$async19526.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async19526.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async19526", cljs.core.async.t_cljs$core$async19526.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async19526");
  }, cljs.core.async.__GT_t_cljs$core$async19526 = function(a, b, e) {
    return new cljs.core.async.t_cljs$core$async19526(a, b, e);
  });
  return new cljs.core.async.t_cljs$core$async19526(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function(a, b, c) {
  var d = cljs.core.async.alt_flag.call(null), e = cljs.core.count.call(null, b), f = cljs.core.async.random_array.call(null, e), g = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(c), h = function() {
    for (var c = 0;;) {
      if (c < e) {
        var h = cljs.core.truth_(g) ? c : f[c], m = cljs.core.nth.call(null, b, h), n = cljs.core.vector_QMARK_.call(null, m) ? m.call(null, 0) : null, p = cljs.core.truth_(n) ? function() {
          var b = m.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, n, b, cljs.core.async.alt_handler.call(null, d, function(b, c, d, e, f, g, h, k, m) {
            return function(b) {
              return a.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, f], null));
            };
          }(c, b, h, m, n, d, e, f, g)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, m, cljs.core.async.alt_handler.call(null, d, function(b, c, d, e, f, g, h, k) {
          return function(b) {
            return a.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, d], null));
          };
        }(c, h, m, n, d, e, f, g)));
        if (cljs.core.truth_(p)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, p), function() {
            var a = n;
            return cljs.core.truth_(a) ? a : m;
          }()], null));
        }
        c += 1;
      } else {
        return null;
      }
    }
  }();
  return cljs.core.truth_(h) ? h : cljs.core.contains_QMARK_.call(null, c, new cljs.core.Keyword(null, "default", "default", -1987822328)) ? (h = function() {
    var a = cljs.core.async.impl.protocols.active_QMARK_.call(null, d);
    return cljs.core.truth_(a) ? cljs.core.async.impl.protocols.commit.call(null, d) : a;
  }(), cljs.core.truth_(h) ? cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(c), new cljs.core.Keyword(null, "default", "default", -1987822328)], null)) : null) : null;
};
cljs.core.async.alts_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) && cljs.core.apply.call(null, cljs.core.hash_map, b);
  throw Error("alts! used not in (go ...) block");
};
cljs.core.async.alts_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.async.alts_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.async.offer_BANG_ = function(a, b) {
  var c = cljs.core.async.impl.protocols.put_BANG_.call(null, a, b, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, !1));
  return cljs.core.truth_(c) ? cljs.core.deref.call(null, c) : null;
};
cljs.core.async.poll_BANG_ = function(a) {
  a = cljs.core.async.impl.protocols.take_BANG_.call(null, a, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, !1));
  return cljs.core.truth_(a) ? cljs.core.deref.call(null, a) : null;
};
cljs.core.async.pipe = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.pipe.call(null, a, b, !0);
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d) {
    return function() {
      var e = function() {
        return function(a, b) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (t) {
                    if (t instanceof Object) {
                      b[5] = t, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw t;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d) {
          return function(d) {
            var e = d[1];
            return 7 === e ? (d[2] = d[2], d[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 1 === e ? (d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 4 === e ? (e = d[2], d[7] = e, cljs.core.truth_(null == e) ? d[1] = 5 : d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 13 === e ? (d[2] = null, d[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === e ? (e = d[7], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, 
            d, 11, b, e)) : 3 === e ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, d[2]) : 12 === e ? (d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === e ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 4, a) : 11 === e ? (e = d[2], cljs.core.truth_(e) ? d[1] = 12 : d[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (d[2] = null, d[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            5 === e ? (cljs.core.truth_(c) ? d[1] = 8 : d[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 14 === e || 10 === e ? (d[2] = d[2], d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = cljs.core.async.close_BANG_.call(null, b), d[2] = e, d[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(d), d);
      }(), g = function() {
        var a = e.call(null);
        a[6] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(d));
  return b;
};
cljs.core.async.pipe.cljs$lang$maxFixedArity = 3;
cljs.core.async.pipeline_STAR_ = function(a, b, c, d, e, f, g) {
  if (!(0 < a)) {
    throw Error("Assert failed: (pos? n)");
  }
  for (var h = cljs.core.async.chan.call(null, a), k = cljs.core.async.chan.call(null, a), l = function(a, b) {
    return function(d) {
      var e = cljs.core.nth.call(null, d, 0, null), g = cljs.core.nth.call(null, d, 1, null);
      if (null == d) {
        return cljs.core.async.close_BANG_.call(null, b), null;
      }
      var h = cljs.core.async.chan.call(null, 1, c, f), k = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g, h) {
        return function() {
          var k = function() {
            return function(a, b, c, d, e, f, g, h, k) {
              return function() {
                var b = null, c = function() {
                  var a = [null, null, null, null, null, null, null, null];
                  a[0] = b;
                  a[1] = 1;
                  return a;
                }, d = function(b) {
                  for (;;) {
                    a: {
                      try {
                        for (;;) {
                          var c = a.call(null, b);
                          if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            var d = c;
                            break a;
                          }
                        }
                      } catch (Z) {
                        if (Z instanceof Object) {
                          b[5] = Z, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw Z;
                        }
                      }
                    }
                    if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      return d;
                    }
                  }
                };
                b = function(a) {
                  switch(arguments.length) {
                    case 0:
                      return c.call(this);
                    case 1:
                      return d.call(this, a);
                  }
                  throw Error("Invalid arity: " + (arguments.length - 1));
                };
                b.cljs$core$IFn$_invoke$arity$0 = c;
                b.cljs$core$IFn$_invoke$arity$1 = d;
                return b;
              }();
            }(function(a, b, c, d, e, f, g, h) {
              return function(a) {
                var c = a[1];
                if (1 === c) {
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, a, 2, b, d);
                }
                if (2 === c) {
                  c = a[2];
                  var e = cljs.core.async.close_BANG_.call(null, b);
                  a[7] = c;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, e);
                }
                return null;
              };
            }(a, b, c, d, e, f, g, h), a, b, c, d, e, f, g, h);
          }(), m = function() {
            var b = k.call(null);
            b[6] = a;
            return b;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, m);
        };
      }(k, h, d, e, g, d, a, b));
      cljs.core.async.put_BANG_.call(null, g, h);
      return !0;
    };
  }(h, k), m = function(a, b, d) {
    return function(a) {
      var d = cljs.core.nth.call(null, a, 0, null), e = cljs.core.nth.call(null, a, 1, null);
      if (null == a) {
        return cljs.core.async.close_BANG_.call(null, b), null;
      }
      a = cljs.core.async.chan.call(null, 1);
      c.call(null, d, a);
      cljs.core.async.put_BANG_.call(null, e, a);
      return !0;
    };
  }(h, k, l), n = 0;;) {
    if (n < a) {
      var p = g, q = p instanceof cljs.core.Keyword ? p.fqn : null;
      switch(q) {
        case "compute":
          var r = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g, h, k) {
            return function() {
              var m = function() {
                var m = function(a, b, c, d, e, f, g, h, k) {
                  return function(a) {
                    var b = a[1];
                    return 1 === b ? (a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === b ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 4, f) : 3 === b ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, a[2]) : 4 === b ? (b = h.call(null, a[2]), cljs.core.truth_(b) ? a[1] = 5 : a[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === b ? (a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
                    6 === b ? (a[2] = null, a[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 7 === b ? (a[2] = a[2], a[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
                  };
                }(a, b, c, d, e, f, g, h, k);
                return function(a, b, c, d, e, f, g, h, k, m) {
                  return function() {
                    var a = null, c = function() {
                      var b = [null, null, null, null, null, null, null];
                      b[0] = a;
                      b[1] = 1;
                      return b;
                    }, d = function(a) {
                      for (;;) {
                        a: {
                          try {
                            for (;;) {
                              var c = b.call(null, a);
                              if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                var d = c;
                                break a;
                              }
                            }
                          } catch (S) {
                            if (S instanceof Object) {
                              a[5] = S, cljs.core.async.impl.ioc_helpers.process_exception.call(null, a), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw S;
                            }
                          }
                        }
                        if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          return d;
                        }
                      }
                    };
                    a = function(a) {
                      switch(arguments.length) {
                        case 0:
                          return c.call(this);
                        case 1:
                          return d.call(this, a);
                      }
                      throw Error("Invalid arity: " + (arguments.length - 1));
                    };
                    a.cljs$core$IFn$_invoke$arity$0 = c;
                    a.cljs$core$IFn$_invoke$arity$1 = d;
                    return a;
                  }();
                }(a, m, b, c, d, e, f, g, h, k);
              }(), l = function() {
                var a = m.call(null);
                a[6] = b;
                return a;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, l);
            };
          }(n, r, p, q, a, h, k, l, m));
          break;
        case "async":
          r = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, d, e, f, g, h, k) {
            return function() {
              var m = function() {
                var m = function(a, b, c, d, e, f, g, h, k) {
                  return function(a) {
                    var b = a[1];
                    return 1 === b ? (a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === b ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 4, f) : 3 === b ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, a[2]) : 4 === b ? (b = k.call(null, a[2]), cljs.core.truth_(b) ? a[1] = 5 : a[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === b ? (a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
                    6 === b ? (a[2] = null, a[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 7 === b ? (a[2] = a[2], a[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
                  };
                }(a, b, c, d, e, f, g, h, k);
                return function(a, b, c, d, e, f, g, h, k, m) {
                  return function() {
                    var a = null, c = function() {
                      var b = [null, null, null, null, null, null, null];
                      b[0] = a;
                      b[1] = 1;
                      return b;
                    }, d = function(a) {
                      for (;;) {
                        a: {
                          try {
                            for (;;) {
                              var c = b.call(null, a);
                              if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                var d = c;
                                break a;
                              }
                            }
                          } catch (S) {
                            if (S instanceof Object) {
                              a[5] = S, cljs.core.async.impl.ioc_helpers.process_exception.call(null, a), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw S;
                            }
                          }
                        }
                        if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          return d;
                        }
                      }
                    };
                    a = function(a) {
                      switch(arguments.length) {
                        case 0:
                          return c.call(this);
                        case 1:
                          return d.call(this, a);
                      }
                      throw Error("Invalid arity: " + (arguments.length - 1));
                    };
                    a.cljs$core$IFn$_invoke$arity$0 = c;
                    a.cljs$core$IFn$_invoke$arity$1 = d;
                    return a;
                  }();
                }(a, m, b, c, d, e, f, g, h, k);
              }(), l = function() {
                var a = m.call(null);
                a[6] = b;
                return a;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, l);
            };
          }(n, r, p, q, a, h, k, l, m));
          break;
        default:
          throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(q)].join(""));
      }
      n += 1;
    } else {
      break;
    }
  }
  a = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(a, b, c, e, f) {
    return function() {
      var g = function() {
        return function(a, b, c, d, e, f) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (G) {
                    if (G instanceof Object) {
                      b[5] = G, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw G;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(a, b, c, e, f) {
          return function(a) {
            var e = a[1];
            if (1 === e) {
              return a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (2 === e) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 4, d);
            }
            if (3 === e) {
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, a[2]);
            }
            if (4 === e) {
              return e = a[2], a[7] = e, cljs.core.truth_(null == e) ? a[1] = 5 : a[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (5 === e) {
              return e = cljs.core.async.close_BANG_.call(null, b), a[2] = e, a[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === e) {
              var f = a[7];
              e = cljs.core.async.chan.call(null, 1);
              f = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, e], null);
              a[8] = e;
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, a, 8, b, f);
            }
            return 7 === e ? (a[2] = a[2], a[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = a[8], a[9] = a[2], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, a, 9, c, e)) : 9 === e ? (a[10] = a[2], a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(a, b, c, e, f), a, b, c, e, f);
      }(), h = function() {
        var b = g.call(null);
        b[6] = a;
        return b;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, h);
    };
  }(a, h, k, l, m));
  a = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(a, c, d, f, g) {
    return function() {
      var h = function() {
        return function(a, b, c, d, e, f) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (G) {
                    if (G instanceof Object) {
                      b[5] = G, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw G;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(a, c, d, f, g) {
          return function(a) {
            var c = a[1];
            if (7 === c) {
              return a[2] = a[2], a[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === c) {
              return a[2] = null, a[1] = 21, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === c) {
              return a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === c) {
              return c = a[2], a[7] = c, cljs.core.truth_(null == c) ? a[1] = 5 : a[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === c) {
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, a, 18, b, a[8]);
            }
            if (21 === c) {
              return a[2] = a[2], a[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === c) {
              return a[9] = a[2], a[2] = null, a[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === c) {
              return c = a[7], cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 11, c);
            }
            if (17 === c) {
              return c = a[2], cljs.core.truth_(c) ? a[1] = 19 : a[1] = 20, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === c) {
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, a[2]);
            }
            if (12 === c) {
              return c = a[10], cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 14, c);
            }
            if (2 === c) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 4, d);
            }
            if (19 === c) {
              return a[2] = null, a[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (11 === c) {
              return c = a[2], a[10] = c, a[2] = null, a[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (9 === c) {
              return a[2] = null, a[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (5 === c) {
              return cljs.core.truth_(e) ? a[1] = 8 : a[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (14 === c) {
              c = a[2];
              var f = cljs.core.not.call(null, null == c);
              a[11] = f;
              a[8] = c;
              a[1] = f ? 15 : 16;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 16 === c ? (c = a[11], a[2] = c, a[1] = 17, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === c ? (a[2] = a[2], a[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 18 === c ? (a[2] = a[2], a[1] = 17, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === c ? (c = cljs.core.async.close_BANG_.call(null, b), a[2] = c, a[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(a, c, d, f, g), a, c, d, f, g);
      }(), k = function() {
        var b = h.call(null);
        b[6] = a;
        return b;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, k);
    };
  }(a, h, k, l, m));
  return a;
};
cljs.core.async.pipeline_async = function(a) {
  switch(arguments.length) {
    case 4:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.async.pipeline_async.call(null, a, b, c, d, !0);
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return cljs.core.async.pipeline_STAR_.call(null, a, b, c, d, e, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.core.async.pipeline_async.cljs$lang$maxFixedArity = 5;
cljs.core.async.pipeline = function(a) {
  switch(arguments.length) {
    case 4:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.async.pipeline.call(null, a, b, c, d, !0);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return cljs.core.async.pipeline.call(null, a, b, c, d, e, null);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  return cljs.core.async.pipeline_STAR_.call(null, a, b, c, d, e, f, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
};
cljs.core.async.pipeline.cljs$lang$maxFixedArity = 6;
cljs.core.async.split = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 4:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.split.call(null, a, b, null, null);
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  c = cljs.core.async.chan.call(null, c);
  d = cljs.core.async.chan.call(null, d);
  var e = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d, e) {
    return function() {
      var f = function() {
        return function(a, b, c, d) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (z) {
                    if (z instanceof Object) {
                      b[5] = z, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw z;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d, e) {
          return function(c) {
            var f = c[1];
            if (7 === f) {
              return c[2] = c[2], c[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === f) {
              return c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === f) {
              return f = c[2], c[7] = f, cljs.core.truth_(null == f) ? c[1] = 5 : c[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === f) {
              return c[2] = null, c[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === f) {
              return f = c[7], f = a.call(null, f), cljs.core.truth_(f) ? c[1] = 9 : c[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === f) {
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, c[2]);
            }
            if (12 === f) {
              return c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (2 === f) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 4, b);
            }
            if (11 === f) {
              return f = c[7], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 8, c[2], f);
            }
            if (9 === f) {
              return c[2] = d, c[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (5 === f) {
              var g = cljs.core.async.close_BANG_.call(null, d);
              f = cljs.core.async.close_BANG_.call(null, e);
              c[8] = g;
              c[2] = f;
              c[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 14 === f ? (c[2] = c[2], c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === f ? (c[2] = e, c[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === f ? (f = c[2], cljs.core.truth_(f) ? c[1] = 12 : c[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(c, d, e), c, d, e);
      }(), g = function() {
        var a = f.call(null);
        a[6] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(e, c, d));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d], null);
};
cljs.core.async.split.cljs$lang$maxFixedArity = 4;
cljs.core.async.reduce = function(a, b, c) {
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d) {
    return function() {
      var e = function() {
        return function(a, b) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (t) {
                    if (t instanceof Object) {
                      b[5] = t, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw t;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d) {
          return function(d) {
            var e = d[1];
            if (7 === e) {
              return d[2] = d[2], d[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              return e = b, d[7] = e, d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              return e = d[2], d[8] = e, cljs.core.truth_(null == e) ? d[1] = 5 : d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === e) {
              e = d[7];
              var f = d[8];
              e = a.call(null, e, f);
              f = cljs.core.reduced_QMARK_.call(null, e);
              d[9] = e;
              d[1] = f ? 8 : 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 3 === e ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, d[2]) : 2 === e ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 4, c) : 9 === e ? (e = d[9], d[7] = e, d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (e = d[7], d[2] = e, d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (d[2] = d[2], d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = d[9], 
            e = cljs.core.deref.call(null, e), d[2] = e, d[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(d), d);
      }(), g = function() {
        var a = e.call(null);
        a[6] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(d));
  return d;
};
cljs.core.async.transduce = function(a, b, c, d) {
  a = a.call(null, b);
  b = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(a, b) {
    return function() {
      var e = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (u) {
                    if (u instanceof Object) {
                      b[5] = u, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw u;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(a, b) {
          return function(a) {
            var e = a[1];
            return 1 === e ? (e = cljs.core.async.reduce.call(null, b, c, d), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, a, 2, e)) : 2 === e ? (e = b.call(null, a[2]), cljs.core.async.impl.ioc_helpers.return_chan.call(null, a, e)) : null;
          };
        }(a, b), a, b);
      }(), f = function() {
        var b = e.call(null);
        b[6] = a;
        return b;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, f);
    };
  }(b, a));
  return b;
};
cljs.core.async.onto_chan = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.onto_chan.call(null, a, b, !0);
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d) {
    return function() {
      var e = function() {
        return function(a, b) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (t) {
                    if (t instanceof Object) {
                      b[5] = t, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw t;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d) {
          return function(d) {
            var e = d[1];
            return 7 === e ? (d[2] = d[2], d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 1 === e ? (e = cljs.core.seq.call(null, b), d[7] = e, d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 4 === e ? (e = d[7], e = cljs.core.first.call(null, e), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, d, 7, a, e)) : 13 === e ? (d[2] = d[2], d[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === e ? (e = d[2], cljs.core.truth_(e) ? 
            d[1] = 8 : d[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === e ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, d[2]) : 12 === e ? (d[2] = null, d[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === e ? (e = d[7], cljs.core.truth_(e) ? d[1] = 4 : d[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === e ? (e = cljs.core.async.close_BANG_.call(null, a), d[2] = e, d[1] = 13, new cljs.core.Keyword(null, 
            "recur", "recur", -437573268)) : 9 === e ? (cljs.core.truth_(c) ? d[1] = 11 : d[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (e = d[7], d[2] = e, d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (d[2] = d[2], d[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = d[7], e = cljs.core.next.call(null, e), d[7] = e, d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            null;
          };
        }(d), d);
      }(), g = function() {
        var a = e.call(null);
        a[6] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(d));
  return d;
};
cljs.core.async.onto_chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.to_chan = function(a) {
  var b = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, a));
  cljs.core.async.onto_chan.call(null, b, a);
  return b;
};
cljs.core.async.Mux = function() {
};
cljs.core.async.muxch_STAR_ = function(a) {
  if (null != a && null != a.cljs$core$async$Mux$muxch_STAR_$arity$1) {
    return a.cljs$core$async$Mux$muxch_STAR_$arity$1(a);
  }
  var b = cljs.core.async.muxch_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.muxch_STAR_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Mux.muxch*", a);
};
cljs.core.async.Mult = function() {
};
cljs.core.async.tap_STAR_ = function(a, b, c) {
  if (null != a && null != a.cljs$core$async$Mult$tap_STAR_$arity$3) {
    return a.cljs$core$async$Mult$tap_STAR_$arity$3(a, b, c);
  }
  var d = cljs.core.async.tap_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = cljs.core.async.tap_STAR_._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "Mult.tap*", a);
};
cljs.core.async.untap_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$Mult$untap_STAR_$arity$2) {
    return a.cljs$core$async$Mult$untap_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.untap_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.untap_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Mult.untap*", a);
};
cljs.core.async.untap_all_STAR_ = function(a) {
  if (null != a && null != a.cljs$core$async$Mult$untap_all_STAR_$arity$1) {
    return a.cljs$core$async$Mult$untap_all_STAR_$arity$1(a);
  }
  var b = cljs.core.async.untap_all_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.untap_all_STAR_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", a);
};
cljs.core.async.mult = function(a) {
  var b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = function() {
    "undefined" === typeof cljs.core.async.t_cljs$core$async20037 && (cljs.core.async.t_cljs$core$async20037 = function(a, b, c) {
      this.ch = a;
      this.cs = b;
      this.meta20038 = c;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.core.async.t_cljs$core$async20037.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
      return function(a, b) {
        return new cljs.core.async.t_cljs$core$async20037(this.ch, this.cs, b);
      };
    }(b), cljs.core.async.t_cljs$core$async20037.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
      return function(a) {
        return this.meta20038;
      };
    }(b), cljs.core.async.t_cljs$core$async20037.prototype.cljs$core$async$Mux$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async20037.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(a) {
      return function(a) {
        return this.ch;
      };
    }(b), cljs.core.async.t_cljs$core$async20037.prototype.cljs$core$async$Mult$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async20037.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(a) {
      return function(a, b, c) {
        cljs.core.swap_BANG_.call(null, this.cs, cljs.core.assoc, b, c);
        return null;
      };
    }(b), cljs.core.async.t_cljs$core$async20037.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(a) {
      return function(a, b) {
        cljs.core.swap_BANG_.call(null, this.cs, cljs.core.dissoc, b);
        return null;
      };
    }(b), cljs.core.async.t_cljs$core$async20037.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(a) {
      return function(a) {
        cljs.core.reset_BANG_.call(null, this.cs, cljs.core.PersistentArrayMap.EMPTY);
        return null;
      };
    }(b), cljs.core.async.t_cljs$core$async20037.getBasis = function(a) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "meta20038", "meta20038", -491712661, null)], null);
      };
    }(b), cljs.core.async.t_cljs$core$async20037.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async20037.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async20037", cljs.core.async.t_cljs$core$async20037.cljs$lang$ctorPrWriter = function(a) {
      return function(a, b, c) {
        return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async20037");
      };
    }(b), cljs.core.async.__GT_t_cljs$core$async20037 = function(a) {
      return function(a, b, c) {
        return new cljs.core.async.t_cljs$core$async20037(a, b, c);
      };
    }(b));
    return new cljs.core.async.t_cljs$core$async20037(a, b, cljs.core.PersistentArrayMap.EMPTY);
  }(), d = cljs.core.async.chan.call(null, 1), e = cljs.core.atom.call(null, null), f = function(a, b, c, d) {
    return function(a) {
      return 0 === cljs.core.swap_BANG_.call(null, d, cljs.core.dec) ? cljs.core.async.put_BANG_.call(null, c, !0) : null;
    };
  }(b, c, d, e), g = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(b, c, d, e, f, g) {
    return function() {
      var h = function() {
        return function(a, b, c, d, e, f, g) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (B) {
                    if (B instanceof Object) {
                      b[5] = B, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw B;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(b, c, d, e, f, g) {
          return function(b) {
            var h = b[1];
            if (7 === h) {
              var k = b, m = k;
              m[2] = b[2];
              m[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === h) {
              var l = b[7], n = cljs.core.first.call(null, l), p = cljs.core.nth.call(null, n, 0, null), q = cljs.core.nth.call(null, n, 1, null);
              b[8] = p;
              k = b;
              cljs.core.truth_(q) ? k[1] = 22 : k[1] = 23;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (27 === h) {
              var r = b[9], u = b[10], t = b[11], v = b[12], w = cljs.core._nth.call(null, u, v), G = cljs.core.async.put_BANG_.call(null, w, t, g);
              b[9] = w;
              k = b;
              cljs.core.truth_(G) ? k[1] = 30 : k[1] = 31;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === h) {
              var x = k = b;
              x[2] = null;
              x[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (24 === h) {
              l = b[7];
              var z = b[2], y = cljs.core.next.call(null, l), L = null, O = 0, M = 0;
              b[13] = z;
              b[14] = y;
              b[15] = O;
              b[16] = L;
              b[17] = M;
              var T = k = b;
              T[2] = null;
              T[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (39 === h) {
              var U = k = b;
              U[2] = null;
              U[1] = 41;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === h) {
              t = b[11];
              var S = b[2], Y = null == S;
              b[11] = S;
              k = b;
              cljs.core.truth_(Y) ? k[1] = 5 : k[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === h) {
              y = b[14];
              O = b[15];
              L = b[16];
              M = b[17];
              var La = b[2], Ma = L, Z = O, Na = M + 1;
              b[14] = y;
              b[15] = Z;
              b[16] = Ma;
              b[17] = Na;
              b[18] = La;
              var ca = k = b;
              ca[2] = null;
              ca[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (21 === h) {
              var Oa = b[2], da = k = b;
              da[2] = Oa;
              da[1] = 18;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (31 === h) {
              r = b[9];
              var Pa = g.call(null, null), Qa = cljs.core.async.untap_STAR_.call(null, d, r);
              b[19] = Pa;
              var ea = k = b;
              ea[2] = Qa;
              ea[1] = 32;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (32 === h) {
              u = b[10];
              var V = b[20], W = b[21];
              v = b[12];
              var Ra = b[2], Sa = V, Ta = W, Ua = v + 1;
              b[10] = u;
              b[22] = Ra;
              b[20] = Sa;
              b[21] = Ta;
              b[12] = Ua;
              var fa = k = b;
              fa[2] = null;
              fa[1] = 25;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (40 === h) {
              var ha = b[23], Va = g.call(null, null), Wa = cljs.core.async.untap_STAR_.call(null, d, ha);
              b[24] = Va;
              var ia = k = b;
              ia[2] = Wa;
              ia[1] = 41;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (33 === h) {
              var X = b[25], Xa = cljs.core.chunked_seq_QMARK_.call(null, X);
              k = b;
              k[1] = Xa ? 36 : 37;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === h) {
              var aa = b[26], Ya = cljs.core.async.close_BANG_.call(null, aa), ja = k = b;
              ja[2] = Ya;
              ja[1] = 15;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (22 === h) {
              p = b[8];
              var Za = cljs.core.async.close_BANG_.call(null, p), ka = k = b;
              ka[2] = Za;
              ka[1] = 24;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (36 === h) {
              X = b[25];
              var la = cljs.core.chunk_first.call(null, X), $a = cljs.core.chunk_rest.call(null, X), ab = cljs.core.count.call(null, la);
              V = $a;
              u = la;
              W = ab;
              v = 0;
              b[10] = u;
              b[20] = V;
              b[21] = W;
              b[12] = v;
              var ma = k = b;
              ma[2] = null;
              ma[1] = 25;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (41 === h) {
              X = b[25];
              var bb = b[2];
              V = cljs.core.next.call(null, X);
              u = null;
              v = W = 0;
              b[10] = u;
              b[27] = bb;
              b[20] = V;
              b[21] = W;
              b[12] = v;
              var na = k = b;
              na[2] = null;
              na[1] = 25;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (43 === h) {
              var oa = k = b;
              oa[2] = null;
              oa[1] = 44;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (29 === h) {
              var cb = b[2], pa = k = b;
              pa[2] = cb;
              pa[1] = 26;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (44 === h) {
              b[28] = b[2];
              var qa = k = b;
              qa[2] = null;
              qa[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === h) {
              var ra = b[29], db = cljs.core.deref.call(null, c), ba = cljs.core.keys.call(null, db), eb = cljs.core.count.call(null, ba), fb = cljs.core.reset_BANG_.call(null, f, eb);
              V = cljs.core.seq.call(null, ba);
              u = null;
              v = W = 0;
              b[10] = u;
              b[30] = fb;
              b[29] = ba;
              b[20] = V;
              b[21] = W;
              b[12] = v;
              var sa = k = b;
              sa[2] = null;
              sa[1] = 25;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (28 === h) {
              X = b[25];
              V = b[20];
              var ta = cljs.core.seq.call(null, V);
              b[25] = ta;
              k = b;
              k[1] = ta ? 33 : 34;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (25 === h) {
              W = b[21];
              v = b[12];
              var gb = v < W;
              k = b;
              cljs.core.truth_(gb) ? k[1] = 27 : k[1] = 28;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (34 === h) {
              var ua = k = b;
              ua[2] = null;
              ua[1] = 35;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (17 === h) {
              var va = k = b;
              va[2] = null;
              va[1] = 18;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === h) {
              var hb = b[2];
              k = b;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, k, hb);
            }
            if (12 === h) {
              var ib = b[2], wa = k = b;
              wa[2] = ib;
              wa[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (2 === h) {
              return k = b, cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, k, 4, a);
            }
            if (23 === h) {
              var xa = k = b;
              xa[2] = null;
              xa[1] = 24;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (35 === h) {
              var jb = b[2], ya = k = b;
              ya[2] = jb;
              ya[1] = 29;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (19 === h) {
              l = b[7];
              var za = cljs.core.chunk_first.call(null, l), kb = cljs.core.chunk_rest.call(null, l), lb = cljs.core.count.call(null, za);
              y = kb;
              L = za;
              O = lb;
              M = 0;
              b[14] = y;
              b[15] = O;
              b[16] = L;
              b[17] = M;
              var Aa = k = b;
              Aa[2] = null;
              Aa[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (11 === h) {
              l = b[7];
              y = b[14];
              var Ba = cljs.core.seq.call(null, y);
              b[7] = Ba;
              k = b;
              k[1] = Ba ? 16 : 17;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (9 === h) {
              var mb = b[2], Ca = k = b;
              Ca[2] = mb;
              Ca[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (5 === h) {
              var nb = cljs.core.deref.call(null, c);
              y = cljs.core.seq.call(null, nb);
              L = null;
              M = O = 0;
              b[14] = y;
              b[15] = O;
              b[16] = L;
              b[17] = M;
              var Da = k = b;
              Da[2] = null;
              Da[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (14 === h) {
              var Ea = k = b;
              Ea[2] = null;
              Ea[1] = 15;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (45 === h) {
              var ob = b[2], Fa = k = b;
              Fa[2] = ob;
              Fa[1] = 44;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (26 === h) {
              ra = b[29];
              var pb = b[2], qb = cljs.core.seq.call(null, ra);
              b[31] = pb;
              k = b;
              k[1] = qb ? 42 : 43;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (16 === h) {
              l = b[7];
              var rb = cljs.core.chunked_seq_QMARK_.call(null, l);
              k = b;
              k[1] = rb ? 19 : 20;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (38 === h) {
              var sb = b[2], Ga = k = b;
              Ga[2] = sb;
              Ga[1] = 35;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (30 === h) {
              var Ha = k = b;
              Ha[2] = null;
              Ha[1] = 32;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (10 === h) {
              L = b[16];
              M = b[17];
              var Ia = cljs.core._nth.call(null, L, M);
              aa = cljs.core.nth.call(null, Ia, 0, null);
              var tb = cljs.core.nth.call(null, Ia, 1, null);
              b[26] = aa;
              k = b;
              cljs.core.truth_(tb) ? k[1] = 13 : k[1] = 14;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (18 === h) {
              var ub = b[2], Ja = k = b;
              Ja[2] = ub;
              Ja[1] = 12;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (42 === h) {
              return k = b, cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, k, 45, e);
            }
            if (37 === h) {
              X = b[25];
              t = b[11];
              ha = b[23];
              var Ka = cljs.core.first.call(null, X), vb = cljs.core.async.put_BANG_.call(null, Ka, t, g);
              b[23] = Ka;
              k = b;
              cljs.core.truth_(vb) ? k[1] = 39 : k[1] = 40;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (8 === h) {
              O = b[15];
              M = b[17];
              var wb = M < O;
              k = b;
              cljs.core.truth_(wb) ? k[1] = 10 : k[1] = 11;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return null;
          };
        }(b, c, d, e, f, g), b, c, d, e, f, g);
      }(), k = function() {
        var a = h.call(null);
        a[6] = b;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, k);
    };
  }(g, b, c, d, e, f));
  return c;
};
cljs.core.async.tap = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.tap.call(null, a, b, !0);
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  cljs.core.async.tap_STAR_.call(null, a, b, c);
  return b;
};
cljs.core.async.tap.cljs$lang$maxFixedArity = 3;
cljs.core.async.untap = function(a, b) {
  return cljs.core.async.untap_STAR_.call(null, a, b);
};
cljs.core.async.untap_all = function(a) {
  return cljs.core.async.untap_all_STAR_.call(null, a);
};
cljs.core.async.Mix = function() {
};
cljs.core.async.admix_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$Mix$admix_STAR_$arity$2) {
    return a.cljs$core$async$Mix$admix_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.admix_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.admix_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Mix.admix*", a);
};
cljs.core.async.unmix_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$Mix$unmix_STAR_$arity$2) {
    return a.cljs$core$async$Mix$unmix_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.unmix_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.unmix_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Mix.unmix*", a);
};
cljs.core.async.unmix_all_STAR_ = function(a) {
  if (null != a && null != a.cljs$core$async$Mix$unmix_all_STAR_$arity$1) {
    return a.cljs$core$async$Mix$unmix_all_STAR_$arity$1(a);
  }
  var b = cljs.core.async.unmix_all_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.unmix_all_STAR_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", a);
};
cljs.core.async.toggle_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$Mix$toggle_STAR_$arity$2) {
    return a.cljs$core$async$Mix$toggle_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.toggle_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.toggle_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Mix.toggle*", a);
};
cljs.core.async.solo_mode_STAR_ = function(a, b) {
  if (null != a && null != a.cljs$core$async$Mix$solo_mode_STAR_$arity$2) {
    return a.cljs$core$async$Mix$solo_mode_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.solo_mode_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.solo_mode_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", a);
};
cljs.core.async.ioc_alts_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 3 < b.length ? new cljs.core.IndexedSeq(b.slice(3), 0, null) : null;
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
};
cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  var e = null != d && (d.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === d.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, d) : d;
  a[1] = b;
  b = cljs.core.async.do_alts.call(null, function(b, c, d) {
    return function(b) {
      a[2] = b;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, a);
    };
  }(d, e, e), c, e);
  return cljs.core.truth_(b) ? (a[2] = cljs.core.deref.call(null, b), new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
};
cljs.core.async.ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.ioc_alts_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  var d = cljs.core.next.call(null, c);
  c = cljs.core.first.call(null, d);
  d = cljs.core.next.call(null, d);
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.async.mix = function(a) {
  var b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null), d = cljs.core.conj.call(null, c, new cljs.core.Keyword(null, "solo", "solo", -316350075)), e = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646)), f = cljs.core.async.chan.call(null), 
  g = function(a, b, c, d, e) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, e, !0);
    };
  }(b, c, d, e, f), h = function(a, b, c, d, e, f) {
    return function(g, h) {
      return cljs.core.reduce_kv.call(null, function(a, b, c, d, e, f) {
        return function(a, b, c) {
          return cljs.core.truth_(g.call(null, c)) ? cljs.core.conj.call(null, a, b) : a;
        };
      }(a, b, c, d, e, f), cljs.core.PersistentHashSet.EMPTY, h);
    };
  }(b, c, d, e, f, g), k = function(a, b, c, d, e, f, g) {
    return function() {
      var b = cljs.core.deref.call(null, a), c = cljs.core.deref.call(null, d), f = g.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), b), h = g.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), b);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), f, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), g.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), b), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, c, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, f) ? cljs.core.vec.call(null, f) : cljs.core.vec.call(null, 
      cljs.core.remove.call(null, h, cljs.core.keys.call(null, b))), e)], null);
    };
  }(b, c, d, e, f, g, h), l = function() {
    "undefined" === typeof cljs.core.async.t_cljs$core$async20335 && (cljs.core.async.t_cljs$core$async20335 = function(a, b, c, d, e, f, g, h, k, m) {
      this.out = a;
      this.cs = b;
      this.solo_modes = c;
      this.attrs = d;
      this.solo_mode = e;
      this.change = f;
      this.changed = g;
      this.pick = h;
      this.calc_state = k;
      this.meta20336 = m;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.core.async.t_cljs$core$async20335.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b, c, d, e, f, g, h) {
      return function(a, b) {
        return new cljs.core.async.t_cljs$core$async20335(this.out, this.cs, this.solo_modes, this.attrs, this.solo_mode, this.change, this.changed, this.pick, this.calc_state, b);
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async20335.prototype.cljs$core$IMeta$_meta$arity$1 = function(a, b, c, d, e, f, g, h) {
      return function(a) {
        return this.meta20336;
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async20335.prototype.cljs$core$async$Mux$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async20335.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(a, b, c, d, e, f, g, h) {
      return function(a) {
        return this.out;
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async20335.prototype.cljs$core$async$Mix$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async20335.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(a, b, c, d, e, f, g, h) {
      return function(a, b) {
        cljs.core.swap_BANG_.call(null, this.cs, cljs.core.assoc, b, cljs.core.PersistentArrayMap.EMPTY);
        return this.changed.call(null);
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async20335.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(a, b, c, d, e, f, g, h) {
      return function(a, b) {
        cljs.core.swap_BANG_.call(null, this.cs, cljs.core.dissoc, b);
        return this.changed.call(null);
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async20335.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(a, b, c, d, e, f, g, h) {
      return function(a) {
        cljs.core.reset_BANG_.call(null, this.cs, cljs.core.PersistentArrayMap.EMPTY);
        return this.changed.call(null);
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async20335.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(a, b, c, d, e, f, g, h) {
      return function(a, b) {
        cljs.core.swap_BANG_.call(null, this.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), b);
        return this.changed.call(null);
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async20335.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(a, b, c, d, e, f, g, h) {
      return function(a, b) {
        if (!cljs.core.truth_(this.solo_modes.call(null, b))) {
          throw Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(["mode must be one of: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.solo_modes)].join("")), "\n(solo-modes mode)"].join(""));
        }
        cljs.core.reset_BANG_.call(null, this.solo_mode, b);
        return this.changed.call(null);
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async20335.getBasis = function(a, b, c, d, e, f, g, h) {
      return function() {
        return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "out", "out", 729986010, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "attrs", "attrs", -450137186, null), new cljs.core.Symbol(null, "solo-mode", "solo-mode", 2031788074, null), new cljs.core.Symbol(null, "change", "change", 477485025, null), new cljs.core.Symbol(null, 
        "changed", "changed", -2083710852, null), new cljs.core.Symbol(null, "pick", "pick", 1300068175, null), new cljs.core.Symbol(null, "calc-state", "calc-state", -349968968, null), new cljs.core.Symbol(null, "meta20336", "meta20336", 834713142, null)], null);
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.t_cljs$core$async20335.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async20335.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async20335", cljs.core.async.t_cljs$core$async20335.cljs$lang$ctorPrWriter = function(a, b, c, d, e, f, g, h) {
      return function(a, b, c) {
        return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async20335");
      };
    }(b, c, d, e, f, g, h, k), cljs.core.async.__GT_t_cljs$core$async20335 = function(a, b, c, d, e, f, g, h) {
      return function(a, b, c, d, e, f, g, h, k, m) {
        return new cljs.core.async.t_cljs$core$async20335(a, b, c, d, e, f, g, h, k, m);
      };
    }(b, c, d, e, f, g, h, k));
    return new cljs.core.async.t_cljs$core$async20335(a, b, c, d, e, f, g, h, k, cljs.core.PersistentArrayMap.EMPTY);
  }(), m = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(b, c, d, e, f, g, h, k, m, l) {
    return function() {
      var n = function() {
        return function(a, b, c, d, e, f, g, h, k, m, l) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (M) {
                    if (M instanceof Object) {
                      b[5] = M, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw M;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(b, c, d, e, f, g, h, k, m, l) {
          return function(b) {
            var d = b[1];
            if (7 === d) {
              return d = b, d[2] = b[2], d[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === d) {
              return d = b[7], b[2] = d, b[1] = 21, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (27 === d) {
              return b[2] = null, b[1] = 28, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === d) {
              d = m.call(null);
              var e = cljs.core.not.call(null, null == d);
              b[8] = d;
              b[1] = e ? 2 : 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (24 === d) {
              e = b[9];
              var f = b[10];
              d = e.call(null, f);
              b[11] = d;
              cljs.core.truth_(d) ? b[1] = 29 : b[1] = 30;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === d) {
              return d = b[2], cljs.core.truth_(d) ? b[1] = 8 : b[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === d) {
              return d = b[2], cljs.core.truth_(d) ? b[1] = 19 : b[1] = 20, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (21 === d) {
              f = b[2];
              e = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
              d = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
              var h = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
              b[12] = f;
              b[13] = d;
              b[9] = e;
              return cljs.core.async.ioc_alts_BANG_.call(null, b, 22, h);
            }
            return 31 === d ? (d = b[2], cljs.core.truth_(d) ? b[1] = 32 : b[1] = 33, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 32 === d ? (d = b[14], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, b, 35, a, d)) : 33 === d ? (d = b[12], b[7] = d, b[2] = null, b[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 13 === d ? (d = b[7], e = cljs.core.PROTOCOL_SENTINEL === d.cljs$core$ISeq$, d = d.cljs$lang$protocol_mask$partition0$ & 64 || e, cljs.core.truth_(d) ? 
            b[1] = 16 : b[1] = 17, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 22 === d ? (e = b[2], d = cljs.core.nth.call(null, e, 0, null), h = cljs.core.nth.call(null, e, 1, null), e = null == d, f = cljs.core._EQ_.call(null, h, g), b[14] = d, b[10] = h, cljs.core.truth_(e || f) ? b[1] = 23 : b[1] = 24, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 36 === d ? (d = b[12], b[7] = d, b[2] = null, b[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            29 === d ? (d = b[11], b[2] = d, b[1] = 31, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === d ? (b[2] = !1, b[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 28 === d ? (e = b[2], d = m.call(null), b[15] = e, b[7] = d, b[2] = null, b[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 25 === d ? (d = b[2], b[2] = d, b[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 34 === d ? (d = b[2], b[2] = d, b[1] = 25, 
            new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 17 === d ? (b[2] = !1, b[1] = 18, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === d ? (b[2] = !1, b[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 12 === d ? (d = b[2], cljs.core.async.impl.ioc_helpers.return_chan.call(null, b, d)) : 2 === d ? (d = b[8], e = cljs.core.PROTOCOL_SENTINEL === d.cljs$core$ISeq$, d = d.cljs$lang$protocol_mask$partition0$ & 64 || e, cljs.core.truth_(d) ? b[1] = 
            5 : b[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 23 === d ? (d = b[14], cljs.core.truth_(null == d) ? b[1] = 26 : b[1] = 27, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 35 === d ? (d = b[2], cljs.core.truth_(d) ? b[1] = 36 : b[1] = 37, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 19 === d ? (d = b[7], d = cljs.core.apply.call(null, cljs.core.hash_map, d), b[2] = d, b[1] = 21, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            11 === d ? (d = b[7], d = cljs.core.not.call(null, null == d), b[1] = d ? 13 : 14, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === d ? (d = b[8], b[2] = d, b[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === d ? (b[2] = !0, b[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 14 === d ? (b[2] = !1, b[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 26 === d ? (f = b[10], d = cljs.core.swap_BANG_.call(null, 
            c, cljs.core.dissoc, f), b[2] = d, b[1] = 28, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 16 === d ? (b[2] = !0, b[1] = 18, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 38 === d ? (d = b[2], b[2] = d, b[1] = 34, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 30 === d ? (d = b[13], e = b[9], f = b[10], e = cljs.core.empty_QMARK_.call(null, e), d = d.call(null, f), d = cljs.core.not.call(null, d), b[2] = e && d, b[1] = 31, new cljs.core.Keyword(null, 
            "recur", "recur", -437573268)) : 10 === d ? (d = b[8], h = b[2], e = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "solos", "solos", 1441458643)), f = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309)), h = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "reads", "reads", -1215067361)), b[16] = f, b[17] = e, b[7] = d, b[18] = h, b[2] = null, b[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 18 === d ? (d = b[2], 
            b[2] = d, b[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 37 === d ? (b[2] = null, b[1] = 38, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === d ? (d = b[8], d = cljs.core.apply.call(null, cljs.core.hash_map, d), b[2] = d, b[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(b, c, d, e, f, g, h, k, m, l), b, c, d, e, f, g, h, k, m, l);
      }(), p = function() {
        var a = n.call(null);
        a[6] = b;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, p);
    };
  }(m, b, c, d, e, f, g, h, k, l));
  return l;
};
cljs.core.async.admix = function(a, b) {
  return cljs.core.async.admix_STAR_.call(null, a, b);
};
cljs.core.async.unmix = function(a, b) {
  return cljs.core.async.unmix_STAR_.call(null, a, b);
};
cljs.core.async.unmix_all = function(a) {
  return cljs.core.async.unmix_all_STAR_.call(null, a);
};
cljs.core.async.toggle = function(a, b) {
  return cljs.core.async.toggle_STAR_.call(null, a, b);
};
cljs.core.async.solo_mode = function(a, b) {
  return cljs.core.async.solo_mode_STAR_.call(null, a, b);
};
cljs.core.async.Pub = function() {
};
cljs.core.async.sub_STAR_ = function(a, b, c, d) {
  if (null != a && null != a.cljs$core$async$Pub$sub_STAR_$arity$4) {
    return a.cljs$core$async$Pub$sub_STAR_$arity$4(a, b, c, d);
  }
  var e = cljs.core.async.sub_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  e = cljs.core.async.sub_STAR_._;
  if (null != e) {
    return e.call(null, a, b, c, d);
  }
  throw cljs.core.missing_protocol.call(null, "Pub.sub*", a);
};
cljs.core.async.unsub_STAR_ = function(a, b, c) {
  if (null != a && null != a.cljs$core$async$Pub$unsub_STAR_$arity$3) {
    return a.cljs$core$async$Pub$unsub_STAR_$arity$3(a, b, c);
  }
  var d = cljs.core.async.unsub_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = cljs.core.async.unsub_STAR_._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "Pub.unsub*", a);
};
cljs.core.async.unsub_all_STAR_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if (null != a && null != a.cljs$core$async$Pub$unsub_all_STAR_$arity$1) {
    return a.cljs$core$async$Pub$unsub_all_STAR_$arity$1(a);
  }
  var b = cljs.core.async.unsub_all_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.core.async.unsub_all_STAR_._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", a);
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (null != a && null != a.cljs$core$async$Pub$unsub_all_STAR_$arity$2) {
    return a.cljs$core$async$Pub$unsub_all_STAR_$arity$2(a, b);
  }
  var c = cljs.core.async.unsub_all_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs.core.async.unsub_all_STAR_._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", a);
};
cljs.core.async.unsub_all_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.async.pub = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.pub.call(null, a, b, cljs.core.constantly.call(null, null));
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = function(a) {
    return function(b) {
      var d = cljs.core.get.call(null, cljs.core.deref.call(null, a), b);
      return cljs.core.truth_(d) ? d : cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, a, function(a, d) {
        return function(a) {
          return cljs.core.truth_(a.call(null, b)) ? a : cljs.core.assoc.call(null, a, b, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, c.call(null, b))));
        };
      }(d, a)), b);
    };
  }(d), f = function() {
    "undefined" === typeof cljs.core.async.t_cljs$core$async20554 && (cljs.core.async.t_cljs$core$async20554 = function(a, b, c, d, e, f) {
      this.ch = a;
      this.topic_fn = b;
      this.buf_fn = c;
      this.mults = d;
      this.ensure_mult = e;
      this.meta20555 = f;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.core.async.t_cljs$core$async20554.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
      return function(a, b) {
        return new cljs.core.async.t_cljs$core$async20554(this.ch, this.topic_fn, this.buf_fn, this.mults, this.ensure_mult, b);
      };
    }(d, e), cljs.core.async.t_cljs$core$async20554.prototype.cljs$core$IMeta$_meta$arity$1 = function(a, b) {
      return function(a) {
        return this.meta20555;
      };
    }(d, e), cljs.core.async.t_cljs$core$async20554.prototype.cljs$core$async$Mux$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async20554.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(a, b) {
      return function(a) {
        return this.ch;
      };
    }(d, e), cljs.core.async.t_cljs$core$async20554.prototype.cljs$core$async$Pub$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async20554.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(a, b) {
      return function(a, b, c, d) {
        a = this.ensure_mult.call(null, b);
        return cljs.core.async.tap.call(null, a, c, d);
      };
    }(d, e), cljs.core.async.t_cljs$core$async20554.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(a, b) {
      return function(a, b, c) {
        a = cljs.core.get.call(null, cljs.core.deref.call(null, this.mults), b);
        return cljs.core.truth_(a) ? cljs.core.async.untap.call(null, a, c) : null;
      };
    }(d, e), cljs.core.async.t_cljs$core$async20554.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(a, b) {
      return function(a) {
        return cljs.core.reset_BANG_.call(null, this.mults, cljs.core.PersistentArrayMap.EMPTY);
      };
    }(d, e), cljs.core.async.t_cljs$core$async20554.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(a, b) {
      return function(a, b) {
        return cljs.core.swap_BANG_.call(null, this.mults, cljs.core.dissoc, b);
      };
    }(d, e), cljs.core.async.t_cljs$core$async20554.getBasis = function(a, b) {
      return function() {
        return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "topic-fn", "topic-fn", -862449736, null), new cljs.core.Symbol(null, "buf-fn", "buf-fn", -1200281591, null), new cljs.core.Symbol(null, "mults", "mults", -461114485, null), new cljs.core.Symbol(null, "ensure-mult", "ensure-mult", 1796584816, null), new cljs.core.Symbol(null, "meta20555", "meta20555", 1465869758, null)], 
        null);
      };
    }(d, e), cljs.core.async.t_cljs$core$async20554.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async20554.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async20554", cljs.core.async.t_cljs$core$async20554.cljs$lang$ctorPrWriter = function(a, b) {
      return function(a, b, c) {
        return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async20554");
      };
    }(d, e), cljs.core.async.__GT_t_cljs$core$async20554 = function(a, b) {
      return function(a, b, c, d, e, f) {
        return new cljs.core.async.t_cljs$core$async20554(a, b, c, d, e, f);
      };
    }(d, e));
    return new cljs.core.async.t_cljs$core$async20554(a, b, c, d, e, cljs.core.PersistentArrayMap.EMPTY);
  }(), g = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d, e, f) {
    return function() {
      var g = function() {
        return function(a, b, c, d, e) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (C) {
                    if (C instanceof Object) {
                      b[5] = C, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw C;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d, e, f) {
          return function(c) {
            var e = c[1];
            if (7 === e) {
              return c[2] = c[2], c[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === e) {
              return c[2] = null, c[1] = 21, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              return c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (24 === e) {
              return e = cljs.core.swap_BANG_.call(null, d, cljs.core.dissoc, c[7]), c[2] = e, c[1] = 25, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              return e = c[2], c[8] = e, cljs.core.truth_(null == e) ? c[1] = 5 : c[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === e) {
              return c[2] = c[2], c[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (21 === e) {
              return c[9] = c[2], c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === e) {
              return e = c[10], e = cljs.core.chunked_seq_QMARK_.call(null, e), c[1] = e ? 16 : 17, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (22 === e) {
              return e = c[2], cljs.core.truth_(e) ? c[1] = 23 : c[1] = 24, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === e) {
              e = c[8];
              e = b.call(null, e);
              var f = cljs.core.deref.call(null, d);
              f = cljs.core.get.call(null, f, e);
              c[7] = e;
              c[11] = f;
              cljs.core.truth_(f) ? c[1] = 19 : c[1] = 20;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (25 === e) {
              return c[2] = c[2], c[1] = 21, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (17 === e) {
              e = c[10];
              f = cljs.core.first.call(null, e);
              f = cljs.core.async.muxch_STAR_.call(null, f);
              f = cljs.core.async.close_BANG_.call(null, f);
              var g = cljs.core.next.call(null, e);
              c[12] = 0;
              c[13] = g;
              c[14] = null;
              c[15] = 0;
              c[16] = f;
              c[2] = null;
              c[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === e) {
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, c[2]);
            }
            if (12 === e) {
              return c[2] = c[2], c[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (2 === e) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 4, a);
            }
            if (23 === e) {
              return c[2] = null, c[1] = 25, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (19 === e) {
              return f = c[11], e = c[8], f = cljs.core.async.muxch_STAR_.call(null, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 22, f, e);
            }
            if (11 === e) {
              return g = c[13], e = cljs.core.seq.call(null, g), c[10] = e, c[1] = e ? 13 : 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (9 === e) {
              return c[2] = c[2], c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (5 === e) {
              return e = cljs.core.deref.call(null, d), e = cljs.core.vals.call(null, e), g = cljs.core.seq.call(null, e), c[12] = 0, c[13] = g, c[14] = null, c[15] = 0, c[2] = null, c[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (14 === e) {
              return c[2] = null, c[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (16 === e) {
              return e = c[10], f = cljs.core.chunk_first.call(null, e), e = cljs.core.chunk_rest.call(null, e), g = cljs.core.count.call(null, f), c[12] = 0, c[13] = e, c[14] = f, c[15] = g, c[2] = null, c[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (10 === e) {
              e = c[12];
              g = c[13];
              var h = c[14];
              f = c[15];
              var k = cljs.core._nth.call(null, h, e);
              k = cljs.core.async.muxch_STAR_.call(null, k);
              k = cljs.core.async.close_BANG_.call(null, k);
              c[12] = e + 1;
              c[13] = g;
              c[14] = h;
              c[17] = k;
              c[15] = f;
              c[2] = null;
              c[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 18 === e ? (c[2] = c[2], c[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = c[12], f = c[15], e = e < f, cljs.core.truth_(e) ? c[1] = 10 : c[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(c, d, e, f), c, d, e, f);
      }(), h = function() {
        var a = g.call(null);
        a[6] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, h);
    };
  }(g, d, e, f));
  return f;
};
cljs.core.async.pub.cljs$lang$maxFixedArity = 3;
cljs.core.async.sub = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.async.sub.call(null, a, b, c, !0);
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.async.sub_STAR_.call(null, a, b, c, d);
};
cljs.core.async.sub.cljs$lang$maxFixedArity = 4;
cljs.core.async.unsub = function(a, b, c) {
  return cljs.core.async.unsub_STAR_.call(null, a, b, c);
};
cljs.core.async.unsub_all = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.unsub_all_STAR_.call(null, a);
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.unsub_all_STAR_.call(null, a, b);
};
cljs.core.async.unsub_all.cljs$lang$maxFixedArity = 2;
cljs.core.async.map = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.map.call(null, a, b, null);
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  b = cljs.core.vec.call(null, b);
  c = cljs.core.async.chan.call(null, c);
  var d = cljs.core.count.call(null, b), e = cljs.core.object_array.call(null, d), f = cljs.core.async.chan.call(null, 1), g = cljs.core.atom.call(null, null), h = cljs.core.mapv.call(null, function(a, b, c, d, e, f) {
    return function(g) {
      return function(a, b, c, d, e, f) {
        return function(a) {
          d[g] = a;
          return 0 === cljs.core.swap_BANG_.call(null, f, cljs.core.dec) ? cljs.core.async.put_BANG_.call(null, e, d.slice(0)) : null;
        };
      }(a, b, c, d, e, f);
    };
  }(b, c, d, e, f, g), cljs.core.range.call(null, d)), k = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(b, c, d, e, f, g, h, k) {
    return function() {
      var m = function() {
        return function(a, b, c, d, e, f, g, h, k) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (G) {
                    if (G instanceof Object) {
                      b[5] = G, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw G;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(b, c, d, e, f, g, h, k) {
          return function(b) {
            var f = b[1];
            if (7 === f) {
              return b[2] = null, b[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === f) {
              return b[2] = null, b[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === f) {
              var m = b[7];
              f = m < e;
              cljs.core.truth_(f) ? b[1] = 6 : b[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 15 === f ? (b[2] = b[2], b[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 13 === f ? (f = cljs.core.async.close_BANG_.call(null, d), b[2] = f, b[1] = 15, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === f ? (b[2] = null, b[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === f ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, b, b[2]) : 12 === f ? (m = b[2], f = cljs.core.some.call(null, cljs.core.nil_QMARK_, 
            m), b[8] = m, cljs.core.truth_(f) ? b[1] = 13 : b[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === f ? (f = cljs.core.reset_BANG_.call(null, h, e), b[9] = f, b[7] = 0, b[2] = null, b[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === f ? (m = b[7], cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, b, 10, Object, null, 9), f = c.call(null, m), m = k.call(null, m), f = cljs.core.async.take_BANG_.call(null, f, m), b[2] = f, 
            cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === f ? (m = b[7], b[10] = b[2], b[7] = m + 1, b[2] = null, b[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === f ? (b[11] = b[2], cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, b, 12, g)) : 14 === f ? (f = b[8], f = cljs.core.apply.call(null, a, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, b, 16, d, f)) : 16 === 
            f ? (b[12] = b[2], b[2] = null, b[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === f ? (m = b[2], f = cljs.core.swap_BANG_.call(null, h, cljs.core.dec), b[13] = m, b[2] = f, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === f ? (b[2] = b[2], b[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(b, c, d, e, f, g, h, k), b, c, d, e, f, g, h, k);
      }(), l = function() {
        var a = m.call(null);
        a[6] = b;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, l);
    };
  }(k, b, c, d, e, f, g, h));
  return c;
};
cljs.core.async.map.cljs$lang$maxFixedArity = 3;
cljs.core.async.merge = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.merge.call(null, a, null);
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.async.chan.call(null, b), d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(b, c) {
    return function() {
      var d = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (u) {
                    if (u instanceof Object) {
                      b[5] = u, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw u;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(b, c) {
          return function(d) {
            var e = d[1];
            if (7 === e) {
              var f = d[7], g = d[8], h = d[2], k = cljs.core.nth.call(null, h, 0, null), m = cljs.core.nth.call(null, h, 1, null);
              d[7] = h;
              d[8] = k;
              d[9] = m;
              cljs.core.truth_(null == k) ? d[1] = 8 : d[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              var l = cljs.core.vec.call(null, a);
              d[10] = l;
              d[2] = null;
              d[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 4 === e ? (l = d[10], cljs.core.async.ioc_alts_BANG_.call(null, d, 7, l)) : 6 === e ? (d[2] = d[2], d[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === e ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, d[2]) : 2 === e ? (l = d[10], k = cljs.core.count.call(null, l), cljs.core.truth_(0 < k) ? d[1] = 4 : d[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === e ? (l = d[10], k = d[2], d[10] = l, d[11] = k, d[2] = null, d[1] = 
            2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (g = d[8], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, d, 11, c, g)) : 5 === e ? (k = cljs.core.async.close_BANG_.call(null, c), d[2] = k, d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (d[2] = d[2], d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (l = d[10], f = d[7], g = d[8], m = d[9], k = function() {
              return function(a, b, c, d, e, f, g, h, k, m, l) {
                return function(a) {
                  return cljs.core.not_EQ_.call(null, d, a);
                };
              }(l, f, g, m, l, f, g, m, e, b, c);
            }(), k = cljs.core.filterv.call(null, k, l), d[10] = k, d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(b, c), b, c);
      }(), e = function() {
        var a = d.call(null);
        a[6] = b;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, e);
    };
  }(d, c));
  return c;
};
cljs.core.async.merge.cljs$lang$maxFixedArity = 2;
cljs.core.async.into = function(a, b) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, a, b);
};
cljs.core.async.take = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.take.call(null, a, b, null);
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d) {
    return function() {
      var e = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (u) {
                    if (u instanceof Object) {
                      b[5] = u, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw u;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d) {
          return function(c) {
            var e = c[1];
            if (7 === e) {
              e = c[2];
              var f = cljs.core.not.call(null, null == e);
              c[7] = e;
              c[1] = f ? 8 : 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 1 === e ? (c[8] = 0, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 4 === e ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 7, b) : 6 === e ? (c[2] = c[2], c[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === e ? (e = c[2], f = cljs.core.async.close_BANG_.call(null, d), c[9] = e, cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, f)) : 2 === e ? (e = c[8], e = e < a, cljs.core.truth_(e) ? c[1] = 4 : 
            c[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === e ? (e = c[8], f = c[2], c[8] = e + 1, c[10] = f, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (c[2] = null, c[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (c[2] = null, c[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (c[2] = c[2], c[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 
            8 === e ? (e = c[7], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 11, d, e)) : null;
          };
        }(c, d), c, d);
      }(), f = function() {
        var a = e.call(null);
        a[6] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, f);
    };
  }(d, c));
  return c;
};
cljs.core.async.take.cljs$lang$maxFixedArity = 3;
cljs.core.async.map_LT_ = function(a, b) {
  "undefined" === typeof cljs.core.async.t_cljs$core$async20926 && (cljs.core.async.t_cljs$core$async20926 = function(a, b, e) {
    this.f = a;
    this.ch = b;
    this.meta20927 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async20926.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.core.async.t_cljs$core$async20926(this.f, this.ch, b);
  }, cljs.core.async.t_cljs$core$async20926.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta20927;
  }, cljs.core.async.t_cljs$core$async20926.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async20926.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(a) {
    return cljs.core.async.impl.protocols.close_BANG_.call(null, this.ch);
  }, cljs.core.async.t_cljs$core$async20926.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(a) {
    return cljs.core.async.impl.protocols.closed_QMARK_.call(null, this.ch);
  }, cljs.core.async.t_cljs$core$async20926.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async20926.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(a, b) {
    var c = this, d = this, g = cljs.core.async.impl.protocols.take_BANG_.call(null, c.ch, function() {
      "undefined" === typeof cljs.core.async.t_cljs$core$async20929 && (cljs.core.async.t_cljs$core$async20929 = function(a, b, c, d, e, f) {
        this.f = a;
        this.ch = b;
        this.meta20927 = c;
        this._ = d;
        this.fn1 = e;
        this.meta20930 = f;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      }, cljs.core.async.t_cljs$core$async20929.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a) {
        return function(a, b) {
          return new cljs.core.async.t_cljs$core$async20929(this.f, this.ch, this.meta20927, this._, this.fn1, b);
        };
      }(d), cljs.core.async.t_cljs$core$async20929.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
        return function(a) {
          return this.meta20930;
        };
      }(d), cljs.core.async.t_cljs$core$async20929.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async20929.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(a) {
        return function(a) {
          return cljs.core.async.impl.protocols.active_QMARK_.call(null, this.fn1);
        };
      }(d), cljs.core.async.t_cljs$core$async20929.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(a) {
        return function(a) {
          return !0;
        };
      }(d), cljs.core.async.t_cljs$core$async20929.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(a) {
        return function(a) {
          var b = this;
          return function(a, c, d) {
            return function(c) {
              return a.call(null, null == c ? null : b.f.call(null, c));
            };
          }(cljs.core.async.impl.protocols.commit.call(null, b.fn1), this, a);
        };
      }(d), cljs.core.async.t_cljs$core$async20929.getBasis = function(a) {
        return function() {
          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta20927", "meta20927", -1718369312, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core.async", 
          "t_cljs$core$async20926", "cljs.core.async/t_cljs$core$async20926", 386821889, null)], null)), new cljs.core.Symbol(null, "fn1", "fn1", 895834444, null), new cljs.core.Symbol(null, "meta20930", "meta20930", -182543047, null)], null);
        };
      }(d), cljs.core.async.t_cljs$core$async20929.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async20929.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async20929", cljs.core.async.t_cljs$core$async20929.cljs$lang$ctorPrWriter = function(a) {
        return function(a, b, c) {
          return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async20929");
        };
      }(d), cljs.core.async.__GT_t_cljs$core$async20929 = function(a) {
        return function(a, b, c, d, e, f) {
          return new cljs.core.async.t_cljs$core$async20929(a, b, c, d, e, f);
        };
      }(d));
      return new cljs.core.async.t_cljs$core$async20929(c.f, c.ch, c.meta20927, d, b, cljs.core.PersistentArrayMap.EMPTY);
    }());
    return cljs.core.truth_(cljs.core.truth_(g) ? null != cljs.core.deref.call(null, g) : g) ? cljs.core.async.impl.channels.box.call(null, c.f.call(null, cljs.core.deref.call(null, g))) : g;
  }, cljs.core.async.t_cljs$core$async20926.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async20926.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(a, b, e) {
    return cljs.core.async.impl.protocols.put_BANG_.call(null, this.ch, b, e);
  }, cljs.core.async.t_cljs$core$async20926.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta20927", "meta20927", -1718369312, null)], null);
  }, cljs.core.async.t_cljs$core$async20926.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async20926.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async20926", cljs.core.async.t_cljs$core$async20926.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async20926");
  }, cljs.core.async.__GT_t_cljs$core$async20926 = function(a, b, e) {
    return new cljs.core.async.t_cljs$core$async20926(a, b, e);
  });
  return new cljs.core.async.t_cljs$core$async20926(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function(a, b) {
  "undefined" === typeof cljs.core.async.t_cljs$core$async20932 && (cljs.core.async.t_cljs$core$async20932 = function(a, b, e) {
    this.f = a;
    this.ch = b;
    this.meta20933 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async20932.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.core.async.t_cljs$core$async20932(this.f, this.ch, b);
  }, cljs.core.async.t_cljs$core$async20932.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta20933;
  }, cljs.core.async.t_cljs$core$async20932.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async20932.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(a) {
    return cljs.core.async.impl.protocols.close_BANG_.call(null, this.ch);
  }, cljs.core.async.t_cljs$core$async20932.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async20932.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(a, b) {
    return cljs.core.async.impl.protocols.take_BANG_.call(null, this.ch, b);
  }, cljs.core.async.t_cljs$core$async20932.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async20932.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(a, b, e) {
    return cljs.core.async.impl.protocols.put_BANG_.call(null, this.ch, this.f.call(null, b), e);
  }, cljs.core.async.t_cljs$core$async20932.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta20933", "meta20933", 908179893, null)], null);
  }, cljs.core.async.t_cljs$core$async20932.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async20932.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async20932", cljs.core.async.t_cljs$core$async20932.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async20932");
  }, cljs.core.async.__GT_t_cljs$core$async20932 = function(a, b, e) {
    return new cljs.core.async.t_cljs$core$async20932(a, b, e);
  });
  return new cljs.core.async.t_cljs$core$async20932(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function(a, b) {
  "undefined" === typeof cljs.core.async.t_cljs$core$async20935 && (cljs.core.async.t_cljs$core$async20935 = function(a, b, e) {
    this.p = a;
    this.ch = b;
    this.meta20936 = e;
    this.cljs$lang$protocol_mask$partition0$ = 393216;
    this.cljs$lang$protocol_mask$partition1$ = 0;
  }, cljs.core.async.t_cljs$core$async20935.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
    return new cljs.core.async.t_cljs$core$async20935(this.p, this.ch, b);
  }, cljs.core.async.t_cljs$core$async20935.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
    return this.meta20936;
  }, cljs.core.async.t_cljs$core$async20935.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async20935.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(a) {
    return cljs.core.async.impl.protocols.close_BANG_.call(null, this.ch);
  }, cljs.core.async.t_cljs$core$async20935.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(a) {
    return cljs.core.async.impl.protocols.closed_QMARK_.call(null, this.ch);
  }, cljs.core.async.t_cljs$core$async20935.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async20935.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(a, b) {
    return cljs.core.async.impl.protocols.take_BANG_.call(null, this.ch, b);
  }, cljs.core.async.t_cljs$core$async20935.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL, cljs.core.async.t_cljs$core$async20935.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(a, b, e) {
    return cljs.core.truth_(this.p.call(null, b)) ? cljs.core.async.impl.protocols.put_BANG_.call(null, this.ch, b, e) : cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, this.ch)));
  }, cljs.core.async.t_cljs$core$async20935.getBasis = function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta20936", "meta20936", 1798880966, null)], null);
  }, cljs.core.async.t_cljs$core$async20935.cljs$lang$type = !0, cljs.core.async.t_cljs$core$async20935.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async20935", cljs.core.async.t_cljs$core$async20935.cljs$lang$ctorPrWriter = function(a, b, e) {
    return cljs.core._write.call(null, b, "cljs.core.async/t_cljs$core$async20935");
  }, cljs.core.async.__GT_t_cljs$core$async20935 = function(a, b, e) {
    return new cljs.core.async.t_cljs$core$async20935(a, b, e);
  });
  return new cljs.core.async.t_cljs$core$async20935(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function(a, b) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, a), b);
};
cljs.core.async.filter_LT_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.filter_LT_.call(null, a, b, null);
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d) {
    return function() {
      var e = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (u) {
                    if (u instanceof Object) {
                      b[5] = u, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw u;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d) {
          return function(c) {
            var e = c[1];
            return 7 === e ? (c[2] = c[2], c[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 1 === e ? (c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 4 === e ? (e = c[2], c[7] = e, cljs.core.truth_(null == e) ? c[1] = 5 : c[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === e ? (e = c[7], e = a.call(null, e), cljs.core.truth_(e) ? c[1] = 8 : c[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === 
            e ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, c[2]) : 2 === e ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 4, b) : 11 === e ? (c[2] = c[2], c[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (c[2] = null, c[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (e = cljs.core.async.close_BANG_.call(null, d), c[2] = e, c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? 
            (c[8] = c[2], c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (e = c[7], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 11, d, e)) : null;
          };
        }(c, d), c, d);
      }(), f = function() {
        var a = e.call(null);
        a[6] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, f);
    };
  }(d, c));
  return c;
};
cljs.core.async.filter_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.remove_LT_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.remove_LT_.call(null, a, b, null);
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, a), b, c);
};
cljs.core.async.remove_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_STAR_ = function(a, b, c) {
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(d) {
    return function() {
      var e = function() {
        return function(a, b) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (t) {
                    if (t instanceof Object) {
                      b[5] = t, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw t;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(d) {
          return function(d) {
            var e = d[1];
            if (7 === e) {
              return d[2] = d[2], d[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === e) {
              var f = d[7], g = d[2];
              e = cljs.core.next.call(null, f);
              d[8] = g;
              d[9] = null;
              d[10] = 0;
              d[11] = e;
              d[12] = 0;
              d[2] = null;
              d[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              return d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              return e = d[2], d[13] = e, cljs.core.truth_(null == e) ? d[1] = 5 : d[1] = 6, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === e) {
              return d[2] = null, d[1] = 16, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (21 === e) {
              return d[2] = null, d[1] = 23, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === e) {
              f = d[9];
              var h = d[10];
              e = d[11];
              g = d[12];
              var k = d[2];
              d[9] = f;
              d[10] = h + 1;
              d[11] = e;
              d[12] = g;
              d[14] = k;
              d[2] = null;
              d[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 22 === e ? (d[2] = null, d[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 6 === e ? (e = d[13], e = a.call(null, e), e = cljs.core.seq.call(null, e), d[9] = null, d[10] = 0, d[11] = e, d[12] = 0, d[2] = null, d[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 17 === e ? (f = d[7], e = cljs.core.chunk_first.call(null, f), f = cljs.core.chunk_rest.call(null, f), g = cljs.core.count.call(null, e), d[9] = e, d[10] = 0, d[11] = f, d[12] = g, 
            d[2] = null, d[1] = 8, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === e ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, d, d[2]) : 12 === e ? (d[2] = d[2], d[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 2 === e ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, d, 4, b) : 23 === e ? (d[2] = d[2], d[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 19 === e ? (d[2] = d[2], d[1] = 16, new cljs.core.Keyword(null, 
            "recur", "recur", -437573268)) : 11 === e ? (e = d[11], e = cljs.core.seq.call(null, e), d[7] = e, d[1] = e ? 14 : 15, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === e ? (f = d[2], e = cljs.core.async.impl.protocols.closed_QMARK_.call(null, c), d[15] = f, cljs.core.truth_(e) ? d[1] = 21 : d[1] = 22, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 5 === e ? (e = cljs.core.async.close_BANG_.call(null, c), d[2] = e, d[1] = 7, new cljs.core.Keyword(null, "recur", 
            "recur", -437573268)) : 14 === e ? (f = d[7], e = cljs.core.chunked_seq_QMARK_.call(null, f), d[1] = e ? 17 : 18, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 16 === e ? (d[2] = d[2], d[1] = 12, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (f = d[9], h = d[10], e = cljs.core._nth.call(null, f, h), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, d, 13, c, e)) : 18 === e ? (f = d[7], e = cljs.core.first.call(null, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, 
            d, 20, c, e)) : 8 === e ? (h = d[10], g = d[12], e = h < g, cljs.core.truth_(e) ? d[1] = 10 : d[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(d), d);
      }(), g = function() {
        var a = e.call(null);
        a[6] = d;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, g);
    };
  }(d));
  return d;
};
cljs.core.async.mapcat_LT_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.mapcat_LT_.call(null, a, b, null);
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  cljs.core.async.mapcat_STAR_.call(null, a, b, c);
  return c;
};
cljs.core.async.mapcat_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_GT_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.mapcat_GT_.call(null, a, b, null);
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  cljs.core.async.mapcat_STAR_.call(null, a, c, b);
  return c;
};
cljs.core.async.mapcat_GT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.unique = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.async.unique.call(null, a, null);
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.async.chan.call(null, b), d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(b, c) {
    return function() {
      var d = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (u) {
                    if (u instanceof Object) {
                      b[5] = u, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw u;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(b, c) {
          return function(b) {
            var d = b[1];
            if (7 === d) {
              return b[2] = b[2], b[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === d) {
              return b[7] = null, b[2] = null, b[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === d) {
              d = b[2];
              var e = cljs.core.not.call(null, null == d);
              b[8] = d;
              b[1] = e ? 5 : 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 6 === d ? (b[2] = null, b[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === d ? (d = b[2], e = cljs.core.async.close_BANG_.call(null, c), b[9] = d, cljs.core.async.impl.ioc_helpers.return_chan.call(null, b, e)) : 2 === d ? cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, b, 4, a) : 11 === d ? (d = b[8], e = b[2], b[10] = e, b[7] = d, b[2] = null, b[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 9 === d ? (d = b[8], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, 
            b, 11, c, d)) : 5 === d ? (e = b[7], d = b[8], d = cljs.core._EQ_.call(null, d, e), b[1] = d ? 8 : 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === d ? (b[2] = b[2], b[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === d ? (e = b[7], b[7] = e, b[2] = null, b[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(b, c), b, c);
      }(), e = function() {
        var a = d.call(null);
        a[6] = b;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, e);
    };
  }(d, c));
  return c;
};
cljs.core.async.unique.cljs$lang$maxFixedArity = 2;
cljs.core.async.partition = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.partition.call(null, a, b, null);
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d) {
    return function() {
      var e = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (u) {
                    if (u instanceof Object) {
                      b[5] = u, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw u;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d) {
          return function(c) {
            var e = c[1];
            if (7 === e) {
              return c[2] = c[2], c[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              return e = Array(a), c[7] = e, c[8] = 0, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              e = c[2];
              var f = cljs.core.not.call(null, null == e);
              c[9] = e;
              c[1] = f ? 5 : 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === e) {
              return c[2] = c[2], c[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === e) {
              return c[2] = null, c[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === e) {
              return f = c[8], cljs.core.truth_(0 < f) ? c[1] = 12 : c[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === e) {
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, c[2]);
            }
            if (12 === e) {
              return e = c[7], e = cljs.core.vec.call(null, e), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 15, d, e);
            }
            if (2 === e) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 4, b);
            }
            if (11 === e) {
              return f = c[2], e = Array(a), c[10] = f, c[7] = e, c[8] = 0, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (9 === e) {
              return e = c[7], e = cljs.core.vec.call(null, e), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 11, d, e);
            }
            if (5 === e) {
              var g = c[9];
              e = c[7];
              f = c[8];
              e = e[f] = g;
              g = f + 1;
              f = g < a;
              c[11] = g;
              c[12] = e;
              cljs.core.truth_(f) ? c[1] = 8 : c[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 14 === e ? (f = c[2], e = cljs.core.async.close_BANG_.call(null, d), c[13] = f, c[2] = e, c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (c[2] = c[2], c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (f = c[11], e = c[7], c[7] = e, c[8] = f, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(c, d), c, d);
      }(), f = function() {
        var a = e.call(null);
        a[6] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, f);
    };
  }(d, c));
  return c;
};
cljs.core.async.partition.cljs$lang$maxFixedArity = 3;
cljs.core.async.partition_by = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.async.partition_by.call(null, a, b, null);
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  c = cljs.core.async.chan.call(null, c);
  var d = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c, d) {
    return function() {
      var e = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (u) {
                    if (u instanceof Object) {
                      b[5] = u, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw u;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(c, d) {
          return function(c) {
            var e = c[1];
            if (7 === e) {
              return c[2] = c[2], c[1] = 3, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === e) {
              var f = [];
              e = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
              c[7] = f;
              c[8] = e;
              c[2] = null;
              c[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (4 === e) {
              e = c[2];
              var g = cljs.core.not.call(null, null == e);
              c[9] = e;
              c[1] = g ? 5 : 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (15 === e) {
              return c[2] = c[2], c[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (13 === e) {
              return c[2] = null, c[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === e) {
              return f = c[7], e = f.length, cljs.core.truth_(0 < e) ? c[1] = 12 : c[1] = 13, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (3 === e) {
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, c, c[2]);
            }
            if (12 === e) {
              return f = c[7], e = cljs.core.vec.call(null, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 15, d, e);
            }
            if (2 === e) {
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, c, 4, b);
            }
            if (11 === e) {
              e = c[10];
              g = c[9];
              f = c[2];
              var h = [];
              g = h.push(g);
              c[7] = h;
              c[8] = e;
              c[11] = g;
              c[12] = f;
              c[2] = null;
              c[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 9 === e ? (f = c[7], e = cljs.core.vec.call(null, f), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, c, 11, d, e)) : 5 === e ? (e = c[8], g = c[9], f = a.call(null, g), g = cljs.core._EQ_.call(null, f, e), e = cljs.core.keyword_identical_QMARK_.call(null, e, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123)), c[10] = f, cljs.core.truth_(g || e) ? c[1] = 8 : c[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 14 === 
            e ? (g = c[2], e = cljs.core.async.close_BANG_.call(null, d), c[13] = g, c[2] = e, c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 10 === e ? (c[2] = c[2], c[1] = 7, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 8 === e ? (f = c[7], e = c[10], g = c[9], g = f.push(g), c[7] = f, c[14] = g, c[8] = e, c[2] = null, c[1] = 2, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : null;
          };
        }(c, d), c, d);
      }(), f = function() {
        var a = e.call(null);
        a[6] = c;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, f);
    };
  }(d, c));
  return c;
};
cljs.core.async.partition_by.cljs$lang$maxFixedArity = 3;
var cljs_node_io = {protocols:{}};
cljs_node_io.protocols.Coercions = function() {
};
cljs_node_io.protocols.as_file = function(a) {
  if (null != a && null != a.cljs_node_io$protocols$Coercions$as_file$arity$1) {
    return a.cljs_node_io$protocols$Coercions$as_file$arity$1(a);
  }
  var b = cljs_node_io.protocols.as_file[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs_node_io.protocols.as_file._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Coercions.as-file", a);
};
cljs_node_io.protocols.as_url = function(a) {
  if (null != a && null != a.cljs_node_io$protocols$Coercions$as_url$arity$1) {
    return a.cljs_node_io$protocols$Coercions$as_url$arity$1(a);
  }
  var b = cljs_node_io.protocols.as_url[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs_node_io.protocols.as_url._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "Coercions.as-url", a);
};
cljs_node_io.protocols.IOFactory = function() {
};
cljs_node_io.protocols.make_reader = function(a, b) {
  if (null != a && null != a.cljs_node_io$protocols$IOFactory$make_reader$arity$2) {
    return a.cljs_node_io$protocols$IOFactory$make_reader$arity$2(a, b);
  }
  var c = cljs_node_io.protocols.make_reader[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs_node_io.protocols.make_reader._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IOFactory.make-reader", a);
};
cljs_node_io.protocols.make_writer = function(a, b) {
  if (null != a && null != a.cljs_node_io$protocols$IOFactory$make_writer$arity$2) {
    return a.cljs_node_io$protocols$IOFactory$make_writer$arity$2(a, b);
  }
  var c = cljs_node_io.protocols.make_writer[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs_node_io.protocols.make_writer._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IOFactory.make-writer", a);
};
cljs_node_io.protocols.make_input_stream = function(a, b) {
  if (null != a && null != a.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2) {
    return a.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2(a, b);
  }
  var c = cljs_node_io.protocols.make_input_stream[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs_node_io.protocols.make_input_stream._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IOFactory.make-input-stream", a);
};
cljs_node_io.protocols.make_output_stream = function(a, b) {
  if (null != a && null != a.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2) {
    return a.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2(a, b);
  }
  var c = cljs_node_io.protocols.make_output_stream[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = cljs_node_io.protocols.make_output_stream._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IOFactory.make-output-stream", a);
};
cljs_node_io.protocols.IFile = function() {
};
cljs_node_io.protocols.IInputStream = function() {
};
cljs_node_io.protocols.IOutputStream = function() {
};
cljs_node_io.protocols.IChildProcess = function() {
};
cljs_node_io.streams = {};
cljs_node_io.streams.fs = require("fs");
cljs_node_io.streams.stream = require("stream");
cljs_node_io.streams.input_IOF_BANG_ = function(a) {
  a.cljs_node_io$protocols$IInputStream$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = function(a) {
    return function(a, b) {
      throw Error(["ILLEGAL ARGUMENT: Cannot open \x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, this)), "\x3e as an OutputStream."].join(""));
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = function(a) {
    return function(a, b) {
      throw Error(["ILLEGAL ARGUMENT: Cannot open \x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, this)), "\x3e as an OutputStream."].join(""));
    };
  }(a);
  return a;
};
cljs_node_io.streams.output_IOF_BANG_ = function(a) {
  a.cljs_node_io$protocols$IOutputStream$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = function(a) {
    return function(a, b) {
      throw Error(["ILLEGAL ARGUMENT: Cannot open \x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, this)), "\x3e as an InputStream."].join(""));
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = function(a) {
    return function(a, b) {
      throw Error(["ILLEGAL ARGUMENT: Cannot open \x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, this)), "\x3e as an InputStream."].join(""));
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a);
  return a;
};
cljs_node_io.streams.duplex_IOF_BANG_ = function(a) {
  a.cljs_node_io$protocols$IInputStream$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs_node_io$protocols$IOutputStream$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;
  a.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a);
  a.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = function(a) {
    return function(a, b) {
      return this;
    };
  }(a);
  return a;
};
cljs_node_io.streams.ReadableStream = function(a) {
  if (!cljs.core.map_QMARK_.call(null, a)) {
    throw Error("Assert failed: you must pass a map of constructor options containing at least a :read k-v pair\n(map? opts)");
  }
  if (!cljs.core.fn_QMARK_.call(null, cljs.core.get.call(null, a, new cljs.core.Keyword(null, "read", "read", 1140058661)))) {
    throw Error("Assert failed: you must supply an internal :read function when creating a read stream\n(fn? (get opts :read))");
  }
  return cljs_node_io.streams.input_IOF_BANG_.call(null, new cljs_node_io.streams.stream.Readable(cljs.core.clj__GT_js.call(null, a)));
};
cljs_node_io.streams.WritableStream = function(a) {
  if (!cljs.core.map_QMARK_.call(null, a)) {
    throw Error("Assert failed: you must pass a map of constructor options containing at least a :write k-v pair\n(map? opts)");
  }
  if (!cljs.core.fn_QMARK_.call(null, cljs.core.get.call(null, a, new cljs.core.Keyword(null, "write", "write", -1857649168)))) {
    throw Error("Assert failed: you must supply an internal :write function when creating writable streams\n(fn? (get opts :write))");
  }
  return cljs_node_io.streams.output_IOF_BANG_.call(null, new cljs_node_io.streams.stream.Writable(cljs.core.clj__GT_js.call(null, a)));
};
cljs_node_io.streams.DuplexStream = function(a) {
  if (!cljs.core.map_QMARK_.call(null, a)) {
    throw Error("Assert failed: you must pass a map of constructor options containing at least :read \x26 :write fns\n(map? opts)");
  }
  if (!cljs.core.fn_QMARK_.call(null, cljs.core.get.call(null, a, new cljs.core.Keyword(null, "read", "read", 1140058661))) || !cljs.core.fn_QMARK_.call(null, cljs.core.get.call(null, a, new cljs.core.Keyword(null, "write", "write", -1857649168)))) {
    throw Error("Assert failed: you must supply :read \x26 :write fns when creating duplex streams.\n(and (fn? (get opts :read)) (fn? (get opts :write)))");
  }
  return cljs_node_io.streams.duplex_IOF_BANG_.call(null, new cljs_node_io.streams.stream.Duplex(cljs.core.clj__GT_js.call(null, a)));
};
cljs_node_io.streams.TransformStream = function(a) {
  if (!cljs.core.map_QMARK_.call(null, a)) {
    throw Error("Assert failed: you must pass a map of constructor options containing at least a :transform fn\n(map? opts)");
  }
  if (!cljs.core.fn_QMARK_.call(null, cljs.core.get.call(null, a, new cljs.core.Keyword(null, "transform", "transform", 1381301764)))) {
    throw Error("Assert failed: you must supply a :transform fn when creating a transform stream.\n(fn? (get opts :transform))");
  }
  var b = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "flush", "flush", -1138711199));
  b = cljs.core.truth_(b) ? cljs.core.fn_QMARK_.call(null, b) : !0;
  if (!b) {
    throw Error("Assert failed: :flush must be a fn\n(if-let [flush (get opts :flush)] (fn? flush) true)");
  }
  return cljs_node_io.streams.duplex_IOF_BANG_.call(null, new cljs_node_io.streams.stream.Transform(cljs.core.clj__GT_js.call(null, a)));
};
cljs_node_io.streams.BufferReadStream = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.streams.BufferReadStream.call(null, a, null);
};
cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (!cljs.core.truth_(Buffer.isBuffer(a))) {
    throw Error("Assert failed: source must be a Buffer instance\n(js/Buffer.isBuffer source)");
  }
  var c = function(b, c) {
    return function(d) {
      if (cljs.core.deref.call(null, b) < c) {
        var e = a.slice(cljs.core.deref.call(null, b), cljs.core.deref.call(null, b) + d);
        this.push(e);
        return cljs.core.swap_BANG_.call(null, b, cljs.core._PLUS_, d);
      }
      return this.push(null);
    };
  }(cljs.core.atom.call(null, 0), a.length);
  c = cljs_node_io.streams.ReadableStream.call(null, cljs.core.merge.call(null, b, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "read", "read", 1140058661), c], null)));
  return cljs_node_io.streams.input_IOF_BANG_.call(null, c);
};
cljs_node_io.streams.BufferReadStream.cljs$lang$maxFixedArity = 2;
cljs_node_io.streams.BufferWriteStream = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.streams.BufferWriteStream.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.streams.BufferWriteStream.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.streams.BufferWriteStream.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.streams.BufferWriteStream.call(null, a, null);
};
cljs_node_io.streams.BufferWriteStream.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = [], d = cljs.core.atom.call(null, null), e = function(a, b) {
    return function(b, c, d) {
      a.push(b);
      return d.call(null);
    };
  }(c, d), f = cljs_node_io.streams.WritableStream.call(null, cljs.core.merge.call(null, b, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "write", "write", -1857649168), e], null))), g = f.buf = c, h = f.on("finish", function(b, c, d, e, f) {
    return function() {
      var d = Buffer.concat(b);
      cljs.core.reset_BANG_.call(null, c, d);
      return a.call(null, d);
    };
  }(c, d, e, f, g)), k = cljs_node_io.streams.output_IOF_BANG_.call(null, f);
  k.toString = function(a, b, c, d, e, f, g) {
    return function() {
      return cljs.core.truth_(cljs.core.deref.call(null, c)) ? cljs.core.deref.call(null, c).toString() : null;
    };
  }(k, c, d, e, f, g, h);
  k.toBuffer = function(a, b, c, d, e, f, g) {
    return function() {
      return cljs.core.deref.call(null, c);
    };
  }(k, c, d, e, f, g, h);
  return k;
};
cljs_node_io.streams.BufferWriteStream.cljs$lang$maxFixedArity = 2;
cljs_node_io.streams.fd_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, a, a >>> 0);
};
cljs_node_io.streams.filepath = function(a, b, c) {
  var d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "fd", "fd", -1524403000));
  if (cljs_node_io.streams.fd_QMARK_.call(null, d)) {
    return null;
  }
  if ("string" === typeof a) {
    return a;
  }
  d = (d = null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs_node_io$protocols$IFile$ ? !0 : !1 : !1) ? d : cljs.core._EQ_.call(null, goog.Uri, cljs.core.type.call(null, a));
  if (d) {
    return a.getPath();
  }
  throw new TypeError(["Unrecognized path configuration passed to File", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "Stream constructor.\n    You passed ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, a)), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, b)), "\n    You must pass a [pathstring opts], [uri opts], [file opts], or include :fd in opts ."].join(""));
};
cljs_node_io.streams.FileInputStream_STAR_ = function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "flags", "flags", 1775418075)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "encoding", "encoding", 1728578272)), f = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "fd", "fd", -1524403000)), g = cljs.core.get.call(null, c, new cljs.core.Keyword(null, 
  "mode", "mode", 654403691)), h = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "autoClose?", "autoClose?", 375814080)), k = {encoding:cljs.core.truth_(e) ? e : null, flags:cljs.core.truth_(d) ? d : "r", fd:cljs.core.truth_(f) ? f : null, mode:cljs.core.truth_(g) ? g : 438, autoClose:cljs.core.truth_(h) ? h : !0}, l = cljs_node_io.streams.fs.createReadStream(a, k), m = cljs.core.atom.call(null, null), n = l.on("open", function(a, b, c, d, e, f, g, h, k, l) {
    return function(a) {
      return cljs.core.reset_BANG_.call(null, l, a);
    };
  }(b, c, d, e, f, g, h, k, l, m));
  l.cljs_node_io$protocols$IInputStream$ = cljs.core.PROTOCOL_SENTINEL;
  l.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
  l.cljs$core$IEquiv$_equiv$arity$2 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
    return function(a, b) {
      return cljs.core._EQ_.call(null, cljs.core.type.call(null, this), cljs.core.type.call(null, b)) && cljs.core._EQ_.call(null, this.path, b.path);
    };
  }(l, b, c, d, e, f, g, h, k, l, m, n);
  l.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
  l.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
    return function(a, b, c) {
      cljs.core._write.call(null, b, "#object [FileInputStream");
      return cljs.core._write.call(null, b, ["  ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.path), "]"].join(""));
    };
  }(l, b, c, d, e, f, g, h, k, l, m, n);
  l.getFd = function(a, b, c, d, e, f, g, h, k, l, m, n) {
    return function() {
      return cljs.core.deref.call(null, m);
    };
  }(l, b, c, d, e, f, g, h, k, l, m, n);
  return cljs_node_io.streams.input_IOF_BANG_.call(null, l);
};
cljs_node_io.streams.FileInputStream = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.streams.FileInputStream.call(null, a, null);
};
cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs_node_io.streams.FileInputStream_STAR_.call(null, cljs_node_io.streams.filepath.call(null, a, b, "Input"), b);
};
cljs_node_io.streams.FileInputStream.cljs$lang$maxFixedArity = 2;
cljs_node_io.streams.FileOutputStream_STAR_ = function(a, b) {
  var c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "append", "append", -291298229)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "flags", "flags", 1775418075)), f = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "encoding", "encoding", 1728578272)), g = cljs.core.get.call(null, c, new cljs.core.Keyword(null, 
  "mode", "mode", 654403691)), h = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "fd", "fd", -1524403000)), k = {defaultEncoding:cljs.core.truth_(f) ? f : "utf8", flags:cljs.core.truth_(e) ? e : cljs.core.truth_(d) ? "a" : "w", fd:cljs.core.truth_(h) ? h : null, mode:cljs.core.truth_(g) ? g : 438}, l = cljs_node_io.streams.fs.createWriteStream(a, k), m = cljs.core.atom.call(null, null), n = l.on("open", function(a, b, c, d, e, f, g, h, k, l) {
    return function(a) {
      return cljs.core.reset_BANG_.call(null, l, a);
    };
  }(b, c, d, e, f, g, h, k, l, m));
  l.cljs_node_io$protocols$IOutputStream$ = cljs.core.PROTOCOL_SENTINEL;
  l.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
  l.cljs$core$IEquiv$_equiv$arity$2 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
    return function(a, b) {
      return cljs.core._EQ_.call(null, cljs.core.type.call(null, this), cljs.core.type.call(null, b)) && cljs.core._EQ_.call(null, this.path, b.path);
    };
  }(l, b, c, d, e, f, g, h, k, l, m, n);
  l.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
  l.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
    return function(a, b, c) {
      cljs.core._write.call(null, b, "#object [FileOutputStream");
      return cljs.core._write.call(null, b, ["  ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.path), "]"].join(""));
    };
  }(l, b, c, d, e, f, g, h, k, l, m, n);
  l.getFd = function(a, b, c, d, e, f, g, h, k, l, m, n) {
    return function() {
      return cljs.core.deref.call(null, m);
    };
  }(l, b, c, d, e, f, g, h, k, l, m, n);
  return cljs_node_io.streams.output_IOF_BANG_.call(null, l);
};
cljs_node_io.streams.FileOutputStream = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.streams.FileOutputStream.call(null, a, null);
};
cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs_node_io.streams.FileOutputStream_STAR_.call(null, cljs_node_io.streams.filepath.call(null, a, b, "Output"), b);
};
cljs_node_io.streams.FileOutputStream.cljs$lang$maxFixedArity = 2;
cljs_node_io.fs = {};
cljs_node_io.fs.fs = require("fs");
cljs_node_io.fs.path = require("path");
cljs_node_io.fs.sep = cljs_node_io.fs.path.sep;
cljs_node_io.fs.stat = function(a) {
  return cljs_node_io.fs.fs.statSync(a);
};
cljs_node_io.fs.astat = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.stat(a, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(b));
  return b;
};
cljs_node_io.fs.lstat = function(a) {
  return cljs_node_io.fs.fs.lstatSync(a);
};
cljs_node_io.fs.alstat = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.lstat(a, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(b));
  return b;
};
cljs_node_io.fs.stat__GT_clj = function(a) {
  var b = goog.object.getKeys(a), c = goog.object.getValues(a);
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.comp.call(null, cljs.core.remove.call(null, function(a, b) {
    return function(a) {
      return cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, 0), "_checkModeProperty");
    };
  }(b, c)), cljs.core.map.call(null, function(b, c) {
    return function(b) {
      var c = cljs.core.nth.call(null, b, 0, null);
      b = cljs.core.nth.call(null, b, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, c), cljs.core.fn_QMARK_.call(null, b) ? b.apply(a) : b], null);
    };
  }(b, c))), cljs.core.map.call(null, cljs.core.vector, b, c));
};
cljs_node_io.fs.bita__GT_int = function(a) {
  return parseInt(a.join(""), 2);
};
cljs_node_io.fs.stat__GT_perm_bita = function(a) {
  a = a.mode;
  a = [a & 256, a & 128, a & 64, a & 32, a & 16, a & 8, a & 4, a & 2, a & 1];
  for (var b = a.length, c = cljs.core.aclone.call(null, a), d = 0;;) {
    if (d < b) {
      c[d] = 0 !== a[d] ? 1 : 0, d += 1;
    } else {
      return c;
    }
  }
};
cljs_node_io.fs.permissions = function(a) {
  return cljs_node_io.fs.bita__GT_int.call(null, cljs_node_io.fs.stat__GT_perm_bita.call(null, a));
};
cljs_node_io.fs.gid_uid = function() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "gid", "gid", -714078321), process.getgid(), new cljs.core.Keyword(null, "uid", "uid", -1447769400), process.getuid()], null);
};
cljs_node_io.fs.hidden_QMARK_ = function(a) {
  return /(^|\/)\.[^\/\.]/.test(a);
};
cljs_node_io.fs.dir_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstring)");
  }
  try {
    var b = cljs_node_io.fs.fs.statSync(a);
  } catch (c) {
    if (c instanceof Error) {
      b = !1;
    } else {
      throw c;
    }
  }
  return cljs.core.not.call(null, b) ? !1 : b.isDirectory();
};
cljs_node_io.fs.adir_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  a = cljs_node_io.fs.astat.call(null, a);
  cljs.core.async.take_BANG_.call(null, a, function(a, b) {
    return function(b) {
      var c = cljs.core.nth.call(null, b, 0, null);
      b = cljs.core.nth.call(null, b, 1, null);
      return cljs.core.async.put_BANG_.call(null, a, cljs.core.not.call(null, c) ? b.isDirectory() : !1);
    };
  }(b, a));
  return b;
};
cljs_node_io.fs.file_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstring)");
  }
  try {
    var b = cljs_node_io.fs.lstat.call(null, a);
  } catch (c) {
    if (c instanceof Error) {
      b = !1;
    } else {
      throw c;
    }
  }
  return cljs.core.not.call(null, b) ? !1 : b.isFile();
};
cljs_node_io.fs.afile_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  a = cljs_node_io.fs.alstat.call(null, a);
  cljs.core.async.take_BANG_.call(null, a, function(a, b) {
    return function(b) {
      var c = cljs.core.nth.call(null, b, 0, null);
      b = cljs.core.nth.call(null, b, 1, null);
      return cljs.core.async.put_BANG_.call(null, a, cljs.core.not.call(null, c) ? b.isFile() : !1);
    };
  }(b, a));
  return b;
};
cljs_node_io.fs.absolute_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  return cljs_node_io.fs.path.isAbsolute.call(null, a);
};
cljs_node_io.fs.fexists_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  try {
    return cljs_node_io.fs.fs.accessSync(a, cljs_node_io.fs.fs.F_OK), !0;
  } catch (b) {
    if (b instanceof Error) {
      return !1;
    }
    throw b;
  }
};
cljs_node_io.fs.afexists_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.access(a, cljs_node_io.fs.fs.F_OK, function(a) {
    return function(b) {
      return cljs.core.async.put_BANG_.call(null, a, cljs.core.not.call(null, b) ? !0 : !1);
    };
  }(b));
  return b;
};
cljs_node_io.fs.readable_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  try {
    return cljs_node_io.fs.fs.accessSync(a, cljs_node_io.fs.fs.R_OK), !0;
  } catch (b) {
    if (b instanceof Error) {
      return !1;
    }
    throw b;
  }
};
cljs_node_io.fs.areadable_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.access(a, cljs_node_io.fs.fs.R_OK, function(a) {
    return function(b) {
      return cljs.core.async.put_BANG_.call(null, a, cljs.core.not.call(null, b) ? !0 : !1);
    };
  }(b));
  return b;
};
cljs_node_io.fs.writable_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  try {
    return cljs_node_io.fs.fs.accessSync(a, cljs_node_io.fs.fs.W_OK), !0;
  } catch (b) {
    if (b instanceof Error) {
      return !1;
    }
    throw b;
  }
};
cljs_node_io.fs.awritable_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.access(a, cljs_node_io.fs.fs.W_OK, function(a) {
    return function(b) {
      return cljs.core.async.put_BANG_.call(null, a, cljs.core.not.call(null, b) ? !0 : !1);
    };
  }(b));
  return b;
};
cljs_node_io.fs.executable_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  if (cljs.core._EQ_.call(null, "win32", process.platform)) {
    throw Error("Testing if a file is executable has no effect on Windows");
  }
  try {
    return cljs_node_io.fs.fs.accessSync(a, cljs_node_io.fs.fs.X_OK), !0;
  } catch (b) {
    if (b instanceof Error) {
      return !1;
    }
    throw b;
  }
};
cljs_node_io.fs.aexecutable_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  if (cljs.core._EQ_.call(null, "win32", process.platform)) {
    throw Error("Testing if a file is executable has no effect on Windows");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.access(a, cljs_node_io.fs.fs.X_OK, function(a) {
    return function(b) {
      return cljs.core.async.put_BANG_.call(null, a, cljs.core.not.call(null, b) ? !0 : !1);
    };
  }(b));
  return b;
};
cljs_node_io.fs.symlink_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  try {
    var b = cljs_node_io.fs.lstat.call(null, a);
  } catch (c) {
    if (c instanceof Error) {
      b = !1;
    } else {
      throw c;
    }
  }
  return cljs.core.not.call(null, b) ? !1 : b.isSymbolicLink();
};
cljs_node_io.fs.asymlink_QMARK_ = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  a = cljs_node_io.fs.alstat.call(null, a);
  cljs.core.async.take_BANG_.call(null, a, function(a, b) {
    return function(b) {
      var c = cljs.core.nth.call(null, b, 0, null);
      b = cljs.core.nth.call(null, b, 1, null);
      return cljs.core.async.put_BANG_.call(null, a, cljs.core.not.call(null, c) ? b.isSymbolicLink() : !1);
    };
  }(b, a));
  return b;
};
cljs_node_io.fs.dirname = function(a) {
  return cljs_node_io.fs.path.dirname(a);
};
cljs_node_io.fs.basename = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.fs.basename.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.fs.basename.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.fs.basename.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.fs.path.basename(a);
};
cljs_node_io.fs.basename.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs_node_io.fs.path.basename(a, b);
};
cljs_node_io.fs.basename.cljs$lang$maxFixedArity = 2;
cljs_node_io.fs.resolve_path = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs_node_io.fs.resolve_path.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs_node_io.fs.resolve_path.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs_node_io.fs.path.resolve.apply(null, cljs.core.apply.call(null, cljs.core.array, a));
};
cljs_node_io.fs.resolve_path.cljs$lang$maxFixedArity = 0;
cljs_node_io.fs.resolve_path.cljs$lang$applyTo = function(a) {
  return cljs_node_io.fs.resolve_path.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs_node_io.fs.normalize_path = function(a) {
  return cljs_node_io.fs.path.normalize(a);
};
cljs_node_io.fs.ext = function(a) {
  return cljs_node_io.fs.path.extname(a);
};
cljs_node_io.fs.realpath = function(a) {
  return cljs_node_io.fs.fs.realpathSync(a);
};
cljs_node_io.fs.arealpath = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.realpath(a, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(b));
  return b;
};
cljs_node_io.fs.readlink = function(a) {
  return cljs_node_io.fs.fs.readlinkSync(a);
};
cljs_node_io.fs.areadlink = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.readlink(a, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(b));
  return b;
};
cljs_node_io.fs.readdir = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? dirpath)");
  }
  return cljs.core.vec.call(null, cljs_node_io.fs.fs.readdirSync(a));
};
cljs_node_io.fs.areaddir = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? dirpath)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.readdir(a, function(a) {
    return function(b, c) {
      return cljs.core.async.put_BANG_.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core.vec.call(null, c)], null));
    };
  }(b));
  return b;
};
cljs_node_io.fs.chmod = function(a, b) {
  return cljs_node_io.fs.fs.chmodSync(a, b);
};
cljs_node_io.fs.achmod = function(a, b) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var c = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.chmod(a, b, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(c));
  return c;
};
cljs_node_io.fs.lchmod = function(a, b) {
  return cljs_node_io.fs.fs.lchmodSync(a, b);
};
cljs_node_io.fs.alchmod = function(a, b) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var c = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.lchmod(a, b, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(c));
  return c;
};
cljs_node_io.fs.chown = function(a, b, c) {
  return cljs_node_io.fs.fs.chownSync(a, b, c);
};
cljs_node_io.fs.achown = function(a, b, c) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var d = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.chown(a, b, c, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(d));
  return d;
};
cljs_node_io.fs.lchown = function(a, b, c) {
  return cljs_node_io.fs.fs.lchownSync(a, b, c);
};
cljs_node_io.fs.alchown = function(a, b, c) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var d = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.lchown(a, b, c, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(d));
  return d;
};
cljs_node_io.fs.utimes = function(a, b, c) {
  return cljs_node_io.fs.fs.utimesSync(a, b, c);
};
cljs_node_io.fs.autimes = function(a, b, c) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var d = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.utimes(a, b, c, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(d));
  return d;
};
cljs_node_io.fs.mkdir = function(a) {
  return cljs_node_io.fs.fs.mkdirSync(a);
};
cljs_node_io.fs.amkdir = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.mkdir(a, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(b));
  return b;
};
cljs_node_io.fs.rmdir = function(a) {
  return cljs_node_io.fs.fs.rmdirSync(a);
};
cljs_node_io.fs.armdir = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.rmdir(a, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(b));
  return b;
};
cljs_node_io.fs.link = function(a, b) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? srcpathstr)");
  }
  if ("string" !== typeof b) {
    throw Error("Assert failed: (string? dstpathstr)");
  }
  return cljs_node_io.fs.fs.linkSync(a, b);
};
cljs_node_io.fs.alink = function(a, b) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? srcpathstr)");
  }
  if ("string" !== typeof b) {
    throw Error("Assert failed: (string? dstpathstr)");
  }
  var c = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.link(a, b, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(c));
  return c;
};
cljs_node_io.fs.symlink = function(a, b) {
  return cljs_node_io.fs.fs.symlinkSync(a, b);
};
cljs_node_io.fs.asymlink = function(a, b) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? targetstr)");
  }
  if ("string" !== typeof b) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var c = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.symlink(a, b, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(c));
  return c;
};
cljs_node_io.fs.unlink = function(a) {
  return cljs_node_io.fs.fs.unlinkSync(a);
};
cljs_node_io.fs.aunlink = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.unlink(a, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(b));
  return b;
};
cljs_node_io.fs.rm = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  return cljs_node_io.fs.dir_QMARK_.call(null, a) ? cljs_node_io.fs.rmdir.call(null, a) : cljs_node_io.fs.unlink.call(null, a);
};
cljs_node_io.fs.arm = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var b = cljs.core.async.promise_chan.call(null), c = cljs_node_io.fs.adir_QMARK_.call(null, a);
  cljs.core.async.take_BANG_.call(null, c, function(b, c) {
    return function(d) {
      return cljs.core.async.take_BANG_.call(null, cljs.core.truth_(d) ? cljs_node_io.fs.armdir.call(null, a) : cljs_node_io.fs.aunlink.call(null, a), function(a, b) {
        return function(b) {
          return cljs.core.async.put_BANG_.call(null, a, b);
        };
      }(b, c));
    };
  }(b, c));
  return b;
};
cljs_node_io.fs.rm_r = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  if (!1 !== cljs.core.boolean$.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, ["/", null, "\\\\", null, "\\", null, "//", null], null), null)).call(null, a))) {
    throw Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(["you just tried to delete root, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, a)), ", be more careful."].join("")), '\n(false? (boolean (#{"/" "\\\\\\\\" "\\\\" "//"} pathstr)))'].join(""));
  }
  if (cljs_node_io.fs.dir_QMARK_.call(null, a)) {
    for (var b = cljs.core.seq.call(null, cljs.core.mapv.call(null, cljs.core.partial.call(null, cljs_node_io.fs.resolve_path, a), cljs_node_io.fs.readdir.call(null, a))), c = null, d = 0, e = 0;;) {
      if (e < d) {
        var f = cljs.core._nth.call(null, c, e);
        cljs_node_io.fs.rm_r.call(null, f);
        e += 1;
      } else {
        if (b = cljs.core.seq.call(null, b)) {
          c = b, cljs.core.chunked_seq_QMARK_.call(null, c) ? (b = cljs.core.chunk_first.call(null, c), e = cljs.core.chunk_rest.call(null, c), c = b, d = cljs.core.count.call(null, b), b = e) : (b = cljs.core.first.call(null, c), cljs_node_io.fs.rm_r.call(null, b), b = cljs.core.next.call(null, c), c = null, d = 0), e = 0;
        } else {
          break;
        }
      }
    }
    return cljs_node_io.fs.rmdir.call(null, a);
  }
  return cljs_node_io.fs.unlink.call(null, a);
};
cljs_node_io.fs.arm_r = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  if (!1 !== cljs.core.boolean$.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, ["/", null, "\\\\", null, "\\", null, "//", null], null), null)).call(null, a))) {
    throw Error(["Assert failed: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(["you just tried to delete root, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, a)), ", be more careful."].join("")), '\n(false? (boolean (#{"/" "\\\\\\\\" "\\\\" "//"} pathstr)))'].join(""));
  }
  var b = cljs.core.async.promise_chan.call(null), c = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(b, c) {
    return function() {
      var d = function() {
        return function(a, b, c) {
          return function() {
            var b = null, c = function() {
              var a = [null, null, null, null, null, null, null, null, null, null, null, null];
              a[0] = b;
              a[1] = 1;
              return a;
            }, d = function(b) {
              for (;;) {
                a: {
                  try {
                    for (;;) {
                      var c = a.call(null, b);
                      if (!cljs.core.keyword_identical_QMARK_.call(null, c, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var d = c;
                        break a;
                      }
                    }
                  } catch (v) {
                    if (v instanceof Object) {
                      b[5] = v, cljs.core.async.impl.ioc_helpers.process_exception.call(null, b), d = new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw v;
                    }
                  }
                }
                if (!cljs.core.keyword_identical_QMARK_.call(null, d, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  return d;
                }
              }
            };
            b = function(a) {
              switch(arguments.length) {
                case 0:
                  return c.call(this);
                case 1:
                  return d.call(this, a);
              }
              throw Error("Invalid arity: " + (arguments.length - 1));
            };
            b.cljs$core$IFn$_invoke$arity$0 = c;
            b.cljs$core$IFn$_invoke$arity$1 = d;
            return b;
          }();
        }(function(b, c) {
          return function(b) {
            var d = b[1];
            if (7 === d) {
              d = b[7];
              var e = cljs.core.partial.call(null, cljs_node_io.fs.resolve_path, a);
              d = cljs.core.mapv.call(null, e, d);
              b[8] = d;
              b[2] = null;
              b[1] = 10;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (20 === d) {
              return b[2] = b[2], b[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (1 === d) {
              return d = cljs_node_io.fs.adir_QMARK_.call(null, a), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, b, 2, d);
            }
            if (24 === d) {
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, b, 23, c, b[2]);
            }
            if (4 === d) {
              return d = cljs_node_io.fs.aunlink.call(null, a), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, b, 24, d);
            }
            if (15 === d) {
              return e = cljs.core.nth.call(null, b[2], 0, null), d = e instanceof Error, b[9] = e, cljs.core.truth_(d) ? b[1] = 16 : b[1] = 17, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (21 === d) {
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, b, 20, c, b[2]);
            }
            if (13 === d) {
              return b[2] = null, b[1] = 14, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (22 === d) {
              return b[2] = b[2], b[1] = 9, new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            if (6 === d) {
              d = b[2];
              e = cljs.core.nth.call(null, d, 0, null);
              d = cljs.core.nth.call(null, d, 1, null);
              var f = cljs.core.not.call(null, e);
              b[10] = e;
              b[7] = d;
              b[1] = f ? 7 : 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            }
            return 17 === d ? (d = b[8], d = cljs.core.next.call(null, d), b[8] = d, b[2] = null, b[1] = 10, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 3 === d ? (d = cljs_node_io.fs.areaddir.call(null, a), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, b, 6, d)) : 12 === d ? (d = b[8], d = cljs.core.first.call(null, d), d = cljs_node_io.fs.arm_r.call(null, d), cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, b, 15, d)) : 2 === d ? (d = b[2], cljs.core.truth_(d) ? 
            b[1] = 3 : b[1] = 4, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 23 === d ? (b[2] = b[2], b[1] = 5, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 19 === d ? (b[2] = b[2], b[1] = 18, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 11 === d ? (d = b[2], e = cljs_node_io.fs.armdir.call(null, a), b[11] = d, cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, b, 21, e)) : 9 === d ? (b[2] = b[2], b[1] = 5, new cljs.core.Keyword(null, "recur", 
            "recur", -437573268)) : 5 === d ? cljs.core.async.impl.ioc_helpers.return_chan.call(null, b, b[2]) : 14 === d ? (b[2] = b[2], b[1] = 11, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 16 === d ? (d = b[9], cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, b, 19, c, d)) : 10 === d ? (d = b[8], d = cljs.core.not.call(null, null == d), b[1] = d ? 12 : 13, new cljs.core.Keyword(null, "recur", "recur", -437573268)) : 18 === d ? (b[2] = b[2], b[1] = 14, new cljs.core.Keyword(null, 
            "recur", "recur", -437573268)) : 8 === d ? (d = b[10], d = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [d], null), cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, b, 22, c, d)) : null;
          };
        }(b, c), b, c);
      }(), e = function() {
        var a = d.call(null);
        a[6] = b;
        return a;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, e);
    };
  }(c, b));
  return b;
};
cljs_node_io.fs.rename = function(a, b) {
  return cljs_node_io.fs.fs.renameSync(a, b);
};
cljs_node_io.fs.arename = function(a, b) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? oldpathstr)");
  }
  if ("string" !== typeof b) {
    throw Error("Assert failed: (string? newpathstr)");
  }
  var c = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.rename(a, b, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(c));
  return c;
};
cljs_node_io.fs.truncate = function(a, b) {
  return cljs_node_io.fs.fs.truncateSync(a, b);
};
cljs_node_io.fs.atruncate = function(a, b) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? pathstr)");
  }
  var c = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.truncate(a, b, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(c));
  return c;
};
cljs_node_io.fs.readFile = function(a, b) {
  return cljs_node_io.fs.fs.readFileSync(a, b);
};
cljs_node_io.fs.areadFile = function(a, b) {
  var c = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.readFile(a, b, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(c));
  return c;
};
cljs_node_io.fs.writeFile = function(a, b, c) {
  return cljs_node_io.fs.fs.writeFileSync(a, b, {flag:function() {
    var a = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : cljs.core.truth_((new cljs.core.Keyword(null, "append", "append", -291298229)).cljs$core$IFn$_invoke$arity$1(c)) ? "a" : "w";
  }(), mode:function() {
    var a = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : 438;
  }(), encoding:function() {
    var a = (new cljs.core.Keyword(null, "encoding", "encoding", 1728578272)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : "utf8";
  }()});
};
cljs_node_io.fs.awriteFile = function(a, b, c) {
  var d = cljs.core.async.promise_chan.call(null);
  cljs_node_io.fs.fs.writeFile(a, b, {flag:function() {
    var a = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : cljs.core.truth_((new cljs.core.Keyword(null, "append", "append", -291298229)).cljs$core$IFn$_invoke$arity$1(c)) ? "a" : "w";
  }(), mode:function() {
    var a = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : 438;
  }(), encoding:function() {
    var a = (new cljs.core.Keyword(null, "encoding", "encoding", 1728578272)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : "utf8";
  }()}, function(a) {
    return function() {
      var b = function(b) {
        return cljs.core.async.put_BANG_.call(null, a, cljs.core.vec.call(null, b));
      }, c = function(a) {
        var c = null;
        if (0 < arguments.length) {
          c = 0;
          for (var d = Array(arguments.length - 0); c < d.length;) {
            d[c] = arguments[c + 0], ++c;
          }
          c = new cljs.core.IndexedSeq(d, 0, null);
        }
        return b.call(this, c);
      };
      c.cljs$lang$maxFixedArity = 0;
      c.cljs$lang$applyTo = function(a) {
        a = cljs.core.seq(a);
        return b(a);
      };
      c.cljs$core$IFn$_invoke$arity$variadic = b;
      return c;
    }();
  }(d));
  return d;
};
cljs_node_io.fs.watcher__GT_ch = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs_node_io.fs.watcher__GT_ch.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs_node_io.fs.watcher__GT_ch.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.fs.watcher__GT_ch.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs_node_io.fs.watcher__GT_ch.call(null, a, b, null);
};
cljs_node_io.fs.watcher__GT_ch.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = null != c && (c.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : c, e = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "key", "key", -1516042587)), f = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "buf-or-n", "buf-or-n", 1007620719), 10);
  a.on("change", function(a, c, d, e, f) {
    return function(a, c) {
      return cljs.core.async.put_BANG_.call(null, b, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, a)], null));
    };
  }(a, c, d, e, f));
  a.on("error", function(a, c, d, e, f) {
    return function(a) {
      return cljs.core.async.put_BANG_.call(null, b, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null)], null));
    };
  }(a, c, d, e, f));
  return b;
};
cljs_node_io.fs.watcher__GT_ch.cljs$lang$maxFixedArity = 3;
cljs_node_io.fs.Watcher = function(a, b) {
  this.FSWatcher = a;
  this.out = b;
};
cljs_node_io.fs.Watcher.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL;
cljs_node_io.fs.Watcher.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(a, b) {
  return cljs.core.async.impl.protocols.take_BANG_.call(null, this.out, b);
};
cljs_node_io.fs.Watcher.prototype.close = function() {
  var a = this;
  a.FSWatcher.close();
  return cljs.core.async.put_BANG_.call(null, a.out, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "close", "close", 1835149582)], null), function(b) {
    return function() {
      return cljs.core.async.close_BANG_.call(null, a.out);
    };
  }(this));
};
cljs_node_io.fs.Watcher.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "FSWatcher", "FSWatcher", -1658877931, null), new cljs.core.Symbol(null, "out", "out", 729986010, null)], null);
};
cljs_node_io.fs.Watcher.cljs$lang$type = !0;
cljs_node_io.fs.Watcher.cljs$lang$ctorStr = "cljs-node-io.fs/Watcher";
cljs_node_io.fs.Watcher.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs-node-io.fs/Watcher");
};
cljs_node_io.fs.__GT_Watcher = function(a, b) {
  return new cljs_node_io.fs.Watcher(a, b);
};
cljs_node_io.fs.watch = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.fs.watch.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.fs.watch.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.fs.watch.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.fs.watch.call(null, a, null);
};
cljs_node_io.fs.watch.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "persistent", "persistent", 885415113), !0, new cljs.core.Keyword(null, "recursive", "recursive", 718885872), !1, new cljs.core.Keyword(null, "encoding", "encoding", 1728578272), "utf8", new cljs.core.Keyword(null, "buf-or-n", "buf-or-n", 1007620719), 10], null), d = cljs.core.merge.call(null, c, b);
  c = cljs.core.async.chan.call(null, cljs.core.get.call(null, d, new cljs.core.Keyword(null, "buf-or-n", "buf-or-n", 1007620719)), cljs.core.map.call(null, function(b, c) {
    return function(b) {
      return cljs.core.conj.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null), b);
    };
  }(c, d)));
  d = cljs_node_io.fs.fs.watch.call(null, a, cljs.core.clj__GT_js.call(null, d));
  return cljs_node_io.fs.__GT_Watcher.call(null, d, cljs_node_io.fs.watcher__GT_ch.call(null, d, c));
};
cljs_node_io.fs.watch.cljs$lang$maxFixedArity = 2;
cljs_node_io.fs.watchFile = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.fs.watchFile.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.fs.watchFile.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.fs.watchFile.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.fs.watchFile.call(null, a, null);
};
cljs_node_io.fs.watchFile.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "interval", "interval", 1708495417), 5007, new cljs.core.Keyword(null, "persistent", "persistent", 885415113), !0, new cljs.core.Keyword(null, "edn?", "edn?", -499466946), !0, new cljs.core.Keyword(null, "buf-or-n", "buf-or-n", 1007620719), 10], null), d = cljs.core.merge.call(null, c, b), e = null != d && (d.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === d.cljs$core$ISeq$) ? cljs.core.apply.call(null, 
  cljs.core.hash_map, d) : d, f = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "edn?", "edn?", -499466946)), g = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "buf-or-n", "buf-or-n", 1007620719)), h = cljs.core.async.chan.call(null, g, cljs.core.map.call(null, function(b, c, d, e, f, g) {
    return function(b) {
      return cljs.core.conj.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null), b);
    };
  }(c, d, e, e, f, g)));
  c = function(a, b, c, d, e, f, g) {
    return function(a, b) {
      return cljs.core.async.put_BANG_.call(null, g, cljs.core.truth_(e) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs_node_io.fs.stat__GT_clj.call(null, a), cljs_node_io.fs.stat__GT_clj.call(null, b)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null));
    };
  }(c, d, e, e, f, g, h);
  cljs_node_io.fs.fs.watchFile.call(null, a, cljs.core.clj__GT_js.call(null, e), c);
  return h;
};
cljs_node_io.fs.watchFile.cljs$lang$maxFixedArity = 2;
cljs_node_io.fs.unwatchFile = function(a) {
  return cljs_node_io.fs.fs.unwatchFile.call(null, a);
};
cljs_node_io.fs.touch = function(a) {
  return cljs_node_io.fs.writeFile.call(null, a, "", null);
};
cljs_node_io.fs.atouch = function(a) {
  return cljs_node_io.fs.awriteFile.call(null, a, "", null);
};
cljs_node_io.file = {};
cljs_node_io.file.setReadable_STAR_ = function(a, b, c) {
  var d = cljs.core._EQ_;
  b = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null);
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, !0], null), b))) {
    return a | 256;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!1, !0], null), b))) {
    return a & -257;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, !1], null), b))) {
    return a | 292;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!1, !1], null), b))) {
    return a & -293;
  }
  throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs_node_io.file.setReadable = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs_node_io.file.setReadable.call(null, a, b, !0);
};
cljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs_node_io.fs.permissions.call(null, cljs_node_io.fs.stat.call(null, a));
  b = cljs_node_io.file.setReadable_STAR_.call(null, d, b, c);
  return cljs_node_io.fs.chmod.call(null, a, b);
};
cljs_node_io.file.setReadable.cljs$lang$maxFixedArity = 3;
cljs_node_io.file.setWritable_STAR_ = function(a, b, c) {
  var d = cljs.core._EQ_;
  b = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null);
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, !0], null), b))) {
    return a | 128;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!1, !0], null), b))) {
    return a & -129;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, !1], null), b))) {
    return a | 146;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!1, !1], null), b))) {
    return a & -147;
  }
  throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs_node_io.file.setWritable = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs_node_io.file.setWritable.call(null, a, b, !0);
};
cljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs_node_io.fs.permissions.call(null, cljs_node_io.fs.stat.call(null, a));
  b = cljs_node_io.file.setWritable_STAR_.call(null, d, b, c);
  return cljs_node_io.fs.chmod.call(null, a, b);
};
cljs_node_io.file.setWritable.cljs$lang$maxFixedArity = 3;
cljs_node_io.file.setExecutable_STAR_ = function(a, b, c) {
  var d = cljs.core._EQ_;
  b = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null);
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, !0], null), b))) {
    return a | 64;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!1, !0], null), b))) {
    return a & -65;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, !1], null), b))) {
    return a | 73;
  }
  if (cljs.core.truth_(d.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!1, !1], null), b))) {
    return a & -74;
  }
  throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs_node_io.file.setExecutable = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs_node_io.file.setExecutable.call(null, a, b, !0);
};
cljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs_node_io.fs.permissions.call(null, cljs_node_io.fs.stat.call(null, a));
  b = cljs_node_io.file.setExecutable_STAR_.call(null, d, b, c);
  return cljs_node_io.fs.chmod.call(null, a, b);
};
cljs_node_io.file.setExecutable.cljs$lang$maxFixedArity = 3;
cljs_node_io.file.get_non_dirs = function(a) {
  return cljs.core.reverse.call(null, cljs.core.take_while.call(null, cljs.core.complement.call(null, cljs_node_io.fs.dir_QMARK_), cljs.core.iterate.call(null, cljs_node_io.fs.dirname, a)));
};
cljs_node_io.file.File = function(a) {
  this.pathstring = a;
  this.cljs$lang$protocol_mask$partition0$ = 2149580800;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs_node_io.file.File.prototype.cljs_node_io$protocols$IFile$ = cljs.core.PROTOCOL_SENTINEL;
cljs_node_io.file.File.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  var c = cljs.core.juxt.call(null, function(a) {
    return function(a) {
      return a.getPath;
    };
  }(this), cljs.core.type);
  return cljs.core._EQ_.call(null, c.call(null, this), c.call(null, b));
};
cljs_node_io.file.File.prototype.cljs_node_io$protocols$Coercions$ = cljs.core.PROTOCOL_SENTINEL;
cljs_node_io.file.File.prototype.cljs_node_io$protocols$Coercions$as_file$arity$1 = function(a) {
  return this;
};
cljs_node_io.file.File.prototype.cljs_node_io$protocols$Coercions$as_url$arity$1 = function(a) {
  return this.to_url();
};
cljs_node_io.file.File.prototype.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;
cljs_node_io.file.File.prototype.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = function(a, b) {
  return cljs_node_io.protocols.make_reader.call(null, cljs_node_io.protocols.make_input_stream.call(null, this, b), b);
};
cljs_node_io.file.File.prototype.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = function(a, b) {
  return cljs_node_io.protocols.make_writer.call(null, cljs_node_io.protocols.make_output_stream.call(null, this, b), b);
};
cljs_node_io.file.File.prototype.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = function(a, b) {
  return cljs_node_io.streams.FileInputStream.call(null, this, b);
};
cljs_node_io.file.File.prototype.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = function(a, b) {
  return cljs_node_io.streams.FileOutputStream.call(null, this, b);
};
cljs_node_io.file.File.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write.call(null, b, "#object [cljs-node-io.File");
  return cljs.core._write.call(null, b, ["  ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.getPath()), " ]"].join(""));
};
cljs_node_io.file.File.prototype.canExecute = function() {
  return cljs_node_io.fs.executable_QMARK_.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.isDirectory = function() {
  return cljs_node_io.fs.dir_QMARK_.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.getParent = function() {
  return cljs_node_io.fs.dirname.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.setReadable = function() {
  var a = null, b = function(a) {
    return cljs_node_io.file.setReadable.call(null, this.pathstring, a);
  }, c = function(a, b) {
    return cljs_node_io.file.setReadable.call(null, this.pathstring, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs_node_io.file.File.prototype.canWrite = function() {
  return cljs_node_io.fs.writable_QMARK_.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.stats = function() {
  return cljs_node_io.fs.stat__GT_clj.call(null, cljs_node_io.fs.stat.call(null, this.pathstring));
};
cljs_node_io.file.File.prototype.getName = function() {
  return cljs_node_io.fs.basename.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.exists = function() {
  return cljs_node_io.fs.fexists_QMARK_.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.setLastModified = function(a) {
  return cljs_node_io.fs.utimes.call(null, this.pathstring, a, a);
};
cljs_node_io.file.File.prototype.canRead = function() {
  return cljs_node_io.fs.readable_QMARK_.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.createNewFile = function() {
  try {
    return this.write("", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "flags", "flags", 1775418075), "wx"], null)), !0;
  } catch (a) {
    if (a instanceof Error) {
      return !1;
    }
    throw a;
  }
};
cljs_node_io.file.File.prototype.isAbsolute = function() {
  return cljs_node_io.fs.absolute_QMARK_.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.read = function() {
  var a = null, b = function() {
    return cljs_node_io.fs.readFile.call(null, this.pathstring, "utf8");
  }, c = function(a) {
    return cljs_node_io.fs.readFile.call(null, this.pathstring, a);
  };
  a = function(a) {
    switch(arguments.length) {
      case 0:
        return b.call(this);
      case 1:
        return c.call(this, a);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$0 = b;
  a.cljs$core$IFn$_invoke$arity$1 = c;
  return a;
}();
cljs_node_io.file.File.prototype.listFiles = function() {
  var a = null, b = function() {
    var a = this;
    return cljs.core.mapv.call(null, function(b) {
      return function(b) {
        return new cljs_node_io.file.File([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a.pathstring), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs_node_io.fs.sep), cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
      };
    }(this), this.list());
  }, c = function(a) {
    var b = this.listFiles();
    return cljs.core.truth_(b) ? cljs.core.filterv.call(null, cljs.core.partial.call(null, a, this.pathstring), b) : null;
  };
  a = function(a) {
    switch(arguments.length) {
      case 0:
        return b.call(this);
      case 1:
        return c.call(this, a);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$0 = b;
  a.cljs$core$IFn$_invoke$arity$1 = c;
  return a;
}();
cljs_node_io.file.File.prototype.mkdir = function() {
  try {
    return cljs_node_io.fs.mkdir.call(null, this.pathstring), !0;
  } catch (a) {
    if (a instanceof Error) {
      return !1;
    }
    throw a;
  }
};
cljs_node_io.file.File.prototype.isFile = function() {
  return cljs_node_io.fs.file_QMARK_.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.toURI = function() {
  return new goog.Uri(["file:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.pathstring)].join(""));
};
cljs_node_io.file.File.prototype.mkdirs = function() {
  var a = this.getPath();
  a = cljs_node_io.file.get_non_dirs.call(null, a);
  try {
    var b = cljs.core.seq.call(null, a);
    a = null;
    for (var c = 0, d = 0;;) {
      if (d < c) {
        var e = cljs.core._nth.call(null, a, d);
        cljs_node_io.fs.mkdir.call(null, e);
        d += 1;
      } else {
        var f = cljs.core.seq.call(null, b);
        if (f) {
          var g = f;
          if (cljs.core.chunked_seq_QMARK_.call(null, g)) {
            var h = cljs.core.chunk_first.call(null, g), k = cljs.core.chunk_rest.call(null, g);
            g = h;
            var l = cljs.core.count.call(null, h);
            b = k;
            a = g;
            c = l;
          } else {
            var m = cljs.core.first.call(null, g);
            cljs_node_io.fs.mkdir.call(null, m);
            b = cljs.core.next.call(null, g);
            a = null;
            c = 0;
          }
          d = 0;
        } else {
          break;
        }
      }
    }
    return !0;
  } catch (n) {
    if (n instanceof Error) {
      return !1;
    }
    throw n;
  }
};
cljs_node_io.file.File.prototype.setReadOnly = function() {
  return this.setWritable(!1, !1);
};
cljs_node_io.file.File.prototype.getCanonicalFile = function() {
  return new cljs_node_io.file.File(this.getCanonicalPath());
};
cljs_node_io.file.File.prototype.getAbsoluteFile = function() {
  return new cljs_node_io.file.File(this.getAbsolutePath());
};
cljs_node_io.file.File.prototype.getExt = function() {
  return cljs_node_io.fs.ext.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.delete = function() {
  try {
    return cljs_node_io.fs.rm.call(null, this.pathstring), !0;
  } catch (a) {
    if (a instanceof Error) {
      return !1;
    }
    throw a;
  }
};
cljs_node_io.file.File.prototype.getPath = function() {
  return this.pathstring;
};
cljs_node_io.file.File.prototype.toString = function() {
  return this.pathstring;
};
cljs_node_io.file.File.prototype.equals = function(a) {
  return cljs.core._EQ_.call(null, this, a);
};
cljs_node_io.file.File.prototype.aread = function() {
  var a = null, b = function() {
    return cljs_node_io.fs.areadFile.call(null, this.pathstring, "utf8");
  }, c = function(a) {
    return cljs_node_io.fs.areadFile.call(null, this.pathstring, a);
  };
  a = function(a) {
    switch(arguments.length) {
      case 0:
        return b.call(this);
      case 1:
        return c.call(this, a);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$0 = b;
  a.cljs$core$IFn$_invoke$arity$1 = c;
  return a;
}();
cljs_node_io.file.File.prototype.write = function(a, b) {
  return cljs_node_io.fs.writeFile.call(null, this.pathstring, a, b);
};
cljs_node_io.file.File.prototype.renameTo = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: destination must be a string\n(string? dest)");
  }
  try {
    return cljs_node_io.fs.rename.call(null, this.pathstring, a), cljs_node_io.fs.unlink.call(null, this.pathstring), this.pathstring = a, !0;
  } catch (b) {
    if (b instanceof Error) {
      return !1;
    }
    throw b;
  }
};
cljs_node_io.file.File.prototype.deleteOnExit = function() {
  return process.on("exit", function(a) {
    return function(b) {
      return a.delete();
    };
  }(this));
};
cljs_node_io.file.File.prototype.setExecutable = function() {
  var a = null, b = function(a) {
    return cljs_node_io.file.setExecutable.call(null, this.pathstring, a);
  }, c = function(a, b) {
    return cljs_node_io.file.setExecutable.call(null, this.pathstring, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs_node_io.file.File.prototype.hashCode = function() {
  return cljs.core.hash.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.lastModified = function() {
  try {
    var a = cljs_node_io.fs.stat.call(null, this.pathstring);
  } catch (b) {
    if (b instanceof Error) {
      a = !1;
    } else {
      throw b;
    }
  }
  return cljs.core.truth_(a) ? a.mtime.valueOf() : 0;
};
cljs_node_io.file.File.prototype.setWritable = function() {
  var a = null, b = function(a) {
    return cljs_node_io.file.setWritable.call(null, this.pathstring, a);
  }, c = function(a, b) {
    return cljs_node_io.file.setWritable.call(null, this.pathstring, a, b);
  };
  a = function(a, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, a);
      case 2:
        return c.call(this, a, e);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs_node_io.file.File.prototype.list = function() {
  var a = null, b = function() {
    if (cljs_node_io.fs.dir_QMARK_.call(null, this.pathstring)) {
      try {
        return cljs_node_io.fs.readdir.call(null, this.pathstring);
      } catch (d) {
        if (d instanceof Error) {
          return null;
        }
        throw d;
      }
    } else {
      return null;
    }
  }, c = function(a) {
    var b = this.list();
    return cljs.core.truth_(b) ? cljs.core.filterv.call(null, cljs.core.partial.call(null, a, this.pathstring), b) : null;
  };
  a = function(a) {
    switch(arguments.length) {
      case 0:
        return b.call(this);
      case 1:
        return c.call(this, a);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$0 = b;
  a.cljs$core$IFn$_invoke$arity$1 = c;
  return a;
}();
cljs_node_io.file.File.prototype.length = function() {
  try {
    var a = cljs_node_io.fs.stat.call(null, this.pathstring);
  } catch (b) {
    if (b instanceof Error) {
      a = !1;
    } else {
      throw b;
    }
  }
  return cljs.core.truth_(a) ? cljs.core.truth_(a.isDirectory()) ? null : a.size : 0;
};
cljs_node_io.file.File.prototype.getAbsolutePath = function() {
  return cljs_node_io.fs.realpath.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.getCanonicalPath = function() {
  return cljs_node_io.fs.normalize_path.call(null, this.pathstring);
};
cljs_node_io.file.File.prototype.awrite = function(a, b) {
  return cljs_node_io.fs.awriteFile.call(null, this.pathstring, a, b);
};
cljs_node_io.file.File.prototype.getParentFile = function() {
  return new cljs_node_io.file.File(this.getParent());
};
cljs_node_io.file.File.prototype.isHidden = function() {
  return cljs_node_io.fs.hidden_QMARK_.call(null, this.pathstring);
};
cljs_node_io.file.File.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "pathstring", "pathstring", -647531094, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs_node_io.file.File.cljs$lang$type = !0;
cljs_node_io.file.File.cljs$lang$ctorStr = "cljs-node-io.file/File";
cljs_node_io.file.File.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write.call(null, b, "cljs-node-io.file/File");
};
cljs_node_io.file.__GT_File = function(a) {
  return new cljs_node_io.file.File(a);
};
cljs_node_io.core = {};
cljs_node_io.core.path = require("path");
Buffer.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
Buffer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  try {
    return this.equals(b);
  } catch (c) {
    if (c instanceof Error) {
      return !1;
    }
    throw c;
  }
};
cljs_node_io.core.filepath = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.core.filepath.call(null, a, null);
};
cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core._EQ_, d = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.type.call(null, a), cljs.core.type.call(null, b)], null);
  if (cljs.core.truth_(c.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [goog.Uri, null], null), d))) {
    return a.getPath();
  }
  if (cljs.core.truth_(c.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [String, null], null), d))) {
    return a;
  }
  if (cljs.core.truth_(c.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [String, String], null), d))) {
    return cljs_node_io.core.path.join.call(null, a, b);
  }
  if (cljs.core.truth_(c.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs_node_io.file.File, String], null), d))) {
    return cljs_node_io.core.path.join.call(null, a.getPath(), b);
  }
  if (cljs.core.truth_(c.call(null, new cljs.core.Keyword(null, "else", "else", -1508377146), d))) {
    throw new TypeError(["Unrecognized path configuration passed to File constructor.\nYou passed ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, a)), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, b)), "\nYou must pass a [string], [uri], [string string], or [file string]."].join(""));
  }
  throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""));
};
cljs_node_io.core.filepath.cljs$lang$maxFixedArity = 2;
goog.object.set(cljs_node_io.protocols.Coercions, "null", !0);
goog.object.set(cljs_node_io.protocols.as_file, "null", function(a) {
  return null;
});
goog.object.set(cljs_node_io.protocols.as_url, "null", function(a) {
  return null;
});
goog.object.set(cljs_node_io.protocols.Coercions, "string", !0);
goog.object.set(cljs_node_io.protocols.as_file, "string", function(a) {
  return new cljs_node_io.file.File(cljs_node_io.core.filepath.call(null, a));
});
goog.object.set(cljs_node_io.protocols.as_url, "string", function(a) {
  return (new goog.Uri(a)).getPath();
});
goog.Uri.prototype.cljs_node_io$protocols$Coercions$ = cljs.core.PROTOCOL_SENTINEL;
goog.Uri.prototype.cljs_node_io$protocols$Coercions$as_url$arity$1 = function(a) {
  return this.getPath();
};
goog.Uri.prototype.cljs_node_io$protocols$Coercions$as_file$arity$1 = function(a) {
  if (cljs.core._EQ_.call(null, "file", this.getScheme())) {
    return cljs_node_io.protocols.as_file.call(null, this.getPath());
  }
  throw Error(["IllegalArgumentException : Not a file: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this)].join(""));
};
goog.Uri.prototype.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;
goog.Uri.prototype.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = function(a, b) {
  return cljs_node_io.protocols.make_reader.call(null, cljs_node_io.protocols.make_input_stream.call(null, this, b), b);
};
goog.Uri.prototype.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = function(a, b) {
  return cljs_node_io.protocols.make_writer.call(null, cljs_node_io.protocols.make_output_stream.call(null, this, b), b);
};
goog.Uri.prototype.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = function(a, b) {
  return cljs_node_io.protocols.make_input_stream.call(null, cljs.core._EQ_.call(null, "file", this.getScheme()) ? cljs_node_io.streams.FileInputStream.call(null, cljs_node_io.protocols.as_file.call(null, this)) : this.openStream(), b);
};
goog.Uri.prototype.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = function(a, b) {
  if (cljs.core._EQ_.call(null, "file", this.getScheme())) {
    return cljs_node_io.protocols.make_output_stream.call(null, cljs_node_io.protocols.as_file.call(null, this), b);
  }
  throw Error(["IllegalArgumentException: Can not write to non-file URL \x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), "\x3e"].join(""));
};
goog.object.set(cljs_node_io.protocols.IOFactory, "string", !0);
goog.object.set(cljs_node_io.protocols.make_reader, "string", function(a, b) {
  return cljs_node_io.protocols.make_reader.call(null, cljs_node_io.protocols.as_file.call(null, a), b);
});
goog.object.set(cljs_node_io.protocols.make_writer, "string", function(a, b) {
  return cljs_node_io.protocols.make_writer.call(null, cljs_node_io.protocols.as_file.call(null, a), b);
});
goog.object.set(cljs_node_io.protocols.make_input_stream, "string", function(a, b) {
  try {
    return cljs_node_io.protocols.make_input_stream.call(null, new goog.Uri(a), b);
  } catch (c) {
    if (c instanceof Error) {
      return cljs_node_io.protocols.make_input_stream.call(null, new cljs_node_io.file.File(a), b);
    }
    throw c;
  }
});
goog.object.set(cljs_node_io.protocols.make_output_stream, "string", function(a, b) {
  try {
    return cljs_node_io.protocols.make_output_stream.call(null, new goog.Uri(a), b);
  } catch (c) {
    if (c instanceof Error) {
      return cljs_node_io.protocols.make_output_stream.call(null, new cljs_node_io.file.File(a), b);
    }
    throw c;
  }
});
Buffer.prototype.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;
Buffer.prototype.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = function(a, b) {
  return cljs_node_io.protocols.make_reader.call(null, cljs_node_io.protocols.make_input_stream.call(null, this, b), b);
};
Buffer.prototype.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = function(a, b) {
  return cljs_node_io.streams.BufferReadStream.call(null, this, b);
};
Buffer.prototype.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = function(a, b) {
  return cljs_node_io.protocols.make_writer.call(null, cljs_node_io.protocols.make_output_stream.call(null, this, b), b);
};
Buffer.prototype.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = function(a, b) {
  throw Error(["IllegalArgumentException : Cannot open \x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, this)), "\x3e as an OutputStream."].join(""));
};
cljs_node_io.core.as_relative_path = function(a) {
  a = cljs_node_io.protocols.as_file.call(null, a);
  if (cljs.core.truth_(a.isAbsolute())) {
    throw Error(["IllegalArgumentException: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " is not a relative path"].join(""));
  }
  return a.getPath();
};
cljs_node_io.core.file = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs_node_io.protocols.as_file.call(null, a);
};
cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs_node_io.file.File(cljs_node_io.core.filepath.call(null, cljs_node_io.protocols.as_file.call(null, a), cljs_node_io.core.as_relative_path.call(null, b)));
};
cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.call(null, cljs_node_io.core.file, cljs_node_io.core.file.call(null, a, b), c);
};
cljs_node_io.core.file.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs_node_io.core.file.cljs$lang$maxFixedArity = 2;
cljs_node_io.core.delete_file = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs_node_io.core.delete_file.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs_node_io.core.delete_file.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null), d = cljs_node_io.core.file.call(null, a).delete();
  if (cljs.core.truth_(d)) {
    return d;
  }
  if (cljs.core.truth_(c)) {
    return c;
  }
  throw Error(["Couldn't delete ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs_node_io.core.delete_file.cljs$lang$maxFixedArity = 1;
cljs_node_io.core.delete_file.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return cljs_node_io.core.delete_file.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs_node_io.core.reader = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs_node_io.core.reader.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs_node_io.core.reader.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs_node_io.protocols.make_reader.call(null, a, cljs.core.truth_(b) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : null);
};
cljs_node_io.core.reader.cljs$lang$maxFixedArity = 1;
cljs_node_io.core.reader.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return cljs_node_io.core.reader.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs_node_io.core.writer = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs_node_io.core.writer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs_node_io.core.writer.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs_node_io.protocols.make_writer.call(null, a, cljs.core.truth_(b) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : null);
};
cljs_node_io.core.writer.cljs$lang$maxFixedArity = 1;
cljs_node_io.core.writer.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return cljs_node_io.core.writer.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs_node_io.core.input_stream = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs_node_io.core.input_stream.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs_node_io.core.input_stream.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs_node_io.protocols.make_input_stream.call(null, a, cljs.core.truth_(b) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : null);
};
cljs_node_io.core.input_stream.cljs$lang$maxFixedArity = 1;
cljs_node_io.core.input_stream.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return cljs_node_io.core.input_stream.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs_node_io.core.output_stream = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs_node_io.core.output_stream.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs_node_io.core.output_stream.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs_node_io.protocols.make_output_stream.call(null, a, cljs.core.truth_(b) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : null);
};
cljs_node_io.core.output_stream.cljs$lang$maxFixedArity = 1;
cljs_node_io.core.output_stream.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return cljs_node_io.core.output_stream.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs_node_io.core.Buffer_QMARK_ = function(a) {
  return Buffer.isBuffer(a);
};
cljs_node_io.core.Error_QMARK_ = function(a) {
  return a instanceof Error;
};
cljs_node_io.core.slurp = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs_node_io.core.slurp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs_node_io.core.slurp.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.apply.call(null, cljs.core.hash_map, b);
  return cljs_node_io.protocols.as_file.call(null, a).read(function() {
    var a = (new cljs.core.Keyword(null, "encoding", "encoding", 1728578272)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : "utf8";
  }());
};
cljs_node_io.core.slurp.cljs$lang$maxFixedArity = 1;
cljs_node_io.core.slurp.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return cljs_node_io.core.slurp.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs_node_io.core.aslurp = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs_node_io.core.aslurp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs_node_io.core.aslurp.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.apply.call(null, cljs.core.hash_map, b);
  return cljs_node_io.protocols.as_file.call(null, a).aread(function() {
    var a = (new cljs.core.Keyword(null, "encoding", "encoding", 1728578272)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(a) ? a : "utf8";
  }());
};
cljs_node_io.core.aslurp.cljs$lang$maxFixedArity = 1;
cljs_node_io.core.aslurp.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return cljs_node_io.core.aslurp.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs_node_io.core.spit = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs_node_io.core.spit.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs_node_io.core.spit.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  c = cljs.core.apply.call(null, cljs.core.hash_map, c);
  return cljs_node_io.protocols.as_file.call(null, a).write("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), c);
};
cljs_node_io.core.spit.cljs$lang$maxFixedArity = 2;
cljs_node_io.core.spit.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return cljs_node_io.core.spit.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs_node_io.core.aspit = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs_node_io.core.aspit.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs_node_io.core.aspit.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  c = cljs.core.apply.call(null, cljs.core.hash_map, c);
  return cljs_node_io.protocols.as_file.call(null, a).awrite("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), c);
};
cljs_node_io.core.aspit.cljs$lang$maxFixedArity = 2;
cljs_node_io.core.aspit.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return cljs_node_io.core.aspit.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs_node_io.core.file_seq = function(a) {
  return cljs.core.tree_seq.call(null, function(a) {
    return cljs_node_io.core.file.call(null, a).isDirectory();
  }, function(a) {
    return cljs.core.map.call(null, function(b) {
      return cljs_node_io.core.path.join(a, b);
    }, cljs_node_io.core.file.call(null, a).list());
  }, a);
};
cljs_node_io.core.xml_seq = function(a) {
  return cljs.core.tree_seq.call(null, cljs.core.complement.call(null, cljs.core.string_QMARK_), cljs.core.comp.call(null, cljs.core.seq, new cljs.core.Keyword(null, "content", "content", 15833224)), a);
};
cljs_node_io.core.make_parents = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs_node_io.core.make_parents.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs_node_io.core.make_parents.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.apply.call(null, cljs_node_io.core.file, a, b).getParentFile();
  return cljs.core.truth_(c) ? c.mkdirs() : null;
};
cljs_node_io.core.make_parents.cljs$lang$maxFixedArity = 1;
cljs_node_io.core.make_parents.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return cljs_node_io.core.make_parents.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs_node_io.core.input_stream_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs_node_io$protocols$IInputStream$ ? !0 : !1 : !1;
};
cljs_node_io.core.output_stream_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs_node_io$protocols$IOutputStream$ ? !0 : !1 : !1;
};
cljs_node_io.core.stream_type = function(a) {
  return cljs_node_io.core.input_stream_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "InputStream", "InputStream", 1853664890) : cljs_node_io.core.output_stream_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "OutputStream", "OutputStream", -1389658127) : null;
};
cljs_node_io.core.rFile_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs_node_io$protocols$IFile$ ? !0 : !1 : !1;
};
"undefined" === typeof cljs_node_io.core.do_copy && (cljs_node_io.core.do_copy = function() {
  var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs-node-io.core", "do-copy"), function(a, b, c, d, e) {
    return function(a, b, c) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var b = cljs_node_io.core.stream_type.call(null, a);
        if (cljs.core.truth_(b)) {
          return b;
        }
        b = cljs.core.truth_(cljs_node_io.core.rFile_QMARK_.call(null, a)) ? new cljs.core.Keyword(null, "File", "File", -1707525042) : null;
        return cljs.core.truth_(b) ? b : cljs.core.type.call(null, a);
      }(), function() {
        var a = cljs_node_io.core.stream_type.call(null, b);
        if (cljs.core.truth_(a)) {
          return a;
        }
        a = cljs.core.truth_(cljs_node_io.core.rFile_QMARK_.call(null, b)) ? new cljs.core.Keyword(null, "File", "File", -1707525042) : null;
        return cljs.core.truth_(a) ? a : cljs.core.type.call(null, b);
      }()], null);
    };
  }(a, b, c, d, e), new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
}());
cljs.core._add_method.call(null, cljs_node_io.core.do_copy, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "InputStream", "InputStream", 1853664890), new cljs.core.Keyword(null, "OutputStream", "OutputStream", -1389658127)], null), function(a, b, c) {
  c = cljs.core.async.promise_chan.call(null);
  b.on("finish", function(a) {
    return function() {
      return cljs.core.async.close_BANG_.call(null, a);
    };
  }(c));
  a.pipe(b);
  return c;
});
cljs.core._add_method.call(null, cljs_node_io.core.do_copy, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "File", "File", -1707525042), new cljs.core.Keyword(null, "File", "File", -1707525042)], null), function(a, b, c) {
  a = cljs_node_io.streams.FileInputStream.call(null, a, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "encoding", "encoding", 1728578272), ""], null));
  b = cljs_node_io.streams.FileOutputStream.call(null, b, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "encoding", "encoding", 1728578272), ""], null), c));
  return cljs_node_io.core.do_copy.call(null, a, b, c);
});
cljs.core._add_method.call(null, cljs_node_io.core.do_copy, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "File", "File", -1707525042), new cljs.core.Keyword(null, "OutputStream", "OutputStream", -1389658127)], null), function(a, b, c) {
  a = cljs_node_io.streams.FileInputStream.call(null, a, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "encoding", "encoding", 1728578272), ""], null));
  return cljs_node_io.core.do_copy.call(null, a, b, c);
});
cljs.core._add_method.call(null, cljs_node_io.core.do_copy, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "InputStream", "InputStream", 1853664890), new cljs.core.Keyword(null, "File", "File", -1707525042)], null), function(a, b, c) {
  b = cljs_node_io.streams.FileOutputStream.call(null, b, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "encoding", "encoding", 1728578272), ""], null), c));
  return cljs_node_io.core.do_copy.call(null, a, b, c);
});
cljs.core._add_method.call(null, cljs_node_io.core.do_copy, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [Buffer, new cljs.core.Keyword(null, "OutputStream", "OutputStream", -1389658127)], null), function(a, b, c) {
  return cljs_node_io.core.do_copy.call(null, cljs_node_io.streams.BufferReadStream.call(null, a, c), b, null);
});
cljs.core._add_method.call(null, cljs_node_io.core.do_copy, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [Buffer, new cljs.core.Keyword(null, "File", "File", -1707525042)], null), function(a, b, c) {
  return cljs_node_io.core.do_copy.call(null, cljs_node_io.streams.BufferReadStream.call(null, a, c), b, c);
});
cljs_node_io.core.copy = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs_node_io.core.copy.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs_node_io.core.copy.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a = "string" === typeof a ? cljs_node_io.protocols.as_file.call(null, a) : a;
  b = "string" === typeof b ? cljs_node_io.protocols.as_file.call(null, b) : b;
  return cljs_node_io.core.do_copy.call(null, a, b, cljs.core.truth_(c) ? cljs.core.apply.call(null, cljs.core.hash_map, c) : null);
};
cljs_node_io.core.copy.cljs$lang$maxFixedArity = 2;
cljs_node_io.core.copy.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return cljs_node_io.core.copy.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
var clojure = {string:{}};
clojure.string.seq_reverse = function(a) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, a);
};
clojure.string.re_surrogate_pair = RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function(a) {
  return a.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function(a, b, c) {
  var d = RegExp, e = b.source;
  var f = cljs.core.truth_(b.ignoreCase) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1("g"), "i"].join("") : "g";
  f = cljs.core.truth_(b.multiline) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(f), "m"].join("") : f;
  b = cljs.core.truth_(b.unicode) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(f), "u"].join("") : f;
  d = new d(e, b);
  return a.replace(d, c);
};
clojure.string.replace_with = function(a) {
  return function() {
    var b = function(b) {
      b = cljs.core.drop_last.call(null, 2, b);
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, b), 1) ? a.call(null, cljs.core.first.call(null, b)) : a.call(null, cljs.core.vec.call(null, b));
    }, c = function(a) {
      var c = null;
      if (0 < arguments.length) {
        c = 0;
        for (var d = Array(arguments.length - 0); c < d.length;) {
          d[c] = arguments[c + 0], ++c;
        }
        c = new cljs.core.IndexedSeq(d, 0, null);
      }
      return b.call(this, c);
    };
    c.cljs$lang$maxFixedArity = 0;
    c.cljs$lang$applyTo = function(a) {
      a = cljs.core.seq(a);
      return b(a);
    };
    c.cljs$core$IFn$_invoke$arity$variadic = b;
    return c;
  }();
};
clojure.string.replace = function(a, b, c) {
  if ("string" === typeof b) {
    return a.replace(new RegExp(goog.string.regExpEscape(b), "g"), c);
  }
  if (b instanceof RegExp) {
    return "string" === typeof c ? clojure.string.replace_all.call(null, a, b, c) : clojure.string.replace_all.call(null, a, b, clojure.string.replace_with.call(null, c));
  }
  throw ["Invalid match arg: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("");
};
clojure.string.replace_first = function(a, b, c) {
  return a.replace(b, c);
};
clojure.string.join = function(a) {
  switch(arguments.length) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = new goog.string.StringBuffer;
  for (a = cljs.core.seq.call(null, a);;) {
    if (null != a) {
      b = b.append("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, a))), a = cljs.core.next.call(null, a);
    } else {
      return b.toString();
    }
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  for (var c = new goog.string.StringBuffer, d = cljs.core.seq.call(null, b);;) {
    if (null != d) {
      c.append("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, d))), d = cljs.core.next.call(null, d), null != d && c.append(a);
    } else {
      return c.toString();
    }
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function(a) {
  return a.toUpperCase();
};
clojure.string.lower_case = function(a) {
  return a.toLowerCase();
};
clojure.string.capitalize = function(a) {
  return goog.string.capitalize(a);
};
clojure.string.pop_last_while_empty = function(a) {
  for (;;) {
    if ("" === cljs.core.peek.call(null, a)) {
      a = cljs.core.pop.call(null, a);
    } else {
      return a;
    }
  }
};
clojure.string.discard_trailing_if_needed = function(a, b) {
  return 0 === a && 1 < cljs.core.count.call(null, b) ? clojure.string.pop_last_while_empty.call(null, b) : b;
};
clojure.string.split_with_empty_regex = function(a, b) {
  if (0 >= b || b >= 2 + cljs.core.count.call(null, a)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, a)))), "");
  }
  var c = cljs.core._EQ__EQ_;
  if (cljs.core.truth_(c.call(null, 1, b))) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null);
  }
  if (cljs.core.truth_(c.call(null, 2, b))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", a], null);
  }
  c = b - 2;
  return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, a))), 0, c))), cljs.core.subs.call(null, a, c));
};
clojure.string.split = function(a) {
  switch(arguments.length) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return clojure.string.split.call(null, a, b, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return clojure.string.discard_trailing_if_needed.call(null, c, "/(?:)/" === "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(b) ? clojure.string.split_with_empty_regex.call(null, a, c) : 1 > c ? cljs.core.vec.call(null, ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)).split(b)) : function() {
    for (var d = a, e = c, f = cljs.core.PersistentVector.EMPTY;;) {
      if (1 === e) {
        return cljs.core.conj.call(null, f, d);
      }
      var g = cljs.core.re_find.call(null, b, d);
      if (null != g) {
        var h = d.indexOf(g);
        g = d.substring(h + cljs.core.count.call(null, g));
        --e;
        f = cljs.core.conj.call(null, f, d.substring(0, h));
        d = g;
      } else {
        return cljs.core.conj.call(null, f, d);
      }
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function(a) {
  return clojure.string.split.call(null, a, /\n|\r\n/);
};
clojure.string.trim = function(a) {
  return goog.string.trim(a);
};
clojure.string.triml = function(a) {
  return goog.string.trimLeft(a);
};
clojure.string.trimr = function(a) {
  return goog.string.trimRight(a);
};
clojure.string.trim_newline = function(a) {
  for (var b = a.length;;) {
    if (0 === b) {
      return "";
    }
    var c = cljs.core.get.call(null, a, b - 1);
    if ("\n" === c || "\r" === c) {
      --b;
    } else {
      return a.substring(0, b);
    }
  }
};
clojure.string.blank_QMARK_ = function(a) {
  return goog.string.isEmptySafe(a);
};
clojure.string.escape = function(a, b) {
  for (var c = new goog.string.StringBuffer, d = a.length, e = 0;;) {
    if (d === e) {
      return c.toString();
    }
    var f = a.charAt(e), g = cljs.core.get.call(null, b, f);
    null != g ? c.append("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(g)) : c.append(f);
    e += 1;
  }
};
clojure.string.index_of = function(a) {
  switch(arguments.length) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = a.indexOf(b);
  return 0 > c ? null : c;
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = a.indexOf(b, c);
  return 0 > a ? null : a;
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function(a) {
  switch(arguments.length) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = a.lastIndexOf(b);
  return 0 > c ? null : c;
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = a.lastIndexOf(b, c);
  return 0 > a ? null : a;
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function(a, b) {
  return goog.string.startsWith(a, b);
};
clojure.string.ends_with_QMARK_ = function(a, b) {
  return goog.string.endsWith(a, b);
};
clojure.string.includes_QMARK_ = function(a, b) {
  return goog.string.contains(a, b);
};
var huginn = {core:{}};
huginn.core.node$module$mqtt = require("mqtt");
huginn.core.node$module$systeminformation = require("systeminformation");
huginn.core.node$module$jsonwebtoken = require("jsonwebtoken");
cljs.nodejs.enable_util_print_BANG_.call(null);
huginn.core.default_options = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "messageType", "messageType", 1748163586), new cljs.core.Keyword(null, "cloudRegion", "cloudRegion", -857757214), new cljs.core.Keyword(null, "algorithm", "algorithm", 739262820), new cljs.core.Keyword(null, "mqttBridgeHostname", "mqttBridgeHostname", 1814277029), new cljs.core.Keyword(null, "delayMs", "delayMs", -1017330168), new cljs.core.Keyword(null, "deviceId", "deviceId", 1909987208), new cljs.core.Keyword(null, 
"privateKey", "privateKey", 1845961641), new cljs.core.Keyword(null, "registryId", "registryId", -1767694006), new cljs.core.Keyword(null, "tokenExpMins", "tokenExpMins", -1638711857), new cljs.core.Keyword(null, "projectId", "projectId", -1551013096), new cljs.core.Keyword(null, "privateKeyFile", "privateKeyFile", 2040006267), new cljs.core.Keyword(null, "mqttBridgePort", "mqttBridgePort", 1181584124)], ["events", "us-central1", "RS256", "mqtt.googleapis.com", 6E4, function() {
  var a = process.env.DEVICE_ID;
  return cljs.core.truth_(a) ? a : "test-device";
}(), process.env.PRIVATE_KEY, function() {
  var a = process.env.REGISTRY_ID;
  return cljs.core.truth_(a) ? a : "nomes";
}(), 20, function() {
  var a = process.env.GCLOUD_PROJECT;
  if (cljs.core.truth_(a)) {
    return a;
  }
  a = process.env.GCLOUD_PROJECT;
  return cljs.core.truth_(a) ? a : "grownome";
}(), function() {
  var a = process.env.PRIVATE_KEY_FILE;
  return cljs.core.truth_(a) ? a : "rsa_private.pem";
}(), 8883]);
huginn.core.client_id = function(a) {
  var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a;
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "projectId", "projectId", -1551013096));
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "registryId", "registryId", -1767694006)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "cloudRegion", "cloudRegion", -857757214));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "deviceId", "deviceId", 1909987208));
  return ["projects/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "/locations/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), "/registries/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "/devices/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("");
};
huginn.core.round_now = function() {
  return Date.now() / 1000 | 0;
};
huginn.core.clean_env_key = function(a) {
  if (cljs.core.truth_(a)) {
    var b = clojure.string.split.call(null, a, / /);
    a = clojure.string.join.call(null, " ", cljs.core.take.call(null, 3, b));
    var c = clojure.string.join.call(null, " ", cljs.core.take_last.call(null, 3, b));
    b = cljs.core.drop_last.call(null, 3, cljs.core.drop.call(null, 3, b));
    b = clojure.string.join.call(null, "\n", b);
    return clojure.string.join.call(null, "\n", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, c], null));
  }
  return null;
};
huginn.core.create_jwt = function(a) {
  var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "projectId", "projectId", -1551013096)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "tokenExpMins", "tokenExpMins", -1638711857));
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "privateKey", "privateKey", 1845961641));
  cljs.core.get.call(null, b, new cljs.core.Keyword(null, "privateKeyFile", "privateKeyFile", 2040006267));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "algorithm", "algorithm", 739262820));
  c = {iat:huginn.core.round_now.call(null), exp:60 * d + huginn.core.round_now.call(null), aud:c};
  a = huginn.core.clean_env_key.call(null, a);
  return huginn.core.node$module$jsonwebtoken.sign.call(null, c, a, {algorithm:b});
};
huginn.core.connection_args = function(a) {
  a = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a;
  var b = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "mqttBridgeHostname", "mqttBridgeHostname", 1814277029)), c = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "mqttBridgePort", "mqttBridgePort", 1181584124));
  cljs.core.get.call(null, a, new cljs.core.Keyword(null, "projectId", "projectId", -1551013096));
  cljs.core.get.call(null, a, new cljs.core.Keyword(null, "privateKeyFile", "privateKeyFile", 2040006267));
  cljs.core.get.call(null, a, new cljs.core.Keyword(null, "algorithm", "algorithm", 739262820));
  return {host:b, port:c, clientId:huginn.core.client_id.call(null, a), username:"unused", password:huginn.core.create_jwt.call(null, a), protocol:"mqtts", secureProtocol:"TLSv1_2_method"};
};
huginn.core.client_handlers = function(a) {
  return new cljs.core.PersistentArrayMap(null, 4, ["connect", function(b) {
    cljs.core.println.call(null, "connected");
    return cljs.core.truth_(b) ? a.call(null) : cljs.core.println.call(null, "client not connected");
  }, "close", function() {
    return cljs.core.println.call(null, "closed");
  }, "error", function(a) {
    return cljs.core.println.call(null, ["error: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
  }, "message", function(a, c, d) {
    return cljs.core.println.call(null, "got message");
  }], null);
};
huginn.core.add_handlers = function(a, b) {
  for (var c = cljs.core.seq.call(null, b), d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = cljs.core._nth.call(null, d, f), h = cljs.core.nth.call(null, g, 0, null);
      g = cljs.core.nth.call(null, g, 1, null);
      a.on(h, g);
      f += 1;
    } else {
      if (c = cljs.core.seq.call(null, c)) {
        cljs.core.chunked_seq_QMARK_.call(null, c) ? (d = cljs.core.chunk_first.call(null, c), c = cljs.core.chunk_rest.call(null, c), h = d, e = cljs.core.count.call(null, d), d = h) : (d = cljs.core.first.call(null, c), h = cljs.core.nth.call(null, d, 0, null), g = cljs.core.nth.call(null, d, 1, null), a.on(h, g), c = cljs.core.next.call(null, c), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
huginn.core.build_client = function(a) {
  a = huginn.core.connection_args.call(null, a);
  huginn.core.node$module$mqtt.connect.call(null, a);
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "client", "client", -1323448117), huginn.core.node$module$mqtt.connect.call(null, a), new cljs.core.Keyword(null, "iat-time", "iat-time", 111865064), huginn.core.round_now.call(null)], null);
};
huginn.core.init_client = function(a) {
  var b = huginn.core.build_client.call(null, a), c = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, b) : b, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "time", "time", 1385887882)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "client", "client", -1323448117));
  b = huginn.core.client_handlers.call(null, function(b, c, d, e, l) {
    return function() {
      return huginn.core.publish_async.call(null, d, a);
    };
  }(b, c, c, d, e));
  huginn.core.add_handlers.call(null, e, b);
  return c;
};
huginn.core.topic_root = function(a) {
  var b = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a;
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "registryId", "registryId", -1767694006));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "deviceId", "deviceId", 1909987208));
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "-payload"].join("");
};
huginn.core.mqtt_topic = function(a, b) {
  var c = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a;
  c = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "deviceId", "deviceId", 1909987208));
  return ["/devices/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("");
};
huginn.core.sleep_promise = function(a) {
  return promesa.core.promise.call(null, function(b, c) {
    return promesa.core.schedule.call(null, a, function() {
      return b.call(null, a);
    });
  });
};
huginn.core.publish_cpu_data = function(a, b, c, d) {
  if (cljs.core.truth_(d.cores)) {
    cljs.core.println.call(null, "got cpu core data");
    var e = cljs.core.js__GT_clj.call(null, d.cores);
    cljs.core.println.call(null, e);
    cljs.core.doall.call(null, cljs.core.map_indexed.call(null, function(d) {
      return function(d, e) {
        cljs.core.println.call(null, "publishing ", d, ":", e);
        return a.publish([cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "-core-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), c);
      };
    }(e), e));
  }
  cljs.core.truth_(d.main) && (cljs.core.println.call(null, "got max data: ", d.main), a.publish([cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "-core-main"].join(""), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(d.main)));
  return cljs.core.truth_(d.max) ? (cljs.core.println.call(null, "got main data: ", d.max), a.publish([cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "-core-max"].join(""), "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(d.max))) : null;
};
promesa.core.then.call(null, huginn.core.node$module$systeminformation.cpuTemperature.call(null), function(a) {
  return cljs.core.println.call(null, a.max);
});
huginn.core.stop = cljs.core.atom.call(null, !1);
huginn.core.publish_async = function(a, b) {
  var c = null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.apply.call(null, cljs.core.hash_map, a) : a, d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "client", "client", -1323448117)), e = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "iat-time", "iat-time", 111865064)), f = null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? cljs.core.apply.call(null, 
  cljs.core.hash_map, b) : b, g = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "tokenExpMins", "tokenExpMins", -1638711857)), h = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "delayMs", "delayMs", -1017330168));
  if (cljs.core.truth_(cljs.core.deref.call(null, huginn.core.stop))) {
    return d.end();
  }
  var k = huginn.core.mqtt_topic.call(null, f, "events"), l = {qos:1};
  cljs.core.println.call(null, "Publishing message: ");
  return promesa.core.chain.call(null, huginn.core.node$module$systeminformation.cpuTemperature.call(null), cljs.core.partial.call(null, huginn.core.publish_cpu_data, d, k, l), huginn.core.sleep_promise.call(null, h), function(a, b, c, d, e, f, g, h, k, l, z, y) {
    return function() {
      return huginn.core.round_now.call(null) - g > 60 * z ? (cljs.core.println.call(null, ["\tRefreshing token after ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(60), " seconds"].join("")), f.end(), cljs.core.truth_(cljs.core.deref.call(null, huginn.core.stop)) ? null : huginn.core.init_client.call(null, l)) : huginn.core.publish_async.call(null, e, l);
    };
  }(k, l, a, c, c, d, e, b, f, f, g, h));
};
cljs.core.println.call(null, "starting huginn");
huginn.core.c = huginn.core.init_client.call(null, huginn.core.default_options);
cljs.nodejscli = {};
COMPILED && (goog.global = global);
cljs.core.fn_QMARK_.call(null, cljs.core._STAR_main_cli_fn_STAR_) && cljs.core.apply.call(null, cljs.core._STAR_main_cli_fn_STAR_, cljs.core.drop.call(null, 2, goog.object.get(process, "argv")));
