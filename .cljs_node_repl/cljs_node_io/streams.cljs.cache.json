["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$require",["^ "],"~$Error",["^ "],"~$Buffer",["^ ","~$isBuffer",["^ "],"~$concat",["^ "]],"~$TypeError",["^ "],"~$Object",["^ ","~$createReadStream",["^ "],"~$on",["^ "],"~$cljs-node-io$protocols$IInputStream$",["^ "],"~$getFd",["^ "],"~$createWriteStream",["^ "],"~$cljs-node-io$protocols$IOutputStream$",["^ "]]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$cljs-node-io.streams","~:imports",["^ ","~$Uri","~$goog.Uri"],"~:requires",["^ ","^F","^G","~$async","~$cljs.core.async","^J","^J","~$cljs-node-io.protocols","^K"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$make-output-stream","^K","~$<!","^J","~$make-writer","^K","~$chan","^J","~$as-file","^K","~$make-reader","^K","~$Coercions","^K","~$pipe","^J","~$IInputStream","^K","~$make-input-stream","^K","~$alts!","^J","~$IOFactory","^K","~$IFile","^K","~$as-url","^K","~$IOutputStream","^K","~$put!","^J","~$take!","^J"],"~:defs",["^ ","~$fd?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","~:line",132,"~:column",17,"~:end-line",132,"~:end-column",20,"~:tag","~$boolean","~:private",true,"~:arglists",["~#list",["~$quote",["^1@",[["~$fd"]]]]],"~:doc","@param {!Number} fd\n   @return {!boolean} is File-descriptor?"],"^1>",true,"^C","~$cljs-node-io.streams/fd?","~:variadic",false,"^17",".cljs_node_repl/cljs_node_io/streams.cljs","^1;",20,"~:method-params",["^1@",[["^1B"]]],"~:protocol-impl",null,"~:arglists-meta",["^1@",[null,null]],"^19",1,"^18",132,"~:ret-tag","^1=","^1:",132,"~:max-fixed-arity",1,"^1<","^1=","~:fn-var",true,"^1?",["^1@",["^1A",["^1@",[["^1B"]]]]],"^1C","@param {!Number} fd\n   @return {!boolean} is File-descriptor?"],"~$BufferWriteStream",["^ ","^15",null,"^16",["^ ","^17","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","^18",107,"^19",7,"^1:",107,"^1;",24,"^1?",["^1@",["^1A",["^1@",[["~$cb"],["^1M","~$opts"]]]]],"^1C","Creates WritableStream to a buffer. The buffer is formed from concatenated\n   chunks passed to write method. cb is called with the buffer on the 'finish' event.\n   'finish' must be triggered to recieve buffer\n   @return {!stream.Writable}","~:top-fn",["^ ","^1E",false,"^1J",2,"^1F",["^1@",[["^1M"],["^1M","^1N"]]],"^1?",["^1@",[["^1M"],["^1M","^1N"]]],"^1H",["^1@",[null,null]]]],"^C","~$cljs-node-io.streams/BufferWriteStream","^1E",false,"^17",".cljs_node_repl/cljs_node_io/streams.cljs","^1;",24,"^1O",["^ ","^1E",false,"^1J",2,"^1F",["^1@",[["^1M"],["^1M","^1N"]]],"^1?",["^1@",[["^1M"],["^1M","^1N"]]],"^1H",["^1@",[null,null]]],"^1F",["^1@",[["^1M"],["^1M","^1N"]]],"^1G",null,"^1H",["^1@",[null,null]],"^19",1,"^18",107,"^1:",107,"^1J",2,"^1K",true,"^1?",["^1@",[["^1M"],["^1M","^1N"]]],"^1C","Creates WritableStream to a buffer. The buffer is formed from concatenated\n   chunks passed to write method. cb is called with the buffer on the 'finish' event.\n   'finish' must be triggered to recieve buffer\n   @return {!stream.Writable}"],"~$fs",["^ ","^C","~$cljs-node-io.streams/fs","^17",".cljs_node_repl/cljs_node_io/streams.cljs","^18",9,"^19",1,"^1:",9,"^1;",8,"^16",["^ ","^17","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","^18",9,"^19",6,"^1:",9,"^1;",8],"^1<","~$js"],"~$input-IOF!",["^ ","^15",null,"^16",["^ ","^17","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","^18",12,"^19",7,"^1:",12,"^1;",17,"^1?",["^1@",["^1A",["^1@",[["~$streamobj"]]]]],"^1C","adds IOFactory input impls that just defer back to the stream or throw as appropriate\n   @param {!stream.Readable} streamobj\n   @return {!stream.Readable}"],"^C","~$cljs-node-io.streams/input-IOF!","^1E",false,"^17",".cljs_node_repl/cljs_node_io/streams.cljs","^1;",17,"^1F",["^1@",[["^1U"]]],"^1G",null,"^1H",["^1@",[null,null]],"^19",1,"^18",12,"^1:",12,"^1J",1,"^1K",true,"^1?",["^1@",["^1A",["^1@",[["^1U"]]]]],"^1C","adds IOFactory input impls that just defer back to the stream or throw as appropriate\n   @param {!stream.Readable} streamobj\n   @return {!stream.Readable}"],"~$ReadableStream",["^ ","^15",null,"^16",["^ ","^17","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","^18",53,"^19",7,"^1:",53,"^1;",21,"^1?",["^1@",["^1A",["^1@",[["^1N"]]]]],"^1C","@param {!IMap} opts\n   @return {!stream.Readable}"],"^C","~$cljs-node-io.streams/ReadableStream","^1E",false,"^17",".cljs_node_repl/cljs_node_io/streams.cljs","^1;",21,"^1F",["^1@",[["^1N"]]],"^1G",null,"^1H",["^1@",[null,null]],"^19",1,"^18",53,"^1:",53,"^1J",1,"^1K",true,"^1?",["^1@",["^1A",["^1@",[["^1N"]]]]],"^1C","@param {!IMap} opts\n   @return {!stream.Readable}"],"~$FileOutputStream*",["^ ","^15",null,"^16",["^ ","^17","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","^18",187,"^19",8,"^1:",187,"^1;",25,"^1>",true,"^1?",["^1@",["^1A",["^1@",[["~$target","^1N"]]]]],"^1C","@param {!string} target :: filepath to write to\n   @param {!IMap} opts :: map of options\n   @return {!stream.Writable}"],"^1>",true,"^C","~$cljs-node-io.streams/FileOutputStream*","^1E",false,"^17",".cljs_node_repl/cljs_node_io/streams.cljs","^1;",25,"^1F",["^1@",[["^1Z","^1N"]]],"^1G",null,"^1H",["^1@",[null,null]],"^19",1,"^18",187,"^1:",187,"^1J",2,"^1K",true,"^1?",["^1@",["^1A",["^1@",[["^1Z","^1N"]]]]],"^1C","@param {!string} target :: filepath to write to\n   @param {!IMap} opts :: map of options\n   @return {!stream.Writable}"],"~$filepath",["^ ","^15",null,"^16",["^ ","^17","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","^18",138,"^19",8,"^1:",138,"^1;",16,"^1>",true,"^1?",["^1@",["^1A",["^1@",[["~$f","^1N","~$k"]]]]],"^1C","@param {(string|Uri|IFile)} f :: path to filestream\n   @param {?IMap} opts :: map of options\n   @param {!string} k :: string provided by caller for more detailed error in else case\n   @return {?string} or throws. returns nil if fd is present in opts, otherwise returns pathstring"],"^1>",true,"^C","~$cljs-node-io.streams/filepath","^1E",false,"^17",".cljs_node_repl/cljs_node_io/streams.cljs","^1;",16,"^1F",["^1@",[["~$f","^1N","~$k"]]],"^1G",null,"^1H",["^1@",[null,null]],"^19",1,"^18",138,"^1:",138,"^1J",3,"^1K",true,"^1?",["^1@",["^1A",["^1@",[["~$f","^1N","~$k"]]]]],"^1C","@param {(string|Uri|IFile)} f :: path to filestream\n   @param {?IMap} opts :: map of options\n   @param {!string} k :: string provided by caller for more detailed error in else case\n   @return {?string} or throws. returns nil if fd is present in opts, otherwise returns pathstring"],"~$BufferReadStream",["^ ","^15",null,"^16",["^ ","^17","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","^18",86,"^19",7,"^1:",86,"^1;",23,"^1?",["^1@",["^1A",["^1@",[["~$source"],["^23","^1N"]]]]],"^1C","Creates a ReadableStream from a Buffer. Opts are same as ReadableStream except\n   the :read fn is provided. If you provide :read, it is ignored\n   @return {!stream.Readable}","^1O",["^ ","^1E",false,"^1J",2,"^1F",["^1@",[["^23"],["^23","^1N"]]],"^1?",["^1@",[["^23"],["^23","^1N"]]],"^1H",["^1@",[null,null]]]],"^C","~$cljs-node-io.streams/BufferReadStream","^1E",false,"^17",".cljs_node_repl/cljs_node_io/streams.cljs","^1;",23,"^1O",["^ ","^1E",false,"^1J",2,"^1F",["^1@",[["^23"],["^23","^1N"]]],"^1?",["^1@",[["^23"],["^23","^1N"]]],"^1H",["^1@",[null,null]]],"^1F",["^1@",[["^23"],["^23","^1N"]]],"^1G",null,"^1H",["^1@",[null,null]],"^19",1,"^18",86,"^1:",86,"^1J",2,"^1K",true,"^1?",["^1@",[["^23"],["^23","^1N"]]],"^1C","Creates a ReadableStream from a Buffer. Opts are same as ReadableStream except\n   the :read fn is provided. If you provide :read, it is ignored\n   @return {!stream.Readable}"],"~$FileInputStream*",["^ ","^15",null,"^16",["^ ","^17","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","^18",155,"^19",8,"^1:",155,"^1;",24,"^1>",true,"^1?",["^1@",["^1A",["^1@",[["~$src","^1N"]]]]],"^1C","@param {!string} src :: filepath to read from\n   @param {!IMap} opts :: map of options\n   @return {!stream.Readable}"],"^1>",true,"^C","~$cljs-node-io.streams/FileInputStream*","^1E",false,"^17",".cljs_node_repl/cljs_node_io/streams.cljs","^1;",24,"^1F",["^1@",[["^26","^1N"]]],"^1G",null,"^1H",["^1@",[null,null]],"^19",1,"^18",155,"^1:",155,"^1J",2,"^1K",true,"^1?",["^1@",["^1A",["^1@",[["^26","^1N"]]]]],"^1C","@param {!string} src :: filepath to read from\n   @param {!IMap} opts :: map of options\n   @return {!stream.Readable}"],"~$WritableStream",["^ ","^15",null,"^16",["^ ","^17","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","^18",61,"^19",7,"^1:",61,"^1;",21,"^1?",["^1@",["^1A",["^1@",[["^1N"]]]]],"^1C","@param {!IMap} opts\n   @return {!stream.Writable}"],"^C","~$cljs-node-io.streams/WritableStream","^1E",false,"^17",".cljs_node_repl/cljs_node_io/streams.cljs","^1;",21,"^1F",["^1@",[["^1N"]]],"^1G",null,"^1H",["^1@",[null,null]],"^19",1,"^18",61,"^1:",61,"^1J",1,"^1K",true,"^1?",["^1@",["^1A",["^1@",[["^1N"]]]]],"^1C","@param {!IMap} opts\n   @return {!stream.Writable}"],"~$duplex-IOF!",["^ ","^15",null,"^16",["^ ","^17","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","^18",38,"^19",7,"^1:",38,"^1;",18,"^1?",["^1@",["^1A",["^1@",[["^1U"]]]]],"^1C","defer back to the stream in all cases\n   @param {!stream.Duplex} streamobj\n   @return {!stream.Duplex}"],"^C","~$cljs-node-io.streams/duplex-IOF!","^1E",false,"^17",".cljs_node_repl/cljs_node_io/streams.cljs","^1;",18,"^1F",["^1@",[["^1U"]]],"^1G",null,"^1H",["^1@",[null,null]],"^19",1,"^18",38,"^1:",38,"^1J",1,"^1K",true,"^1?",["^1@",["^1A",["^1@",[["^1U"]]]]],"^1C","defer back to the stream in all cases\n   @param {!stream.Duplex} streamobj\n   @return {!stream.Duplex}"],"~$stream",["^ ","^C","~$cljs-node-io.streams/stream","^17",".cljs_node_repl/cljs_node_io/streams.cljs","^18",10,"^19",1,"^1:",10,"^1;",12,"^16",["^ ","^17","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","^18",10,"^19",6,"^1:",10,"^1;",12],"^1<","^1S"],"~$FileOutputStream",["^ ","^15",null,"^16",["^ ","^17","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","^18",212,"^19",7,"^1:",212,"^1;",23,"^1?",["^1@",["^1A",["^1@",[["^1Z"],["^1Z","^1N"]]]]],"^1C","@return {!stream.Writable}","^1O",["^ ","^1E",false,"^1J",2,"^1F",["^1@",[["^1Z"],["^1Z","^1N"]]],"^1?",["^1@",[["^1Z"],["^1Z","^1N"]]],"^1H",["^1@",[null,null]]]],"^C","~$cljs-node-io.streams/FileOutputStream","^1E",false,"^17",".cljs_node_repl/cljs_node_io/streams.cljs","^1;",23,"^1O",["^ ","^1E",false,"^1J",2,"^1F",["^1@",[["^1Z"],["^1Z","^1N"]]],"^1?",["^1@",[["^1Z"],["^1Z","^1N"]]],"^1H",["^1@",[null,null]]],"^1F",["^1@",[["^1Z"],["^1Z","^1N"]]],"^1G",null,"^1H",["^1@",[null,null]],"^19",1,"^18",212,"^1:",212,"^1J",2,"^1K",true,"^1?",["^1@",[["^1Z"],["^1Z","^1N"]]],"^1C","@return {!stream.Writable}"],"~$DuplexStream",["^ ","^15",null,"^16",["^ ","^17","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","^18",69,"^19",7,"^1:",69,"^1;",19,"^1?",["^1@",["^1A",["^1@",[["^1N"]]]]],"^1C","@param {!IMap} opts\n   @return {!stream.Duplex}"],"^C","~$cljs-node-io.streams/DuplexStream","^1E",false,"^17",".cljs_node_repl/cljs_node_io/streams.cljs","^1;",19,"^1F",["^1@",[["^1N"]]],"^1G",null,"^1H",["^1@",[null,null]],"^19",1,"^18",69,"^1:",69,"^1J",1,"^1K",true,"^1?",["^1@",["^1A",["^1@",[["^1N"]]]]],"^1C","@param {!IMap} opts\n   @return {!stream.Duplex}"],"~$FileInputStream",["^ ","^15",null,"^16",["^ ","^17","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","^18",181,"^19",7,"^1:",181,"^1;",22,"^1?",["^1@",["^1A",["^1@",[["^26"],["^26","^1N"]]]]],"^1C","@return {!stream.Readable}","^1O",["^ ","^1E",false,"^1J",2,"^1F",["^1@",[["^26"],["^26","^1N"]]],"^1?",["^1@",[["^26"],["^26","^1N"]]],"^1H",["^1@",[null,null]]]],"^C","~$cljs-node-io.streams/FileInputStream","^1E",false,"^17",".cljs_node_repl/cljs_node_io/streams.cljs","^1;",22,"^1O",["^ ","^1E",false,"^1J",2,"^1F",["^1@",[["^26"],["^26","^1N"]]],"^1?",["^1@",[["^26"],["^26","^1N"]]],"^1H",["^1@",[null,null]]],"^1F",["^1@",[["^26"],["^26","^1N"]]],"^1G",null,"^1H",["^1@",[null,null]],"^19",1,"^18",181,"^1:",181,"^1J",2,"^1K",true,"^1?",["^1@",[["^26"],["^26","^1N"]]],"^1C","@return {!stream.Readable}"],"~$output-IOF!",["^ ","^15",null,"^16",["^ ","^17","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","^18",25,"^19",7,"^1:",25,"^1;",18,"^1?",["^1@",["^1A",["^1@",[["^1U"]]]]],"^1C","adds IOFactory output impls that just defer back to the stream or throw as appropriate\n   @param {!stream.Writable} streamobj\n   @return {!stream.Writable}"],"^C","~$cljs-node-io.streams/output-IOF!","^1E",false,"^17",".cljs_node_repl/cljs_node_io/streams.cljs","^1;",18,"^1F",["^1@",[["^1U"]]],"^1G",null,"^1H",["^1@",[null,null]],"^19",1,"^18",25,"^1:",25,"^1J",1,"^1K",true,"^1?",["^1@",["^1A",["^1@",[["^1U"]]]]],"^1C","adds IOFactory output impls that just defer back to the stream or throw as appropriate\n   @param {!stream.Writable} streamobj\n   @return {!stream.Writable}"],"~$TransformStream",["^ ","^15",null,"^16",["^ ","^17","/home/fode/src/huginn/.cljs_node_repl/cljs_node_io/streams.cljs","^18",77,"^19",7,"^1:",77,"^1;",22,"^1?",["^1@",["^1A",["^1@",[["^1N"]]]]],"^1C","@param {!IMap} opts\n   @return {!stream.Duplex}"],"^C","~$cljs-node-io.streams/TransformStream","^1E",false,"^17",".cljs_node_repl/cljs_node_io/streams.cljs","^1;",22,"^1F",["^1@",[["^1N"]]],"^1G",null,"^1H",["^1@",[null,null]],"^19",1,"^18",77,"^1:",77,"^1J",1,"^1K",true,"^1?",["^1@",["^1A",["^1@",[["^1N"]]]]],"^1C","@param {!IMap} opts\n   @return {!stream.Duplex}"]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^I","^J","^J","^J"],"~:cljs.analyzer/constants",["^ ","~:seen",["^B",["~:encoding","~:autoClose?","~:flush","~:transform","~:read","~:else","~:fd","~:append","~:mode","~:write","~:flags"]],"~:order",["^2P","^2U","^2O","^2N","^2R","^2Q","^2V","^2L","^2T","^2M","^2S"]],"^1C",null]