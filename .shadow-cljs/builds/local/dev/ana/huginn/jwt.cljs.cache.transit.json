["^ ","~:output",["^ ","~:js","goog.provide('huginn.jwt');\ngoog.require('cljs.core');\ngoog.require('clojure.string');\ngoog.require('promesa.core');\ngoog.require('cljs_node_io.core');\ngoog.require('cljs.nodejs');\ngoog.require('shadow.js.shim.module$jsonwebtoken');\nhuginn.jwt.round_now = (function huginn$jwt$round_now(){\nreturn ((Date.now() / (1000)) | (0));\n});\n/**\n * becuase env vars don't get assinged with newlines in resin\n */\nhuginn.jwt.clean_env_key = (function huginn$jwt$clean_env_key(private_key){\nif(cljs.core.truth_(private_key)){\nvar split = clojure.string.split.cljs$core$IFn$_invoke$arity$2(private_key,/ /);\nvar header = clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",cljs.core.take.cljs$core$IFn$_invoke$arity$2((3),split));\nvar footer = clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",cljs.core.take_last((3),split));\nvar body = cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2((3),cljs.core.drop.cljs$core$IFn$_invoke$arity$2((3),split));\nvar joined_body = clojure.string.join.cljs$core$IFn$_invoke$arity$2(\"\\n\",body);\nvar joined_text = clojure.string.join.cljs$core$IFn$_invoke$arity$2(\"\\n\",new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [header,joined_body,footer], null));\nreturn joined_text;\n} else {\nreturn null;\n}\n});\n/**\n * Builds a jwt with an experation\n */\nhuginn.jwt.create_jwt = (function huginn$jwt$create_jwt(p__38871){\nvar map__38872 = p__38871;\nvar map__38872__$1 = ((((!((map__38872 == null)))?(((((map__38872.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__38872.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__38872):map__38872);\nvar opts = map__38872__$1;\nvar projectId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38872__$1,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096));\nvar tokenExpMins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38872__$1,new cljs.core.Keyword(null,\"tokenExpMins\",\"tokenExpMins\",-1638711857));\nvar privateKey = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38872__$1,new cljs.core.Keyword(null,\"privateKey\",\"privateKey\",1845961641));\nvar privateKeyFile = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38872__$1,new cljs.core.Keyword(null,\"privateKeyFile\",\"privateKeyFile\",2040006267));\nvar algorithm = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38872__$1,new cljs.core.Keyword(null,\"algorithm\",\"algorithm\",739262820));\nvar token = ({\"iat\": huginn.jwt.round_now(), \"exp\": ((tokenExpMins * (60)) + huginn.jwt.round_now()), \"aud\": projectId});\nvar privKey = (function (){var or__3949__auto__ = huginn.jwt.clean_env_key(privateKey);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn cljs_node_io.core.slurp(privateKeyFile);\n}\n})();\nvar G__38874 = token;\nvar G__38875 = privKey;\nvar G__38876 = ({\"algorithm\": algorithm});\nreturn shadow.js.shim.module$jsonwebtoken.sign(G__38874,G__38875,G__38876);\n});\nhuginn.jwt.client_id = (function huginn$jwt$client_id(p__38879){\nvar map__38880 = p__38879;\nvar map__38880__$1 = ((((!((map__38880 == null)))?(((((map__38880.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__38880.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__38880):map__38880);\nvar opts = map__38880__$1;\nvar projectId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38880__$1,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096));\nvar registryId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38880__$1,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\nvar cloudRegion = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38880__$1,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214));\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38880__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"projects/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(projectId),\"/locations/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cloudRegion),\"/registries/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(registryId),\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId)].join('');\n});\n/**\n * builds connection args for connecting to mqtt\n *   The same args are used no matter what topic you\n *   are connecting too\n */\nhuginn.jwt.connection_args = (function huginn$jwt$connection_args(p__38884){\nvar map__38885 = p__38884;\nvar map__38885__$1 = ((((!((map__38885 == null)))?(((((map__38885.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__38885.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__38885):map__38885);\nvar opts = map__38885__$1;\nvar mqttBridgeHostname = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38885__$1,new cljs.core.Keyword(null,\"mqttBridgeHostname\",\"mqttBridgeHostname\",1814277029));\nvar mqttBridgePort = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38885__$1,new cljs.core.Keyword(null,\"mqttBridgePort\",\"mqttBridgePort\",1181584124));\nvar projectId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38885__$1,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096));\nvar privateKeyFile = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38885__$1,new cljs.core.Keyword(null,\"privateKeyFile\",\"privateKeyFile\",2040006267));\nvar algorithm = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__38885__$1,new cljs.core.Keyword(null,\"algorithm\",\"algorithm\",739262820));\nreturn ({\"host\": mqttBridgeHostname, \"port\": mqttBridgePort, \"clientId\": huginn.jwt.client_id(opts), \"username\": \"unused\", \"password\": huginn.jwt.create_jwt(opts), \"protocol\": \"mqtts\", \"secureProtocol\": \"TLSv1_2_method\"});\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","huginn/jwt.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",15],"~:ns-aliases",["^ ","~$jsonwebtoken","~$shadow.js.shim.module$jsonwebtoken","~$mqtt","~$shadow.js.shim.module$mqtt","~$systeminformation","~$shadow.js.shim.module$systeminformation"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$huginn.jwt","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$p","~$promesa.core","^K","^K","^<","^=","~$cljs.core","^L","~$io","~$cljs-node-io.core","~$goog","^O","~$cljs.nodejs","^P","^=","^=","~$nodejs","^P","^N","^N","~$jwt","^=","~$clojure.string","^S","~$st","^S"],"~:seen",["^D",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^L","^L"],"~:form",["~#list",["~$ns","^F",["^Z",["^V",["^S","~:as","^T"],["^K","^10","~$p"],["^N","^10","^M"],["^P","^10","^Q"],["^<","^10","^R"]]]]],"~:flags",["^ ","^V",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^O","^L","^S","^K","^N","^P","^="]],"^H","^F","~:resource-id",["~:shadow.build.classpath/resource","huginn/jwt.cljs"],"~:compiled-at",1537044615291,"~:resource-name","huginn/jwt.cljs","~:warnings",[],"~:source","(ns huginn.jwt\n  (:require\n   [clojure.string :as st]\n   [promesa.core :as p]\n   [cljs-node-io.core :as io]\n   [cljs.nodejs :as nodejs]\n   [jsonwebtoken :as jwt]))\n\n(defn round-now []\n  (int (/ (js/Date.now) 1000)))\n\n(defn clean-env-key\n  \"becuase env vars don't get assinged with newlines in resin\"\n  [private-key]\n  (when private-key\n    (let [split  (st/split private-key  #\" \")\n          header (st/join \" \" (take 3 split))\n          footer (st/join \" \" (take-last 3 split))\n          body   (drop-last 3 (drop 3 split))\n          joined-body (st/join \"\\n\" body)\n          joined-text (st/join \"\\n\" [header joined-body footer])]\n      joined-text)))\n\n(defn create-jwt\n  \"Builds a jwt with an experation\"\n  [{:keys [projectId tokenExpMins privateKey privateKeyFile algorithm] :as opts}]\n  (let [token\n        #js {:iat (round-now)\n             :exp (+ (* tokenExpMins 60) (round-now)) ;now + 20 min\n             :aud projectId}\n        privKey (or (clean-env-key privateKey) (io/slurp privateKeyFile))]\n    (jwt/sign token privKey #js {:algorithm algorithm })))\n\n(defn client-id\n  [{:keys [projectId registryId cloudRegion deviceId] :as opts}]\n  (str \"projects/\" projectId\n       \"/locations/\" cloudRegion\n       \"/registries/\" registryId\n       \"/devices/\" deviceId))\n\n\n(defn connection-args\n  \"builds connection args for connecting to mqtt\n  The same args are used no matter what topic you\n  are connecting too\"\n  [{:keys [mqttBridgeHostname mqttBridgePort projectId privateKeyFile algorithm] :as opts}]\n  #js {:host mqttBridgeHostname\n       :port mqttBridgePort\n       :clientId (client-id opts)\n       :username \"unused\"\n       :password (create-jwt opts)\n       :protocol \"mqtts\"\n       :secureProtocol \"TLSv1_2_method\"})\n\n","~:reader-features",["^D",["~:cljs"]],"~:source-map",["^ ","~i8",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",7],["^ ","^1=",23,"^1>",7],["^ ","^1=",0,"^1>",8]],"~i6",[["^ ","^1=",0,"^1>",7,"^E","huginn.jwt/round-now"]]],"~i9",["^ ","~i2",[["^ ","^1=",0,"^1>",8],["^ ","^1=",32,"^1>",8]],"~i7",[["^ ","^1=",8,"^1>",8],["^ ","^1=",22,"^1>",8]],"~i10",[["^ ","^1=",9,"^1>",8]],"~i11",[["^ ","^1=",9,"^1>",8,"^E","js/Date.now"]]],"^1@",["^ ","~i0",[["^ ","^1=",0,"^1>",10],["^ ","^1=",27,"^1>",13],["^ ","^1=",0,"^1>",14]],"~i6",[["^ ","^1=",0,"^1>",13,"^E","huginn.jwt/clean-env-key"]]],"~i13",["^ ","~i3",[["^ ","^1=",62,"^1>",13,"^E","private-key"]]],"~i14",["^ ","~i2",[["^ ","^1=",0,"^1>",14],["^ ","^1=",0,"^1>",15],["^ ","^1=",0,"^1>",23]],"~i8",[["^ ","^1=",20,"^1>",14,"^E","private-key"]]],"~i15",["^ ","~i4",[["^ ","^1=",0,"^1>",15],["^ ","^1=",0,"^1>",21]],"^1?",[["^ ","^1=",4,"^1>",15,"^E","split"]],"~i17",[["^ ","^1=",12,"^1>",15],["^ ","^1=",75,"^1>",15]],"~i18",[["^ ","^1=",12,"^1>",15,"^E","clojure.string.split.cljs$core$IFn$_invoke$arity$2"]],"~i27",[["^ ","^1=",63,"^1>",15,"^E","private-key"]]],"~i16",["^ ","^1?",[["^ ","^1=",4,"^1>",16,"^E","header"]],"^1D",[["^ ","^1=",13,"^1>",16],["^ ","^1=",63,"^1>",16]],"^1E",[["^ ","^1=",13,"^1>",16,"^E","clojure.string.join.cljs$core$IFn$_invoke$arity$2"]],"~i30",[["^ ","^1=",67,"^1>",16],["^ ","^1=",112,"^1>",16]],"~i31",[["^ ","^1=",67,"^1>",16,"^E","cljs.core.take.cljs$core$IFn$_invoke$arity$2"]],"~i38",[["^ ","^1=",116,"^1>",16,"^E","split"]]],"^1D",["^ ","^1?",[["^ ","^1=",4,"^1>",17,"^E","footer"]],"^1D",[["^ ","^1=",13,"^1>",17],["^ ","^1=",63,"^1>",17]],"^1E",[["^ ","^1=",13,"^1>",17,"^E","clojure.string.join.cljs$core$IFn$_invoke$arity$2"]],"^1H",[["^ ","^1=",67,"^1>",17],["^ ","^1=",87,"^1>",17]],"^1I",[["^ ","^1=",67,"^1>",17,"^E","cljs.core/take-last"]],"~i43",[["^ ","^1=",91,"^1>",17,"^E","split"]]],"^1E",["^ ","^1?",[["^ ","^1=",4,"^1>",18,"^E","body"]],"^1D",[["^ ","^1=",11,"^1>",18],["^ ","^1=",61,"^1>",18]],"^1E",[["^ ","^1=",11,"^1>",18,"^E","cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2"]],"^1H",[["^ ","^1=",65,"^1>",18],["^ ","^1=",110,"^1>",18]],"^1I",[["^ ","^1=",65,"^1>",18,"^E","cljs.core.drop.cljs$core$IFn$_invoke$arity$2"]],"^1J",[["^ ","^1=",114,"^1>",18,"^E","split"]]],"~i19",["^ ","^1?",[["^ ","^1=",4,"^1>",19,"^E","joined-body"]],"~i22",[["^ ","^1=",18,"^1>",19],["^ ","^1=",68,"^1>",19]],"~i23",[["^ ","^1=",18,"^1>",19,"^E","clojure.string.join.cljs$core$IFn$_invoke$arity$2"]],"~i36",[["^ ","^1=",73,"^1>",19,"^E","body"]]],"~i20",["^ ","^1?",[["^ ","^1=",4,"^1>",20,"^E","joined-text"]],"^1M",[["^ ","^1=",18,"^1>",20],["^ ","^1=",68,"^1>",20],["^ ","^1=",73,"^1>",20]],"^1N",[["^ ","^1=",18,"^1>",20,"^E","clojure.string.join.cljs$core$IFn$_invoke$arity$2"]],"~i37",[["^ ","^1=",156,"^1>",20,"^E","header"]],"~i44",[["^ ","^1=",163,"^1>",20,"^E","joined-body"]],"~i56",[["^ ","^1=",175,"^1>",20,"^E","footer"]]],"~i21",["^ ","~i6",[["^ ","^1=",0,"^1>",21,"^E","joined-text"]]],"^1N",["^ ","~i0",[["^ ","^1=",0,"^1>",26],["^ ","^1=",24,"^1>",29],["^ ","^1=",56,"^1>",29,"^E","p__38871"],["^ ","^1=",0,"^1>",30],["^ ","^1=",0,"^1>",30],["^ ","^1=",4,"^1>",30,"^E","map__38872"],["^ ","^1=",17,"^1>",30,"^E","p__38871"],["^ ","^1=",4,"^1>",31,"^E","map__38872"],["^ ","^1=",21,"^1>",31],["^ ","^1=",23,"^1>",31],["^ ","^1=",25,"^1>",31],["^ ","^1=",27,"^1>",31],["^ ","^1=",28,"^1>",31,"^E","map__38872"],["^ ","^1=",42,"^1>",31],["^ ","^1=",50,"^1>",31],["^ ","^1=",52,"^1>",31],["^ ","^1=",54,"^1>",31],["^ ","^1=",55,"^1>",31],["^ ","^1=",55,"^1>",31,"^E","map__38872"],["^ ","^1=",104,"^1>",31],["^ ","^1=",115,"^1>",31],["^ ","^1=",116,"^1>",31,"^E","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1=",148,"^1>",31],["^ ","^1=",148,"^1>",31,"^E","map__38872"],["^ ","^1=",179,"^1>",31],["^ ","^1=",184,"^1>",31],["^ ","^1=",191,"^1>",31],["^ ","^1=",199,"^1>",31],["^ ","^1=",199,"^1>",31,"^E","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",245,"^1>",31,"^E","cljs.core/hash-map"],["^ ","^1=",264,"^1>",31,"^E","map__38872"],["^ ","^1=",276,"^1>",31,"^E","map__38872"],["^ ","^1=",11,"^1>",32,"^E","map__38872"],["^ ","^1=",16,"^1>",33],["^ ","^1=",16,"^1>",33,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",60,"^1>",33,"^E","map__38872"],["^ ","^1=",75,"^1>",33],["^ ","^1=",19,"^1>",34],["^ ","^1=",19,"^1>",34,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",63,"^1>",34,"^E","map__38872"],["^ ","^1=",78,"^1>",34],["^ ","^1=",17,"^1>",35],["^ ","^1=",17,"^1>",35,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",61,"^1>",35,"^E","map__38872"],["^ ","^1=",76,"^1>",35],["^ ","^1=",21,"^1>",36],["^ ","^1=",21,"^1>",36,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",65,"^1>",36,"^E","map__38872"],["^ ","^1=",80,"^1>",36],["^ ","^1=",16,"^1>",37],["^ ","^1=",16,"^1>",37,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",60,"^1>",37,"^E","map__38872"],["^ ","^1=",75,"^1>",37],["^ ","^1=",0,"^1>",38]],"~i6",[["^ ","^1=",0,"^1>",29,"^E","huginn.jwt/create-jwt"]]],"~i25",["^ ","^1@",[["^ ","^1=",4,"^1>",33,"^E","projectId"]],"^1T",[["^ ","^1=",4,"^1>",34,"^E","tokenExpMins"]],"~i34",[["^ ","^1=",4,"^1>",35,"^E","privateKey"]],"~i45",[["^ ","^1=",4,"^1>",36,"^E","privateKeyFile"]],"~i60",[["^ ","^1=",4,"^1>",37,"^E","algorithm"]],"~i75",[["^ ","^1=",4,"^1>",32,"^E","opts"]]],"~i26",["^ ","~i2",[["^ ","^1=",0,"^1>",38],["^ ","^1=",12,"^1>",38],["^ ","^1=",0,"^1>",46]],"~i8",[["^ ","^1=",4,"^1>",38,"^E","token"]]],"^1F",["^ ","^1E",[["^ ","^1=",21,"^1>",38]],"^1L",[["^ ","^1=",21,"^1>",38,"^E","huginn.jwt/round-now"]]],"~i28",["^ ","^1E",[["^ ","^1=",52,"^1>",38]],"^1T",[["^ ","^1=",53,"^1>",38],["^ ","^1=",69,"^1>",38]],"~i24",[["^ ","^1=",54,"^1>",38,"^E","tokenExpMins"]],"~i41",[["^ ","^1=",77,"^1>",38]],"~i42",[["^ ","^1=",77,"^1>",38,"^E","huginn.jwt/round-now"]]],"~i29",["^ ","^1E",[["^ ","^1=",109,"^1>",38,"^E","projectId"]]],"^1H",["^ ","~i8",[["^ ","^1=",4,"^1>",39,"^E","privKey"]],"^1G",[["^ ","^1=",14,"^1>",39],["^ ","^1=",31,"^1>",39,"^E","or__3949__auto__"],["^ ","^1=",0,"^1>",40],["^ ","^1=",0,"^1>",40],["^ ","^1=",20,"^1>",40,"^E","or__3949__auto__"],["^ ","^1=",0,"^1>",41,"^E","or__3949__auto__"]],"^1P",[["^ ","^1=",50,"^1>",39]],"^1T",[["^ ","^1=",50,"^1>",39,"^E","huginn.jwt/clean-env-key"]],"~i35",[["^ ","^1=",75,"^1>",39,"^E","privateKey"]],"~i47",[["^ ","^1=",0,"^1>",43]],"~i48",[["^ ","^1=",7,"^1>",43,"^E","cljs-node-io.core/slurp"]],"~i57",[["^ ","^1=",31,"^1>",43,"^E","privateKeyFile"]]],"^1I",["^ ","~i4",[["^ ","^1=",0,"^1>",46],["^ ","^1=",4,"^1>",46,"^E","G__38874"],["^ ","^1=",4,"^1>",47,"^E","G__38875"],["^ ","^1=",4,"^1>",48,"^E","G__38876"],["^ ","^1=",15,"^1>",48],["^ ","^1=",0,"^1>",49],["^ ","^1=",0,"^1>",49],["^ ","^1=",47,"^1>",49,"^E","G__38874"],["^ ","^1=",56,"^1>",49,"^E","G__38875"],["^ ","^1=",65,"^1>",49,"^E","G__38876"]],"~i5",[["^ ","^1=",7,"^1>",49,"^E","js/shadow.js.shim.module$jsonwebtoken.sign"]],"^1B",[["^ ","^1=",15,"^1>",46,"^E","token"]],"^1P",[["^ ","^1=",15,"^1>",47,"^E","privKey"]],"^1R",[["^ ","^1=",30,"^1>",48,"^E","algorithm"]]],"~i33",["^ ","~i0",[["^ ","^1=",0,"^1>",51],["^ ","^1=",23,"^1>",51],["^ ","^1=",54,"^1>",51,"^E","p__38879"],["^ ","^1=",0,"^1>",52],["^ ","^1=",0,"^1>",52],["^ ","^1=",4,"^1>",52,"^E","map__38880"],["^ ","^1=",17,"^1>",52,"^E","p__38879"],["^ ","^1=",4,"^1>",53,"^E","map__38880"],["^ ","^1=",21,"^1>",53],["^ ","^1=",23,"^1>",53],["^ ","^1=",25,"^1>",53],["^ ","^1=",27,"^1>",53],["^ ","^1=",28,"^1>",53,"^E","map__38880"],["^ ","^1=",42,"^1>",53],["^ ","^1=",50,"^1>",53],["^ ","^1=",52,"^1>",53],["^ ","^1=",54,"^1>",53],["^ ","^1=",55,"^1>",53],["^ ","^1=",55,"^1>",53,"^E","map__38880"],["^ ","^1=",104,"^1>",53],["^ ","^1=",115,"^1>",53],["^ ","^1=",116,"^1>",53,"^E","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1=",148,"^1>",53],["^ ","^1=",148,"^1>",53,"^E","map__38880"],["^ ","^1=",179,"^1>",53],["^ ","^1=",184,"^1>",53],["^ ","^1=",191,"^1>",53],["^ ","^1=",199,"^1>",53],["^ ","^1=",199,"^1>",53,"^E","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",245,"^1>",53,"^E","cljs.core/hash-map"],["^ ","^1=",264,"^1>",53,"^E","map__38880"],["^ ","^1=",276,"^1>",53,"^E","map__38880"],["^ ","^1=",11,"^1>",54,"^E","map__38880"],["^ ","^1=",16,"^1>",55],["^ ","^1=",16,"^1>",55,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",60,"^1>",55,"^E","map__38880"],["^ ","^1=",75,"^1>",55],["^ ","^1=",17,"^1>",56],["^ ","^1=",17,"^1>",56,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",61,"^1>",56,"^E","map__38880"],["^ ","^1=",76,"^1>",56],["^ ","^1=",18,"^1>",57],["^ ","^1=",18,"^1>",57,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",62,"^1>",57,"^E","map__38880"],["^ ","^1=",77,"^1>",57],["^ ","^1=",15,"^1>",58],["^ ","^1=",15,"^1>",58,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",59,"^1>",58,"^E","map__38880"],["^ ","^1=",74,"^1>",58],["^ ","^1=",0,"^1>",59]],"~i6",[["^ ","^1=",0,"^1>",51,"^E","huginn.jwt/client-id"]]],"^1V",["^ ","^1@",[["^ ","^1=",4,"^1>",55,"^E","projectId"]],"^1T",[["^ ","^1=",4,"^1>",56,"^E","registryId"]],"~i32",[["^ ","^1=",4,"^1>",57,"^E","cloudRegion"]],"^1R",[["^ ","^1=",4,"^1>",58,"^E","deviceId"]],"~i58",[["^ ","^1=",4,"^1>",54,"^E","opts"]]],"^24",["^ ","~i2",[["^ ","^1=",0,"^1>",59],["^ ","^1=",8,"^1>",59],["^ ","^1=",75,"^1>",59],["^ ","^1=",146,"^1>",59],["^ ","^1=",217,"^1>",59]],"^1L",[["^ ","^1=",64,"^1>",59,"^E","projectId"]]],"^1O",["^ ","^1T",[["^ ","^1=",133,"^1>",59,"^E","cloudRegion"]]],"^1Q",["^ ","^1M",[["^ ","^1=",205,"^1>",59,"^E","registryId"]]],"^1J",["^ ","^1L",[["^ ","^1=",273,"^1>",59,"^E","deviceId"]]],"^21",["^ ","~i0",[["^ ","^1=",0,"^1>",61],["^ ","^1=",29,"^1>",66],["^ ","^1=",66,"^1>",66,"^E","p__38884"],["^ ","^1=",0,"^1>",67],["^ ","^1=",0,"^1>",67],["^ ","^1=",4,"^1>",67,"^E","map__38885"],["^ ","^1=",17,"^1>",67,"^E","p__38884"],["^ ","^1=",4,"^1>",68,"^E","map__38885"],["^ ","^1=",21,"^1>",68],["^ ","^1=",23,"^1>",68],["^ ","^1=",25,"^1>",68],["^ ","^1=",27,"^1>",68],["^ ","^1=",28,"^1>",68,"^E","map__38885"],["^ ","^1=",42,"^1>",68],["^ ","^1=",50,"^1>",68],["^ ","^1=",52,"^1>",68],["^ ","^1=",54,"^1>",68],["^ ","^1=",55,"^1>",68],["^ ","^1=",55,"^1>",68,"^E","map__38885"],["^ ","^1=",104,"^1>",68],["^ ","^1=",115,"^1>",68],["^ ","^1=",116,"^1>",68,"^E","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1=",148,"^1>",68],["^ ","^1=",148,"^1>",68,"^E","map__38885"],["^ ","^1=",179,"^1>",68],["^ ","^1=",184,"^1>",68],["^ ","^1=",191,"^1>",68],["^ ","^1=",199,"^1>",68],["^ ","^1=",199,"^1>",68,"^E","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",245,"^1>",68,"^E","cljs.core/hash-map"],["^ ","^1=",264,"^1>",68,"^E","map__38885"],["^ ","^1=",276,"^1>",68,"^E","map__38885"],["^ ","^1=",11,"^1>",69,"^E","map__38885"],["^ ","^1=",25,"^1>",70],["^ ","^1=",25,"^1>",70,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",69,"^1>",70,"^E","map__38885"],["^ ","^1=",84,"^1>",70],["^ ","^1=",21,"^1>",71],["^ ","^1=",21,"^1>",71,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",65,"^1>",71,"^E","map__38885"],["^ ","^1=",80,"^1>",71],["^ ","^1=",16,"^1>",72],["^ ","^1=",16,"^1>",72,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",60,"^1>",72,"^E","map__38885"],["^ ","^1=",75,"^1>",72],["^ ","^1=",21,"^1>",73],["^ ","^1=",21,"^1>",73,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",65,"^1>",73,"^E","map__38885"],["^ ","^1=",80,"^1>",73],["^ ","^1=",16,"^1>",74],["^ ","^1=",16,"^1>",74,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",60,"^1>",74,"^E","map__38885"],["^ ","^1=",75,"^1>",74],["^ ","^1=",0,"^1>",75],["^ ","^1=",0,"^1>",75],["^ ","^1=",113,"^1>",75],["^ ","^1=",176,"^1>",75],["^ ","^1=",203,"^1>",75]],"~i6",[["^ ","^1=",0,"^1>",66,"^E","huginn.jwt/connection-args"]]],"^1W",["^ ","^1@",[["^ ","^1=",4,"^1>",70,"^E","mqttBridgeHostname"]],"^1H",[["^ ","^1=",4,"^1>",71,"^E","mqttBridgePort"]],"^1W",[["^ ","^1=",4,"^1>",72,"^E","projectId"]],"~i55",[["^ ","^1=",4,"^1>",73,"^E","privateKeyFile"]],"~i70",[["^ ","^1=",4,"^1>",74,"^E","algorithm"]],"~i85",[["^ ","^1=",4,"^1>",69,"^E","opts"]]],"~i46",["^ ","^1A",[["^ ","^1=",17,"^1>",75,"^E","mqttBridgeHostname"]]],"^25",["^ ","^1A",[["^ ","^1=",45,"^1>",75,"^E","mqttBridgePort"]]],"^26",["^ ","^1D",[["^ ","^1=",73,"^1>",75]],"^1E",[["^ ","^1=",73,"^1>",75,"^E","huginn.jwt/client-id"]],"^1[",[["^ ","^1=",94,"^1>",75,"^E","opts"]]],"~i50",["^ ","^1D",[["^ ","^1=",135,"^1>",75]],"^1E",[["^ ","^1=",135,"^1>",75,"^E","huginn.jwt/create-jwt"]],"^23",[["^ ","^1=",157,"^1>",75,"^E","opts"]]]],"~:cljc",false],"~:cache-keys",["~#cmap",[["^15","cljs_node_io/file.cljs"],[1535586406291,"^O","^L","~$goog.Uri","~$cljs-node-io.streams","~$cljs-node-io.fs","~$cljs-node-io.protocols"],["^15","goog/dom/tagname.js"],[1530991559994,"^O","~$goog.dom.HtmlElement"],["^15","cljs/core/async/impl/ioc_helpers.cljs"],[1534380136417,"^O","^L","~$cljs.core.async.impl.protocols"],["~:macro","^L"],[1534380137000],["^15","cljs/core/async.cljs"],[1534380136417,"^O","^L","^2H","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers"],["^15","cljs/nodejs.cljs"],[1534380137690,"^O","^L"],["^15","cljs_node_io/fs.cljs"],[1535586406291,"^O","^L","~$cljs.core.async","^2H"],["^15","cljs_node_io/core.cljs"],[1535586406291,"^O","^L","^2O","^2H","~$cljs-node-io.file","^2D","^2F","^2C","~$goog.string.StringBuffer"],["^15","goog/math/math.js"],[1530991559994,"^O","~$goog.array","~$goog.asserts"],["^15","goog/labs/useragent/browser.js"],[1530991559994,"^O","^2R","~$goog.labs.userAgent.util","~$goog.object","~$goog.string"],["^15","goog/array/array.js"],[1530991559994,"^O","^2S"],["^15","cljs_node_io/protocols.cljs"],[1535586406291,"^O","^L"],["^2I","~$cljs.core.async.macros"],[1534380136000],["^15","cljs_node_io/streams.cljs"],[1535586406291,"^O","^L","^2C","^2O","^2F"],["^15","goog/debug/error.js"],[1530991559994,"^O"],["^15","huginn/jwt.cljs"],[1535584721681,"^O","^L","^S","^K","^N","^P","^="],["^15","promesa/impl/scheduler.cljc"],[1535586406328,"^O","^L","~$promesa.protocols"],["^15","promesa/impl.cljc"],[1535586406328,"^O","^L","^2X","~$org.bluebird"],["^15","goog/dom/nodetype.js"],[1530991559994,"^O"],["^15","goog/object/object.js"],[1530991559994,"^O"],"~:SHADOW-TIMESTAMP",[1535989513000,1534380137000],["^15","goog/math/long.js"],[1530991559994,"^O","^2S","~$goog.reflect"],["^15","cljs/core/async/impl/channels.cljs"],[1534380136417,"^O","^L","^2H","^2M","^2K"],["^15","goog/functions/functions.js"],[1530991559994,"^O"],["^15","cljs/core/async/impl/dispatch.cljs"],[1534380136417,"^O","^L","^2K","~$goog.async.nextTick"],["^15","cljs/core/async/impl/protocols.cljs"],[1534380136417,"^O","^L"],["^15","goog/structs/map.js"],[1530991559994,"^O","~$goog.iter.Iterator","~$goog.iter.StopIteration","^2U"],["^15","goog/labs/useragent/engine.js"],[1530991559994,"^O","^2R","^2T","^2V"],["~:shadow.build.js-support/require","bluebird"],["~$shadow.js.shim.module$bluebird","shadow.js.shim.module$bluebird.js","^O"],["^2I","~$cljs-node-io.macros"],[1535586406000],["^15","goog/asserts/asserts.js"],[1530991559994,"^O","~$goog.debug.Error","~$goog.dom.NodeType","^2V"],["^15","cljs/core/async/impl/buffers.cljs"],[1534380136417,"^O","^L","^2H"],["^33","jsonwebtoken"],["^=","shadow.js.shim.module$jsonwebtoken.js","^O"],["^15","goog/uri/uri.js"],[1530991559994,"^O","^2R","^2S","^2V","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^2I","^2O"],[1534380136000],["^15","cljs/core/async/impl/timers.cljs"],[1534380136417,"^O","^L","^2H","^2J","^2M"],["^15","goog/base.js"],[1530991559994],["^15","promesa/core.cljc"],[1535586406328,"^O","^L","^2X","~$promesa.impl","~$promesa.impl.scheduler"],["^15","goog/structs/structs.js"],[1530991559994,"^O","^2R","^2U"],["^15","org/bluebird.cljs"],[1535669979047,"^O","^L","^34"],["^15","clojure/string.cljs"],[1534380137690,"^O","^L","^2V","^2Q"],["^15","goog/debug/entrypointregistry.js"],[1530991559994,"^O","^2S"],["^15","goog/string/string.js"],[1530991559994,"^O"],["^15","goog/reflect/reflect.js"],[1530991559994,"^O"],["^15","goog/labs/useragent/util.js"],[1530991559994,"^O","^2V"],["^2I","~$cljs.core.async.impl.ioc-macros"],[1534380136000],["^15","goog/string/stringbuffer.js"],[1530991559994,"^O"],["^15","promesa/protocols.cljc"],[1535586406328,"^O","^L"],["^15","goog/iter/iter.js"],[1530991559994,"^O","^2R","^2S","~$goog.functions","~$goog.math"],["^15","goog/async/nexttick.js"],[1530991559994,"^O","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^3@","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"],["^15","goog/dom/htmlelement.js"],[1530991559994,"^O"],["^15","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^2V","^2U","^2R","^2C","^2Q"],["^15","goog/math/integer.js"],[1530991559994,"^O"],["^15","goog/uri/utils.js"],[1530991559994,"^O","^2R","^2S","^2V"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","huginn/jwt.cljs","^7",1,"^8",5,"^9",1,"^:",15],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"~:shadow/js-access-properties",["^D",["now","sign"]],"^E","^F","^I",null,"^J",["^ ","~$p","^K","^K","^K","^<","^=","^L","^L","^M","^N","^O","^O","^P","^P","^=","^=","^Q","^P","^N","^N","^R","^=","^S","^S","^T","^S"],"^U",["^D",["^V"]],"~:shadow/js-access-global",["^D",["Date"]],"^W",null,"~:defs",["^ ","~$round-now",["^ ","~:protocol-inline",null,"^5",["^ ","^6","huginn/jwt.cljs","^7",9,"^8",7,"^9",9,"^:",16,"~:arglists",["^Z",["~$quote",["^Z",[[]]]]]],"^E","~$huginn.jwt/round-now","~:variadic",false,"^6","huginn/jwt.cljs","^:",16,"~:method-params",["^Z",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^Z",[null,null]],"^8",1,"^7",9,"^9",9,"~:max-fixed-arity",0,"~:fn-var",true,"^3N",["^Z",["^3O",["^Z",[[]]]]]],"~$clean-env-key",["^ ","^3M",null,"^5",["^ ","^6","huginn/jwt.cljs","^7",12,"^8",7,"^9",12,"^:",20,"^3N",["^Z",["^3O",["^Z",[["~$private-key"]]]]],"~:doc","becuase env vars don't get assinged with newlines in resin"],"^E","~$huginn.jwt/clean-env-key","^3Q",false,"^6","huginn/jwt.cljs","^:",20,"^3R",["^Z",[["^3X"]]],"^3S",null,"^3T",["^Z",[null,null]],"^8",1,"^7",12,"^9",12,"^3U",1,"^3V",true,"^3N",["^Z",["^3O",["^Z",[["^3X"]]]]],"^3Y","becuase env vars don't get assinged with newlines in resin"],"~$create-jwt",["^ ","^3M",null,"^5",["^ ","^6","huginn/jwt.cljs","^7",24,"^8",7,"^9",24,"^:",17,"^3N",["^Z",["^3O",["^Z",[[["^ ","~:keys",["~$projectId","~$tokenExpMins","~$privateKey","~$privateKeyFile","~$algorithm"],"^10","~$opts"]]]]]],"^3Y","Builds a jwt with an experation"],"^E","~$huginn.jwt/create-jwt","^3Q",false,"^6","huginn/jwt.cljs","^:",17,"^3R",["^Z",[["~$p__38871"]]],"^3S",null,"^3T",["^Z",[null,null]],"^8",1,"^7",24,"^9",24,"^3U",1,"^3V",true,"^3N",["^Z",["^3O",["^Z",[[["^ ","^40",["^41","^42","^43","^44","^45"],"^10","^46"]]]]]],"^3Y","Builds a jwt with an experation"],"~$client-id",["^ ","^3M",null,"^5",["^ ","^6","huginn/jwt.cljs","^7",34,"^8",7,"^9",34,"^:",16,"^3N",["^Z",["^3O",["^Z",[[["^ ","^40",["^41","~$registryId","~$cloudRegion","~$deviceId"],"^10","^46"]]]]]]],"^E","~$huginn.jwt/client-id","^3Q",false,"^6","huginn/jwt.cljs","^:",16,"^3R",["^Z",[["~$p__38879"]]],"^3S",null,"^3T",["^Z",[null,null]],"^8",1,"^7",34,"^9",34,"^3U",1,"^3V",true,"^3N",["^Z",["^3O",["^Z",[[["^ ","^40",["^41","^4:","^4;","^4<"],"^10","^46"]]]]]]],"~$connection-args",["^ ","^3M",null,"^5",["^ ","^6","huginn/jwt.cljs","^7",42,"^8",7,"^9",42,"^:",22,"^3N",["^Z",["^3O",["^Z",[[["^ ","^40",["~$mqttBridgeHostname","~$mqttBridgePort","^41","^44","^45"],"^10","^46"]]]]]],"^3Y","builds connection args for connecting to mqtt\n  The same args are used no matter what topic you\n  are connecting too"],"^E","~$huginn.jwt/connection-args","^3Q",false,"^6","huginn/jwt.cljs","^:",22,"^3R",["^Z",[["~$p__38884"]]],"^3S",null,"^3T",["^Z",[null,null]],"^8",1,"^7",42,"^9",42,"^3U",1,"^3V",true,"^3N",["^Z",["^3O",["^Z",[[["^ ","^40",["^4@","^4A","^41","^44","^45"],"^10","^46"]]]]]],"^3Y","builds connection args for connecting to mqtt\n  The same args are used no matter what topic you\n  are connecting too"]],"^X",["^ ","^L","^L"],"~:cljs.analyzer/constants",["^ ","^U",["^D",["~:cloudRegion","~:algorithm","~:mqttBridgeHostname","~:deviceId","~:privateKey","~:registryId","~:tokenExpMins","~:projectId","~:privateKeyFile","~:mqttBridgePort"]],"~:order",["^4L","^4K","^4I","^4M","^4F","^4J","^4E","^4H","^4G","^4N"]],"^11",["^ ","^V",["^D",[]]],"^12",["^ "],"^13",["^O","^L","^S","^K","^N","^P","^="]],"^H","^F","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^2B",[["^4R","~:static-fns"],true,["^4R","~:elide-asserts"],false,["^4R","~:optimize-constants"],null,["^4R","~:external-config"],null,["^4R","~:tooling-config"],null,["^4R","~:emit-constants"],null,["^4R","~:infer-externs"],true,["^4R","^1:"],null,["~:js-options","~:js-provider"],"^V",["~:mode"],"~:dev",["^4R","~:fn-invoke-direct"],null,["^4R","^1<"],"/dev/null"]]]