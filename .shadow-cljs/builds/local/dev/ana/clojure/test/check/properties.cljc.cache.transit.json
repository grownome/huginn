["^ ","~:output",["^ ","~:js","goog.provide('clojure.test.check.properties');\ngoog.require('cljs.core');\ngoog.require('clojure.test.check.generators');\ngoog.require('clojure.test.check.results');\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {clojure.test.check.results.Result}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\nclojure.test.check.properties.ErrorResult = (function (error,__meta,__extmap,__hash){\nthis.error = error;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2229667594;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4203__auto__,k__4204__auto__){\nvar self__ = this;\nvar this__4203__auto____$1 = this;\nreturn this__4203__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4204__auto__,null);\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4205__auto__,k19205,else__4206__auto__){\nvar self__ = this;\nvar this__4205__auto____$1 = this;\nvar G__19209 = k19205;\nvar G__19209__$1 = (((G__19209 instanceof cljs.core.Keyword))?G__19209.fqn:null);\nswitch (G__19209__$1) {\ncase \"error\":\nreturn self__.error;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k19205,else__4206__auto__);\n\n}\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4217__auto__,writer__4218__auto__,opts__4219__auto__){\nvar self__ = this;\nvar this__4217__auto____$1 = this;\nvar pr_pair__4220__auto__ = ((function (this__4217__auto____$1){\nreturn (function (keyval__4221__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4218__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4219__auto__,keyval__4221__auto__);\n});})(this__4217__auto____$1))\n;\nreturn cljs.core.pr_sequential_writer(writer__4218__auto__,pr_pair__4220__auto__,\"#clojure.test.check.properties.ErrorResult{\",\", \",\"}\",opts__4219__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"error\",\"error\",-978969032),self__.error],null))], null),self__.__extmap));\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__19204){\nvar self__ = this;\nvar G__19204__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__19204__$1,1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4201__auto__){\nvar self__ = this;\nvar this__4201__auto____$1 = this;\nreturn self__.__meta;\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4198__auto__){\nvar self__ = this;\nvar this__4198__auto____$1 = this;\nreturn (new clojure.test.check.properties.ErrorResult(self__.error,self__.__meta,self__.__extmap,self__.__hash));\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4207__auto__){\nvar self__ = this;\nvar this__4207__auto____$1 = this;\nreturn (1 + cljs.core.count(self__.__extmap));\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4199__auto__){\nvar self__ = this;\nvar this__4199__auto____$1 = this;\nvar h__4061__auto__ = self__.__hash;\nif(!((h__4061__auto__ == null))){\nreturn h__4061__auto__;\n} else {\nvar h__4061__auto____$1 = (function (){var fexpr__19212 = ((function (h__4061__auto__,this__4199__auto____$1){\nreturn (function (coll__4200__auto__){\nreturn (-12654282 ^ cljs.core.hash_unordered_coll(coll__4200__auto__));\n});})(h__4061__auto__,this__4199__auto____$1))\n;\nreturn fexpr__19212(this__4199__auto____$1);\n})();\nself__.__hash = h__4061__auto____$1;\n\nreturn h__4061__auto____$1;\n}\n});\n\nclojure.test.check.properties.ErrorResult.prototype.clojure$test$check$results$Result$ = cljs.core.PROTOCOL_SENTINEL;\n\nclojure.test.check.properties.ErrorResult.prototype.clojure$test$check$results$Result$passing_QMARK_$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn false;\n});\n\nclojure.test.check.properties.ErrorResult.prototype.clojure$test$check$results$Result$result_data$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"clojure.test.check.properties\",\"error\",\"clojure.test.check.properties/error\",483933635),self__.error], null);\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this19206,other19207){\nvar self__ = this;\nvar this19206__$1 = this;\nreturn ((!((other19207 == null))) && ((this19206__$1.constructor === other19207.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this19206__$1.error,other19207.error)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this19206__$1.__extmap,other19207.__extmap)));\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4212__auto__,k__4213__auto__){\nvar self__ = this;\nvar this__4212__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),null], null), null),k__4213__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4212__auto____$1),self__.__meta),k__4213__auto__);\n} else {\nreturn (new clojure.test.check.properties.ErrorResult(self__.error,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4213__auto__)),null));\n}\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4210__auto__,k__4211__auto__,G__19204){\nvar self__ = this;\nvar this__4210__auto____$1 = this;\nvar pred__19216 = cljs.core.keyword_identical_QMARK_;\nvar expr__19217 = k__4211__auto__;\nif(cljs.core.truth_((function (){var G__19219 = new cljs.core.Keyword(null,\"error\",\"error\",-978969032);\nvar G__19220 = expr__19217;\nreturn (pred__19216.cljs$core$IFn$_invoke$arity$2 ? pred__19216.cljs$core$IFn$_invoke$arity$2(G__19219,G__19220) : pred__19216.call(null,G__19219,G__19220));\n})())){\nreturn (new clojure.test.check.properties.ErrorResult(G__19204,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new clojure.test.check.properties.ErrorResult(self__.error,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4211__auto__,G__19204),null));\n}\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4215__auto__){\nvar self__ = this;\nvar this__4215__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),self__.error,null))], null),self__.__extmap));\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4202__auto__,G__19204){\nvar self__ = this;\nvar this__4202__auto____$1 = this;\nreturn (new clojure.test.check.properties.ErrorResult(self__.error,G__19204,self__.__extmap,self__.__hash));\n});\n\nclojure.test.check.properties.ErrorResult.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4208__auto__,entry__4209__auto__){\nvar self__ = this;\nvar this__4208__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4209__auto__)){\nreturn this__4208__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4209__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4209__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4208__auto____$1,entry__4209__auto__);\n}\n});\n\nclojure.test.check.properties.ErrorResult.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"error\",\"error\",661562495,null)], null);\n});\n\nclojure.test.check.properties.ErrorResult.cljs$lang$type = true;\n\nclojure.test.check.properties.ErrorResult.cljs$lang$ctorPrSeq = (function (this__4240__auto__){\nreturn (new cljs.core.List(null,\"clojure.test.check.properties/ErrorResult\",null,(1),null));\n});\n\nclojure.test.check.properties.ErrorResult.cljs$lang$ctorPrWriter = (function (this__4240__auto__,writer__4241__auto__){\nreturn cljs.core._write(writer__4241__auto__,\"clojure.test.check.properties/ErrorResult\");\n});\n\n/**\n * Positional factory function for clojure.test.check.properties/ErrorResult.\n */\nclojure.test.check.properties.__GT_ErrorResult = (function clojure$test$check$properties$__GT_ErrorResult(error){\nreturn (new clojure.test.check.properties.ErrorResult(error,null,null,null));\n});\n\n/**\n * Factory function for clojure.test.check.properties/ErrorResult, taking a map of keywords to field values.\n */\nclojure.test.check.properties.map__GT_ErrorResult = (function clojure$test$check$properties$map__GT_ErrorResult(G__19208){\nvar extmap__4236__auto__ = (function (){var G__19233 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(G__19208,new cljs.core.Keyword(null,\"error\",\"error\",-978969032));\nif(cljs.core.record_QMARK_(G__19208)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__19233);\n} else {\nreturn G__19233;\n}\n})();\nreturn (new clojure.test.check.properties.ErrorResult(new cljs.core.Keyword(null,\"error\",\"error\",-978969032).cljs$core$IFn$_invoke$arity$1(G__19208),null,cljs.core.not_empty(extmap__4236__auto__),null));\n});\n\nclojure.test.check.properties.exception_QMARK_ = (function clojure$test$check$properties$exception_QMARK_(x){\nreturn (x instanceof Error);\n});\nclojure.test.check.properties.apply_gen = (function clojure$test$check$properties$apply_gen(function$){\nreturn (function (args){\nvar result = (function (){try{var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(function$,args);\nif(cljs.core.truth_(clojure.test.check.properties.exception_QMARK_(ret))){\nthrow ret;\n} else {\nreturn ret;\n}\n}catch (e19245){var ex = e19245;\nreturn clojure.test.check.properties.__GT_ErrorResult(ex);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"result\",\"result\",1415092211),result,new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),function$,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null);\n});\n});\n/**\n * Creates a property (properties are also generators). A property\n *   is a generator that generates the result of applying the function\n *   under test with the realized arguments. Once realized, the arguments\n *   will be applied to `function` with `apply`.\n * \n *   Example:\n * \n *   (for-all* [gen/int gen/int] (fn [a b] (>= (+ a b) a)))\n *   \n */\nclojure.test.check.properties.for_all_STAR_ = (function clojure$test$check$properties$for_all_STAR_(args,function$){\nreturn clojure.test.check.generators.fmap(clojure.test.check.properties.apply_gen(function$),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(clojure.test.check.generators.tuple,args));\n});\nclojure.test.check.properties.binding_vars = (function clojure$test$check$properties$binding_vars(bindings){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings));\n});\nclojure.test.check.properties.binding_gens = (function clojure$test$check$properties$binding_gens(bindings){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.second,cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","clojure/test/check/properties.cljc","~:line",10,"~:column",5,"~:end-line",10,"~:end-column",34],"~:ns-aliases",["^ ","~$systeminformation","~$shadow.js.shim.module$systeminformation","~$clojure.core.async","~$cljs.core.async","~$raspicam","~$shadow.js.shim.module$raspicam"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$clojure.test.check.properties","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.test.check.generators","^K","~$gen","^K","~$clojure.test.check.results","^M","~$results","^M","~$cljs.core","^O","~$goog","^P"],"~:seen",["^D",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^O","^O"],"~:form",["~#list",["~$ns","^F",["^V",["^R",["^K","~:as","^L"],["^M","^X","^N"]]]]],"~:flags",["^ ","^R",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^P","^O","^K","^M"]],"^H","^F","~:resource-id",["~:shadow.build.classpath/resource","clojure/test/check/properties.cljc"],"~:compiled-at",1537320656013,"~:resource-name","clojure/test/check/properties.cljc","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey, Reid Draper, and contributors.\n;   All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns clojure.test.check.properties\n  (:require [clojure.test.check.generators :as gen]\n            [clojure.test.check.results :as results]))\n\n(defrecord ErrorResult [error]\n  results/Result\n  (passing? [_] false)\n  (result-data [_]\n    ;; spelling out the whole keyword here since `::error` is\n    ;; different in self-hosted cljs.\n    {:clojure.test.check.properties/error error}))\n\n(defn ^:private exception?\n  [x]\n  (instance? #?(:clj Throwable :cljs js/Error) x))\n\n(defn ^:private apply-gen\n  [function]\n  (fn [args]\n    (let [result (try\n                   (let [ret (apply function args)]\n                     ;; TCHECK-131: for backwards compatibility (mainly\n                     ;; for spec), treat returned exceptions like thrown\n                     ;; exceptions\n                     (if (exception? ret)\n                       (throw ret)\n                       ret))\n                   #?(:clj (catch java.lang.ThreadDeath t (throw t)))\n                   (catch #?(:clj Throwable :cljs :default) ex\n                     (->ErrorResult ex)))]\n      {:result result\n       :function function\n       :args args})))\n\n(defn for-all*\n  \"Creates a property (properties are also generators). A property\n  is a generator that generates the result of applying the function\n  under test with the realized arguments. Once realized, the arguments\n  will be applied to `function` with `apply`.\n\n  Example:\n\n  (for-all* [gen/int gen/int] (fn [a b] (>= (+ a b) a)))\n  \"\n  [args function]\n  (gen/fmap\n   (apply-gen function)\n   (apply gen/tuple args)))\n\n(defn- binding-vars\n  [bindings]\n  (map first (partition 2 bindings)))\n\n(defn- binding-gens\n  [bindings]\n  (map second (partition 2 bindings)))\n\n(defmacro for-all\n  \"Macro sugar for `for-all*`. `for-all` lets you name the parameter\n  and use them in expression, without wrapping them in a lambda. Like\n  `for-all*`, it returns a property.\n\n  Examples\n\n  (for-all [a gen/int\n            b gen/int]\n    (>= (+ a b) a))\n  \"\n  [bindings & body]\n  `(for-all* ~(vec (binding-gens bindings))\n             (fn [~@(binding-vars bindings)]\n               ~@body)))\n","~:reader-features",["^D",["~:cljs"]],"~:source-map",["^ ","~i13",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",4],["^ ","^1:",0,"^1;",4],["^ ","^1:",0,"^1;",4],["^ ","^1:",0,"^1;",4],["^ ","^1:",0,"^1;",31],["^ ","^1:",0,"^1;",31],["^ ","^1:",0,"^1;",31],["^ ","^1:",0,"^1;",31],["^ ","^1:",88,"^1;",31],["^ ","^1:",99,"^1;",31,"^E","this__4203__auto__"],["^ ","^1:",118,"^1;",31,"^E","k__4204__auto__"],["^ ","^1:",0,"^1;",33],["^ ","^1:",0,"^1;",33],["^ ","^1:",4,"^1;",33,"^E","this__4203__auto__"],["^ ","^1:",29,"^1;",33],["^ ","^1:",0,"^1;",34],["^ ","^1:",0,"^1;",34],["^ ","^1:",7,"^1;",34,"^E","this__4203__auto__"],["^ ","^1:",69,"^1;",34,"^E","k__4204__auto__"],["^ ","^1:",85,"^1;",34],["^ ","^1:",0,"^1;",37],["^ ","^1:",0,"^1;",37],["^ ","^1:",0,"^1;",37],["^ ","^1:",88,"^1;",37],["^ ","^1:",99,"^1;",37,"^E","this__4205__auto__"],["^ ","^1:",118,"^1;",37,"^E","k19205"],["^ ","^1:",125,"^1;",37,"^E","else__4206__auto__"],["^ ","^1:",0,"^1;",39],["^ ","^1:",0,"^1;",39],["^ ","^1:",4,"^1;",39,"^E","this__4205__auto__"],["^ ","^1:",29,"^1;",39],["^ ","^1:",0,"^1;",40],["^ ","^1:",0,"^1;",40],["^ ","^1:",4,"^1;",40,"^E","G__19209"],["^ ","^1:",15,"^1;",40,"^E","k19205"],["^ ","^1:",4,"^1;",41,"^E","G__19209"],["^ ","^1:",19,"^1;",41],["^ ","^1:",21,"^1;",41],["^ ","^1:",22,"^1;",41,"^E","G__19209"],["^ ","^1:",42,"^1;",41,"^E","cljs.core/Keyword"],["^ ","^1:",62,"^1;",41],["^ ","^1:",62,"^1;",41,"^E","G__19209"],["^ ","^1:",75,"^1;",41],["^ ","^1:",0,"^1;",42],["^ ","^1:",0,"^1;",42],["^ ","^1:",8,"^1;",42,"^E","G__19209"],["^ ","^1:",5,"^1;",43],["^ ","^1:",0,"^1;",44,"^E","error"],["^ ","^1:",0,"^1;",48],["^ ","^1:",7,"^1;",48,"^E","cljs.core.get.cljs$core$IFn$_invoke$arity$3"],["^ ","^1:",51,"^1;",48,"^E","__extmap"],["^ ","^1:",67,"^1;",48,"^E","k19205"],["^ ","^1:",74,"^1;",48,"^E","else__4206__auto__"],["^ ","^1:",0,"^1;",53],["^ ","^1:",0,"^1;",53],["^ ","^1:",0,"^1;",53],["^ ","^1:",100,"^1;",53],["^ ","^1:",111,"^1;",53,"^E","this__4217__auto__"],["^ ","^1:",130,"^1;",53,"^E","writer__4218__auto__"],["^ ","^1:",151,"^1;",53,"^E","opts__4219__auto__"],["^ ","^1:",0,"^1;",55],["^ ","^1:",0,"^1;",55],["^ ","^1:",4,"^1;",55,"^E","this__4217__auto__"],["^ ","^1:",29,"^1;",55],["^ ","^1:",0,"^1;",56],["^ ","^1:",0,"^1;",56],["^ ","^1:",4,"^1;",56,"^E","pr-pair__4220__auto__"],["^ ","^1:",28,"^1;",56],["^ ","^1:",18,"^1;",57,"^E","keyval__4221__auto__"],["^ ","^1:",0,"^1;",58],["^ ","^1:",0,"^1;",58],["^ ","^1:",7,"^1;",58,"^E","cljs.core/pr-sequential-writer"],["^ ","^1:",38,"^1;",58,"^E","writer__4218__auto__"],["^ ","^1:",59,"^1;",58,"^E","cljs.core/pr-writer"],["^ ","^1:",79,"^1;",58],["^ ","^1:",82,"^1;",58],["^ ","^1:",86,"^1;",58],["^ ","^1:",89,"^1;",58,"^E","opts__4219__auto__"],["^ ","^1:",108,"^1;",58,"^E","keyval__4221__auto__"],["^ ","^1:",0,"^1;",61],["^ ","^1:",0,"^1;",61],["^ ","^1:",7,"^1;",61,"^E","cljs.core/pr-sequential-writer"],["^ ","^1:",38,"^1;",61,"^E","writer__4218__auto__"],["^ ","^1:",59,"^1;",61,"^E","pr-pair__4220__auto__"],["^ ","^1:",81,"^1;",61],["^ ","^1:",127,"^1;",61],["^ ","^1:",132,"^1;",61],["^ ","^1:",136,"^1;",61,"^E","opts__4219__auto__"],["^ ","^1:",155,"^1;",61],["^ ","^1:",155,"^1;",61,"^E","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^1:",202,"^1;",61],["^ ","^1:",285,"^1;",61],["^ ","^1:",290,"^1;",61,"^E","cljs.core/PersistentVector"],["^ ","^1:",317,"^1;",61],["^ ","^1:",322,"^1;",61],["^ ","^1:",324,"^1;",61],["^ ","^1:",328,"^1;",61],["^ ","^1:",328,"^1;",61,"^E","cljs.core/PersistentVector"],["^ ","^1:",366,"^1;",61],["^ ","^1:",367,"^1;",61],["^ ","^1:",422,"^1;",61,"^E","error"],["^ ","^1:",436,"^1;",61],["^ ","^1:",451,"^1;",61,"^E","__extmap"],["^ ","^1:",0,"^1;",64],["^ ","^1:",0,"^1;",64],["^ ","^1:",0,"^1;",64],["^ ","^1:",92,"^1;",64],["^ ","^1:",103,"^1;",64,"^E","G__19204"],["^ ","^1:",0,"^1;",66],["^ ","^1:",0,"^1;",66],["^ ","^1:",4,"^1;",66,"^E","G__19204"],["^ ","^1:",19,"^1;",66],["^ ","^1:",0,"^1;",67],["^ ","^1:",0,"^1;",67],["^ ","^1:",12,"^1;",67,"^E","cljs.core/RecordIter"],["^ ","^1:",33,"^1;",67],["^ ","^1:",37,"^1;",67,"^E","G__19204"],["^ ","^1:",50,"^1;",67],["^ ","^1:",52,"^1;",67],["^ ","^1:",135,"^1;",67],["^ ","^1:",198,"^1;",67],["^ ","^1:",216,"^1;",67,"^E","__extmap"],["^ ","^1:",233,"^1;",67],["^ ","^1:",233,"^1;",67,"^E","cljs.core/-iterator"],["^ ","^1:",253,"^1;",67,"^E","__extmap"],["^ ","^1:",270,"^1;",67],["^ ","^1:",270,"^1;",67,"^E","cljs.core/nil-iter"],["^ ","^1:",0,"^1;",70],["^ ","^1:",0,"^1;",70],["^ ","^1:",0,"^1;",70],["^ ","^1:",84,"^1;",70],["^ ","^1:",95,"^1;",70,"^E","this__4201__auto__"],["^ ","^1:",0,"^1;",72],["^ ","^1:",0,"^1;",72],["^ ","^1:",4,"^1;",72,"^E","this__4201__auto__"],["^ ","^1:",29,"^1;",72],["^ ","^1:",0,"^1;",73],["^ ","^1:",0,"^1;",73,"^E","__meta"],["^ ","^1:",0,"^1;",76],["^ ","^1:",0,"^1;",76],["^ ","^1:",0,"^1;",76],["^ ","^1:",90,"^1;",76],["^ ","^1:",101,"^1;",76,"^E","this__4198__auto__"],["^ ","^1:",0,"^1;",78],["^ ","^1:",0,"^1;",78],["^ ","^1:",4,"^1;",78,"^E","this__4198__auto__"],["^ ","^1:",29,"^1;",78],["^ ","^1:",0,"^1;",79],["^ ","^1:",0,"^1;",79],["^ ","^1:",54,"^1;",79,"^E","error"],["^ ","^1:",67,"^1;",79,"^E","__meta"],["^ ","^1:",81,"^1;",79,"^E","__extmap"],["^ ","^1:",97,"^1;",79,"^E","__hash"],["^ ","^1:",0,"^1;",82],["^ ","^1:",0,"^1;",82],["^ ","^1:",0,"^1;",82],["^ ","^1:",88,"^1;",82],["^ ","^1:",99,"^1;",82,"^E","this__4207__auto__"],["^ ","^1:",0,"^1;",84],["^ ","^1:",0,"^1;",84],["^ ","^1:",4,"^1;",84,"^E","this__4207__auto__"],["^ ","^1:",29,"^1;",84],["^ ","^1:",0,"^1;",85],["^ ","^1:",0,"^1;",85],["^ ","^1:",8,"^1;",85],["^ ","^1:",12,"^1;",85],["^ ","^1:",12,"^1;",85,"^E","cljs.core/count"],["^ ","^1:",28,"^1;",85,"^E","__extmap"],["^ ","^1:",0,"^1;",88],["^ ","^1:",0,"^1;",88],["^ ","^1:",0,"^1;",88],["^ ","^1:",84,"^1;",88],["^ ","^1:",95,"^1;",88,"^E","this__4199__auto__"],["^ ","^1:",0,"^1;",90],["^ ","^1:",0,"^1;",90],["^ ","^1:",4,"^1;",90,"^E","this__4199__auto__"],["^ ","^1:",29,"^1;",90],["^ ","^1:",0,"^1;",91],["^ ","^1:",0,"^1;",91],["^ ","^1:",4,"^1;",91,"^E","h__4061__auto__"],["^ ","^1:",22,"^1;",91,"^E","__hash"],["^ ","^1:",0,"^1;",92],["^ ","^1:",0,"^1;",92],["^ ","^1:",3,"^1;",92],["^ ","^1:",5,"^1;",92],["^ ","^1:",6,"^1;",92,"^E","h__4061__auto__"],["^ ","^1:",25,"^1;",92],["^ ","^1:",0,"^1;",93,"^E","h__4061__auto__"],["^ ","^1:",0,"^1;",95],["^ ","^1:",4,"^1;",95,"^E","h__4061__auto__"],["^ ","^1:",26,"^1;",95],["^ ","^1:",43,"^1;",95,"^E","fexpr__19212"],["^ ","^1:",58,"^1;",95],["^ ","^1:",18,"^1;",96,"^E","coll__4200__auto__"],["^ ","^1:",0,"^1;",97],["^ ","^1:",0,"^1;",97],["^ ","^1:",8,"^1;",97],["^ ","^1:",20,"^1;",97],["^ ","^1:",20,"^1;",97,"^E","cljs.core/hash-unordered-coll"],["^ ","^1:",50,"^1;",97,"^E","coll__4200__auto__"],["^ ","^1:",0,"^1;",100],["^ ","^1:",0,"^1;",100],["^ ","^1:",7,"^1;",100,"^E","fexpr__19212"],["^ ","^1:",20,"^1;",100,"^E","this__4199__auto__"],["^ ","^1:",0,"^1;",102],["^ ","^1:",0,"^1;",102],["^ ","^1:",0,"^1;",102,"^E","__hash"],["^ ","^1:",16,"^1;",102,"^E","h__4061__auto__"],["^ ","^1:",0,"^1;",104,"^E","h__4061__auto__"],["^ ","^1:",0,"^1;",108],["^ ","^1:",0,"^1;",108],["^ ","^1:",0,"^1;",108],["^ ","^1:",89,"^1;",108,"^E","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1:",0,"^1;",110],["^ ","^1:",0,"^1;",110],["^ ","^1:",0,"^1;",110],["^ ","^1:",111,"^1;",110],["^ ","^1:",0,"^1;",112],["^ ","^1:",0,"^1;",112],["^ ","^1:",12,"^1;",112],["^ ","^1:",0,"^1;",113],["^ ","^1:",0,"^1;",113],["^ ","^1:",0,"^1;",116],["^ ","^1:",0,"^1;",116],["^ ","^1:",0,"^1;",116],["^ ","^1:",108,"^1;",116],["^ ","^1:",0,"^1;",118],["^ ","^1:",0,"^1;",118],["^ ","^1:",12,"^1;",118],["^ ","^1:",0,"^1;",119],["^ ","^1:",0,"^1;",119],["^ ","^1:",50,"^1;",119],["^ ","^1:",0,"^1;",122],["^ ","^1:",0,"^1;",122],["^ ","^1:",0,"^1;",122],["^ ","^1:",86,"^1;",122],["^ ","^1:",97,"^1;",122,"^E","this19206"],["^ ","^1:",107,"^1;",122,"^E","other19207"],["^ ","^1:",0,"^1;",124],["^ ","^1:",0,"^1;",124],["^ ","^1:",4,"^1;",124,"^E","this19206"],["^ ","^1:",20,"^1;",124],["^ ","^1:",0,"^1;",125],["^ ","^1:",0,"^1;",125],["^ ","^1:",9,"^1;",125],["^ ","^1:",11,"^1;",125],["^ ","^1:",12,"^1;",125,"^E","other19207"],["^ ","^1:",26,"^1;",125],["^ ","^1:",38,"^1;",125],["^ ","^1:",39,"^1;",125],["^ ","^1:",39,"^1;",125,"^E","this19206"],["^ ","^1:",69,"^1;",125],["^ ","^1:",69,"^1;",125,"^E","other19207"],["^ ","^1:",98,"^1;",125],["^ ","^1:",98,"^1;",125,"^E","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1:",143,"^1;",125],["^ ","^1:",143,"^1;",125,"^E","this19206"],["^ ","^1:",163,"^1;",125],["^ ","^1:",163,"^1;",125,"^E","other19207"],["^ ","^1:",186,"^1;",125],["^ ","^1:",186,"^1;",125,"^E","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2"],["^ ","^1:",231,"^1;",125],["^ ","^1:",231,"^1;",125,"^E","this19206"],["^ ","^1:",254,"^1;",125],["^ ","^1:",254,"^1;",125,"^E","other19207"],["^ ","^1:",0,"^1;",128],["^ ","^1:",0,"^1;",128],["^ ","^1:",0,"^1;",128],["^ ","^1:",85,"^1;",128],["^ ","^1:",96,"^1;",128,"^E","this__4212__auto__"],["^ ","^1:",115,"^1;",128,"^E","k__4213__auto__"],["^ ","^1:",0,"^1;",130],["^ ","^1:",0,"^1;",130],["^ ","^1:",4,"^1;",130,"^E","this__4212__auto__"],["^ ","^1:",29,"^1;",130],["^ ","^1:",0,"^1;",131],["^ ","^1:",0,"^1;",131],["^ ","^1:",3,"^1;",131],["^ ","^1:",3,"^1;",131,"^E","cljs.core/contains?"],["^ ","^1:",29,"^1;",131],["^ ","^1:",110,"^1;",131],["^ ","^1:",185,"^1;",131,"^E","k__4213__auto__"],["^ ","^1:",0,"^1;",132],["^ ","^1:",7,"^1;",132,"^E","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1:",54,"^1;",132],["^ ","^1:",54,"^1;",132,"^E","cljs.core/-with-meta"],["^ ","^1:",75,"^1;",132],["^ ","^1:",75,"^1;",132,"^E","cljs.core.into.cljs$core$IFn$_invoke$arity$2"],["^ ","^1:",120,"^1;",132],["^ ","^1:",155,"^1;",132,"^E","this__4212__auto__"],["^ ","^1:",179,"^1;",132,"^E","__meta"],["^ ","^1:",194,"^1;",132,"^E","k__4213__auto__"],["^ ","^1:",0,"^1;",134],["^ ","^1:",54,"^1;",134,"^E","error"],["^ ","^1:",67,"^1;",134,"^E","__meta"],["^ ","^1:",81,"^1;",134],["^ ","^1:",81,"^1;",134,"^E","cljs.core/not-empty"],["^ ","^1:",101,"^1;",134],["^ ","^1:",101,"^1;",134,"^E","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1:",148,"^1;",134,"^E","__extmap"],["^ ","^1:",164,"^1;",134,"^E","k__4213__auto__"],["^ ","^1:",182,"^1;",134],["^ ","^1:",0,"^1;",138],["^ ","^1:",0,"^1;",138],["^ ","^1:",0,"^1;",138],["^ ","^1:",92,"^1;",138],["^ ","^1:",103,"^1;",138,"^E","this__4210__auto__"],["^ ","^1:",122,"^1;",138,"^E","k__4211__auto__"],["^ ","^1:",138,"^1;",138,"^E","G__19204"],["^ ","^1:",0,"^1;",140],["^ ","^1:",0,"^1;",140],["^ ","^1:",4,"^1;",140,"^E","this__4210__auto__"],["^ ","^1:",29,"^1;",140],["^ ","^1:",0,"^1;",141],["^ ","^1:",0,"^1;",141],["^ ","^1:",4,"^1;",141,"^E","pred__19216"],["^ ","^1:",18,"^1;",141,"^E","cljs.core/keyword-identical?"],["^ ","^1:",4,"^1;",142,"^E","expr__19217"],["^ ","^1:",18,"^1;",142,"^E","k__4211__auto__"],["^ ","^1:",0,"^1;",143],["^ ","^1:",0,"^1;",143],["^ ","^1:",20,"^1;",143],["^ ","^1:",37,"^1;",143,"^E","G__19219"],["^ ","^1:",48,"^1;",143],["^ ","^1:",4,"^1;",144,"^E","G__19220"],["^ ","^1:",15,"^1;",144,"^E","expr__19217"],["^ ","^1:",0,"^1;",145],["^ ","^1:",0,"^1;",145],["^ ","^1:",8,"^1;",145,"^E","pred__19216"],["^ ","^1:",52,"^1;",145,"^E","pred__19216"],["^ ","^1:",94,"^1;",145,"^E","G__19219"],["^ ","^1:",103,"^1;",145,"^E","G__19220"],["^ ","^1:",115,"^1;",145,"^E","pred__19216"],["^ ","^1:",137,"^1;",145,"^E","G__19219"],["^ ","^1:",146,"^1;",145,"^E","G__19220"],["^ ","^1:",0,"^1;",147],["^ ","^1:",54,"^1;",147,"^E","G__19204"],["^ ","^1:",63,"^1;",147,"^E","__meta"],["^ ","^1:",77,"^1;",147,"^E","__extmap"],["^ ","^1:",93,"^1;",147],["^ ","^1:",0,"^1;",149],["^ ","^1:",54,"^1;",149,"^E","error"],["^ ","^1:",67,"^1;",149,"^E","__meta"],["^ ","^1:",81,"^1;",149],["^ ","^1:",81,"^1;",149,"^E","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3"],["^ ","^1:",127,"^1;",149,"^E","__extmap"],["^ ","^1:",143,"^1;",149,"^E","k__4211__auto__"],["^ ","^1:",159,"^1;",149,"^E","G__19204"],["^ ","^1:",169,"^1;",149],["^ ","^1:",0,"^1;",153],["^ ","^1:",0,"^1;",153],["^ ","^1:",0,"^1;",153],["^ ","^1:",86,"^1;",153],["^ ","^1:",97,"^1;",153,"^E","this__4215__auto__"],["^ ","^1:",0,"^1;",155],["^ ","^1:",0,"^1;",155],["^ ","^1:",4,"^1;",155,"^E","this__4215__auto__"],["^ ","^1:",29,"^1;",155],["^ ","^1:",0,"^1;",156],["^ ","^1:",0,"^1;",156],["^ ","^1:",7,"^1;",156,"^E","cljs.core/seq"],["^ ","^1:",21,"^1;",156],["^ ","^1:",21,"^1;",156,"^E","cljs.core.concat.cljs$core$IFn$_invoke$arity$2"],["^ ","^1:",68,"^1;",156],["^ ","^1:",151,"^1;",156],["^ ","^1:",156,"^1;",156,"^E","cljs/core.MapEntry"],["^ ","^1:",175,"^1;",156],["^ ","^1:",230,"^1;",156,"^E","error"],["^ ","^1:",243,"^1;",156],["^ ","^1:",258,"^1;",156,"^E","__extmap"],["^ ","^1:",0,"^1;",159],["^ ","^1:",0,"^1;",159],["^ ","^1:",0,"^1;",159],["^ ","^1:",93,"^1;",159],["^ ","^1:",104,"^1;",159,"^E","this__4202__auto__"],["^ ","^1:",123,"^1;",159,"^E","G__19204"],["^ ","^1:",0,"^1;",161],["^ ","^1:",0,"^1;",161],["^ ","^1:",4,"^1;",161,"^E","this__4202__auto__"],["^ ","^1:",29,"^1;",161],["^ ","^1:",0,"^1;",162],["^ ","^1:",0,"^1;",162],["^ ","^1:",54,"^1;",162,"^E","error"],["^ ","^1:",67,"^1;",162,"^E","G__19204"],["^ ","^1:",76,"^1;",162,"^E","__extmap"],["^ ","^1:",92,"^1;",162,"^E","__hash"],["^ ","^1:",0,"^1;",165],["^ ","^1:",0,"^1;",165],["^ ","^1:",0,"^1;",165],["^ ","^1:",90,"^1;",165],["^ ","^1:",101,"^1;",165,"^E","this__4208__auto__"],["^ ","^1:",120,"^1;",165,"^E","entry__4209__auto__"],["^ ","^1:",0,"^1;",167],["^ ","^1:",0,"^1;",167],["^ ","^1:",4,"^1;",167,"^E","this__4208__auto__"],["^ ","^1:",29,"^1;",167],["^ ","^1:",0,"^1;",168],["^ ","^1:",0,"^1;",168],["^ ","^1:",3,"^1;",168],["^ ","^1:",3,"^1;",168,"^E","cljs.core/vector?"],["^ ","^1:",27,"^1;",168,"^E","entry__4209__auto__"],["^ ","^1:",0,"^1;",169],["^ ","^1:",7,"^1;",169,"^E","this__4208__auto__"],["^ ","^1:",73,"^1;",169],["^ ","^1:",73,"^1;",169,"^E","cljs.core._nth.cljs$core$IFn$_invoke$arity$2"],["^ ","^1:",118,"^1;",169,"^E","entry__4209__auto__"],["^ ","^1:",138,"^1;",169],["^ ","^1:",143,"^1;",169],["^ ","^1:",143,"^1;",169,"^E","cljs.core._nth.cljs$core$IFn$_invoke$arity$2"],["^ ","^1:",188,"^1;",169,"^E","entry__4209__auto__"],["^ ","^1:",208,"^1;",169],["^ ","^1:",0,"^1;",171],["^ ","^1:",7,"^1;",171,"^E","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"],["^ ","^1:",54,"^1;",171,"^E","cljs.core/-conj"],["^ ","^1:",70,"^1;",171,"^E","this__4208__auto__"],["^ ","^1:",93,"^1;",171,"^E","entry__4209__auto__"],["^ ","^1:",0,"^1;",175],["^ ","^1:",0,"^1;",175],["^ ","^1:",0,"^1;",175,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",53,"^1;",175],["^ ","^1:",0,"^1;",176],["^ ","^1:",0,"^1;",176],["^ ","^1:",90,"^1;",176],["^ ","^1:",0,"^1;",179],["^ ","^1:",0,"^1;",179],["^ ","^1:",0,"^1;",179,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",59,"^1;",179],["^ ","^1:",0,"^1;",181],["^ ","^1:",0,"^1;",181],["^ ","^1:",0,"^1;",181,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",64,"^1;",181],["^ ","^1:",75,"^1;",181,"^E","this__4240__auto__"],["^ ","^1:",0,"^1;",182],["^ ","^1:",0,"^1;",182],["^ ","^1:",12,"^1;",182,"^E","cljs.core/List"],["^ ","^1:",27,"^1;",182],["^ ","^1:",32,"^1;",182],["^ ","^1:",76,"^1;",182],["^ ","^1:",81,"^1;",182],["^ ","^1:",85,"^1;",182],["^ ","^1:",0,"^1;",185],["^ ","^1:",0,"^1;",185],["^ ","^1:",0,"^1;",185,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",67,"^1;",185],["^ ","^1:",78,"^1;",185,"^E","this__4240__auto__"],["^ ","^1:",97,"^1;",185,"^E","writer__4241__auto__"],["^ ","^1:",0,"^1;",186],["^ ","^1:",0,"^1;",186],["^ ","^1:",7,"^1;",186,"^E","cljs.core/-write"],["^ ","^1:",24,"^1;",186,"^E","writer__4241__auto__"],["^ ","^1:",45,"^1;",186],["^ ","^1:",0,"^1;",189],["^ ","^1:",49,"^1;",192],["^ ","^1:",0,"^1;",193],["^ ","^1:",0,"^1;",193],["^ ","^1:",12,"^1;",193,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",60,"^1;",193],["^ ","^1:",65,"^1;",193],["^ ","^1:",70,"^1;",193],["^ ","^1:",0,"^1;",196],["^ ","^1:",52,"^1;",199],["^ ","^1:",112,"^1;",199,"^E","G__19208"],["^ ","^1:",0,"^1;",200],["^ ","^1:",0,"^1;",200],["^ ","^1:",4,"^1;",200,"^E","extmap__4236__auto__"],["^ ","^1:",27,"^1;",200],["^ ","^1:",44,"^1;",200,"^E","G__19233"],["^ ","^1:",55,"^1;",200],["^ ","^1:",55,"^1;",200,"^E","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],["^ ","^1:",102,"^1;",200,"^E","G__19208"],["^ ","^1:",111,"^1;",200],["^ ","^1:",0,"^1;",201],["^ ","^1:",0,"^1;",201],["^ ","^1:",3,"^1;",201],["^ ","^1:",3,"^1;",201,"^E","cljs.core/record?"],["^ ","^1:",27,"^1;",201,"^E","G__19208"],["^ ","^1:",0,"^1;",202],["^ ","^1:",7,"^1;",202,"^E","cljs.core.into.cljs$core$IFn$_invoke$arity$2"],["^ ","^1:",52,"^1;",202],["^ ","^1:",87,"^1;",202,"^E","G__19233"],["^ ","^1:",0,"^1;",204,"^E","G__19233"],["^ ","^1:",0,"^1;",207],["^ ","^1:",0,"^1;",207],["^ ","^1:",12,"^1;",207,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",54,"^1;",207],["^ ","^1:",54,"^1;",207],["^ ","^1:",139,"^1;",207,"^E","G__19208"],["^ ","^1:",149,"^1;",207],["^ ","^1:",154,"^1;",207],["^ ","^1:",154,"^1;",207,"^E","cljs.core/not-empty"],["^ ","^1:",174,"^1;",207,"^E","extmap__4236__auto__"],["^ ","^1:",196,"^1;",207],["^ ","^1:",0,"^1;",210,"^E","clojure.test.check.properties/ErrorResult"]],"~i11",[["^ ","^1:",0,"^1;",31,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",37,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",53,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",64,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",70,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",76,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",12,"^1;",79,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",82,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",88,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",108,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",110,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",116,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",122,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",128,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",12,"^1;",134,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",138,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",12,"^1;",147,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",12,"^1;",149,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",153,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",159,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",12,"^1;",162,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",165,"^E","clojure.test.check.properties/ErrorResult"],["^ ","^1:",0,"^1;",192,"^E","clojure.test.check.properties/->ErrorResult"],["^ ","^1:",0,"^1;",199,"^E","clojure.test.check.properties/map->ErrorResult"]],"~i24",[["^ ","^1:",106,"^1;",192,"^E","error"],["^ ","^1:",54,"^1;",193,"^E","error"]]],"~i15",["^ ","^19",[["^ ","^1:",122,"^1;",110,"^E","_"],["^ ","^1:",4,"^1;",112,"^E","_"]]],"~i16",["^ ","^1?",[["^ ","^1:",119,"^1;",116,"^E","_"],["^ ","^1:",4,"^1;",118,"^E","_"]]],"~i19",["^ ","~i42",[["^ ","^1:",161,"^1;",119,"^E","error"]]],"~i21",["^ ","~i0",[["^ ","^1:",0,"^1;",210],["^ ","^1:",49,"^1;",210],["^ ","^1:",0,"^1;",211]],"^1?",[["^ ","^1:",0,"^1;",210,"^E","clojure.test.check.properties/exception?"]]],"~i22",["^ ","~i3",[["^ ","^1:",106,"^1;",210,"^E","x"]]],"~i23",["^ ","~i2",[["^ ","^1:",0,"^1;",211]],"~i37",[["^ ","^1:",21,"^1;",211,"^E","js/Error"]],"~i47",[["^ ","^1:",8,"^1;",211,"^E","x"]]],"~i25",["^ ","~i0",[["^ ","^1:",0,"^1;",213],["^ ","^1:",42,"^1;",213],["^ ","^1:",0,"^1;",214]],"^1?",[["^ ","^1:",0,"^1;",213,"^E","clojure.test.check.properties/apply-gen"]]],"~i26",["^ ","~i3",[["^ ","^1:",92,"^1;",213,"^E","function"]]],"~i27",["^ ","~i2",[["^ ","^1:",0,"^1;",214],["^ ","^1:",0,"^1;",215]],"~i7",[["^ ","^1:",18,"^1;",214,"^E","args"]]],"~i28",["^ ","~i4",[["^ ","^1:",0,"^1;",215],["^ ","^1:",0,"^1;",224],["^ ","^1:",0,"^1;",224],["^ ","^1:",50,"^1;",224],["^ ","^1:",114,"^1;",224],["^ ","^1:",186,"^1;",224]],"~i10",[["^ ","^1:",4,"^1;",215,"^E","result"]],"~i17",[["^ ","^1:",13,"^1;",215],["^ ","^1:",30,"^1;",215],["^ ","^1:",16,"^1;",221],["^ ","^1:",25,"^1;",221,"^E","e19245"],["^ ","^1:",0,"^1;",222]]],"~i29",["^ ","^1@",[["^ ","^1:",30,"^1;",215],["^ ","^1:",0,"^1;",216]],"^1G",[["^ ","^1:",34,"^1;",215,"^E","ret"]],"^1M",[["^ ","^1:",40,"^1;",215]],"~i30",[["^ ","^1:",40,"^1;",215,"^E","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"~i36",[["^ ","^1:",86,"^1;",215,"^E","function"]],"~i45",[["^ ","^1:",96,"^1;",215,"^E","args"]]],"~i33",["^ ","^1B",[["^ ","^1:",0,"^1;",216]],"^1G",[["^ ","^1:",20,"^1;",216]],"^1H",[["^ ","^1:",20,"^1;",216,"^E","clojure.test.check.properties/exception?"]],"^1E",[["^ ","^1:",67,"^1;",216,"^E","ret"]]],"~i34",["^ ","^1D",[["^ ","^1:",0,"^1;",217]],"^1N",[["^ ","^1:",6,"^1;",217,"^E","ret"]]],"~i35",["^ ","^1D",[["^ ","^1:",0,"^1;",219,"^E","ret"]]],"^1E",["^ ","~i60",[["^ ","^1:",20,"^1;",221,"^E","ex"]]],"~i38",["^ ","^1B",[["^ ","^1:",0,"^1;",222]],"^1C",[["^ ","^1:",7,"^1;",222,"^E","clojure.test.check.properties/->ErrorResult"]],"^1O",[["^ ","^1:",54,"^1;",222,"^E","ex"]]],"~i39",["^ ","^1>",[["^ ","^1:",107,"^1;",224,"^E","result"]]],"~i40",["^ ","^1L",[["^ ","^1:",176,"^1;",224,"^E","function"]]],"~i41",["^ ","^19",[["^ ","^1:",239,"^1;",224,"^E","args"]]],"~i43",["^ ","~i0",[["^ ","^1:",0,"^1;",227],["^ ","^1:",46,"^1;",238],["^ ","^1:",0,"^1;",239]],"~i6",[["^ ","^1:",0,"^1;",238,"^E","clojure.test.check.properties/for-all*"]]],"~i53",["^ ","~i3",[["^ ","^1:",100,"^1;",238,"^E","args"]],"~i8",[["^ ","^1:",105,"^1;",238,"^E","function"]]],"~i54",["^ ","~i2",[["^ ","^1:",0,"^1;",239]],"~i3",[["^ ","^1:",7,"^1;",239,"^E","clojure.test.check.generators/fmap"]]],"~i55",["^ ","~i3",[["^ ","^1:",42,"^1;",239]],"~i4",[["^ ","^1:",42,"^1;",239,"^E","clojure.test.check.properties/apply-gen"]],"~i14",[["^ ","^1:",82,"^1;",239,"^E","function"]]],"~i56",["^ ","~i3",[["^ ","^1:",93,"^1;",239]],"~i4",[["^ ","^1:",93,"^1;",239,"^E","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"^1K",[["^ ","^1:",139,"^1;",239,"^E","clojure.test.check.generators/tuple"]],"~i20",[["^ ","^1:",175,"^1;",239,"^E","args"]]],"~i58",["^ ","~i0",[["^ ","^1:",0,"^1;",241],["^ ","^1:",45,"^1;",241],["^ ","^1:",0,"^1;",242]],"~i7",[["^ ","^1:",0,"^1;",241,"^E","clojure.test.check.properties/binding-vars"]]],"~i59",["^ ","~i3",[["^ ","^1:",98,"^1;",241,"^E","bindings"]]],"^1T",["^ ","~i2",[["^ ","^1:",0,"^1;",242]],"~i3",[["^ ","^1:",7,"^1;",242,"^E","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"~i7",[["^ ","^1:",51,"^1;",242,"^E","cljs.core/first"]],"^19",[["^ ","^1:",67,"^1;",242],["^ ","^1:",117,"^1;",242]],"^21",[["^ ","^1:",67,"^1;",242,"^E","cljs.core.partition.cljs$core$IFn$_invoke$arity$2"]],"^1H",[["^ ","^1:",121,"^1;",242,"^E","bindings"]]],"~i62",["^ ","~i0",[["^ ","^1:",0,"^1;",244],["^ ","^1:",45,"^1;",244],["^ ","^1:",0,"^1;",245]],"~i7",[["^ ","^1:",0,"^1;",244,"^E","clojure.test.check.properties/binding-gens"]]],"~i63",["^ ","~i3",[["^ ","^1:",98,"^1;",244,"^E","bindings"]]],"~i64",["^ ","~i2",[["^ ","^1:",0,"^1;",245]],"~i3",[["^ ","^1:",7,"^1;",245,"^E","cljs.core.map.cljs$core$IFn$_invoke$arity$2"]],"~i7",[["^ ","^1:",51,"^1;",245,"^E","cljs.core/second"]],"^21",[["^ ","^1:",68,"^1;",245],["^ ","^1:",118,"^1;",245]],"^1>",[["^ ","^1:",68,"^1;",245,"^E","cljs.core.partition.cljs$core$IFn$_invoke$arity$2"]],"^1I",[["^ ","^1:",122,"^1;",245,"^E","bindings"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^O"],[1534380137000],["^11","goog/math/math.js"],[1530991559994,"^P","~$goog.array","~$goog.asserts"],["^11","goog/array/array.js"],[1530991559994,"^P","^2>"],["^11","clojure/test/check/properties.cljc"],[1535586405418,"^P","^O","^K","^M"],["^11","clojure/test/check/generators.cljc"],[1535586405418,"^P","^O","~$clojure.test.check.random","~$clojure.test.check.rose-tree","~$goog.string","~$clojure.string"],["^11","goog/debug/error.js"],[1530991559994,"^P"],["^11","clojure/test/check/random/doubles.cljs"],[1535586405418,"^P","^O","~$clojure.test.check.random.longs"],["^11","goog/dom/nodetype.js"],[1530991559994,"^P"],["^11","clojure/test/check/rose_tree.cljc"],[1535586405418,"^P","^O"],["^11","clojure/test/check/random.cljs"],[1535586405418,"^P","^O","~$clojure.test.check.random.doubles","^2C"],["^11","goog/object/object.js"],[1530991559994,"^P"],"~:SHADOW-TIMESTAMP",[1535989513000,1534380137000],["^11","goog/math/long.js"],[1530991559994,"^P","^2>","~$goog.reflect"],["^11","goog/functions/functions.js"],[1530991559994,"^P"],["^11","goog/structs/map.js"],[1530991559994,"^P","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^11","goog/asserts/asserts.js"],[1530991559994,"^P","~$goog.debug.Error","~$goog.dom.NodeType","^2A"],["^11","goog/uri/uri.js"],[1530991559994,"^P","^2=","^2>","^2A","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^11","goog/base.js"],[1530991559994],["^11","goog/structs/structs.js"],[1530991559994,"^P","^2=","^2I"],["^11","clojure/string.cljs"],[1534380137690,"^P","^O","^2A","~$goog.string.StringBuffer"],["^11","clojure/test/check/random/longs/bit_count_impl.cljs"],[1535586405418,"^P","^O"],["^11","goog/string/string.js"],[1530991559994,"^P"],["^11","goog/reflect/reflect.js"],[1530991559994,"^P"],["^11","goog/string/stringbuffer.js"],[1530991559994,"^P"],["^11","goog/iter/iter.js"],[1530991559994,"^P","^2=","^2>","~$goog.functions","~$goog.math"],["^11","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^2A","^2I","^2=","~$goog.Uri","^2Q"],["^11","clojure/test/check/random/longs.cljs"],[1535586405418,"^P","^O","~$clojure.test.check.random.longs.bit-count-impl","^2T"],["^11","goog/math/integer.js"],[1530991559994,"^P"],["^11","goog/uri/utils.js"],[1530991559994,"^P","^2=","^2>","^2A"],["^11","clojure/test/check/results.cljc"],[1535586405418,"^P","^O"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","clojure/test/check/properties.cljc","^7",10,"^8",5,"^9",10,"^:",34],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"^E","^F","^I",null,"^J",["^ ","^K","^K","^L","^K","^M","^M","^N","^M","^O","^O","^P","^P"],"^Q",["^D",["^R"]],"~:shadow/js-access-global",["^D",["Error"]],"^S",null,"~:defs",["^ ","~$ErrorResult",["^ ","~:num-fields",1,"~:protocols",["^D",["~$cljs.core/IRecord","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$clojure.test.check.results/Result","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^E","~$clojure.test.check.properties/ErrorResult","^6","clojure/test/check/properties.cljc","^:",23,"~:type",true,"^8",12,"~:internal-ctor",true,"^7",14,"~:record",true,"^9",14,"~:tag","~$function","~:skip-protocol-flag",["^D",["^32","^33","^34","^35","^36","^37","^38","^3:","^3;","^3<","^3=","^3>","^3?","^3@"]]],"~$->ErrorResult",["^ ","~:protocol-inline",null,"^5",["^ ","^6","clojure/test/check/properties.cljc","^7",14,"^8",12,"^9",14,"^:",23,"^3C",true,"~:factory","~:positional","~:arglists",["^V",["~$quote",["^V",[["~$error"]]]]],"~:doc","Positional factory function for clojure.test.check.properties/ErrorResult."],"^E","~$clojure.test.check.properties/->ErrorResult","~:variadic",false,"^6","clojure/test/check/properties.cljc","^:",23,"~:method-params",["^V",[["^3N"]]],"~:protocol-impl",null,"~:arglists-meta",["^V",[null,null]],"^8",1,"^3C",true,"^3J","^3K","^7",14,"^9",14,"~:max-fixed-arity",1,"~:fn-var",true,"^3L",["^V",["^3M",["^V",[["^3N"]]]]],"^3O","Positional factory function for clojure.test.check.properties/ErrorResult."],"~$map->ErrorResult",["^ ","^3I",null,"^5",["^ ","^6","clojure/test/check/properties.cljc","^7",14,"^8",12,"^9",14,"^:",23,"^3C",true,"^3J","~:map","^3L",["^V",["^3M",["^V",[["~$G__19208"]]]]],"^3O","Factory function for clojure.test.check.properties/ErrorResult, taking a map of keywords to field values."],"^E","~$clojure.test.check.properties/map->ErrorResult","^3Q",false,"^6","clojure/test/check/properties.cljc","^:",23,"^3R",["^V",[["^3Y"]]],"^3S",null,"^3T",["^V",[null,null]],"^8",1,"^3C",true,"^3J","^3X","^7",14,"^9",14,"^3U",1,"^3V",true,"^3L",["^V",["^3M",["^V",[["^3Y"]]]]],"^3O","Factory function for clojure.test.check.properties/ErrorResult, taking a map of keywords to field values."],"~$exception?",["^ ","^3I",null,"^5",["^ ","^6","clojure/test/check/properties.cljc","^7",22,"^8",17,"^9",22,"^:",27,"~:private",true,"^3L",["^V",["^3M",["^V",[["~$x"]]]]]],"^40",true,"^E","~$clojure.test.check.properties/exception?","^3Q",false,"^6","clojure/test/check/properties.cljc","^:",27,"^3R",["^V",[["~$x"]]],"^3S",null,"^3T",["^V",[null,null]],"^8",1,"^7",22,"^9",22,"^3U",1,"^3V",true,"^3L",["^V",["^3M",["^V",[["~$x"]]]]]],"~$apply-gen",["^ ","^3I",null,"^5",["^ ","^6","clojure/test/check/properties.cljc","^7",26,"^8",17,"^9",26,"^:",26,"^40",true,"^3L",["^V",["^3M",["^V",[["^3F"]]]]]],"^40",true,"^E","~$clojure.test.check.properties/apply-gen","^3Q",false,"^6","clojure/test/check/properties.cljc","^:",26,"^3R",["^V",[["^3F"]]],"^3S",null,"^3T",["^V",[null,null]],"^8",1,"^7",26,"^9",26,"^3U",1,"^3V",true,"^3L",["^V",["^3M",["^V",[["^3F"]]]]]],"~$for-all*",["^ ","^3I",null,"^5",["^ ","^6","clojure/test/check/properties.cljc","^7",44,"^8",7,"^9",44,"^:",15,"^3L",["^V",["^3M",["^V",[["~$args","^3F"]]]]],"^3O","Creates a property (properties are also generators). A property\n  is a generator that generates the result of applying the function\n  under test with the realized arguments. Once realized, the arguments\n  will be applied to `function` with `apply`.\n\n  Example:\n\n  (for-all* [gen/int gen/int] (fn [a b] (>= (+ a b) a)))\n  "],"^E","~$clojure.test.check.properties/for-all*","^3Q",false,"^6","clojure/test/check/properties.cljc","^:",15,"^3R",["^V",[["^45","^3F"]]],"^3S",null,"^3T",["^V",[null,null]],"^8",1,"^7",44,"^9",44,"^3U",2,"^3V",true,"^3L",["^V",["^3M",["^V",[["^45","^3F"]]]]],"^3O","Creates a property (properties are also generators). A property\n  is a generator that generates the result of applying the function\n  under test with the realized arguments. Once realized, the arguments\n  will be applied to `function` with `apply`.\n\n  Example:\n\n  (for-all* [gen/int gen/int] (fn [a b] (>= (+ a b) a)))\n  "],"~$binding-vars",["^ ","^3I",null,"^5",["^ ","^6","clojure/test/check/properties.cljc","^7",59,"^8",8,"^9",59,"^:",20,"^40",true,"^3L",["^V",["^3M",["^V",[["~$bindings"]]]]]],"^40",true,"^E","~$clojure.test.check.properties/binding-vars","^3Q",false,"^6","clojure/test/check/properties.cljc","^:",20,"^3R",["^V",[["^48"]]],"^3S",null,"^3T",["^V",[null,null]],"^8",1,"^7",59,"^9",59,"^3U",1,"^3V",true,"^3L",["^V",["^3M",["^V",[["^48"]]]]]],"~$binding-gens",["^ ","^3I",null,"^5",["^ ","^6","clojure/test/check/properties.cljc","^7",63,"^8",8,"^9",63,"^:",20,"^40",true,"^3L",["^V",["^3M",["^V",[["^48"]]]]]],"^40",true,"^E","~$clojure.test.check.properties/binding-gens","^3Q",false,"^6","clojure/test/check/properties.cljc","^:",20,"^3R",["^V",[["^48"]]],"^3S",null,"^3T",["^V",[null,null]],"^8",1,"^7",63,"^9",63,"^3U",1,"^3V",true,"^3L",["^V",["^3M",["^V",[["^48"]]]]]]],"^T",["^ ","^O","^O"],"~:cljs.analyzer/constants",["^ ","^Q",["^D",["~:args","~:clojure.test.check.properties/error","~:function","~:result","~:error","^3N"]],"~:order",["^4A","^4>","^3N","^4@","^4?","^4="]],"^Y",["^ ","^R",["^D",[]]],"^Z",["^ "],"^[",["^P","^O","^K","^M"]],"^H","^F","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^2;",[["^4E","~:static-fns"],true,["^4E","~:elide-asserts"],false,["^4E","~:optimize-constants"],null,["^4E","~:external-config"],null,["^4E","~:tooling-config"],null,["^4E","~:emit-constants"],null,["^4E","~:infer-externs"],true,["^4E","^16"],null,["~:js-options","~:js-provider"],"^R",["~:mode"],"~:dev",["^4E","~:fn-invoke-direct"],null,["^4E","^18"],"/dev/null"]]]