["^ ","~:output",["^ ","~:js","goog.provide('clojure.test.check.results');\ngoog.require('cljs.core');\n\n/**\n * @interface\n */\nclojure.test.check.results.Result = function(){};\n\nclojure.test.check.results.passing_QMARK_ = (function clojure$test$check$results$passing_QMARK_(result){\nif(((!((result == null))) && (!((result.clojure$test$check$results$Result$passing_QMARK_$arity$1 == null))))){\nreturn result.clojure$test$check$results$Result$passing_QMARK_$arity$1(result);\n} else {\nvar x__4243__auto__ = (((result == null))?null:result);\nvar m__4244__auto__ = (clojure.test.check.results.passing_QMARK_[goog.typeOf(x__4243__auto__)]);\nif(!((m__4244__auto__ == null))){\nreturn (m__4244__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4244__auto__.cljs$core$IFn$_invoke$arity$1(result) : m__4244__auto__.call(null,result));\n} else {\nvar m__4244__auto____$1 = (clojure.test.check.results.passing_QMARK_[\"_\"]);\nif(!((m__4244__auto____$1 == null))){\nreturn (m__4244__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4244__auto____$1.cljs$core$IFn$_invoke$arity$1(result) : m__4244__auto____$1.call(null,result));\n} else {\nthrow cljs.core.missing_protocol(\"Result.passing?\",result);\n}\n}\n}\n});\n\n/**\n * A map of data about the trial.\n */\nclojure.test.check.results.result_data = (function clojure$test$check$results$result_data(result){\nif(((!((result == null))) && (!((result.clojure$test$check$results$Result$result_data$arity$1 == null))))){\nreturn result.clojure$test$check$results$Result$result_data$arity$1(result);\n} else {\nvar x__4243__auto__ = (((result == null))?null:result);\nvar m__4244__auto__ = (clojure.test.check.results.result_data[goog.typeOf(x__4243__auto__)]);\nif(!((m__4244__auto__ == null))){\nreturn (m__4244__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4244__auto__.cljs$core$IFn$_invoke$arity$1(result) : m__4244__auto__.call(null,result));\n} else {\nvar m__4244__auto____$1 = (clojure.test.check.results.result_data[\"_\"]);\nif(!((m__4244__auto____$1 == null))){\nreturn (m__4244__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4244__auto____$1.cljs$core$IFn$_invoke$arity$1(result) : m__4244__auto____$1.call(null,result));\n} else {\nthrow cljs.core.missing_protocol(\"Result.result-data\",result);\n}\n}\n}\n});\n\ngoog.object.set(clojure.test.check.results.Result,\"_\",true);\n\nvar G__17836_17850 = clojure.test.check.results.passing_QMARK_;\nvar G__17837_17851 = \"_\";\nvar G__17838_17852 = ((function (G__17836_17850,G__17837_17851){\nreturn (function (this$){\nreturn cljs.core.boolean$(this$);\n});})(G__17836_17850,G__17837_17851))\n;\ngoog.object.set(G__17836_17850,G__17837_17851,G__17838_17852);\n\nvar G__17839_17854 = clojure.test.check.results.result_data;\nvar G__17840_17855 = \"_\";\nvar G__17841_17856 = ((function (G__17839_17854,G__17840_17855){\nreturn (function (this$){\nreturn cljs.core.PersistentArrayMap.EMPTY;\n});})(G__17839_17854,G__17840_17855))\n;\ngoog.object.set(G__17839_17854,G__17840_17855,G__17841_17856);\n\ngoog.object.set(clojure.test.check.results.Result,\"null\",true);\n\nvar G__17842_17860 = clojure.test.check.results.passing_QMARK_;\nvar G__17843_17861 = \"null\";\nvar G__17844_17862 = ((function (G__17842_17860,G__17843_17861){\nreturn (function (this$){\nreturn false;\n});})(G__17842_17860,G__17843_17861))\n;\ngoog.object.set(G__17842_17860,G__17843_17861,G__17844_17862);\n\nvar G__17845_17865 = clojure.test.check.results.result_data;\nvar G__17846_17866 = \"null\";\nvar G__17847_17867 = ((function (G__17845_17865,G__17846_17866){\nreturn (function (this$){\nreturn cljs.core.PersistentArrayMap.EMPTY;\n});})(G__17845_17865,G__17846_17866))\n;\ngoog.object.set(G__17845_17865,G__17846_17866,G__17847_17867);\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","clojure/test/check/results.cljc","~:line",12,"~:column",5,"~:end-line",12,"~:end-column",31,"~:author","Gary Fredericks","~:doc","A protocol and helper functions for trial results."],"~:ns-aliases",["^ ","~$systeminformation","~$shadow.js.shim.module$systeminformation","~$clojure.core.async","~$cljs.core.async","~$raspicam","~$shadow.js.shim.module$raspicam"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$clojure.test.check.results","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^M","~$goog","^N"],"~:seen",["^F",[]],"~:uses",null,"~:require-macros",["^ ","^M","^M"],"~:form",["~#list",["~$ns","^H"]],"~:flags",["^ "],"~:js-deps",["^ "],"~:deps",["^N","^M"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","clojure/test/check/results.cljc"],"~:compiled-at",1537320655163,"~:resource-name","clojure/test/check/results.cljc","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey, Reid Draper, and contributors.\n;   All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns ^{:author \"Gary Fredericks\"\n      :doc \"A protocol and helper functions for trial results.\"}\n    clojure.test.check.results)\n\n(defprotocol Result\n  (passing? [result])\n  (result-data [result] \"A map of data about the trial.\"))\n\n(extend-protocol Result\n  #?(:clj Object :cljs default)\n  (passing? [this] (boolean this))\n  (result-data [this] {})\n\n  nil\n  (passing? [this] false)\n  (result-data [this] {}))\n","~:reader-features",["^F",["~:cljs"]],"~:source-map",["^ ","~i13",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",2],["^ ","^16",0,"^17",2],["^ ","^16",0,"^17",3],["^ ","^16",36,"^17",6],["^ ","^16",0,"^17",8],["^ ","^16",44,"^17",8],["^ ","^16",0,"^17",9],["^ ","^16",0,"^17",9],["^ ","^16",3,"^17",9],["^ ","^16",5,"^17",9],["^ ","^16",7,"^17",9],["^ ","^16",18,"^17",9],["^ ","^16",30,"^17",9],["^ ","^16",32,"^17",9],["^ ","^16",33,"^17",9],["^ ","^16",100,"^17",9],["^ ","^16",0,"^17",10],["^ ","^16",0,"^17",12],["^ ","^16",4,"^17",12,"^G","x__4243__auto__"],["^ ","^16",22,"^17",12],["^ ","^16",24,"^17",12],["^ ","^16",35,"^17",12],["^ ","^16",42,"^17",12],["^ ","^16",4,"^17",13,"^G","m__4244__auto__"],["^ ","^16",22,"^17",13],["^ ","^16",23,"^17",13,"^G","clojure/test.check.results.passing?"],["^ ","^16",65,"^17",13],["^ ","^16",65,"^17",13,"^G","goog/typeOf"],["^ ","^16",77,"^17",13,"^G","x__4243__auto__"],["^ ","^16",0,"^17",14],["^ ","^16",0,"^17",14],["^ ","^16",3,"^17",14],["^ ","^16",5,"^17",14],["^ ","^16",6,"^17",14,"^G","m__4244__auto__"],["^ ","^16",25,"^17",14],["^ ","^16",0,"^17",15],["^ ","^16",8,"^17",15,"^G","m__4244__auto__"],["^ ","^16",56,"^17",15,"^G","m__4244__auto__"],["^ ","^16",112,"^17",15,"^G","m__4244__auto__"],["^ ","^16",0,"^17",17],["^ ","^16",4,"^17",17,"^G","m__4244__auto__"],["^ ","^16",26,"^17",17],["^ ","^16",27,"^17",17,"^G","clojure/test.check.results.passing?"],["^ ","^16",69,"^17",17],["^ ","^16",0,"^17",18],["^ ","^16",0,"^17",18],["^ ","^16",3,"^17",18],["^ ","^16",5,"^17",18],["^ ","^16",6,"^17",18,"^G","m__4244__auto__"],["^ ","^16",29,"^17",18],["^ ","^16",0,"^17",19],["^ ","^16",8,"^17",19,"^G","m__4244__auto__"],["^ ","^16",60,"^17",19,"^G","m__4244__auto__"],["^ ","^16",120,"^17",19,"^G","m__4244__auto__"],["^ ","^16",0,"^17",21],["^ ","^16",6,"^17",21],["^ ","^16",6,"^17",21,"^G","cljs.core/missing-protocol"],["^ ","^16",33,"^17",21],["^ ","^16",0,"^17",27],["^ ","^16",41,"^17",30],["^ ","^16",0,"^17",31],["^ ","^16",0,"^17",31],["^ ","^16",3,"^17",31],["^ ","^16",5,"^17",31],["^ ","^16",7,"^17",31],["^ ","^16",18,"^17",31],["^ ","^16",30,"^17",31],["^ ","^16",32,"^17",31],["^ ","^16",33,"^17",31],["^ ","^16",97,"^17",31],["^ ","^16",0,"^17",32],["^ ","^16",0,"^17",34],["^ ","^16",4,"^17",34,"^G","x__4243__auto__"],["^ ","^16",22,"^17",34],["^ ","^16",24,"^17",34],["^ ","^16",35,"^17",34],["^ ","^16",42,"^17",34],["^ ","^16",4,"^17",35,"^G","m__4244__auto__"],["^ ","^16",22,"^17",35],["^ ","^16",23,"^17",35,"^G","clojure/test.check.results.result-data"],["^ ","^16",62,"^17",35],["^ ","^16",62,"^17",35,"^G","goog/typeOf"],["^ ","^16",74,"^17",35,"^G","x__4243__auto__"],["^ ","^16",0,"^17",36],["^ ","^16",0,"^17",36],["^ ","^16",3,"^17",36],["^ ","^16",5,"^17",36],["^ ","^16",6,"^17",36,"^G","m__4244__auto__"],["^ ","^16",25,"^17",36],["^ ","^16",0,"^17",37],["^ ","^16",8,"^17",37,"^G","m__4244__auto__"],["^ ","^16",56,"^17",37,"^G","m__4244__auto__"],["^ ","^16",112,"^17",37,"^G","m__4244__auto__"],["^ ","^16",0,"^17",39],["^ ","^16",4,"^17",39,"^G","m__4244__auto__"],["^ ","^16",26,"^17",39],["^ ","^16",27,"^17",39,"^G","clojure/test.check.results.result-data"],["^ ","^16",66,"^17",39],["^ ","^16",0,"^17",40],["^ ","^16",0,"^17",40],["^ ","^16",3,"^17",40],["^ ","^16",5,"^17",40],["^ ","^16",6,"^17",40,"^G","m__4244__auto__"],["^ ","^16",29,"^17",40],["^ ","^16",0,"^17",41],["^ ","^16",8,"^17",41,"^G","m__4244__auto__"],["^ ","^16",60,"^17",41,"^G","m__4244__auto__"],["^ ","^16",120,"^17",41,"^G","m__4244__auto__"],["^ ","^16",0,"^17",43],["^ ","^16",6,"^17",43],["^ ","^16",6,"^17",43,"^G","cljs.core/missing-protocol"],["^ ","^16",33,"^17",43],["^ ","^16",0,"^17",49]],"^15",[["^ ","^16",0,"^17",6,"^G","clojure.test.check.results/Result"]]],"~i14",["^ ","~i3",[["^ ","^16",0,"^17",8,"^G","clojure.test.check.results/passing?"]],"^15",[["^ ","^16",96,"^17",8,"^G","result"],["^ ","^16",8,"^17",9,"^G","result"],["^ ","^16",33,"^17",9,"^G","result"],["^ ","^16",7,"^17",10,"^G","result"],["^ ","^16",71,"^17",10,"^G","result"],["^ ","^16",25,"^17",12,"^G","result"],["^ ","^16",47,"^17",12,"^G","result"],["^ ","^16",102,"^17",15,"^G","result"],["^ ","^16",138,"^17",15,"^G","result"],["^ ","^16",110,"^17",19,"^G","result"],["^ ","^16",150,"^17",19,"^G","result"],["^ ","^16",51,"^17",21,"^G","result"]]],"~i15",["^ ","~i3",[["^ ","^16",0,"^17",30,"^G","clojure.test.check.results/result-data"]],"~i16",[["^ ","^16",90,"^17",30,"^G","result"],["^ ","^16",8,"^17",31,"^G","result"],["^ ","^16",33,"^17",31,"^G","result"],["^ ","^16",7,"^17",32,"^G","result"],["^ ","^16",68,"^17",32,"^G","result"],["^ ","^16",25,"^17",34,"^G","result"],["^ ","^16",47,"^17",34,"^G","result"],["^ ","^16",102,"^17",37,"^G","result"],["^ ","^16",138,"^17",37,"^G","result"],["^ ","^16",110,"^17",41,"^G","result"],["^ ","^16",150,"^17",41,"^G","result"],["^ ","^16",54,"^17",43,"^G","result"]]],"~i17",["^ ","~i0",[["^ ","^16",0,"^17",49],["^ ","^16",0,"^17",49],["^ ","^16",0,"^17",49],["^ ","^16",0,"^17",49,"^G","goog.object/set"],["^ ","^16",16,"^17",49,"^G","clojure.test.check.results/Result"],["^ ","^16",50,"^17",49],["^ ","^16",54,"^17",49],["^ ","^16",0,"^17",51],["^ ","^16",4,"^17",51,"^G","G__17836"],["^ ","^16",21,"^17",51,"^G","clojure.test.check.results/passing?"],["^ ","^16",4,"^17",52,"^G","G__17837"],["^ ","^16",21,"^17",52],["^ ","^16",4,"^17",53,"^G","G__17838"],["^ ","^16",0,"^17",58],["^ ","^16",0,"^17",58],["^ ","^16",0,"^17",58,"^G","goog.object/set"],["^ ","^16",16,"^17",58,"^G","G__17836"],["^ ","^16",31,"^17",58,"^G","G__17837"],["^ ","^16",46,"^17",58,"^G","G__17838"],["^ ","^16",0,"^17",60],["^ ","^16",4,"^17",60,"^G","G__17839"],["^ ","^16",21,"^17",60,"^G","clojure.test.check.results/result-data"],["^ ","^16",4,"^17",61,"^G","G__17840"],["^ ","^16",21,"^17",61],["^ ","^16",4,"^17",62,"^G","G__17841"],["^ ","^16",0,"^17",67],["^ ","^16",0,"^17",67],["^ ","^16",0,"^17",67,"^G","goog.object/set"],["^ ","^16",16,"^17",67,"^G","G__17839"],["^ ","^16",31,"^17",67,"^G","G__17840"],["^ ","^16",46,"^17",67,"^G","G__17841"],["^ ","^16",0,"^17",69],["^ ","^16",0,"^17",69],["^ ","^16",0,"^17",69,"^G","goog.object/set"],["^ ","^16",16,"^17",69,"^G","clojure.test.check.results/Result"],["^ ","^16",50,"^17",69],["^ ","^16",57,"^17",69],["^ ","^16",0,"^17",71],["^ ","^16",4,"^17",71,"^G","G__17842"],["^ ","^16",21,"^17",71,"^G","clojure.test.check.results/passing?"],["^ ","^16",4,"^17",72,"^G","G__17843"],["^ ","^16",21,"^17",72],["^ ","^16",4,"^17",73,"^G","G__17844"],["^ ","^16",0,"^17",78],["^ ","^16",0,"^17",78],["^ ","^16",0,"^17",78,"^G","goog.object/set"],["^ ","^16",16,"^17",78,"^G","G__17842"],["^ ","^16",31,"^17",78,"^G","G__17843"],["^ ","^16",46,"^17",78,"^G","G__17844"],["^ ","^16",0,"^17",80],["^ ","^16",4,"^17",80,"^G","G__17845"],["^ ","^16",21,"^17",80,"^G","clojure.test.check.results/result-data"],["^ ","^16",4,"^17",81,"^G","G__17846"],["^ ","^16",21,"^17",81],["^ ","^16",4,"^17",82,"^G","G__17847"],["^ ","^16",0,"^17",87],["^ ","^16",0,"^17",87],["^ ","^16",0,"^17",87,"^G","goog.object/set"],["^ ","^16",16,"^17",87,"^G","G__17845"],["^ ","^16",31,"^17",87,"^G","G__17846"],["^ ","^16",46,"^17",87,"^G","G__17847"]]],"~i19",["^ ","~i2",[["^ ","^16",21,"^17",53],["^ ","^16",0,"^17",55]],"^15",[["^ ","^16",18,"^17",54,"^G","this"]],"^1<",[["^ ","^16",0,"^17",55]],"~i20",[["^ ","^16",7,"^17",55,"^G","cljs.core/boolean"]],"~i28",[["^ ","^16",26,"^17",55,"^G","this"]]],"^1=",["^ ","~i2",[["^ ","^16",21,"^17",62],["^ ","^16",0,"^17",64],["^ ","^16",0,"^17",64]],"^1:",[["^ ","^16",18,"^17",63,"^G","this"]]],"~i23",["^ ","~i2",[["^ ","^16",21,"^17",73],["^ ","^16",0,"^17",75],["^ ","^16",0,"^17",75]],"^15",[["^ ","^16",18,"^17",74,"^G","this"]]],"~i24",["^ ","~i2",[["^ ","^16",21,"^17",82],["^ ","^16",0,"^17",84],["^ ","^16",0,"^17",84]],"^1:",[["^ ","^16",18,"^17",83,"^G","this"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^M"],[1534380137000],["^Y","goog/math/math.js"],[1530991559994,"^N","~$goog.array","~$goog.asserts"],["^Y","goog/array/array.js"],[1530991559994,"^N","^1F"],["^Y","goog/debug/error.js"],[1530991559994,"^N"],["^Y","goog/dom/nodetype.js"],[1530991559994,"^N"],["^Y","goog/object/object.js"],[1530991559994,"^N"],"~:SHADOW-TIMESTAMP",[1535989513000,1534380137000],["^Y","goog/math/long.js"],[1530991559994,"^N","^1F","~$goog.reflect"],["^Y","goog/functions/functions.js"],[1530991559994,"^N"],["^Y","goog/structs/map.js"],[1530991559994,"^N","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^Y","goog/asserts/asserts.js"],[1530991559994,"^N","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^Y","goog/uri/uri.js"],[1530991559994,"^N","^1E","^1F","^1N","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^Y","goog/base.js"],[1530991559994],["^Y","goog/structs/structs.js"],[1530991559994,"^N","^1E","^1K"],["^Y","goog/string/string.js"],[1530991559994,"^N"],["^Y","goog/reflect/reflect.js"],[1530991559994,"^N"],["^Y","goog/string/stringbuffer.js"],[1530991559994,"^N"],["^Y","goog/iter/iter.js"],[1530991559994,"^N","^1E","^1F","~$goog.functions","~$goog.math"],["^Y","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^1N","^1K","^1E","~$goog.Uri","~$goog.string.StringBuffer"],["^Y","goog/math/integer.js"],[1530991559994,"^N"],["^Y","goog/uri/utils.js"],[1530991559994,"^N","^1E","^1F","^1N"],["^Y","clojure/test/check/results.cljc"],[1535586405418,"^N","^M"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","clojure/test/check/results.cljc","^7",12,"^8",5,"^9",12,"^:",31,"^;","Gary Fredericks","^<","A protocol and helper functions for trial results."],"^=",["^ ","^>","^?","^@","^A","^B","^C"],"~:shadow/protocol-prefixes",["^F",["clojure$test$check$results$Result$"]],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N"],"^O",["^F",[]],"^P",null,"~:defs",["^ ","~$Result",["^ ","^5",["^ ","^6","clojure/test/check/results.cljc","^7",14,"^8",14,"^9",14,"^:",20,"^<",null,"~:protocol-symbol",true,"~:jsdoc",["^S",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$passing?",[["~$result"]],"~$result-data",[["^27"]]]]],"^22",true,"^G","~$clojure.test.check.results/Result","^6","clojure/test/check/results.cljc","^:",20,"^8",1,"^7",14,"^24",["^ ","^25",["^ ","^26",[["^27"]],"^28",[["^27"]]]],"~:info",null,"^9",14,"~:tag","~$any","~:impls",["^F",[null,"~$default"]],"^<",null,"^23",["^S",["@interface"]]],"^26",["^ ","~:protocol-inline",null,"^5",["^ ","^6","clojure/test/check/results.cljc","^7",15,"^8",4,"^9",15,"^:",12,"~:protocol","^29","^<",null,"~:arglists",["^S",["~$quote",["^S",[["^27"]]]]]],"^2@","^29","^G","~$clojure.test.check.results/passing?","~:variadic",false,"^6","clojure/test/check/results.cljc","^:",12,"~:method-params",["^S",[["^27"]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^8",1,"^7",14,"^9",15,"~:max-fixed-arity",1,"~:fn-var",true,"^2A",["^S",["^2B",["^S",[["^27"]]]]],"^<",null],"^28",["^ ","^2?",null,"^5",["^ ","^6","clojure/test/check/results.cljc","^7",16,"^8",4,"^9",16,"^:",15,"^2@","^29","^<","A map of data about the trial.","^2A",["^S",["^2B",["^S",[["^27"]]]]]],"^2@","^29","^G","~$clojure.test.check.results/result-data","^2D",false,"^6","clojure/test/check/results.cljc","^:",15,"^2E",["^S",[["^27"]]],"^2F",null,"^2G",["^S",[null,null]],"^8",1,"^7",14,"^9",16,"^2H",1,"^2I",true,"^2A",["^S",["^2B",["^S",[["^27"]]]]],"^<","A map of data about the trial."]],"^Q",["^ ","^M","^M"],"^U",["^ "],"^V",["^ "],"^W",["^N","^M"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1C",[["^2M","~:static-fns"],true,["^2M","~:elide-asserts"],false,["^2M","~:optimize-constants"],null,["^2M","~:external-config"],null,["^2M","~:tooling-config"],null,["^2M","~:emit-constants"],null,["^2M","~:infer-externs"],true,["^2M","^12"],null,["~:js-options","~:js-provider"],"~:require",["~:mode"],"~:dev",["^2M","~:fn-invoke-direct"],null,["^2M","^14"],"/dev/null"]]]