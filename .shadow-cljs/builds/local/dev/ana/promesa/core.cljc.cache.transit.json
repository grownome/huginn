["^ ","~:output",["^ ","~:js","goog.provide('promesa.core');\ngoog.require('cljs.core');\ngoog.require('promesa.protocols');\ngoog.require('promesa.impl');\ngoog.require('promesa.impl.scheduler');\npromesa.core.Promise = promesa.impl.Promise;\n/**\n * Schedule a callable to be executed after the `ms` delay\n *   is reached.\n * \n *   In JVM it uses a scheduled executor service and in JS\n *   it uses the `setTimeout` function.\n */\npromesa.core.schedule = (function promesa$core$schedule(ms,func){\nreturn promesa.impl.scheduler.schedule(ms,func);\n});\n/**\n * Return a resolved promise with provided value.\n */\npromesa.core.resolved = (function promesa$core$resolved(v){\nreturn promesa.impl.resolved(v);\n});\n/**\n * Return a rejected promise with provided reason.\n */\npromesa.core.rejected = (function promesa$core$rejected(v){\nreturn promesa.impl.rejected(v);\n});\n/**\n * The promise constructor.\n */\npromesa.core.promise = (function promesa$core$promise(v){\nreturn promesa.protocols._promise(v);\n});\n/**\n * Return true if `v` is a promise instance.\n */\npromesa.core.promise_QMARK_ = (function promesa$core$promise_QMARK_(v){\nreturn (v instanceof promesa.core.Promise);\n});\n/**\n * Returns true if promise `p` is already fulfilled.\n */\npromesa.core.resolved_QMARK_ = (function promesa$core$resolved_QMARK_(p){\nreturn promesa.protocols._resolved_QMARK_(p);\n});\n/**\n * Returns true if promise `p` is already rejected.\n */\npromesa.core.rejected_QMARK_ = (function promesa$core$rejected_QMARK_(p){\nreturn promesa.protocols._rejected_QMARK_(p);\n});\n/**\n * Returns true if promise `p` is stil pending.\n */\npromesa.core.pending_QMARK_ = (function promesa$core$pending_QMARK_(p){\nreturn promesa.protocols._pending_QMARK_(p);\n});\n/**\n * Returns the current promise value.\n */\npromesa.core.extract = (function promesa$core$extract(p){\nreturn promesa.protocols._extract(p);\n});\n/**\n * Returns true if promise `p` is already done.\n */\npromesa.core.done_QMARK_ = cljs.core.complement(promesa.core.pending_QMARK_);\n/**\n * Apply a function to the promise value and\n *   return a new promise with the result.\n */\npromesa.core.map = (function promesa$core$map(f,p){\nreturn promesa.protocols._map(p,f);\n});\n/**\n * Same as `map` but removes one level of\n *   promise neesting. Useful when the map function\n *   returns a promise instead of value.\n * \n *   In JS environment this function is analogous\n *   to `map` because the promise abstraction overloads\n *   the `map` operator.\n */\npromesa.core.mapcat = (function promesa$core$mapcat(f,p){\nreturn promesa.protocols._bind(p,f);\n});\n/**\n * A chain helper for promises.\n */\npromesa.core.bind = (function promesa$core$bind(p,f){\nreturn promesa.protocols._bind(p,f);\n});\n/**\n * Similar to `map` but with parameters inverted\n *   for convenience and for familiarity with\n *   javascript's promises `.then` operator.\n * \n *   Unlike Clojure's `map`, will resolve any promises\n *   returned  by `f`.\n */\npromesa.core.then = (function promesa$core$then(p,f){\nreturn promesa.protocols._map(p,f);\n});\n/**\n * Like then but accepts multiple parameters.\n */\npromesa.core.chain = (function promesa$core$chain(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___34647 = arguments.length;\nvar i__4532__auto___34648 = (0);\nwhile(true){\nif((i__4532__auto___34648 < len__4531__auto___34647)){\nargs__4534__auto__.push((arguments[i__4532__auto___34648]));\n\nvar G__34649 = (i__4532__auto___34648 + (1));\ni__4532__auto___34648 = G__34649;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\npromesa.core.chain.cljs$core$IFn$_invoke$arity$variadic = (function (p,funcs){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__34641_SHARP_,p2__34643_SHARP_){\nreturn promesa.core.then(p1__34641_SHARP_,p2__34643_SHARP_);\n}),p,funcs);\n});\n\npromesa.core.chain.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\npromesa.core.chain.cljs$lang$applyTo = (function (seq34645){\nvar G__34646 = cljs.core.first(seq34645);\nvar seq34645__$1 = cljs.core.next(seq34645);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__34646,seq34645__$1);\n});\n\npromesa.core.branch = (function promesa$core$branch(p,success,failure){\nreturn promesa.protocols._catch(promesa.protocols._map(p,success),failure);\n});\n/**\n * Catch all promise chain helper.\n */\npromesa.core.catch$ = (function promesa$core$catch(var_args){\nvar G__34652 = arguments.length;\nswitch (G__34652) {\ncase 2:\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.catch$.cljs$core$IFn$_invoke$arity$2 = (function (p,f){\nreturn promesa.protocols._catch(p,f);\n});\n\npromesa.core.catch$.cljs$core$IFn$_invoke$arity$3 = (function (p,pred_or_type,f){\nvar accept_QMARK_ = ((cljs.core.ifn_QMARK_(pred_or_type))?pred_or_type:(function (p1__34650_SHARP_){\nreturn (p1__34650_SHARP_ instanceof pred_or_type);\n}));\nreturn promesa.protocols._catch(p,((function (accept_QMARK_){\nreturn (function (e){\nif(cljs.core.truth_((accept_QMARK_.cljs$core$IFn$_invoke$arity$1 ? accept_QMARK_.cljs$core$IFn$_invoke$arity$1(e) : accept_QMARK_.call(null,e)))){\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(e) : f.call(null,e));\n} else {\nreturn promesa.impl.rejected(e);\n}\n});})(accept_QMARK_))\n);\n});\n\npromesa.core.catch$.cljs$lang$maxFixedArity = 3;\n\n/**\n * Same as `catch` but with parameters inverted.\n */\npromesa.core.error = (function promesa$core$error(var_args){\nvar G__34662 = arguments.length;\nswitch (G__34662) {\ncase 2:\nreturn promesa.core.error.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn promesa.core.error.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.error.cljs$core$IFn$_invoke$arity$2 = (function (f,p){\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2(p,f);\n});\n\npromesa.core.error.cljs$core$IFn$_invoke$arity$3 = (function (f,type,p){\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$3(p,type,f);\n});\n\npromesa.core.error.cljs$lang$maxFixedArity = 3;\n\n/**\n * A short alias for `error` function.\n */\npromesa.core.err = promesa.core.error;\n/**\n * Attach handler to promise that will be\n *   executed independently if promise is\n *   resolved or rejected.\n */\npromesa.core.finally$ = (function promesa$core$finally(p,callback){\nreturn p.lastly(callback);\n});\n/**\n * Given an array of promises, return a promise\n *   that is fulfilled  when all the items in the\n *   array are fulfilled.\n * \n *   Example:\n * \n *   (-> (all [(promise :first-promise)\n *          (promise :second-promise)]\n *    (then (fn [[first-result second-result]]))\n *     (println (str first-result \", \" second-result)\n * \n *   Will print out\n *   :first-promise, :second-promise.\n * \n *   If at least one of the promises is rejected, the resulting promise will be\n *   rejected.\n */\npromesa.core.all = (function promesa$core$all(promises){\nreturn promesa.core.then(promesa.core.Promise.all(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(promises)),cljs.core.vec);\n});\n/**\n * Given an array of promises, return a promise\n *   that is fulfilled when first one item in the\n *   array is fulfilled.\n */\npromesa.core.any = (function promesa$core$any(promises){\nreturn promesa.core.Promise.any(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(promises));\n});\n/**\n * Cancel the promise.\n */\npromesa.core.cancel_BANG_ = (function promesa$core$cancel_BANG_(p){\npromesa.protocols._cancel(p);\n\nreturn p;\n});\n/**\n * Return true if `v` is a cancelled promise.\n */\npromesa.core.cancelled_QMARK_ = (function promesa$core$cancelled_QMARK_(v){\nreturn promesa.protocols._cancelled_QMARK_(v);\n});\n/**\n * Given a function that accepts a callback as the last argument return other\n *   function that returns a promise. Callback is expected to take single\n *   parameter (result of a computation).\n */\npromesa.core.promisify = (function promesa$core$promisify(callable){\nreturn (function() { \nvar G__34669__delegate = function (args){\nreturn promesa.core.promise((function (resolve,reject){\nvar args__$1 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(args),resolve);\ntry{return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(callable,args__$1);\n}catch (e34668){if((e34668 instanceof Error)){\nvar e = e34668;\nreturn (reject.cljs$core$IFn$_invoke$arity$1 ? reject.cljs$core$IFn$_invoke$arity$1(e) : reject.call(null,e));\n} else {\nthrow e34668;\n\n}\n}}));\n};\nvar G__34669 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__34670__i = 0, G__34670__a = new Array(arguments.length -  0);\nwhile (G__34670__i < G__34670__a.length) {G__34670__a[G__34670__i] = arguments[G__34670__i + 0]; ++G__34670__i;}\n  args = new cljs.core.IndexedSeq(G__34670__a,0,null);\n} \nreturn G__34669__delegate.call(this,args);};\nG__34669.cljs$lang$maxFixedArity = 0;\nG__34669.cljs$lang$applyTo = (function (arglist__34671){\nvar args = cljs.core.seq(arglist__34671);\nreturn G__34669__delegate(args);\n});\nG__34669.cljs$core$IFn$_invoke$arity$variadic = G__34669__delegate;\nreturn G__34669;\n})()\n;\n});\n/**\n * Returns a cancellable promise that will be fulfilled\n *   with this promise's fulfillment value or rejection reason.\n *   However, if this promise is not fulfilled or rejected\n *   within `ms` milliseconds, the returned promise is cancelled\n *   with a TimeoutError\n */\npromesa.core.timeout = (function promesa$core$timeout(var_args){\nvar G__34673 = arguments.length;\nswitch (G__34673) {\ncase 2:\nreturn promesa.core.timeout.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn promesa.core.timeout.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.timeout.cljs$core$IFn$_invoke$arity$2 = (function (p,t){\nreturn p.timeout(t);\n});\n\npromesa.core.timeout.cljs$core$IFn$_invoke$arity$3 = (function (p,t,v){\nreturn p.timeout(t,v);\n});\n\npromesa.core.timeout.cljs$lang$maxFixedArity = 3;\n\n/**\n * Given a timeout in miliseconds and optional\n *   value, returns a promise that will fulfilled\n *   with provided value (or nil) after the\n *   time is reached.\n */\npromesa.core.delay = (function promesa$core$delay(var_args){\nvar G__34680 = arguments.length;\nswitch (G__34680) {\ncase 1:\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.delay.cljs$core$IFn$_invoke$arity$1 = (function (t){\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$2(t,null);\n});\n\npromesa.core.delay.cljs$core$IFn$_invoke$arity$2 = (function (t,v){\nreturn promesa.core.promise((function (resolve,reject){\nreturn promesa.core.schedule(t,(function (){\nreturn (resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(v) : resolve.call(null,v));\n}));\n}));\n});\n\npromesa.core.delay.cljs$lang$maxFixedArity = 2;\n\n/**\n * A helper for start promise chain without worry about\n *   synchronous or asynchronous exceptions. Returns a promise\n *   resolved with the return value of the callback.\n */\npromesa.core.attempt = (function promesa$core$attempt(callback){\nreturn promesa.core.promise((function (resolve){\nvar G__34685 = (callback.cljs$core$IFn$_invoke$arity$0 ? callback.cljs$core$IFn$_invoke$arity$0() : callback.call(null));\nreturn (resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(G__34685) : resolve.call(null,G__34685));\n}));\n});\npromesa.core.await$ = (function promesa$core$await(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___34691 = arguments.length;\nvar i__4532__auto___34692 = (0);\nwhile(true){\nif((i__4532__auto___34692 < len__4531__auto___34691)){\nargs__4534__auto__.push((arguments[i__4532__auto___34692]));\n\nvar G__34693 = (i__4532__auto___34692 + (1));\ni__4532__auto___34692 = G__34693;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((0) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((0)),(0),null)):null);\nreturn promesa.core.await$.cljs$core$IFn$_invoke$arity$variadic(argseq__4535__auto__);\n});\n\npromesa.core.await$.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Should be only used in alet macro.\",cljs.core.PersistentArrayMap.EMPTY);\n});\n\npromesa.core.await$.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\npromesa.core.await$.cljs$lang$applyTo = (function (seq34690){\nvar self__4519__auto__ = this;\nreturn self__4519__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq34690));\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","promesa/core.cljc","~:line",25,"~:column",5,"~:end-line",25,"~:end-column",17],"~:ns-aliases",["^ ","~$jsonwebtoken","~$shadow.js.shim.module$jsonwebtoken","~$mqtt","~$shadow.js.shim.module$mqtt","~$clojure.core.async","~$cljs.core.async","~$systeminformation","~$shadow.js.shim.module$systeminformation"],"~:use-macros",null,"~:excludes",["~#set",["~$map","~$delay","~$mapcat","~$await","~$spread","~$promise"]],"~:name","~$promesa.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$promesa.protocols","^S","~$pt","^S","~$promesa.impl","^U","~$impl","^U","~$promesa.impl.scheduler","^W","~$ps","^W","~$cljs.core","^Y","~$goog","^Z"],"~:seen",["^F",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^Y","^Y"],"~:form",["~#list",["~$ns","^N",["^14",["~:refer-clojure","~:exclude",["^H","^K","^L","^J","^G","^I"]]],["^14",["^10",["^S","~:as","^T"],["^U","^18","^V"],["^W","^18","^X"]]]]],"~:flags",["^ ","^10",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^Z","^Y","^S","^U","^W"]],"^P","^N","~:resource-id",["~:shadow.build.classpath/resource","promesa/core.cljc"],"~:compiled-at",1537043474231,"~:resource-name","promesa/core.cljc","~:warnings",[],"~:source",";; Copyright (c) 2015-2016 Andrey Antukh <niwi@niwi.nz>\n;; All rights reserved.\n;;\n;; Redistribution and use in source and binary forms, with or without\n;; modification, are permitted provided that the following conditions\n;; are met:\n;;\n;; 1. Redistributions of source code must retain the above copyright\n;;    notice, this list of conditions and the following disclaimer.\n;; 2. Redistributions in binary form must reproduce the above copyright\n;;    notice, this list of conditions and the following disclaimer in the\n;;    documentation and/or other materials provided with the distribution.\n;;\n;; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n;; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n;; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n;; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n;; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n;; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n;; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n;; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n;; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n;; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n(ns promesa.core\n  (:refer-clojure :exclude [delay spread promise await map mapcat])\n  (:require [promesa.protocols :as pt]\n            [promesa.impl :as impl]\n            [promesa.impl.scheduler :as ps])\n  #?(:clj\n     (:import java.util.concurrent.CompletableFuture\n              java.util.concurrent.CompletionStage)))\n\n;; --- Global Constants\n\n#?(:clj\n   (defn set-executor!\n     \"Replace the default executor instance with\n     your own instance.\"\n     [executor]\n     (alter-var-root #'impl/+executor+ (constantly executor))))\n\n#?(:cljs (def ^:const Promise impl/Promise))\n\n;; --- Scheduling helpers\n\n(defn schedule\n  \"Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function.\"\n  [ms func]\n  (ps/schedule ms func))\n\n;; --- Promise\n\n(defn resolved\n  \"Return a resolved promise with provided value.\"\n  [v]\n  (impl/resolved v))\n\n(defn rejected\n  \"Return a rejected promise with provided reason.\"\n  [v]\n  (impl/rejected v))\n\n(defn promise\n  \"The promise constructor.\"\n  [v]\n  (pt/-promise v))\n\n(defn promise?\n  \"Return true if `v` is a promise instance.\"\n  [v]\n  #?(:clj (instance? CompletionStage v)\n     :cljs (instance? Promise v)))\n\n;; Predicates\n\n(defn resolved?\n  \"Returns true if promise `p` is already fulfilled.\"\n  [p]\n  (pt/-resolved? p))\n\n(defn rejected?\n  \"Returns true if promise `p` is already rejected.\"\n  [p]\n  (pt/-rejected? p))\n\n(defn pending?\n  \"Returns true if promise `p` is stil pending.\"\n  [p]\n  (pt/-pending? p))\n\n(defn extract\n  \"Returns the current promise value.\"\n  [p]\n  (pt/-extract p))\n\n(def done?\n  \"Returns true if promise `p` is already done.\"\n  (complement pending?))\n\n;; Chaining\n\n(defn map\n  \"Apply a function to the promise value and\n  return a new promise with the result.\"\n  [f p]\n  (pt/-map p f))\n\n(defn mapcat\n  \"Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator.\"\n  [f p]\n  (pt/-bind p f))\n\n(defn bind\n  \"A chain helper for promises.\"\n  [p f]\n  (pt/-bind p f))\n\n(defn then\n  \"Similar to `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator.\n\n  Unlike Clojure's `map`, will resolve any promises\n  returned  by `f`.\"\n  [p f]\n  #?(:cljs (pt/-map p f)\n     :clj  (pt/-bind p (fn promise-wrap [in]\n                         (let [out (f in)]\n                           (if (promise? out)\n                             out\n                             (promise out)))))))\n\n(defn chain\n  \"Like then but accepts multiple parameters.\"\n  [p & funcs]\n  (reduce #(then %1 %2) p funcs))\n\n(defn branch\n  [p success failure]\n  (-> p\n      (pt/-map success)\n      (pt/-catch failure)))\n\n(defn catch\n  \"Catch all promise chain helper.\"\n  ([p f]\n   (pt/-catch p f))\n  ([p pred-or-type f]\n   (let [accept? (if (ifn? pred-or-type)\n                   pred-or-type\n                   #(instance? pred-or-type %))]\n     (pt/-catch p (fn [e]\n                    (if (accept? e)\n                      (f e)\n                      (impl/rejected e)))))))\n\n(defn error\n  \"Same as `catch` but with parameters inverted.\"\n  ([f p] (catch p f))\n  ([f type p] (catch p type f)))\n\n(def err\n  \"A short alias for `error` function.\"\n  error)\n\n(defn finally\n  \"Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected.\"\n  [p callback]\n  #?(:clj (-> p\n              (then (fn [_] (callback)))\n              (catch (fn [_] (callback))))\n     :cljs (.lastly p callback)))\n\n(defn all\n  \"Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled.\n\n  Example:\n\n  (-> (all [(promise :first-promise)\n            (promise :second-promise)]\n      (then (fn [[first-result second-result]]))\n       (println (str first-result \\\", \\\" second-result)\n\n  Will print out\n  :first-promise, :second-promise.\n\n  If at least one of the promises is rejected, the resulting promise will be\n  rejected.\"\n  [promises]\n  #?(:cljs (-> (.all Promise (into-array promises))\n               (then vec))\n     :clj (let [promises (clojure.core/map pt/-promise promises)]\n            (then (->> (into-array CompletableFuture promises)\n                       (CompletableFuture/allOf))\n                  (fn [_]\n                    (mapv pt/-extract promises))))))\n\n(defn any\n  \"Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled.\"\n  [promises]\n  #?(:cljs (.any Promise (into-array promises))\n     :clj (->> (clojure.core/map pt/-promise promises)\n               (into-array CompletableFuture)\n               (CompletableFuture/anyOf))))\n\n;; Cancellation\n\n(defn cancel!\n  \"Cancel the promise.\"\n  [p]\n  (pt/-cancel p)\n  p)\n\n(defn cancelled?\n  \"Return true if `v` is a cancelled promise.\"\n  [v]\n  (pt/-cancelled? v))\n\n;; Utils\n\n(defn promisify\n  \"Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation).\"\n  [callable]\n  (fn [& args]\n    (promise (fn [resolve reject]\n               (let [args (-> (vec args)\n                              (conj resolve))]\n                 (try\n                   (apply callable args)\n                   (catch #?(:clj Throwable :cljs js/Error) e\n                       (reject e))))))))\n\n#?(:cljs\n   (defn timeout\n     \"Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError\"\n     ([p t] (.timeout p t))\n     ([p t v] (.timeout p t v))))\n\n(defn delay\n  \"Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached.\"\n  ([t] (delay t nil))\n  ([t v]\n   #?(:cljs (promise (fn [resolve reject]\n                       (schedule t #(resolve v))))\n\n      :clj  (let [p (CompletableFuture.)]\n              (schedule t #(.complete p v))\n              p))))\n\n(defn attempt\n  \"A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback.\"\n  [callback]\n  #?(:cljs (promise (fn [resolve] (resolve (callback))))\n     :clj  (promise (fn [resolve reject]\n                      (let [result (callback)]\n                        (if (promise? result)\n                          (then result resolve)\n                          (resolve result)))))))\n\n#?(:clj\n   (defmacro do*\n     \"A sugar syntax on top of `attempt`.\"\n     [& body]\n     `(attempt #(do ~@body))))\n\n(defn await\n  [& args]\n  (throw (ex-info \"Should be only used in alet macro.\" {})))\n\n#?(:clj\n   (defmacro alet\n     \"A `let` alternative that always returns promise and allows\n     use `await` marker function in order to emulate the async/await\n     syntax and make the let expression look like synchronous where\n     async operations are performed.\"\n     [bindings & body]\n     (let [await# `await]\n       (->> (reverse (partition 2 bindings))\n            (reduce (fn [acc [l r]]\n                      (if (and (coll? r)\n                               (symbol? (first r))\n                               (not= \".\" (subs (name (first r)) 0 1)))\n                        `(if (= ~await# ~(first r))\n                           (bind ~(second r) (fn [~l] ~acc))\n                           (let [~l ~r] ~acc))\n                        `(let [~l ~r] ~acc)))\n                    `(promise (do ~@body)))))))\n","~:reader-features",["^F",["~:cljs"]],"~:source-map",["^ ","~i42",["^ ","~i9",[["^ ","~:gcol",0,"~:gline",5]],"~i22",[["^ ","^1F",0,"^1G",5,"^M","promesa.core/Promise"]],"~i30",[["^ ","^1F",23,"^1G",5,"^M","promesa.impl/Promise"]]],"~i46",["^ ","~i0",[["^ ","^1F",0,"^1G",6],["^ ","^1F",24,"^1G",13],["^ ","^1F",0,"^1G",14]],"~i6",[["^ ","^1F",0,"^1G",13,"^M","promesa.core/schedule"]]],"~i52",["^ ","~i3",[["^ ","^1F",56,"^1G",13,"^M","ms"]],"~i6",[["^ ","^1F",59,"^1G",13,"^M","func"]]],"~i53",["^ ","~i2",[["^ ","^1F",0,"^1G",14]],"~i3",[["^ ","^1F",7,"^1G",14,"^M","promesa.impl.scheduler/schedule"]],"~i15",[["^ ","^1F",39,"^1G",14,"^M","ms"]],"~i18",[["^ ","^1F",42,"^1G",14,"^M","func"]]],"~i57",["^ ","~i0",[["^ ","^1F",0,"^1G",16],["^ ","^1F",24,"^1G",19],["^ ","^1F",0,"^1G",20]],"~i6",[["^ ","^1F",0,"^1G",19,"^M","promesa.core/resolved"]]],"~i59",["^ ","~i3",[["^ ","^1F",56,"^1G",19,"^M","v"]]],"~i60",["^ ","~i2",[["^ ","^1F",0,"^1G",20]],"~i3",[["^ ","^1F",7,"^1G",20,"^M","promesa.impl/resolved"]],"~i17",[["^ ","^1F",29,"^1G",20,"^M","v"]]],"~i62",["^ ","~i0",[["^ ","^1F",0,"^1G",22],["^ ","^1F",24,"^1G",25],["^ ","^1F",0,"^1G",26]],"~i6",[["^ ","^1F",0,"^1G",25,"^M","promesa.core/rejected"]]],"~i64",["^ ","~i3",[["^ ","^1F",56,"^1G",25,"^M","v"]]],"~i65",["^ ","~i2",[["^ ","^1F",0,"^1G",26]],"~i3",[["^ ","^1F",7,"^1G",26,"^M","promesa.impl/rejected"]],"^1R",[["^ ","^1F",29,"^1G",26,"^M","v"]]],"~i67",["^ ","~i0",[["^ ","^1F",0,"^1G",28],["^ ","^1F",23,"^1G",31],["^ ","^1F",0,"^1G",32]],"~i6",[["^ ","^1F",0,"^1G",31,"^M","promesa.core/promise"]]],"~i69",["^ ","~i3",[["^ ","^1F",54,"^1G",31,"^M","v"]]],"~i70",["^ ","~i2",[["^ ","^1F",0,"^1G",32]],"~i3",[["^ ","^1F",7,"^1G",32,"^M","promesa.protocols/-promise"]],"^1M",[["^ ","^1F",34,"^1G",32,"^M","v"]]],"~i72",["^ ","~i0",[["^ ","^1F",0,"^1G",34],["^ ","^1F",30,"^1G",37],["^ ","^1F",0,"^1G",38]],"~i6",[["^ ","^1F",0,"^1G",37,"^M","promesa.core/promise?"]]],"~i74",["^ ","~i3",[["^ ","^1F",68,"^1G",37,"^M","v"]]],"~i76",["^ ","~i11",[["^ ","^1F",0,"^1G",38]],"^1H",[["^ ","^1F",21,"^1G",38,"^M","promesa.core/Promise"]],"^1I",[["^ ","^1F",8,"^1G",38,"^M","v"]]],"~i80",["^ ","~i0",[["^ ","^1F",0,"^1G",40],["^ ","^1F",31,"^1G",43],["^ ","^1F",0,"^1G",44]],"~i6",[["^ ","^1F",0,"^1G",43,"^M","promesa.core/resolved?"]]],"~i82",["^ ","~i3",[["^ ","^1F",70,"^1G",43,"^M","p"]]],"~i83",["^ ","~i2",[["^ ","^1F",0,"^1G",44]],"~i3",[["^ ","^1F",7,"^1G",44,"^M","promesa.protocols/-resolved?"]],"^1R",[["^ ","^1F",42,"^1G",44,"^M","p"]]],"~i85",["^ ","~i0",[["^ ","^1F",0,"^1G",46],["^ ","^1F",31,"^1G",49],["^ ","^1F",0,"^1G",50]],"~i6",[["^ ","^1F",0,"^1G",49,"^M","promesa.core/rejected?"]]],"~i87",["^ ","~i3",[["^ ","^1F",70,"^1G",49,"^M","p"]]],"~i88",["^ ","~i2",[["^ ","^1F",0,"^1G",50]],"~i3",[["^ ","^1F",7,"^1G",50,"^M","promesa.protocols/-rejected?"]],"^1R",[["^ ","^1F",42,"^1G",50,"^M","p"]]],"~i90",["^ ","~i0",[["^ ","^1F",0,"^1G",52],["^ ","^1F",30,"^1G",55],["^ ","^1F",0,"^1G",56]],"~i6",[["^ ","^1F",0,"^1G",55,"^M","promesa.core/pending?"]]],"~i92",["^ ","~i3",[["^ ","^1F",68,"^1G",55,"^M","p"]]],"~i93",["^ ","~i2",[["^ ","^1F",0,"^1G",56]],"~i3",[["^ ","^1F",7,"^1G",56,"^M","promesa.protocols/-pending?"]],"~i16",[["^ ","^1F",41,"^1G",56,"^M","p"]]],"~i95",["^ ","~i0",[["^ ","^1F",0,"^1G",58],["^ ","^1F",23,"^1G",61],["^ ","^1F",0,"^1G",62]],"~i6",[["^ ","^1F",0,"^1G",61,"^M","promesa.core/extract"]]],"~i97",["^ ","~i3",[["^ ","^1F",54,"^1G",61,"^M","p"]]],"~i98",["^ ","~i2",[["^ ","^1F",0,"^1G",62]],"~i3",[["^ ","^1F",7,"^1G",62,"^M","promesa.protocols/-extract"]],"^1M",[["^ ","^1F",34,"^1G",62,"^M","p"]]],"~i100",["^ ","~i0",[["^ ","^1F",0,"^1G",64]],"~i5",[["^ ","^1F",0,"^1G",67,"^M","promesa.core/done?"]]],"~i102",["^ ","~i2",[["^ ","^1F",27,"^1G",67]],"~i3",[["^ ","^1F",27,"^1G",67,"^M","cljs.core/complement"]],"~i14",[["^ ","^1F",48,"^1G",67,"^M","promesa.core/pending?"]]],"~i106",["^ ","~i0",[["^ ","^1F",0,"^1G",68],["^ ","^1F",19,"^1G",72],["^ ","^1F",0,"^1G",73]],"~i6",[["^ ","^1F",0,"^1G",72,"^M","promesa.core/map"]]],"~i109",["^ ","~i3",[["^ ","^1F",46,"^1G",72,"^M","f"]],"~i5",[["^ ","^1F",48,"^1G",72,"^M","p"]]],"~i110",["^ ","~i2",[["^ ","^1F",0,"^1G",73]],"~i3",[["^ ","^1F",7,"^1G",73,"^M","promesa.protocols/-map"]],"^20",[["^ ","^1F",30,"^1G",73,"^M","p"]],"~i13",[["^ ","^1F",32,"^1G",73,"^M","f"]]],"~i112",["^ ","~i0",[["^ ","^1F",0,"^1G",75],["^ ","^1F",22,"^1G",84],["^ ","^1F",0,"^1G",85]],"~i6",[["^ ","^1F",0,"^1G",84,"^M","promesa.core/mapcat"]]],"~i120",["^ ","~i3",[["^ ","^1F",52,"^1G",84,"^M","f"]],"~i5",[["^ ","^1F",54,"^1G",84,"^M","p"]]],"~i121",["^ ","~i2",[["^ ","^1F",0,"^1G",85]],"~i3",[["^ ","^1F",7,"^1G",85,"^M","promesa.protocols/-bind"]],"~i12",[["^ ","^1F",31,"^1G",85,"^M","p"]],"^2@",[["^ ","^1F",33,"^1G",85,"^M","f"]]],"~i123",["^ ","~i0",[["^ ","^1F",0,"^1G",87],["^ ","^1F",20,"^1G",90],["^ ","^1F",0,"^1G",91]],"~i6",[["^ ","^1F",0,"^1G",90,"^M","promesa.core/bind"]]],"~i125",["^ ","~i3",[["^ ","^1F",48,"^1G",90,"^M","p"]],"~i5",[["^ ","^1F",50,"^1G",90,"^M","f"]]],"~i126",["^ ","~i2",[["^ ","^1F",0,"^1G",91]],"~i3",[["^ ","^1F",7,"^1G",91,"^M","promesa.protocols/-bind"]],"^2H",[["^ ","^1F",31,"^1G",91,"^M","p"]],"^2@",[["^ ","^1F",33,"^1G",91,"^M","f"]]],"~i128",["^ ","~i0",[["^ ","^1F",0,"^1G",93],["^ ","^1F",20,"^1G",101],["^ ","^1F",0,"^1G",102]],"~i6",[["^ ","^1F",0,"^1G",101,"^M","promesa.core/then"]]],"~i135",["^ ","~i3",[["^ ","^1F",48,"^1G",101,"^M","p"]],"~i5",[["^ ","^1F",50,"^1G",101,"^M","f"]]],"~i136",["^ ","^20",[["^ ","^1F",0,"^1G",102]],"^2H",[["^ ","^1F",7,"^1G",102,"^M","promesa.protocols/-map"]],"~i20",[["^ ","^1F",30,"^1G",102,"^M","p"]],"^1H",[["^ ","^1F",32,"^1G",102,"^M","f"]]],"~i143",["^ ","~i0",[["^ ","^1F",0,"^1G",104],["^ ","^1F",0,"^1G",104],["^ ","^1F",21,"^1G",107],["^ ","^1F",50,"^1G",107,"^M","var_args"],["^ ","^1F",0,"^1G",108],["^ ","^1F",0,"^1G",108],["^ ","^1F",4,"^1G",108,"^M","args__4534__auto__"],["^ ","^1F",25,"^1G",108],["^ ","^1F",0,"^1G",109],["^ ","^1F",0,"^1G",109],["^ ","^1F",4,"^1G",109,"^M","len__4531__auto__"],["^ ","^1F",30,"^1G",109],["^ ","^1F",30,"^1G",109],["^ ","^1F",0,"^1G",110],["^ ","^1F",0,"^1G",110],["^ ","^1F",4,"^1G",110,"^M","i__4532__auto__"],["^ ","^1F",28,"^1G",110],["^ ","^1F",0,"^1G",112],["^ ","^1F",0,"^1G",112],["^ ","^1F",3,"^1G",112],["^ ","^1F",4,"^1G",112,"^M","i__4532__auto__"],["^ ","^1F",28,"^1G",112,"^M","len__4531__auto__"],["^ ","^1F",0,"^1G",113],["^ ","^1F",0,"^1G",113],["^ ","^1F",0,"^1G",113,"^M","args__4534__auto__"],["^ ","^1F",24,"^1G",113],["^ ","^1F",25,"^1G",113],["^ ","^1F",35,"^1G",113,"^M","i__4532__auto__"],["^ ","^1F",0,"^1G",115],["^ ","^1F",15,"^1G",115],["^ ","^1F",16,"^1G",115,"^M","i__4532__auto__"],["^ ","^1F",40,"^1G",115],["^ ","^1F",0,"^1G",119],["^ ","^1F",0,"^1G",123],["^ ","^1F",4,"^1G",123,"^M","argseq__4535__auto__"],["^ ","^1F",27,"^1G",123],["^ ","^1F",29,"^1G",123],["^ ","^1F",30,"^1G",123],["^ ","^1F",36,"^1G",123],["^ ","^1F",36,"^1G",123,"^M","args__4534__auto__"],["^ ","^1F",64,"^1G",123],["^ ","^1F",64,"^1G",123],["^ ","^1F",69,"^1G",123,"^M","cljs.core/IndexedSeq"],["^ ","^1F",90,"^1G",123],["^ ","^1F",90,"^1G",123,"^M","args__4534__auto__"],["^ ","^1F",115,"^1G",123],["^ ","^1F",120,"^1G",123],["^ ","^1F",124,"^1G",123],["^ ","^1F",131,"^1G",123],["^ ","^1F",0,"^1G",124],["^ ","^1F",0,"^1G",124],["^ ","^1F",7,"^1G",124,"^M","promesa.core/chain"],["^ ","^1F",63,"^1G",124],["^ ","^1F",64,"^1G",124],["^ ","^1F",74,"^1G",124],["^ ","^1F",80,"^1G",124,"^M","argseq__4535__auto__"],["^ ","^1F",0,"^1G",127],["^ ","^1F",0,"^1G",127],["^ ","^1F",0,"^1G",127],["^ ","^1F",0,"^1G",127,"^M","promesa.core/chain"],["^ ","^1F",58,"^1G",127],["^ ","^1F",0,"^1G",128],["^ ","^1F",0,"^1G",133],["^ ","^1F",0,"^1G",133],["^ ","^1F",0,"^1G",133,"^M","promesa.core/chain"],["^ ","^1F",45,"^1G",133],["^ ","^1F",0,"^1G",135],["^ ","^1F",0,"^1G",136],["^ ","^1F",0,"^1G",136],["^ ","^1F",0,"^1G",136,"^M","promesa.core/chain"],["^ ","^1F",39,"^1G",136],["^ ","^1F",50,"^1G",136,"^M","seq34645"],["^ ","^1F",0,"^1G",137],["^ ","^1F",0,"^1G",137],["^ ","^1F",4,"^1G",137,"^M","G__34646"],["^ ","^1F",15,"^1G",137],["^ ","^1F",15,"^1G",137,"^M","cljs.core/first"],["^ ","^1F",31,"^1G",137,"^M","seq34645"],["^ ","^1F",4,"^1G",138,"^M","seq34645"],["^ ","^1F",19,"^1G",138],["^ ","^1F",19,"^1G",138,"^M","cljs.core/next"],["^ ","^1F",34,"^1G",138,"^M","seq34645"],["^ ","^1F",0,"^1G",139],["^ ","^1F",0,"^1G",139],["^ ","^1F",4,"^1G",139,"^M","self__4518__auto__"],["^ ","^1F",25,"^1G",139],["^ ","^1F",0,"^1G",140],["^ ","^1F",0,"^1G",140],["^ ","^1F",7,"^1G",140,"^M","self__4518__auto__"],["^ ","^1F",63,"^1G",140,"^M","G__34646"],["^ ","^1F",72,"^1G",140,"^M","seq34645"],["^ ","^1F",0,"^1G",143]],"~i6",[["^ ","^1F",0,"^1G",107,"^M","promesa.core/chain"]]],"~i145",["^ ","~i3",[["^ ","^1F",69,"^1G",127,"^M","p"]],"~i7",[["^ ","^1F",71,"^1G",127,"^M","funcs"]]],"~i146",["^ ","~i2",[["^ ","^1F",0,"^1G",128],["^ ","^1F",54,"^1G",128],["^ ","^1F",65,"^1G",128,"^M","p1__34641#"],["^ ","^1F",82,"^1G",128,"^M","p2__34643#"],["^ ","^1F",0,"^1G",129]],"~i3",[["^ ","^1F",7,"^1G",128,"^M","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^20",[["^ ","^1F",0,"^1G",129],["^ ","^1F",25,"^1G",129,"^M","p1__34641#"],["^ ","^1F",42,"^1G",129,"^M","p2__34643#"]],"^2H",[["^ ","^1F",7,"^1G",129,"^M","promesa.core/then"]],"~i24",[["^ ","^1F",3,"^1G",130,"^M","p"]],"~i26",[["^ ","^1F",5,"^1G",130,"^M","funcs"]]],"~i148",["^ ","~i0",[["^ ","^1F",0,"^1G",143],["^ ","^1F",22,"^1G",143],["^ ","^1F",0,"^1G",144]],"~i6",[["^ ","^1F",0,"^1G",143,"^M","promesa.core/branch"]]],"~i149",["^ ","~i3",[["^ ","^1F",52,"^1G",143,"^M","p"]],"~i5",[["^ ","^1F",54,"^1G",143,"^M","success"]],"^2D",[["^ ","^1F",62,"^1G",143,"^M","failure"]]],"~i150",["^ ","~i6",[["^ ","^1F",55,"^1G",144,"^M","p"]]],"~i151",["^ ","~i6",[["^ ","^1F",32,"^1G",144]],"~i7",[["^ ","^1F",32,"^1G",144,"^M","promesa.protocols/-map"]],"^1M",[["^ ","^1F",57,"^1G",144,"^M","success"]]],"~i152",["^ ","~i6",[["^ ","^1F",0,"^1G",144]],"~i7",[["^ ","^1F",7,"^1G",144,"^M","promesa.protocols/-catch"]],"^1R",[["^ ","^1F",66,"^1G",144,"^M","failure"]]],"~i154",["^ ","~i0",[["^ ","^1F",0,"^1G",146],["^ ","^1F",0,"^1G",146],["^ ","^1F",22,"^1G",149],["^ ","^1F",51,"^1G",149,"^M","var_args"],["^ ","^1F",0,"^1G",150],["^ ","^1F",0,"^1G",150],["^ ","^1F",4,"^1G",150,"^M","G__34652"],["^ ","^1F",15,"^1G",150],["^ ","^1F",15,"^1G",150],["^ ","^1F",0,"^1G",151],["^ ","^1F",0,"^1G",151],["^ ","^1F",8,"^1G",151,"^M","G__34652"],["^ ","^1F",5,"^1G",152],["^ ","^1F",0,"^1G",153],["^ ","^1F",7,"^1G",153,"^M","promesa.core/catch"],["^ ","^1F",57,"^1G",153],["^ ","^1F",58,"^1G",153],["^ ","^1F",68,"^1G",153],["^ ","^1F",74,"^1G",153],["^ ","^1F",75,"^1G",153],["^ ","^1F",85,"^1G",153],["^ ","^1F",5,"^1G",156],["^ ","^1F",0,"^1G",157],["^ ","^1F",7,"^1G",157,"^M","promesa.core/catch"],["^ ","^1F",57,"^1G",157],["^ ","^1F",58,"^1G",157],["^ ","^1F",68,"^1G",157],["^ ","^1F",74,"^1G",157],["^ ","^1F",75,"^1G",157],["^ ","^1F",85,"^1G",157],["^ ","^1F",91,"^1G",157],["^ ","^1F",92,"^1G",157],["^ ","^1F",102,"^1G",157],["^ ","^1F",0,"^1G",161],["^ ","^1F",6,"^1G",161],["^ ","^1F",11,"^1G",161,"^M","js/Error"],["^ ","^1F",17,"^1G",161],["^ ","^1F",18,"^1G",161],["^ ","^1F",80,"^1G",161],["^ ","^1F",80,"^1G",161],["^ ","^1F",0,"^1G",166],["^ ","^1F",0,"^1G",166],["^ ","^1F",52,"^1G",166],["^ ","^1F",0,"^1G",167],["^ ","^1F",0,"^1G",170],["^ ","^1F",0,"^1G",170],["^ ","^1F",52,"^1G",170],["^ ","^1F",0,"^1G",171],["^ ","^1F",0,"^1G",185],["^ ","^1F",0,"^1G",185],["^ ","^1F",46,"^1G",185],["^ ","^1F",0,"^1G",187]],"~i6",[["^ ","^1F",0,"^1G",149,"^M","promesa.core/catch"],["^ ","^1F",0,"^1G",166,"^M","promesa.core/catch"],["^ ","^1F",0,"^1G",170,"^M","promesa.core/catch"],["^ ","^1F",0,"^1G",185,"^M","promesa.core/catch"]]],"~i156",["^ ","~i4",[["^ ","^1F",63,"^1G",166,"^M","p"]],"~i6",[["^ ","^1F",65,"^1G",166,"^M","f"]]],"~i157",["^ ","~i3",[["^ ","^1F",0,"^1G",167]],"~i4",[["^ ","^1F",7,"^1G",167,"^M","promesa.protocols/-catch"]],"^2@",[["^ ","^1F",32,"^1G",167,"^M","p"]],"^2:",[["^ ","^1F",34,"^1G",167,"^M","f"]]],"~i158",["^ ","~i4",[["^ ","^1F",63,"^1G",170,"^M","p"]],"~i6",[["^ ","^1F",65,"^1G",170,"^M","pred-or-type"]],"~i19",[["^ ","^1F",78,"^1G",170,"^M","f"]]],"~i159",["^ ","~i3",[["^ ","^1F",0,"^1G",171],["^ ","^1F",0,"^1G",174]],"~i9",[["^ ","^1F",4,"^1G",171,"^M","accept?"]],"^1R",[["^ ","^1F",20,"^1G",171],["^ ","^1F",71,"^1G",171],["^ ","^1F",82,"^1G",171,"^M","p1__34650#"],["^ ","^1F",0,"^1G",172]],"~i21",[["^ ","^1F",22,"^1G",171]],"^1H",[["^ ","^1F",22,"^1G",171,"^M","cljs.core/ifn?"]],"~i27",[["^ ","^1F",43,"^1G",171,"^M","pred-or-type"]]],"~i160",["^ ","^32",[["^ ","^1F",58,"^1G",171,"^M","pred-or-type"]]],"~i161",["^ ","^2O",[["^ ","^1F",0,"^1G",172],["^ ","^1F",8,"^1G",172,"^M","p1__34650#"]],"~i31",[["^ ","^1F",36,"^1G",172,"^M","pred-or-type"]]],"~i162",["^ ","~i5",[["^ ","^1F",0,"^1G",174]],"~i6",[["^ ","^1F",7,"^1G",174,"^M","promesa.protocols/-catch"]],"^2:",[["^ ","^1F",32,"^1G",174,"^M","p"]],"^1N",[["^ ","^1F",34,"^1G",174],["^ ","^1F",0,"^1G",176]],"~i23",[["^ ","^1F",18,"^1G",175,"^M","e"]]],"~i163",["^ ","^2O",[["^ ","^1F",0,"^1G",176]],"^2S",[["^ ","^1F",20,"^1G",176]],"~i25",[["^ ","^1F",21,"^1G",176,"^M","accept?"],["^ ","^1F",67,"^1G",176,"^M","accept?"],["^ ","^1F",116,"^1G",176,"^M","accept?"]],"~i33",[["^ ","^1F",111,"^1G",176,"^M","e"],["^ ","^1F",140,"^1G",176,"^M","e"]]],"~i164",["^ ","^1H",[["^ ","^1F",0,"^1G",177]],"^3:",[["^ ","^1F",8,"^1G",177,"^M","f"],["^ ","^1F",42,"^1G",177,"^M","f"],["^ ","^1F",79,"^1G",177,"^M","f"]],"^3<",[["^ ","^1F",74,"^1G",177,"^M","e"],["^ ","^1F",91,"^1G",177,"^M","e"]]],"~i165",["^ ","^1H",[["^ ","^1F",0,"^1G",179]],"^3:",[["^ ","^1F",7,"^1G",179,"^M","promesa.impl/rejected"]],"~i37",[["^ ","^1F",29,"^1G",179,"^M","e"]]],"~i167",["^ ","~i0",[["^ ","^1F",0,"^1G",187],["^ ","^1F",0,"^1G",187],["^ ","^1F",21,"^1G",190],["^ ","^1F",50,"^1G",190,"^M","var_args"],["^ ","^1F",0,"^1G",191],["^ ","^1F",0,"^1G",191],["^ ","^1F",4,"^1G",191,"^M","G__34662"],["^ ","^1F",15,"^1G",191],["^ ","^1F",15,"^1G",191],["^ ","^1F",0,"^1G",192],["^ ","^1F",0,"^1G",192],["^ ","^1F",8,"^1G",192,"^M","G__34662"],["^ ","^1F",5,"^1G",193],["^ ","^1F",0,"^1G",194],["^ ","^1F",7,"^1G",194,"^M","promesa.core/error"],["^ ","^1F",56,"^1G",194],["^ ","^1F",57,"^1G",194],["^ ","^1F",67,"^1G",194],["^ ","^1F",73,"^1G",194],["^ ","^1F",74,"^1G",194],["^ ","^1F",84,"^1G",194],["^ ","^1F",5,"^1G",197],["^ ","^1F",0,"^1G",198],["^ ","^1F",7,"^1G",198,"^M","promesa.core/error"],["^ ","^1F",56,"^1G",198],["^ ","^1F",57,"^1G",198],["^ ","^1F",67,"^1G",198],["^ ","^1F",73,"^1G",198],["^ ","^1F",74,"^1G",198],["^ ","^1F",84,"^1G",198],["^ ","^1F",90,"^1G",198],["^ ","^1F",91,"^1G",198],["^ ","^1F",101,"^1G",198],["^ ","^1F",0,"^1G",202],["^ ","^1F",6,"^1G",202],["^ ","^1F",11,"^1G",202,"^M","js/Error"],["^ ","^1F",17,"^1G",202],["^ ","^1F",18,"^1G",202],["^ ","^1F",80,"^1G",202],["^ ","^1F",80,"^1G",202],["^ ","^1F",0,"^1G",207],["^ ","^1F",0,"^1G",207],["^ ","^1F",51,"^1G",207],["^ ","^1F",0,"^1G",208],["^ ","^1F",0,"^1G",211],["^ ","^1F",0,"^1G",211],["^ ","^1F",51,"^1G",211],["^ ","^1F",0,"^1G",212],["^ ","^1F",0,"^1G",215],["^ ","^1F",0,"^1G",215],["^ ","^1F",45,"^1G",215],["^ ","^1F",0,"^1G",217]],"~i6",[["^ ","^1F",0,"^1G",190,"^M","promesa.core/error"],["^ ","^1F",0,"^1G",207,"^M","promesa.core/error"],["^ ","^1F",0,"^1G",211,"^M","promesa.core/error"],["^ ","^1F",0,"^1G",215,"^M","promesa.core/error"]]],"~i169",["^ ","~i4",[["^ ","^1F",62,"^1G",207,"^M","f"]],"~i6",[["^ ","^1F",64,"^1G",207,"^M","p"]],"~i9",[["^ ","^1F",0,"^1G",208]],"~i10",[["^ ","^1F",7,"^1G",208,"^M","promesa.core.catch$.cljs$core$IFn$_invoke$arity$2"]],"^2:",[["^ ","^1F",57,"^1G",208,"^M","p"]],"^1N",[["^ ","^1F",59,"^1G",208,"^M","f"]]],"~i170",["^ ","~i4",[["^ ","^1F",62,"^1G",211,"^M","f"]],"~i6",[["^ ","^1F",64,"^1G",211,"^M","type"]],"^20",[["^ ","^1F",69,"^1G",211,"^M","p"]],"^2@",[["^ ","^1F",0,"^1G",212]],"^1M",[["^ ","^1F",7,"^1G",212,"^M","promesa.core.catch$.cljs$core$IFn$_invoke$arity$3"]],"^34",[["^ ","^1F",57,"^1G",212,"^M","p"]],"^3:",[["^ ","^1F",59,"^1G",212,"^M","type"]],"~i28",[["^ ","^1F",64,"^1G",212,"^M","f"]]],"~i172",["^ ","~i0",[["^ ","^1F",0,"^1G",217]],"~i5",[["^ ","^1F",0,"^1G",220,"^M","promesa.core/err"]]],"~i174",["^ ","~i2",[["^ ","^1F",19,"^1G",220,"^M","promesa.core/error"]]],"~i176",["^ ","~i0",[["^ ","^1F",0,"^1G",221],["^ ","^1F",24,"^1G",226],["^ ","^1F",0,"^1G",227]],"~i6",[["^ ","^1F",0,"^1G",226,"^M","promesa.core/finally"]]],"~i180",["^ ","~i3",[["^ ","^1F",55,"^1G",226,"^M","p"]],"~i5",[["^ ","^1F",57,"^1G",226,"^M","callback"]]],"~i184",["^ ","^20",[["^ ","^1F",0,"^1G",227]],"^2O",[["^ ","^1F",7,"^1G",227,"^M","p"]],"^1H",[["^ ","^1F",16,"^1G",227,"^M","callback"]]],"~i186",["^ ","~i0",[["^ ","^1F",0,"^1G",229],["^ ","^1F",19,"^1G",247],["^ ","^1F",0,"^1G",248]],"~i6",[["^ ","^1F",0,"^1G",247,"^M","promesa.core/all"]]],"~i203",["^ ","~i3",[["^ ","^1F",46,"^1G",247,"^M","promises"]]],"~i204",["^ ","^1M",[["^ ","^1F",25,"^1G",248]],"^34",[["^ ","^1F",25,"^1G",248,"^M","promesa.core/Promise"]],"~i29",[["^ ","^1F",50,"^1G",248]],"^1I",[["^ ","^1F",50,"^1G",248,"^M","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1"]],"~i41",[["^ ","^1F",101,"^1G",248,"^M","promises"]]],"~i205",["^ ","^1M",[["^ ","^1F",0,"^1G",248]],"^2:",[["^ ","^1F",7,"^1G",248,"^M","promesa.core/then"]],"^34",[["^ ","^1F",112,"^1G",248,"^M","cljs.core/vec"]]],"~i212",["^ ","~i0",[["^ ","^1F",0,"^1G",250],["^ ","^1F",19,"^1G",255],["^ ","^1F",0,"^1G",256]],"~i6",[["^ ","^1F",0,"^1G",255,"^M","promesa.core/any"]]],"~i216",["^ ","~i3",[["^ ","^1F",46,"^1G",255,"^M","promises"]]],"~i217",["^ ","^20",[["^ ","^1F",0,"^1G",256]],"^1R",[["^ ","^1F",7,"^1G",256,"^M","promesa.core/Promise"]],"^3<",[["^ ","^1F",32,"^1G",256]],"^2T",[["^ ","^1F",32,"^1G",256,"^M","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1"]],"^3@",[["^ ","^1F",83,"^1G",256,"^M","promises"]]],"~i224",["^ ","~i0",[["^ ","^1F",0,"^1G",258],["^ ","^1F",28,"^1G",261],["^ ","^1F",0,"^1G",262]],"~i6",[["^ ","^1F",0,"^1G",261,"^M","promesa.core/cancel!"]]],"~i226",["^ ","~i3",[["^ ","^1F",64,"^1G",261,"^M","p"]]],"~i227",["^ ","~i2",[["^ ","^1F",0,"^1G",262]],"~i3",[["^ ","^1F",0,"^1G",262,"^M","promesa.protocols/-cancel"]],"^2@",[["^ ","^1F",26,"^1G",262,"^M","p"]]],"~i228",["^ ","~i2",[["^ ","^1F",0,"^1G",264,"^M","p"]]],"~i230",["^ ","~i0",[["^ ","^1F",0,"^1G",266],["^ ","^1F",32,"^1G",269],["^ ","^1F",0,"^1G",270]],"~i6",[["^ ","^1F",0,"^1G",269,"^M","promesa.core/cancelled?"]]],"~i232",["^ ","~i3",[["^ ","^1F",72,"^1G",269,"^M","v"]]],"~i233",["^ ","~i2",[["^ ","^1F",0,"^1G",270]],"~i3",[["^ ","^1F",7,"^1G",270,"^M","promesa.protocols/-cancelled?"]],"^1N",[["^ ","^1F",43,"^1G",270,"^M","v"]]],"~i237",["^ ","~i0",[["^ ","^1F",0,"^1G",272],["^ ","^1F",25,"^1G",277],["^ ","^1F",0,"^1G",278]],"~i6",[["^ ","^1F",0,"^1G",277,"^M","promesa.core/promisify"]]],"~i241",["^ ","~i3",[["^ ","^1F",58,"^1G",277,"^M","callable"]]],"~i242",["^ ","~i2",[["^ ","^1F",0,"^1G",278],["^ ","^1F",0,"^1G",280]],"~i9",[["^ ","^1F",35,"^1G",279,"^M","args"],["^ ","^1F",4,"^1G",293,"^M","args"],["^ ","^1F",2,"^1G",297,"^M","args"],["^ ","^1F",36,"^1G",299,"^M","args"],["^ ","^1F",4,"^1G",302,"^M","args"],["^ ","^1F",26,"^1G",303,"^M","args"]]],"~i243",["^ ","~i4",[["^ ","^1F",0,"^1G",280]],"~i5",[["^ ","^1F",7,"^1G",280,"^M","promesa.core/promise"]],"^2D",[["^ ","^1F",28,"^1G",280],["^ ","^1F",0,"^1G",281]],"^1N",[["^ ","^1F",39,"^1G",280,"^M","resolve"]],"^2T",[["^ ","^1F",47,"^1G",280,"^M","reject"]]],"~i244",["^ ","^1M",[["^ ","^1F",0,"^1G",281],["^ ","^1F",0,"^1G",282]],"^34",[["^ ","^1F",4,"^1G",281,"^M","args"]],"^1I",[["^ ","^1F",60,"^1G",281]],"^38",[["^ ","^1F",60,"^1G",281,"^M","cljs.core/vec"]],"~i35",[["^ ","^1F",74,"^1G",281,"^M","args"]]],"~i245",["^ ","^1I",[["^ ","^1F",15,"^1G",281]],"^38",[["^ ","^1F",15,"^1G",281,"^M","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"~i36",[["^ ","^1F",80,"^1G",281,"^M","resolve"]]],"~i246",["^ ","^1R",[["^ ","^1F",0,"^1G",282],["^ ","^1F",4,"^1G",282],["^ ","^1F",16,"^1G",283],["^ ","^1F",19,"^1G",283],["^ ","^1F",20,"^1G",283,"^M","e34668"],["^ ","^1F",0,"^1G",284],["^ ","^1F",8,"^1G",284,"^M","e34668"],["^ ","^1F",0,"^1G",285],["^ ","^1F",0,"^1G",287],["^ ","^1F",0,"^1G",287],["^ ","^1F",6,"^1G",287,"^M","e34668"]]],"~i247",["^ ","^32",[["^ ","^1F",4,"^1G",282]],"^2O",[["^ ","^1F",11,"^1G",282,"^M","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"^2T",[["^ ","^1F",57,"^1G",282,"^M","callable"]],"^44",[["^ ","^1F",66,"^1G",282,"^M","args"]]],"~i248",["^ ","~i50",[["^ ","^1F",38,"^1G",283,"^M","js/Error"]],"^1Q",[["^ ","^1F",4,"^1G",284,"^M","e"]]],"~i249",["^ ","^3:",[["^ ","^1F",0,"^1G",285]],"^2S",[["^ ","^1F",8,"^1G",285,"^M","reject"],["^ ","^1F",47,"^1G",285,"^M","reject"],["^ ","^1F",89,"^1G",285,"^M","reject"]],"^38",[["^ ","^1F",84,"^1G",285,"^M","e"],["^ ","^1F",106,"^1G",285,"^M","e"]]],"~i252",["^ ","~i3",[["^ ","^1F",0,"^1G",310],["^ ","^1F",0,"^1G",310],["^ ","^1F",23,"^1G",317],["^ ","^1F",54,"^1G",317,"^M","var_args"],["^ ","^1F",0,"^1G",318],["^ ","^1F",0,"^1G",318],["^ ","^1F",4,"^1G",318,"^M","G__34673"],["^ ","^1F",15,"^1G",318],["^ ","^1F",15,"^1G",318],["^ ","^1F",0,"^1G",319],["^ ","^1F",0,"^1G",319],["^ ","^1F",8,"^1G",319,"^M","G__34673"],["^ ","^1F",5,"^1G",320],["^ ","^1F",0,"^1G",321],["^ ","^1F",7,"^1G",321,"^M","promesa.core/timeout"],["^ ","^1F",58,"^1G",321],["^ ","^1F",59,"^1G",321],["^ ","^1F",69,"^1G",321],["^ ","^1F",75,"^1G",321],["^ ","^1F",76,"^1G",321],["^ ","^1F",86,"^1G",321],["^ ","^1F",5,"^1G",324],["^ ","^1F",0,"^1G",325],["^ ","^1F",7,"^1G",325,"^M","promesa.core/timeout"],["^ ","^1F",58,"^1G",325],["^ ","^1F",59,"^1G",325],["^ ","^1F",69,"^1G",325],["^ ","^1F",75,"^1G",325],["^ ","^1F",76,"^1G",325],["^ ","^1F",86,"^1G",325],["^ ","^1F",92,"^1G",325],["^ ","^1F",93,"^1G",325],["^ ","^1F",103,"^1G",325],["^ ","^1F",0,"^1G",329],["^ ","^1F",6,"^1G",329],["^ ","^1F",11,"^1G",329,"^M","js/Error"],["^ ","^1F",17,"^1G",329],["^ ","^1F",18,"^1G",329],["^ ","^1F",80,"^1G",329],["^ ","^1F",80,"^1G",329],["^ ","^1F",0,"^1G",334],["^ ","^1F",0,"^1G",334],["^ ","^1F",53,"^1G",334],["^ ","^1F",0,"^1G",335],["^ ","^1F",0,"^1G",338],["^ ","^1F",0,"^1G",338],["^ ","^1F",53,"^1G",338],["^ ","^1F",0,"^1G",339],["^ ","^1F",0,"^1G",342],["^ ","^1F",0,"^1G",342],["^ ","^1F",47,"^1G",342],["^ ","^1F",0,"^1G",344]],"~i9",[["^ ","^1F",0,"^1G",317,"^M","promesa.core/timeout"],["^ ","^1F",0,"^1G",334,"^M","promesa.core/timeout"],["^ ","^1F",0,"^1G",338,"^M","promesa.core/timeout"],["^ ","^1F",0,"^1G",342,"^M","promesa.core/timeout"]]],"~i258",["^ ","~i7",[["^ ","^1F",64,"^1G",334,"^M","p"]],"~i9",[["^ ","^1F",66,"^1G",334,"^M","t"]],"^2H",[["^ ","^1F",0,"^1G",335]],"^1H",[["^ ","^1F",7,"^1G",335,"^M","p"]],"^2S",[["^ ","^1F",17,"^1G",335,"^M","t"]]],"~i259",["^ ","~i7",[["^ ","^1F",64,"^1G",338,"^M","p"]],"~i9",[["^ ","^1F",66,"^1G",338,"^M","t"]],"^20",[["^ ","^1F",68,"^1G",338,"^M","v"]],"^2@",[["^ ","^1F",0,"^1G",339]],"^2S",[["^ ","^1F",7,"^1G",339,"^M","p"]],"^2T",[["^ ","^1F",17,"^1G",339,"^M","t"]],"^3E",[["^ ","^1F",19,"^1G",339,"^M","v"]]],"~i261",["^ ","~i0",[["^ ","^1F",0,"^1G",344],["^ ","^1F",0,"^1G",344],["^ ","^1F",21,"^1G",350],["^ ","^1F",50,"^1G",350,"^M","var_args"],["^ ","^1F",0,"^1G",351],["^ ","^1F",0,"^1G",351],["^ ","^1F",4,"^1G",351,"^M","G__34680"],["^ ","^1F",15,"^1G",351],["^ ","^1F",15,"^1G",351],["^ ","^1F",0,"^1G",352],["^ ","^1F",0,"^1G",352],["^ ","^1F",8,"^1G",352,"^M","G__34680"],["^ ","^1F",5,"^1G",353],["^ ","^1F",0,"^1G",354],["^ ","^1F",7,"^1G",354,"^M","promesa.core/delay"],["^ ","^1F",56,"^1G",354],["^ ","^1F",57,"^1G",354],["^ ","^1F",67,"^1G",354],["^ ","^1F",5,"^1G",357],["^ ","^1F",0,"^1G",358],["^ ","^1F",7,"^1G",358,"^M","promesa.core/delay"],["^ ","^1F",56,"^1G",358],["^ ","^1F",57,"^1G",358],["^ ","^1F",67,"^1G",358],["^ ","^1F",73,"^1G",358],["^ ","^1F",74,"^1G",358],["^ ","^1F",84,"^1G",358],["^ ","^1F",0,"^1G",362],["^ ","^1F",6,"^1G",362],["^ ","^1F",11,"^1G",362,"^M","js/Error"],["^ ","^1F",17,"^1G",362],["^ ","^1F",18,"^1G",362],["^ ","^1F",80,"^1G",362],["^ ","^1F",80,"^1G",362],["^ ","^1F",0,"^1G",367],["^ ","^1F",0,"^1G",367],["^ ","^1F",51,"^1G",367],["^ ","^1F",0,"^1G",368],["^ ","^1F",0,"^1G",371],["^ ","^1F",0,"^1G",371],["^ ","^1F",51,"^1G",371],["^ ","^1F",0,"^1G",372],["^ ","^1F",0,"^1G",379],["^ ","^1F",0,"^1G",379],["^ ","^1F",45,"^1G",379],["^ ","^1F",0,"^1G",381]],"~i6",[["^ ","^1F",0,"^1G",350,"^M","promesa.core/delay"],["^ ","^1F",0,"^1G",367,"^M","promesa.core/delay"],["^ ","^1F",0,"^1G",371,"^M","promesa.core/delay"],["^ ","^1F",0,"^1G",379,"^M","promesa.core/delay"]]],"~i266",["^ ","~i4",[["^ ","^1F",62,"^1G",367,"^M","t"]],"~i7",[["^ ","^1F",0,"^1G",368],["^ ","^1F",58,"^1G",368]],"~i8",[["^ ","^1F",7,"^1G",368,"^M","promesa.core.delay.cljs$core$IFn$_invoke$arity$2"]],"^2@",[["^ ","^1F",56,"^1G",368,"^M","t"]]],"~i267",["^ ","~i4",[["^ ","^1F",62,"^1G",371,"^M","t"]],"~i6",[["^ ","^1F",64,"^1G",371,"^M","v"]]],"~i268",["^ ","^2H",[["^ ","^1F",0,"^1G",372]],"^2D",[["^ ","^1F",7,"^1G",372,"^M","promesa.core/promise"]],"^34",[["^ ","^1F",28,"^1G",372],["^ ","^1F",0,"^1G",373]],"^2T",[["^ ","^1F",39,"^1G",372,"^M","resolve"]],"~i34",[["^ ","^1F",47,"^1G",372,"^M","reject"]]],"~i269",["^ ","^3:",[["^ ","^1F",0,"^1G",373],["^ ","^1F",31,"^1G",373],["^ ","^1F",0,"^1G",374]],"^2S",[["^ ","^1F",7,"^1G",373,"^M","promesa.core/schedule"]],"^3=",[["^ ","^1F",29,"^1G",373,"^M","t"]],"^46",[["^ ","^1F",0,"^1G",374]],"^3@",[["^ ","^1F",8,"^1G",374,"^M","resolve"],["^ ","^1F",48,"^1G",374,"^M","resolve"],["^ ","^1F",91,"^1G",374,"^M","resolve"]],"~i45",[["^ ","^1F",86,"^1G",374,"^M","v"],["^ ","^1F",109,"^1G",374,"^M","v"]]],"~i275",["^ ","~i0",[["^ ","^1F",0,"^1G",381],["^ ","^1F",23,"^1G",386],["^ ","^1F",0,"^1G",387]],"~i6",[["^ ","^1F",0,"^1G",386,"^M","promesa.core/attempt"]]],"~i279",["^ ","~i3",[["^ ","^1F",54,"^1G",386,"^M","callback"]]],"~i280",["^ ","^20",[["^ ","^1F",0,"^1G",387]],"^2H",[["^ ","^1F",7,"^1G",387,"^M","promesa.core/promise"]],"^2O",[["^ ","^1F",28,"^1G",387],["^ ","^1F",0,"^1G",388]],"^3<",[["^ ","^1F",39,"^1G",387,"^M","resolve"]],"^4C",[["^ ","^1F",0,"^1G",388],["^ ","^1F",4,"^1G",388,"^M","G__34685"],["^ ","^1F",0,"^1G",389],["^ ","^1F",0,"^1G",389],["^ ","^1F",86,"^1G",389,"^M","G__34685"],["^ ","^1F",116,"^1G",389,"^M","G__34685"]],"^44",[["^ ","^1F",8,"^1G",389,"^M","resolve"],["^ ","^1F",48,"^1G",389,"^M","resolve"],["^ ","^1F",98,"^1G",389,"^M","resolve"]],"~i43",[["^ ","^1F",15,"^1G",388]],"~i44",[["^ ","^1F",16,"^1G",388,"^M","callback"],["^ ","^1F",57,"^1G",388,"^M","callback"],["^ ","^1F",100,"^1G",388,"^M","callback"]]],"~i293",["^ ","~i0",[["^ ","^1F",0,"^1G",392],["^ ","^1F",0,"^1G",392],["^ ","^1F",22,"^1G",392],["^ ","^1F",51,"^1G",392,"^M","var_args"],["^ ","^1F",0,"^1G",393],["^ ","^1F",0,"^1G",393],["^ ","^1F",4,"^1G",393,"^M","args__4534__auto__"],["^ ","^1F",25,"^1G",393],["^ ","^1F",0,"^1G",394],["^ ","^1F",0,"^1G",394],["^ ","^1F",4,"^1G",394,"^M","len__4531__auto__"],["^ ","^1F",30,"^1G",394],["^ ","^1F",30,"^1G",394],["^ ","^1F",0,"^1G",395],["^ ","^1F",0,"^1G",395],["^ ","^1F",4,"^1G",395,"^M","i__4532__auto__"],["^ ","^1F",28,"^1G",395],["^ ","^1F",0,"^1G",397],["^ ","^1F",0,"^1G",397],["^ ","^1F",3,"^1G",397],["^ ","^1F",4,"^1G",397,"^M","i__4532__auto__"],["^ ","^1F",28,"^1G",397,"^M","len__4531__auto__"],["^ ","^1F",0,"^1G",398],["^ ","^1F",0,"^1G",398],["^ ","^1F",0,"^1G",398,"^M","args__4534__auto__"],["^ ","^1F",24,"^1G",398],["^ ","^1F",25,"^1G",398],["^ ","^1F",35,"^1G",398,"^M","i__4532__auto__"],["^ ","^1F",0,"^1G",400],["^ ","^1F",15,"^1G",400],["^ ","^1F",16,"^1G",400,"^M","i__4532__auto__"],["^ ","^1F",40,"^1G",400],["^ ","^1F",0,"^1G",404],["^ ","^1F",0,"^1G",408],["^ ","^1F",4,"^1G",408,"^M","argseq__4535__auto__"],["^ ","^1F",27,"^1G",408],["^ ","^1F",29,"^1G",408],["^ ","^1F",30,"^1G",408],["^ ","^1F",36,"^1G",408],["^ ","^1F",36,"^1G",408,"^M","args__4534__auto__"],["^ ","^1F",64,"^1G",408],["^ ","^1F",64,"^1G",408],["^ ","^1F",69,"^1G",408,"^M","cljs.core/IndexedSeq"],["^ ","^1F",90,"^1G",408],["^ ","^1F",90,"^1G",408,"^M","args__4534__auto__"],["^ ","^1F",115,"^1G",408],["^ ","^1F",120,"^1G",408],["^ ","^1F",124,"^1G",408],["^ ","^1F",131,"^1G",408],["^ ","^1F",0,"^1G",409],["^ ","^1F",0,"^1G",409],["^ ","^1F",7,"^1G",409,"^M","promesa.core/await"],["^ ","^1F",64,"^1G",409,"^M","argseq__4535__auto__"],["^ ","^1F",0,"^1G",412],["^ ","^1F",0,"^1G",412],["^ ","^1F",0,"^1G",412],["^ ","^1F",0,"^1G",412,"^M","promesa.core/await"],["^ ","^1F",59,"^1G",412],["^ ","^1F",0,"^1G",413],["^ ","^1F",0,"^1G",416],["^ ","^1F",0,"^1G",416],["^ ","^1F",0,"^1G",416,"^M","promesa.core/await"],["^ ","^1F",46,"^1G",416],["^ ","^1F",0,"^1G",418],["^ ","^1F",0,"^1G",419],["^ ","^1F",0,"^1G",419],["^ ","^1F",0,"^1G",419,"^M","promesa.core/await"],["^ ","^1F",40,"^1G",419],["^ ","^1F",51,"^1G",419,"^M","seq34690"],["^ ","^1F",0,"^1G",420],["^ ","^1F",0,"^1G",420],["^ ","^1F",4,"^1G",420,"^M","self__4519__auto__"],["^ ","^1F",25,"^1G",420],["^ ","^1F",0,"^1G",421],["^ ","^1F",0,"^1G",421],["^ ","^1F",7,"^1G",421,"^M","self__4519__auto__"],["^ ","^1F",63,"^1G",421],["^ ","^1F",63,"^1G",421,"^M","cljs.core/seq"],["^ ","^1F",77,"^1G",421,"^M","seq34690"],["^ ","^1F",0,"^1G",424]],"~i6",[["^ ","^1F",0,"^1G",392,"^M","promesa.core/await"]]],"~i294",["^ ","~i5",[["^ ","^1F",70,"^1G",412,"^M","args"]]],"~i295",["^ ","~i2",[["^ ","^1F",0,"^1G",413]],"~i9",[["^ ","^1F",6,"^1G",413],["^ ","^1F",54,"^1G",413],["^ ","^1F",91,"^1G",413]],"^3C",[["^ ","^1F",6,"^1G",413,"^M","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^Y"],[1534380137000],["^1=","goog/math/math.js"],[1530991559994,"^Z","~$goog.array","~$goog.asserts"],["^1=","goog/array/array.js"],[1530991559994,"^Z","^4S"],["^1=","goog/debug/error.js"],[1530991559994,"^Z"],["^1=","promesa/impl/scheduler.cljc"],[1535586406328,"^Z","^Y","^S"],["^1=","promesa/impl.cljc"],[1535586406328,"^Z","^Y","^S","~$org.bluebird"],["^1=","goog/dom/nodetype.js"],[1530991559994,"^Z"],["^1=","goog/object/object.js"],[1530991559994,"^Z"],"~:SHADOW-TIMESTAMP",[1535989513000,1534380137000],["^1=","goog/math/long.js"],[1530991559994,"^Z","^4S","~$goog.reflect"],["^1=","goog/functions/functions.js"],[1530991559994,"^Z"],["^1=","goog/structs/map.js"],[1530991559994,"^Z","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["~:shadow.build.js-support/require","bluebird"],["~$shadow.js.shim.module$bluebird","shadow.js.shim.module$bluebird.js","^Z"],["^1=","goog/asserts/asserts.js"],[1530991559994,"^Z","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^1=","goog/uri/uri.js"],[1530991559994,"^Z","^4R","^4S","^52","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1=","goog/base.js"],[1530991559994],["^1=","promesa/core.cljc"],[1535586406328,"^Z","^Y","^S","^U","^W"],["^1=","goog/structs/structs.js"],[1530991559994,"^Z","^4R","^4Y"],["^1=","org/bluebird.cljs"],[1535669979047,"^Z","^Y","^4["],["^1=","goog/string/string.js"],[1530991559994,"^Z"],["^1=","goog/reflect/reflect.js"],[1530991559994,"^Z"],["^1=","goog/string/stringbuffer.js"],[1530991559994,"^Z"],["^1=","promesa/protocols.cljc"],[1535586406328,"^Z","^Y"],["^1=","goog/iter/iter.js"],[1530991559994,"^Z","^4R","^4S","~$goog.functions","~$goog.math"],["^1=","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^52","^4Y","^4R","~$goog.Uri","~$goog.string.StringBuffer"],["^1=","goog/math/integer.js"],[1530991559994,"^Z"],["^1=","goog/uri/utils.js"],[1530991559994,"^Z","^4R","^4S","^52"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","promesa/core.cljc","^7",25,"^8",5,"^9",25,"^:",17],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",["^G","^H","^I","^J","^K","^L"]],"~:shadow/js-access-properties",["^F",["any"]],"^M","^N","^Q",null,"^R",["^ ","^S","^S","^T","^S","^U","^U","^V","^U","^W","^W","^X","^W","^Y","^Y","^Z","^Z"],"^[",["^F",["^10"]],"~:shadow/js-access-global",["^F",["Error"]],"^11",null,"~:defs",["^ ","~$timeout",["^ ","~:protocol-inline",null,"^5",["^ ","^6","promesa/core.cljc","^7",253,"^8",10,"^9",253,"^:",17,"~:arglists",["^14",["~$quote",["^14",[["~$p","~$t"],["~$p","~$t","~$v"]]]]],"~:doc","Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError","~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",3,"~:method-params",["^14",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5D",["^14",[["~$p","~$t"],["~$p","~$t","~$v"]]],"~:arglists-meta",["^14",[null,null]]]],"^M","~$promesa.core/timeout","^5H",false,"^6","promesa/core.cljc","^:",17,"^5G",["^ ","^5H",false,"^5I",3,"^5J",["^14",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5D",["^14",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5K",["^14",[null,null]]],"^5J",["^14",[["~$p","~$t"],["~$p","~$t","~$v"]]],"~:protocol-impl",null,"^5K",["^14",[null,null]],"^8",4,"^7",253,"^9",253,"^5I",3,"~:fn-var",true,"^5D",["^14",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5F","Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError"],"~$Promise",["^ ","^M","~$promesa.core/Promise","^6","promesa/core.cljc","^7",43,"^8",10,"^9",43,"^:",30,"~:const",true,"^5",["^ ","^6","promesa/core.cljc","^7",43,"^8",23,"^9",43,"^:",30,"^5Q",true],"~:tag","~$js"],"~$branch",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",149,"^8",7,"^9",149,"^:",13,"^5D",["^14",["^5E",["^14",[["~$p","~$success","~$failure"]]]]]],"^M","~$promesa.core/branch","^5H",false,"^6","promesa/core.cljc","^:",13,"^5J",["^14",[["~$p","^5U","^5V"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",149,"^9",149,"^5I",3,"^5N",true,"^5D",["^14",["^5E",["^14",[["~$p","^5U","^5V"]]]]]],"~$attempt",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",276,"^8",7,"^9",276,"^:",14,"^5D",["^14",["^5E",["^14",[["~$callback"]]]]],"^5F","A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback."],"^M","~$promesa.core/attempt","^5H",false,"^6","promesa/core.cljc","^:",14,"^5J",["^14",[["^5Y"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",276,"^9",276,"^5I",1,"^5N",true,"^5D",["^14",["^5E",["^14",[["^5Y"]]]]],"^5F","A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback."],"^G",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",107,"^8",7,"^9",107,"^:",10,"^5D",["^14",["^5E",["^14",[["~$f","~$p"]]]]],"^5F","Apply a function to the promise value and\n  return a new promise with the result."],"^M","~$promesa.core/map","^5H",false,"^6","promesa/core.cljc","^:",10,"^5J",["^14",[["~$f","~$p"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",107,"^9",107,"^5I",2,"^5N",true,"^5D",["^14",["^5E",["^14",[["~$f","~$p"]]]]],"^5F","Apply a function to the promise value and\n  return a new promise with the result."],"^H",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",262,"^8",7,"^9",262,"^:",12,"^5D",["^14",["^5E",["^14",[["~$t"],["~$t","~$v"]]]]],"^5F","Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached.","^5G",["^ ","^5H",false,"^5I",2,"^5J",["^14",[["~$t"],["~$t","~$v"]]],"^5D",["^14",[["~$t"],["~$t","~$v"]]],"^5K",["^14",[null,null]]]],"^M","~$promesa.core/delay","^5H",false,"^6","promesa/core.cljc","^:",12,"^5G",["^ ","^5H",false,"^5I",2,"^5J",["^14",[["~$t"],["~$t","~$v"]]],"^5D",["^14",[["~$t"],["~$t","~$v"]]],"^5K",["^14",[null,null]]],"^5J",["^14",[["~$t"],["~$t","~$v"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",262,"^9",262,"^5I",2,"^5N",true,"^5D",["^14",[["~$t"],["~$t","~$v"]]],"^5F","Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached."],"~$resolved?",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",81,"^8",7,"^9",81,"^:",16,"^5D",["^14",["^5E",["^14",[["~$p"]]]]],"^5F","Returns true if promise `p` is already fulfilled."],"^M","~$promesa.core/resolved?","^5H",false,"^6","promesa/core.cljc","^:",16,"^5J",["^14",[["~$p"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",81,"^9",81,"^5I",1,"^5N",true,"^5D",["^14",["^5E",["^14",[["~$p"]]]]],"^5F","Returns true if promise `p` is already fulfilled."],"^I",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",113,"^8",7,"^9",113,"^:",13,"^5D",["^14",["^5E",["^14",[["~$f","~$p"]]]]],"^5F","Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator."],"^M","~$promesa.core/mapcat","^5H",false,"^6","promesa/core.cljc","^:",13,"^5J",["^14",[["~$f","~$p"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",113,"^9",113,"^5I",2,"^5N",true,"^5D",["^14",["^5E",["^14",[["~$f","~$p"]]]]],"^5F","Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator."],"~$cancelled?",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",231,"^8",7,"^9",231,"^:",17,"^5D",["^14",["^5E",["^14",[["~$v"]]]]],"^5F","Return true if `v` is a cancelled promise."],"^M","~$promesa.core/cancelled?","^5H",false,"^6","promesa/core.cljc","^:",17,"^5J",["^14",[["~$v"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",231,"^9",231,"^5I",1,"^5N",true,"^5D",["^14",["^5E",["^14",[["~$v"]]]]],"^5F","Return true if `v` is a cancelled promise."],"^J",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",294,"^8",7,"^9",294,"^:",12,"^5D",["^14",["^5E",["^14",[["~$&","~$args"]]]]],"^5G",["^ ","^5H",true,"^5I",0,"^5J",[["^14",["^66"]]],"^5D",["^14",[["~$&","^66"]]],"^5K",["^14",[null]]]],"^M","~$promesa.core/await","^5H",true,"^6","promesa/core.cljc","^:",12,"^5G",["^ ","^5H",true,"^5I",0,"^5J",[["^14",["^66"]]],"^5D",["^14",[["~$&","^66"]]],"^5K",["^14",[null]]],"^5J",[["^14",["^66"]]],"^5M",null,"^5K",["^14",[null]],"^8",1,"^7",294,"^9",294,"^5I",0,"^5N",true,"^5D",["^14",[["~$&","^66"]]]],"~$bind",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",124,"^8",7,"^9",124,"^:",11,"^5D",["^14",["^5E",["^14",[["~$p","~$f"]]]]],"^5F","A chain helper for promises."],"^M","~$promesa.core/bind","^5H",false,"^6","promesa/core.cljc","^:",11,"^5J",["^14",[["~$p","~$f"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",124,"^9",124,"^5I",2,"^5N",true,"^5D",["^14",["^5E",["^14",[["~$p","~$f"]]]]],"^5F","A chain helper for promises."],"~$any",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",213,"^8",7,"^9",213,"^:",10,"^5D",["^14",["^5E",["^14",[["~$promises"]]]]],"^5F","Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled."],"^M","~$promesa.core/any","^5H",false,"^6","promesa/core.cljc","^:",10,"^5J",["^14",[["^6;"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",213,"^9",213,"^5I",1,"^5N",true,"^5D",["^14",["^5E",["^14",[["^6;"]]]]],"^5F","Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled."],"~$finally",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",177,"^8",7,"^9",177,"^:",14,"^5D",["^14",["^5E",["^14",[["~$p","^5Y"]]]]],"^5F","Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected."],"^M","~$promesa.core/finally","^5H",false,"^6","promesa/core.cljc","^:",14,"^5J",["^14",[["~$p","^5Y"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",177,"^9",177,"^5I",2,"^5N",true,"^5D",["^14",["^5E",["^14",[["~$p","^5Y"]]]]],"^5F","Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected."],"~$schedule",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",47,"^8",7,"^9",47,"^:",15,"^5D",["^14",["^5E",["^14",[["~$ms","~$func"]]]]],"^5F","Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function."],"^M","~$promesa.core/schedule","^5H",false,"^6","promesa/core.cljc","^:",15,"^5J",["^14",[["^6@","^6A"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",47,"^9",47,"^5I",2,"^5N",true,"^5D",["^14",["^5E",["^14",[["^6@","^6A"]]]]],"^5F","Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function."],"~$promisify",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",238,"^8",7,"^9",238,"^:",16,"^5D",["^14",["^5E",["^14",[["~$callable"]]]]],"^5F","Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation)."],"^M","~$promesa.core/promisify","^5H",false,"^6","promesa/core.cljc","^:",16,"^5J",["^14",[["^6D"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",238,"^9",238,"^5I",1,"^5N",true,"^5D",["^14",["^5E",["^14",[["^6D"]]]]],"^5F","Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation)."],"~$rejected",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",63,"^8",7,"^9",63,"^:",15,"^5D",["^14",["^5E",["^14",[["~$v"]]]]],"^5F","Return a rejected promise with provided reason."],"^M","~$promesa.core/rejected","^5H",false,"^6","promesa/core.cljc","^:",15,"^5J",["^14",[["~$v"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",63,"^9",63,"^5I",1,"^5N",true,"^5D",["^14",["^5E",["^14",[["~$v"]]]]],"^5F","Return a rejected promise with provided reason."],"^L",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",68,"^8",7,"^9",68,"^:",14,"^5D",["^14",["^5E",["^14",[["~$v"]]]]],"^5F","The promise constructor."],"^M","~$promesa.core/promise","^5H",false,"^6","promesa/core.cljc","^:",14,"^5J",["^14",[["~$v"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",68,"^9",68,"^5I",1,"^5N",true,"^5D",["^14",["^5E",["^14",[["~$v"]]]]],"^5F","The promise constructor."],"~$cancel!",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",225,"^8",7,"^9",225,"^:",14,"^5D",["^14",["^5E",["^14",[["~$p"]]]]],"^5F","Cancel the promise."],"^M","~$promesa.core/cancel!","^5H",false,"^6","promesa/core.cljc","^:",14,"^5J",["^14",[["~$p"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",225,"^9",225,"^5I",1,"^5N",true,"^5D",["^14",["^5E",["^14",[["~$p"]]]]],"^5F","Cancel the promise."],"~$done?",["^ ","^M","~$promesa.core/done?","^6","promesa/core.cljc","^7",101,"^8",1,"^9",101,"^:",11,"^5",["^ ","^6","promesa/core.cljc","^7",101,"^8",6,"^9",101,"^:",11],"^5F","Returns true if promise `p` is already done.","^5R","^6:"],"~$err",["^ ","^M","~$promesa.core/err","^6","promesa/core.cljc","^7",173,"^8",1,"^9",173,"^:",9,"^5",["^ ","^6","promesa/core.cljc","^7",173,"^8",6,"^9",173,"^:",9],"^5F","A short alias for `error` function."],"~$all",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",187,"^8",7,"^9",187,"^:",10,"^5D",["^14",["^5E",["^14",[["^6;"]]]]],"^5F","Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled.\n\n  Example:\n\n  (-> (all [(promise :first-promise)\n            (promise :second-promise)]\n      (then (fn [[first-result second-result]]))\n       (println (str first-result \", \" second-result)\n\n  Will print out\n  :first-promise, :second-promise.\n\n  If at least one of the promises is rejected, the resulting promise will be\n  rejected."],"^M","~$promesa.core/all","^5H",false,"^6","promesa/core.cljc","^:",10,"^5J",["^14",[["^6;"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",187,"^9",187,"^5I",1,"^5N",true,"^5D",["^14",["^5E",["^14",[["^6;"]]]]],"^5F","Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled.\n\n  Example:\n\n  (-> (all [(promise :first-promise)\n            (promise :second-promise)]\n      (then (fn [[first-result second-result]]))\n       (println (str first-result \", \" second-result)\n\n  Will print out\n  :first-promise, :second-promise.\n\n  If at least one of the promises is rejected, the resulting promise will be\n  rejected."],"~$promise?",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",73,"^8",7,"^9",73,"^:",15,"^5D",["^14",["^5E",["^14",[["~$v"]]]]],"^5F","Return true if `v` is a promise instance."],"^M","~$promesa.core/promise?","^5H",false,"^6","promesa/core.cljc","^:",15,"^5J",["^14",[["~$v"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",73,"^9",73,"^5I",1,"^5N",true,"^5D",["^14",["^5E",["^14",[["~$v"]]]]],"^5F","Return true if `v` is a promise instance."],"~$resolved",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",58,"^8",7,"^9",58,"^:",15,"^5D",["^14",["^5E",["^14",[["~$v"]]]]],"^5F","Return a resolved promise with provided value."],"^M","~$promesa.core/resolved","^5H",false,"^6","promesa/core.cljc","^:",15,"^5J",["^14",[["~$v"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",58,"^9",58,"^5I",1,"^5N",true,"^5D",["^14",["^5E",["^14",[["~$v"]]]]],"^5F","Return a resolved promise with provided value."],"~$catch",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",155,"^8",7,"^9",155,"^:",12,"^5D",["^14",["^5E",["^14",[["~$p","~$f"],["~$p","~$pred-or-type","~$f"]]]]],"^5F","Catch all promise chain helper.","^5G",["^ ","^5H",false,"^5I",3,"^5J",["^14",[["~$p","~$f"],["~$p","^6V","~$f"]]],"^5D",["^14",[["~$p","~$f"],["~$p","^6V","~$f"]]],"^5K",["^14",[null,null]]]],"^M","~$promesa.core/catch","^5H",false,"^6","promesa/core.cljc","^:",12,"^5G",["^ ","^5H",false,"^5I",3,"^5J",["^14",[["~$p","~$f"],["~$p","^6V","~$f"]]],"^5D",["^14",[["~$p","~$f"],["~$p","^6V","~$f"]]],"^5K",["^14",[null,null]]],"^5J",["^14",[["~$p","~$f"],["~$p","^6V","~$f"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",155,"^9",155,"^5I",3,"^5N",true,"^5D",["^14",[["~$p","~$f"],["~$p","^6V","~$f"]]],"^5F","Catch all promise chain helper."],"~$chain",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",144,"^8",7,"^9",144,"^:",12,"^5D",["^14",["^5E",["^14",[["~$p","~$&","~$funcs"]]]]],"^5F","Like then but accepts multiple parameters.","^5G",["^ ","^5H",true,"^5I",1,"^5J",[["^14",["~$p","^6Y"]]],"^5D",["^14",[["~$p","~$&","^6Y"]]],"^5K",["^14",[null]]]],"^M","~$promesa.core/chain","^5H",true,"^6","promesa/core.cljc","^:",12,"^5G",["^ ","^5H",true,"^5I",1,"^5J",[["^14",["~$p","^6Y"]]],"^5D",["^14",[["~$p","~$&","^6Y"]]],"^5K",["^14",[null]]],"^5J",[["^14",["~$p","^6Y"]]],"^5M",null,"^5K",["^14",[null]],"^8",1,"^7",144,"^9",144,"^5I",1,"^5N",true,"^5D",["^14",[["~$p","~$&","^6Y"]]],"^5F","Like then but accepts multiple parameters."],"~$rejected?",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",86,"^8",7,"^9",86,"^:",16,"^5D",["^14",["^5E",["^14",[["~$p"]]]]],"^5F","Returns true if promise `p` is already rejected."],"^M","~$promesa.core/rejected?","^5H",false,"^6","promesa/core.cljc","^:",16,"^5J",["^14",[["~$p"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",86,"^9",86,"^5I",1,"^5N",true,"^5D",["^14",["^5E",["^14",[["~$p"]]]]],"^5F","Returns true if promise `p` is already rejected."],"~$then",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",129,"^8",7,"^9",129,"^:",11,"^5D",["^14",["^5E",["^14",[["~$p","~$f"]]]]],"^5F","Similar to `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator.\n\n  Unlike Clojure's `map`, will resolve any promises\n  returned  by `f`."],"^M","~$promesa.core/then","^5H",false,"^6","promesa/core.cljc","^:",11,"^5J",["^14",[["~$p","~$f"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",129,"^9",129,"^5I",2,"^5N",true,"^5D",["^14",["^5E",["^14",[["~$p","~$f"]]]]],"^5F","Similar to `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator.\n\n  Unlike Clojure's `map`, will resolve any promises\n  returned  by `f`."],"~$extract",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",96,"^8",7,"^9",96,"^:",14,"^5D",["^14",["^5E",["^14",[["~$p"]]]]],"^5F","Returns the current promise value."],"^M","~$promesa.core/extract","^5H",false,"^6","promesa/core.cljc","^:",14,"^5J",["^14",[["~$p"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",96,"^9",96,"^5I",1,"^5N",true,"^5D",["^14",["^5E",["^14",[["~$p"]]]]],"^5F","Returns the current promise value."],"~$error",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",168,"^8",7,"^9",168,"^:",12,"^5D",["^14",["^5E",["^14",[["~$f","~$p"],["~$f","~$type","~$p"]]]]],"^5F","Same as `catch` but with parameters inverted.","^5G",["^ ","^5H",false,"^5I",3,"^5J",["^14",[["~$f","~$p"],["~$f","^76","~$p"]]],"^5D",["^14",[["~$f","~$p"],["~$f","^76","~$p"]]],"^5K",["^14",[null,null]]]],"^M","~$promesa.core/error","^5H",false,"^6","promesa/core.cljc","^:",12,"^5G",["^ ","^5H",false,"^5I",3,"^5J",["^14",[["~$f","~$p"],["~$f","^76","~$p"]]],"^5D",["^14",[["~$f","~$p"],["~$f","^76","~$p"]]],"^5K",["^14",[null,null]]],"^5J",["^14",[["~$f","~$p"],["~$f","^76","~$p"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",168,"^9",168,"^5I",3,"^5N",true,"^5D",["^14",[["~$f","~$p"],["~$f","^76","~$p"]]],"^5F","Same as `catch` but with parameters inverted."],"~$pending?",["^ ","^5C",null,"^5",["^ ","^6","promesa/core.cljc","^7",91,"^8",7,"^9",91,"^:",15,"^5D",["^14",["^5E",["^14",[["~$p"]]]]],"^5F","Returns true if promise `p` is stil pending."],"^M","~$promesa.core/pending?","^5H",false,"^6","promesa/core.cljc","^:",15,"^5J",["^14",[["~$p"]]],"^5M",null,"^5K",["^14",[null,null]],"^8",1,"^7",91,"^9",91,"^5I",1,"^5N",true,"^5D",["^14",["^5E",["^14",[["~$p"]]]]],"^5F","Returns true if promise `p` is stil pending."]],"^12",["^ ","^Y","^Y"],"~:cljs.analyzer/constants",["^ ","^[",["^F",["~:else"]],"~:order",["^7;"]],"^19",["^ ","^10",["^F",[]]],"^1:",["^ "],"^1;",["^Z","^Y","^S","^U","^W"]],"^P","^N","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^4P",[["^7?","~:static-fns"],true,["^7?","~:elide-asserts"],false,["^7?","~:optimize-constants"],null,["^7?","~:external-config"],null,["^7?","~:tooling-config"],null,["^7?","~:emit-constants"],null,["^7?","~:infer-externs"],true,["^7?","^1B"],null,["~:js-options","~:js-provider"],"^10",["~:mode"],"~:dev",["^7?","~:fn-invoke-direct"],null,["^7?","^1D"],"/dev/null"]]]