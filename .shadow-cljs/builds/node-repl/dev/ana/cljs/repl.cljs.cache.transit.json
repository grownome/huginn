["^ ","~:output",["^ ","~:js","goog.provide('cljs.repl');\ngoog.require('cljs.core');\ngoog.require('cljs.spec.alpha');\ncljs.repl.print_doc = (function cljs$repl$print_doc(p__32816){\nvar map__32817 = p__32816;\nvar map__32817__$1 = ((((!((map__32817 == null)))?(((((map__32817.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__32817.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__32817):map__32817);\nvar m = map__32817__$1;\nvar n = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32817__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar nm = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32817__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"-------------------------\"], 0));\n\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var temp__5457__auto__ = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(m);\nif(cljs.core.truth_(temp__5457__auto__)){\nvar ns = temp__5457__auto__;\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\"/\"].join('');\n} else {\nreturn null;\n}\n})()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(m))].join('')], 0));\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(m))){\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Protocol\"], 0));\n} else {\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350).cljs$core$IFn$_invoke$arity$1(m))){\nvar seq__32822_32878 = cljs.core.seq(new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350).cljs$core$IFn$_invoke$arity$1(m));\nvar chunk__32823_32879 = null;\nvar count__32824_32880 = (0);\nvar i__32825_32881 = (0);\nwhile(true){\nif((i__32825_32881 < count__32824_32880)){\nvar f_32885 = chunk__32823_32879.cljs$core$IIndexed$_nth$arity$2(null,i__32825_32881);\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"  \",f_32885], 0));\n\n\nvar G__32892 = seq__32822_32878;\nvar G__32893 = chunk__32823_32879;\nvar G__32894 = count__32824_32880;\nvar G__32895 = (i__32825_32881 + (1));\nseq__32822_32878 = G__32892;\nchunk__32823_32879 = G__32893;\ncount__32824_32880 = G__32894;\ni__32825_32881 = G__32895;\ncontinue;\n} else {\nvar temp__5457__auto___32905 = cljs.core.seq(seq__32822_32878);\nif(temp__5457__auto___32905){\nvar seq__32822_32907__$1 = temp__5457__auto___32905;\nif(cljs.core.chunked_seq_QMARK_(seq__32822_32907__$1)){\nvar c__4351__auto___32916 = cljs.core.chunk_first(seq__32822_32907__$1);\nvar G__32923 = cljs.core.chunk_rest(seq__32822_32907__$1);\nvar G__32924 = c__4351__auto___32916;\nvar G__32925 = cljs.core.count(c__4351__auto___32916);\nvar G__32926 = (0);\nseq__32822_32878 = G__32923;\nchunk__32823_32879 = G__32924;\ncount__32824_32880 = G__32925;\ni__32825_32881 = G__32926;\ncontinue;\n} else {\nvar f_32927 = cljs.core.first(seq__32822_32907__$1);\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"  \",f_32927], 0));\n\n\nvar G__32928 = cljs.core.next(seq__32822_32907__$1);\nvar G__32929 = null;\nvar G__32930 = (0);\nvar G__32931 = (0);\nseq__32822_32878 = G__32928;\nchunk__32823_32879 = G__32929;\ncount__32824_32880 = G__32930;\ni__32825_32881 = G__32931;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n} else {\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(m))){\nvar arglists_32933 = new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(m);\nif(cljs.core.truth_((function (){var or__3949__auto__ = new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404).cljs$core$IFn$_invoke$arity$1(m);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"repl-special-function\",\"repl-special-function\",1262603725).cljs$core$IFn$_invoke$arity$1(m);\n}\n})())){\ncljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arglists_32933], 0));\n} else {\ncljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),cljs.core.first(arglists_32933)))?cljs.core.second(arglists_32933):arglists_32933)], 0));\n}\n} else {\n}\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"special-form\",\"special-form\",-1326536374).cljs$core$IFn$_invoke$arity$1(m))){\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Special Form\"], 0));\n\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\" \",new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(m)], 0));\n\nif(cljs.core.contains_QMARK_(m,new cljs.core.Keyword(null,\"url\",\"url\",276297046))){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(m))){\nreturn cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"\\n  Please see http://clojure.org/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(m))].join('')], 0));\n} else {\nreturn null;\n}\n} else {\nreturn cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"\\n  Please see http://clojure.org/special_forms#\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(m))].join('')], 0));\n}\n} else {\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404).cljs$core$IFn$_invoke$arity$1(m))){\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Macro\"], 0));\n} else {\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"repl-special-function\",\"repl-special-function\",1262603725).cljs$core$IFn$_invoke$arity$1(m))){\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"REPL Special Function\"], 0));\n} else {\n}\n\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\" \",new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(m)], 0));\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(m))){\nvar seq__32839_32945 = cljs.core.seq(new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(m));\nvar chunk__32840_32946 = null;\nvar count__32841_32947 = (0);\nvar i__32842_32948 = (0);\nwhile(true){\nif((i__32842_32948 < count__32841_32947)){\nvar vec__32844_32950 = chunk__32840_32946.cljs$core$IIndexed$_nth$arity$2(null,i__32842_32948);\nvar name_32951 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32844_32950,(0),null);\nvar map__32847_32952 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32844_32950,(1),null);\nvar map__32847_32953__$1 = ((((!((map__32847_32952 == null)))?(((((map__32847_32952.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__32847_32952.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__32847_32952):map__32847_32952);\nvar doc_32954 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32847_32953__$1,new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891));\nvar arglists_32955 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32847_32953__$1,new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754));\ncljs.core.println();\n\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\" \",name_32951], 0));\n\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\" \",arglists_32955], 0));\n\nif(cljs.core.truth_(doc_32954)){\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\" \",doc_32954], 0));\n} else {\n}\n\n\nvar G__32960 = seq__32839_32945;\nvar G__32961 = chunk__32840_32946;\nvar G__32962 = count__32841_32947;\nvar G__32963 = (i__32842_32948 + (1));\nseq__32839_32945 = G__32960;\nchunk__32840_32946 = G__32961;\ncount__32841_32947 = G__32962;\ni__32842_32948 = G__32963;\ncontinue;\n} else {\nvar temp__5457__auto___32965 = cljs.core.seq(seq__32839_32945);\nif(temp__5457__auto___32965){\nvar seq__32839_32966__$1 = temp__5457__auto___32965;\nif(cljs.core.chunked_seq_QMARK_(seq__32839_32966__$1)){\nvar c__4351__auto___32969 = cljs.core.chunk_first(seq__32839_32966__$1);\nvar G__32971 = cljs.core.chunk_rest(seq__32839_32966__$1);\nvar G__32972 = c__4351__auto___32969;\nvar G__32973 = cljs.core.count(c__4351__auto___32969);\nvar G__32974 = (0);\nseq__32839_32945 = G__32971;\nchunk__32840_32946 = G__32972;\ncount__32841_32947 = G__32973;\ni__32842_32948 = G__32974;\ncontinue;\n} else {\nvar vec__32852_32975 = cljs.core.first(seq__32839_32966__$1);\nvar name_32976 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32852_32975,(0),null);\nvar map__32855_32977 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32852_32975,(1),null);\nvar map__32855_32978__$1 = ((((!((map__32855_32977 == null)))?(((((map__32855_32977.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__32855_32977.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__32855_32977):map__32855_32977);\nvar doc_32979 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32855_32978__$1,new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891));\nvar arglists_32980 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32855_32978__$1,new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754));\ncljs.core.println();\n\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\" \",name_32976], 0));\n\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\" \",arglists_32980], 0));\n\nif(cljs.core.truth_(doc_32979)){\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\" \",doc_32979], 0));\n} else {\n}\n\n\nvar G__32982 = cljs.core.next(seq__32839_32966__$1);\nvar G__32983 = null;\nvar G__32984 = (0);\nvar G__32985 = (0);\nseq__32839_32945 = G__32982;\nchunk__32840_32946 = G__32983;\ncount__32841_32947 = G__32984;\ni__32842_32948 = G__32985;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n} else {\n}\n\nif(cljs.core.truth_(n)){\nvar temp__5457__auto__ = cljs.spec.alpha.get_spec(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.ns_name(n))].join(''),cljs.core.name(nm)));\nif(cljs.core.truth_(temp__5457__auto__)){\nvar fnspec = temp__5457__auto__;\ncljs.core.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Spec\"], 0));\n\nvar seq__32864 = cljs.core.seq(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204)], null));\nvar chunk__32865 = null;\nvar count__32866 = (0);\nvar i__32867 = (0);\nwhile(true){\nif((i__32867 < count__32866)){\nvar role = chunk__32865.cljs$core$IIndexed$_nth$arity$2(null,i__32867);\nvar temp__5457__auto___32990__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(fnspec,role);\nif(cljs.core.truth_(temp__5457__auto___32990__$1)){\nvar spec_32991 = temp__5457__auto___32990__$1;\ncljs.core.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"\\n \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name(role)),\":\"].join(''),cljs.spec.alpha.describe(spec_32991)], 0));\n} else {\n}\n\n\nvar G__32992 = seq__32864;\nvar G__32993 = chunk__32865;\nvar G__32994 = count__32866;\nvar G__32995 = (i__32867 + (1));\nseq__32864 = G__32992;\nchunk__32865 = G__32993;\ncount__32866 = G__32994;\ni__32867 = G__32995;\ncontinue;\n} else {\nvar temp__5457__auto____$1 = cljs.core.seq(seq__32864);\nif(temp__5457__auto____$1){\nvar seq__32864__$1 = temp__5457__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(seq__32864__$1)){\nvar c__4351__auto__ = cljs.core.chunk_first(seq__32864__$1);\nvar G__32999 = cljs.core.chunk_rest(seq__32864__$1);\nvar G__33000 = c__4351__auto__;\nvar G__33001 = cljs.core.count(c__4351__auto__);\nvar G__33002 = (0);\nseq__32864 = G__32999;\nchunk__32865 = G__33000;\ncount__32866 = G__33001;\ni__32867 = G__33002;\ncontinue;\n} else {\nvar role = cljs.core.first(seq__32864__$1);\nvar temp__5457__auto___33003__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(fnspec,role);\nif(cljs.core.truth_(temp__5457__auto___33003__$2)){\nvar spec_33006 = temp__5457__auto___33003__$2;\ncljs.core.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\"\\n \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.name(role)),\":\"].join(''),cljs.spec.alpha.describe(spec_33006)], 0));\n} else {\n}\n\n\nvar G__33007 = cljs.core.next(seq__32864__$1);\nvar G__33008 = null;\nvar G__33009 = (0);\nvar G__33010 = (0);\nseq__32864 = G__33007;\nchunk__32865 = G__33008;\ncount__32866 = G__33009;\ni__32867 = G__33010;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs/repl.cljs","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",14],"~:use-macros",null,"~:excludes",["~#set",[]],"~:macros",["^ ","~$doc",["^ ","~:arglists",["~#list",[["~$name"]]],"~:doc","Prints documentation for a var or special form given its name","^7",1233,"^8",1,"^6","cljs/repl.cljc","~:name","~$cljs.repl/doc","~:ns","~$cljs.repl","~:macro",true],"~$find-doc",["^ ","^@",["^A",[["~$re-string-or-pattern"]]],"^C","Prints documentation for any var whose documentation or name\n contains a match for re-string-or-pattern","^7",1269,"^8",1,"^6","cljs/repl.cljc","^D","~$cljs.repl/find-doc","^F","^G","^H",true],"~$dir",["^ ","^@",["^A",[["~$ns"]]],"^C","Prints a sorted directory of public vars in a namespace","^7",1369,"^8",1,"^6","cljs/repl.cljc","^D","~$cljs.repl/dir","^F","^G","^H",true],"~$pst",["^ ","^@",["^A",[[],["~$e"]]],"^7",1375,"^8",1,"^6","cljs/repl.cljc","^D","~$cljs.repl/pst","^F","^G","^H",true],"~$source",["^ ","^@",["^A",[["~$n"]]],"^C","Prints the source code for the given symbol, if it can find it.\n  This requires that the symbol resolve to a Var defined in a\n  namespace for which the .cljs is in the classpath.\n\n  Example: (source filter)","^7",1328,"^8",1,"^6","cljs/repl.cljc","^D","~$cljs.repl/source","^F","^G","^H",true],"~$apropos",["^ ","^@",["^A",[["~$str-or-pattern"]]],"^C","Given a regular expression or stringable thing, return a seq of all\npublic definitions in all currently-loaded namespaces that match the\nstr-or-pattern.","^7",1344,"^8",1,"^6","cljs/repl.cljc","^D","~$cljs.repl/apropos","^F","^G","^H",true]],"^D","^G","~:op","^F","~:imports",null,"~:requires",["^ ","~$cljs.spec.alpha","^Y","~$spec","^Y","~$cljs.core","^[","~$goog","^10"],"~:seen",["^=",["~:require","~:require-macros"]],"~:uses",null,"^13",["^ ","^G","^G","^[","^[","^Y","^Y","^Z","^Y"],"~:form",["^A",["^M","^G",["^A",["^13","^G"]],["^A",["^12",["^Y","~:as","^Z"]]]]],"~:flags",["^ ","^13",["^=",[]],"^12",["^=",[]]],"~:js-deps",["^ "],"~:deps",["^10","^[","^Y"]],"^F","^G","~:resource-id",["~:shadow.build.classpath/resource","cljs/repl.cljs"],"~:compiled-at",1540145118934,"~:resource-name","cljs/repl.cljs","~:warnings",[],"~:source",";; Copyright (c) Rich Hickey. All rights reserved.\n;; The use and distribution terms for this software are covered by the\n;; Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;; which can be found in the file epl-v10.html at the root of this distribution.\n;; By using this software in any fashion, you are agreeing to be bound by\n;; the terms of this license.\n;; You must not remove this notice, or any other, from this software.\n\n(ns cljs.repl\n  (:require-macros cljs.repl)\n  (:require [cljs.spec.alpha :as spec]))\n\n(defn print-doc [{n :ns nm :name :as m}]\n  (println \"-------------------------\")\n  (println (str (when-let [ns (:ns m)] (str ns \"/\")) (:name m)))\n  (when (:protocol m)\n    (println \"Protocol\"))\n  (cond\n    (:forms m) (doseq [f (:forms m)]\n                 (println \"  \" f))\n    (:arglists m) (let [arglists (:arglists m)]\n                    (if (or (:macro m)\n                         (:repl-special-function m))\n                     (prn arglists)\n                     (prn\n                       (if (= 'quote (first arglists))\n                         (second arglists)\n                         arglists)))))\n  (if (:special-form m)\n    (do\n      (println \"Special Form\")\n      (println \" \" (:doc m))\n      (if (contains? m :url)\n        (when (:url m)\n          (println (str \"\\n  Please see http://clojure.org/\" (:url m))))\n        (println (str \"\\n  Please see http://clojure.org/special_forms#\"\n                   (:name m)))))\n    (do\n      (when (:macro m)\n        (println \"Macro\"))\n      (when (:repl-special-function m)\n        (println \"REPL Special Function\"))\n      (println \" \" (:doc m))\n      (when (:protocol m)\n        (doseq [[name {:keys [doc arglists]}] (:methods m)]\n          (println)\n          (println \" \" name)\n          (println \" \" arglists)\n          (when doc\n            (println \" \" doc))))\n      (when n\n        (when-let [fnspec (spec/get-spec (symbol (str (ns-name n)) (name nm)))]\n          (print \"Spec\")\n          (doseq [role [:args :ret :fn]]\n            (when-let [spec (get fnspec role)]\n              (print (str \"\\n \" (name role) \":\") (spec/describe spec)))))))))\n","~:reader-features",["^=",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["p__32816","map__32817","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.repl/print-doc","n","nm","m","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","temp__5457__auto__","ns","seq__32822","cljs.core/seq","chunk__32823","count__32824","i__32825","cljs.core/chunked-seq?","c__4351__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","f","arglists","or__3949__auto__","cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/second","cljs.core/contains?","seq__32839","chunk__32840","count__32841","i__32842","vec__32844","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","map__32847","vec__32852","map__32855","name","doc","cljs.core/println","fnspec","cljs.spec.alpha/get-spec","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","cljs.core/ns-name","cljs.core/name","cljs.core.print.cljs$core$IFn$_invoke$arity$variadic","seq__32864","chunk__32865","count__32866","i__32867","role","spec","cljs.spec.alpha/describe"]]],"~:cache-keys",["~#cmap",[["^H","^["],[1534380137000],["^1;","cljs/spec/gen/alpha.cljs"],[1534380137690,"^10","^[","~$goog.Uri"],["^1;","goog/math/math.js"],[1530991559994,"^10","~$goog.array","~$goog.asserts"],["^1;","goog/array/array.js"],[1530991559994,"^10","^1J"],["^1;","goog/debug/error.js"],[1530991559994,"^10"],["^1;","goog/dom/nodetype.js"],[1530991559994,"^10"],["^H","~$cljs.spec.gen.alpha"],[1534380137000],["^1;","goog/object/object.js"],[1530991559994,"^10"],"~:SHADOW-TIMESTAMP",[1540077702000,1534380137000],["^1;","goog/math/long.js"],[1530991559994,"^10","^1J","~$goog.reflect"],["^H","^G"],[1534380137000],["^1;","goog/functions/functions.js"],[1530991559994,"^10"],["^1;","clojure/walk.cljs"],[1534380137690,"^10","^["],["^1;","goog/structs/map.js"],[1530991559994,"^10","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^H","^Y"],[1534380137000],["^1;","goog/asserts/asserts.js"],[1530991559994,"^10","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^1;","goog/uri/uri.js"],[1530991559994,"^10","^1I","^1J","^1S","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1;","cljs/spec/alpha.cljs"],[1534380137690,"^10","^[","^1P","~$clojure.walk","^1K","~$clojure.string"],["^1;","goog/base.js"],[1530991559994],["^1;","goog/structs/structs.js"],[1530991559994,"^10","^1I","^1P"],["^1;","clojure/string.cljs"],[1534380137690,"^10","^[","^1S","~$goog.string.StringBuffer"],["^1;","cljs/repl.cljs"],[1534380137690,"^10","^[","^Y"],["^1;","goog/string/string.js"],[1530991559994,"^10"],["^1;","goog/reflect/reflect.js"],[1530991559994,"^10"],["^1;","goog/string/stringbuffer.js"],[1530991559994,"^10"],["^1;","goog/iter/iter.js"],[1530991559994,"^10","^1I","^1J","~$goog.functions","~$goog.math"],["^1;","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^1S","^1P","^1I","^1H","^1["],["^1;","goog/math/integer.js"],[1530991559994,"^10"],["^1;","goog/uri/utils.js"],[1530991559994,"^10","^1I","^1J","^1S"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","cljs/repl.cljs","^7",9,"^8",5,"^9",9,"^:",14],"^;",null,"^<",["^=",[]],"^>",["^ ","^?",["^ ","^@",["^A",[["^B"]]],"^C","Prints documentation for a var or special form given its name","^7",1233,"^8",1,"^6","cljs/repl.cljc","^D","^E","^F","^G","^H",true],"^I",["^ ","^@",["^A",[["^J"]]],"^C","Prints documentation for any var whose documentation or name\n contains a match for re-string-or-pattern","^7",1269,"^8",1,"^6","cljs/repl.cljc","^D","^K","^F","^G","^H",true],"^L",["^ ","^@",["^A",[["^M"]]],"^C","Prints a sorted directory of public vars in a namespace","^7",1369,"^8",1,"^6","cljs/repl.cljc","^D","^N","^F","^G","^H",true],"^O",["^ ","^@",["^A",[[],["~$e"]]],"^7",1375,"^8",1,"^6","cljs/repl.cljc","^D","^P","^F","^G","^H",true],"^Q",["^ ","^@",["^A",[["~$n"]]],"^C","Prints the source code for the given symbol, if it can find it.\n  This requires that the symbol resolve to a Var defined in a\n  namespace for which the .cljs is in the classpath.\n\n  Example: (source filter)","^7",1328,"^8",1,"^6","cljs/repl.cljc","^D","^R","^F","^G","^H",true],"^S",["^ ","^@",["^A",[["^T"]]],"^C","Given a regular expression or stringable thing, return a seq of all\npublic definitions in all currently-loaded namespaces that match the\nstr-or-pattern.","^7",1344,"^8",1,"^6","cljs/repl.cljc","^D","^U","^F","^G","^H",true]],"^D","^G","^W",null,"^X",["^ ","^Y","^Y","^Z","^Y","^[","^[","^10","^10"],"^11",["^=",["^12","^13"]],"^14",null,"~:defs",["^ ","~$print-doc",["^ ","~:protocol-inline",null,"^5",["^ ","^6","cljs/repl.cljs","^7",13,"^8",7,"^9",13,"^:",16,"^@",["^A",["~$quote",["^A",[[["^ ","~$n","^F","~$nm","^D","^16","~$m"]]]]]]],"^D","~$cljs.repl/print-doc","~:variadic",false,"^6","cljs/repl.cljs","^:",16,"~:method-params",["^A",[["~$p__32816"]]],"~:protocol-impl",null,"~:arglists-meta",["^A",[null,null]],"^8",1,"^7",13,"^9",13,"~:max-fixed-arity",1,"~:fn-var",true,"^@",["^A",["^28",["^A",[[["^ ","~$n","^F","^29","^D","^16","~$m"]]]]]]]],"^13",["^ ","^G","^G","^[","^[","^Y","^Y","^Z","^Y"],"~:cljs.analyzer/constants",["^ ","^11",["^=",["~:args","~:ret","~:fn","~:protocol","^F","^D","~:special-form","~:repl-special-function","~:methods","^H","~:url","^28","^@","^C","~:forms"]],"~:order",["^F","^D","^2F","^2K","^@","^H","^2H","^28","^2G","^C","^2J","^2I","^2C","^2D","^2E"]],"^17",["^ ","^13",["^=",[]],"^12",["^=",[]]],"^18",["^ "],"^19",["^10","^[","^Y"]],"^F","^G","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1G",[["^2O","~:static-fns"],true,["^2O","~:elide-asserts"],false,["^2O","~:optimize-constants"],null,["^2O","~:external-config"],null,["^2O","~:tooling-config"],null,["^2O","~:emit-constants"],null,["^2O","~:infer-externs"],true,["^2O","^1@"],null,["~:js-options","~:js-provider"],"^12",["~:mode"],"~:dev",["^2O","~:fn-invoke-direct"],null,["^2O","~:source-map"],"/dev/null"]]]