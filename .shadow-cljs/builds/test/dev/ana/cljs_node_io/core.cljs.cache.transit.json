["^ ","~:output",["^ ","~:js","goog.provide('cljs_node_io.core');\ngoog.require('cljs.core');\ngoog.require('cljs.core.async');\ngoog.require('cljs.core.async.impl.protocols');\ngoog.require('cljs_node_io.file');\ngoog.require('cljs_node_io.streams');\ngoog.require('cljs_node_io.protocols');\ngoog.require('goog.Uri');\ncljs_node_io.core.path = require(\"path\");\nBuffer.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;\n\nBuffer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,that){\nvar this$__$1 = this;\ntry{return this$__$1.equals(that);\n}catch (e27823){if((e27823 instanceof Error)){\nvar e = e27823;\nreturn false;\n} else {\nthrow e27823;\n\n}\n}});\n/**\n * This is needed to mock the java.io.File constructor.\n * The java File constructor is polymorphic and accepts one or two args:\n * (Uri), (pathstring), (parentstring, childstring), (File, childstring)\n * @return {!string}\n */\ncljs_node_io.core.filepath = (function cljs_node_io$core$filepath(var_args){\nvar G__27827 = arguments.length;\nswitch (G__27827) {\ncase 1:\nreturn cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$1 = (function (a){\nreturn cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$2(a,null);\n});\n\ncljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$2 = (function (a,b){\nvar pred__27843 = cljs.core._EQ_;\nvar expr__27844 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.type(a),cljs.core.type(b)], null);\nif(cljs.core.truth_((function (){var G__27850 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [goog.Uri,null], null);\nvar G__27851 = expr__27844;\nreturn (pred__27843.cljs$core$IFn$_invoke$arity$2 ? pred__27843.cljs$core$IFn$_invoke$arity$2(G__27850,G__27851) : pred__27843.call(null,G__27850,G__27851));\n})())){\nreturn a.getPath();\n} else {\nif(cljs.core.truth_((function (){var G__27857 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [String,null], null);\nvar G__27858 = expr__27844;\nreturn (pred__27843.cljs$core$IFn$_invoke$arity$2 ? pred__27843.cljs$core$IFn$_invoke$arity$2(G__27857,G__27858) : pred__27843.call(null,G__27857,G__27858));\n})())){\nreturn a;\n} else {\nif(cljs.core.truth_((function (){var G__27859 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [String,String], null);\nvar G__27860 = expr__27844;\nreturn (pred__27843.cljs$core$IFn$_invoke$arity$2 ? pred__27843.cljs$core$IFn$_invoke$arity$2(G__27859,G__27860) : pred__27843.call(null,G__27859,G__27860));\n})())){\nreturn (cljs_node_io.core.path.join.cljs$core$IFn$_invoke$arity$2 ? cljs_node_io.core.path.join.cljs$core$IFn$_invoke$arity$2(a,b) : cljs_node_io.core.path.join.call(null,a,b));\n} else {\nif(cljs.core.truth_((function (){var G__27867 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs_node_io.file.File,String], null);\nvar G__27868 = expr__27844;\nreturn (pred__27843.cljs$core$IFn$_invoke$arity$2 ? pred__27843.cljs$core$IFn$_invoke$arity$2(G__27867,G__27868) : pred__27843.call(null,G__27867,G__27868));\n})())){\nvar G__27870 = a.getPath();\nvar G__27871 = b;\nreturn (cljs_node_io.core.path.join.cljs$core$IFn$_invoke$arity$2 ? cljs_node_io.core.path.join.cljs$core$IFn$_invoke$arity$2(G__27870,G__27871) : cljs_node_io.core.path.join.call(null,G__27870,G__27871));\n} else {\nif(cljs.core.truth_((function (){var G__27872 = new cljs.core.Keyword(null,\"else\",\"else\",-1508377146);\nvar G__27873 = expr__27844;\nreturn (pred__27843.cljs$core$IFn$_invoke$arity$2 ? pred__27843.cljs$core$IFn$_invoke$arity$2(G__27872,G__27873) : pred__27843.call(null,G__27872,G__27873));\n})())){\nthrow (new TypeError([\"Unrecognized path configuration passed to File constructor.\",\"\\nYou passed \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a], 0))),\" and \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b], 0))),\"\\nYou must pass a [string], [uri], [string string], or [file string].\"].join('')));\n} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__27844)].join('')));\n}\n}\n}\n}\n}\n});\n\ncljs_node_io.core.filepath.cljs$lang$maxFixedArity = 2;\n\ngoog.object.set(cljs_node_io.protocols.Coercions,\"null\",true);\n\nvar G__27874_28030 = cljs_node_io.protocols.as_file;\nvar G__27875_28031 = \"null\";\nvar G__27876_28032 = ((function (G__27874_28030,G__27875_28031){\nreturn (function (_){\nreturn null;\n});})(G__27874_28030,G__27875_28031))\n;\ngoog.object.set(G__27874_28030,G__27875_28031,G__27876_28032);\n\nvar G__27878_28033 = cljs_node_io.protocols.as_url;\nvar G__27879_28034 = \"null\";\nvar G__27880_28035 = ((function (G__27878_28033,G__27879_28034){\nreturn (function (_){\nreturn null;\n});})(G__27878_28033,G__27879_28034))\n;\ngoog.object.set(G__27878_28033,G__27879_28034,G__27880_28035);\n\ngoog.object.set(cljs_node_io.protocols.Coercions,\"string\",true);\n\nvar G__27881_28036 = cljs_node_io.protocols.as_file;\nvar G__27882_28037 = \"string\";\nvar G__27883_28038 = ((function (G__27881_28036,G__27882_28037){\nreturn (function (s){\nreturn (new cljs_node_io.file.File(cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$1(s)));\n});})(G__27881_28036,G__27882_28037))\n;\ngoog.object.set(G__27881_28036,G__27882_28037,G__27883_28038);\n\nvar G__27884_28041 = cljs_node_io.protocols.as_url;\nvar G__27885_28042 = \"string\";\nvar G__27886_28043 = ((function (G__27884_28041,G__27885_28042){\nreturn (function (s){\nreturn (new goog.Uri(s)).getPath();\n});})(G__27884_28041,G__27885_28042))\n;\ngoog.object.set(G__27884_28041,G__27885_28042,G__27886_28043);\n\ngoog.Uri.prototype.cljs_node_io$protocols$Coercions$ = cljs.core.PROTOCOL_SENTINEL;\n\ngoog.Uri.prototype.cljs_node_io$protocols$Coercions$as_url$arity$1 = (function (u){\nvar u__$1 = this;\nreturn u__$1.getPath();\n});\n\ngoog.Uri.prototype.cljs_node_io$protocols$Coercions$as_file$arity$1 = (function (u){\nvar u__$1 = this;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"file\",u__$1.getScheme())){\nreturn cljs_node_io.protocols.as_file(u__$1.getPath());\n} else {\nthrow (new Error([\"IllegalArgumentException : Uri's must have file protocol: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(u__$1)].join('')));\n}\n});\ngoog.Uri.prototype.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;\n\ngoog.Uri.prototype.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = (function (x,opts){\nvar x__$1 = this;\nreturn cljs_node_io.protocols.make_reader(cljs_node_io.protocols.make_input_stream(x__$1,opts),opts);\n});\n\ngoog.Uri.prototype.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = (function (x,opts){\nvar x__$1 = this;\nreturn cljs_node_io.protocols.make_writer(cljs_node_io.protocols.make_output_stream(x__$1,opts),opts);\n});\n\ngoog.Uri.prototype.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = (function (x,opts){\nvar x__$1 = this;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"file\",x__$1.getScheme())){\nreturn cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2(cljs_node_io.protocols.as_file(x__$1),opts);\n} else {\nthrow (new Error([\"IllegalArgumentException: Can not read from non-file URL <\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\">\"].join('')));\n}\n});\n\ngoog.Uri.prototype.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = (function (x,opts){\nvar x__$1 = this;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"file\",x__$1.getScheme())){\nreturn cljs_node_io.protocols.make_output_stream(cljs_node_io.protocols.as_file(x__$1),opts);\n} else {\nthrow (new Error([\"IllegalArgumentException: Can not write to non-file URL <\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\">\"].join('')));\n}\n});\n\ngoog.object.set(cljs_node_io.protocols.IOFactory,\"string\",true);\n\nvar G__27892_28047 = cljs_node_io.protocols.make_reader;\nvar G__27893_28048 = \"string\";\nvar G__27894_28049 = ((function (G__27892_28047,G__27893_28048){\nreturn (function (x,opts){\nreturn cljs_node_io.protocols.make_reader(cljs_node_io.protocols.as_file(x),opts);\n});})(G__27892_28047,G__27893_28048))\n;\ngoog.object.set(G__27892_28047,G__27893_28048,G__27894_28049);\n\nvar G__27895_28050 = cljs_node_io.protocols.make_writer;\nvar G__27896_28051 = \"string\";\nvar G__27897_28052 = ((function (G__27895_28050,G__27896_28051){\nreturn (function (x,opts){\nreturn cljs_node_io.protocols.make_writer(cljs_node_io.protocols.as_file(x),opts);\n});})(G__27895_28050,G__27896_28051))\n;\ngoog.object.set(G__27895_28050,G__27896_28051,G__27897_28052);\n\nvar G__27901_28053 = cljs_node_io.protocols.make_input_stream;\nvar G__27902_28054 = \"string\";\nvar G__27903_28055 = ((function (G__27901_28053,G__27902_28054){\nreturn (function (x,opts){\ntry{return cljs_node_io.protocols.make_input_stream((new goog.Uri(x)),opts);\n}catch (e27904){if((e27904 instanceof Error)){\nvar e = e27904;\nreturn (new cljs_node_io.file.File(x)).cljs_node_io$protocols$IOFactory$make_input_stream$arity$2(null,opts);\n} else {\nthrow e27904;\n\n}\n}});})(G__27901_28053,G__27902_28054))\n;\ngoog.object.set(G__27901_28053,G__27902_28054,G__27903_28055);\n\nvar G__27905_28057 = cljs_node_io.protocols.make_output_stream;\nvar G__27906_28058 = \"string\";\nvar G__27907_28059 = ((function (G__27905_28057,G__27906_28058){\nreturn (function (x,opts){\ntry{return cljs_node_io.protocols.make_output_stream((new goog.Uri(x)),opts);\n}catch (e27908){if((e27908 instanceof Error)){\nvar err = e27908;\nreturn (new cljs_node_io.file.File(x)).cljs_node_io$protocols$IOFactory$make_output_stream$arity$2(null,opts);\n} else {\nthrow e27908;\n\n}\n}});})(G__27905_28057,G__27906_28058))\n;\ngoog.object.set(G__27905_28057,G__27906_28058,G__27907_28059);\n\nBuffer.prototype.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;\n\nBuffer.prototype.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = (function (b,opts){\nvar b__$1 = this;\nreturn cljs_node_io.protocols.make_reader(cljs_node_io.protocols.make_input_stream(b__$1,opts),opts);\n});\n\nBuffer.prototype.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = (function (b,opts){\nvar b__$1 = this;\nreturn cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$2(b__$1,opts);\n});\n\nBuffer.prototype.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = (function (x,opts){\nvar x__$1 = this;\nreturn cljs_node_io.protocols.make_writer(cljs_node_io.protocols.make_output_stream(x__$1,opts),opts);\n});\n\nBuffer.prototype.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = (function (x,opts){\nvar x__$1 = this;\nthrow (new Error([\"IllegalArgumentException : Cannot open <\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x__$1], 0))),\"> as an OutputStream.\"].join('')));\n});\n/**\n * a relative path, else IllegalArgumentException.\n * @param {(string|IFile|Uri)} x\n * @return {!string}\n */\ncljs_node_io.core.as_relative_path = (function cljs_node_io$core$as_relative_path(x){\nvar f = cljs_node_io.protocols.as_file(x);\nif(cljs.core.truth_(f.isAbsolute())){\nthrow (new Error([\"IllegalArgumentException: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(f),\" is not a relative path\"].join('')));\n} else {\nreturn f.getPath();\n}\n});\n/**\n * Returns a reified file, passing each arg to as-file.  Multiple-arg\n * versions treat the first argument as parent and subsequent args as\n * children relative to the parent. Use in place of File constructor\n * @return {!IFile}\n */\ncljs_node_io.core.file = (function cljs_node_io$core$file(var_args){\nvar G__27919 = arguments.length;\nswitch (G__27919) {\ncase 1:\nreturn cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__4546__auto__ = [];\nvar len__4531__auto___28061 = arguments.length;\nvar i__4532__auto___28062 = (0);\nwhile(true){\nif((i__4532__auto___28062 < len__4531__auto___28061)){\nargs_arr__4546__auto__.push((arguments[i__4532__auto___28062]));\n\nvar G__28063 = (i__4532__auto___28062 + (1));\ni__4532__auto___28062 = G__28063;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4547__auto__ = (new cljs.core.IndexedSeq(args_arr__4546__auto__.slice((2)),(0),null));\nreturn cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4547__auto__);\n\n}\n});\n\ncljs_node_io.core.file.cljs$core$IFn$_invoke$arity$1 = (function (arg){\nreturn cljs_node_io.protocols.as_file(arg);\n});\n\ncljs_node_io.core.file.cljs$core$IFn$_invoke$arity$2 = (function (parent,child){\nreturn (new cljs_node_io.file.File(cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$2(cljs_node_io.protocols.as_file(parent),cljs_node_io.core.as_relative_path(child))));\n});\n\ncljs_node_io.core.file.cljs$core$IFn$_invoke$arity$variadic = (function (parent,child,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs_node_io.core.file,cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$2(parent,child),more);\n});\n\n/** @this {Function} */\ncljs_node_io.core.file.cljs$lang$applyTo = (function (seq27914){\nvar G__27915 = cljs.core.first(seq27914);\nvar seq27914__$1 = cljs.core.next(seq27914);\nvar G__27916 = cljs.core.first(seq27914__$1);\nvar seq27914__$2 = cljs.core.next(seq27914__$1);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__27915,G__27916,seq27914__$2);\n});\n\ncljs_node_io.core.file.cljs$lang$maxFixedArity = (2);\n\n/**\n * Delete file f. Raise an exception if it fails unless silently is true.\n * @return {!boolean}\n */\ncljs_node_io.core.delete_file = (function cljs_node_io$core$delete_file(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___28066 = arguments.length;\nvar i__4532__auto___28067 = (0);\nwhile(true){\nif((i__4532__auto___28067 < len__4531__auto___28066)){\nargs__4534__auto__.push((arguments[i__4532__auto___28067]));\n\nvar G__28068 = (i__4532__auto___28067 + (1));\ni__4532__auto___28067 = G__28068;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn cljs_node_io.core.delete_file.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.delete_file.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__27934){\nvar vec__27935 = p__27934;\nvar silently = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27935,(0),null);\nvar or__3949__auto__ = cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$1(f).delete();\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nvar or__3949__auto____$1 = silently;\nif(cljs.core.truth_(or__3949__auto____$1)){\nreturn or__3949__auto____$1;\n} else {\nthrow (new Error([\"Couldn't delete \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(f)].join('')));\n}\n}\n});\n\ncljs_node_io.core.delete_file.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ncljs_node_io.core.delete_file.cljs$lang$applyTo = (function (seq27932){\nvar G__27933 = cljs.core.first(seq27932);\nvar seq27932__$1 = cljs.core.next(seq27932);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__27933,seq27932__$1);\n});\n\n/**\n * For all streams it defers back to the stream. Note: stream objects are event driven.\n *   + buffers => BufferReadStream\n *   + files + strings => FileInputStream\n *   + goog.Uri's are treated as local files. No other protocols are supported at this time.\n * @return {!IInputStream}\n */\ncljs_node_io.core.reader = (function cljs_node_io$core$reader(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___28072 = arguments.length;\nvar i__4532__auto___28073 = (0);\nwhile(true){\nif((i__4532__auto___28073 < len__4531__auto___28072)){\nargs__4534__auto__.push((arguments[i__4532__auto___28073]));\n\nvar G__28075 = (i__4532__auto___28073 + (1));\ni__4532__auto___28073 = G__28075;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn cljs_node_io.core.reader.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.reader.cljs$core$IFn$_invoke$arity$variadic = (function (x,opts){\nreturn cljs_node_io.protocols.make_reader(x,(cljs.core.truth_(opts)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):null));\n});\n\ncljs_node_io.core.reader.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ncljs_node_io.core.reader.cljs$lang$applyTo = (function (seq27950){\nvar G__27951 = cljs.core.first(seq27950);\nvar seq27950__$1 = cljs.core.next(seq27950);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__27951,seq27950__$1);\n});\n\n/**\n * For all streams it defers back to the stream. Note: stream objects are event driven.\n *  + Files & Strings become FileOutputStreams.\n *  + goog.Uri's are treated as local files. No other protocols are supported at this time.\n * @return {!IOutputStream}\n */\ncljs_node_io.core.writer = (function cljs_node_io$core$writer(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___28080 = arguments.length;\nvar i__4532__auto___28081 = (0);\nwhile(true){\nif((i__4532__auto___28081 < len__4531__auto___28080)){\nargs__4534__auto__.push((arguments[i__4532__auto___28081]));\n\nvar G__28082 = (i__4532__auto___28081 + (1));\ni__4532__auto___28081 = G__28082;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn cljs_node_io.core.writer.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.writer.cljs$core$IFn$_invoke$arity$variadic = (function (x,opts){\nreturn cljs_node_io.protocols.make_writer(x,(cljs.core.truth_(opts)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):null));\n});\n\ncljs_node_io.core.writer.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ncljs_node_io.core.writer.cljs$lang$applyTo = (function (seq27952){\nvar G__27953 = cljs.core.first(seq27952);\nvar seq27952__$1 = cljs.core.next(seq27952);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__27953,seq27952__$1);\n});\n\n/**\n * For all streams it defers back to the stream. Note: stream objects are event driven.\n *  + buffers => BufferReadStream\n *  + files + strings => FileInputStream\n *  + goog.Uri's are treated as local files. No other protocols are supported at this time.\n * @return {!IInputStream}\n */\ncljs_node_io.core.input_stream = (function cljs_node_io$core$input_stream(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___28086 = arguments.length;\nvar i__4532__auto___28087 = (0);\nwhile(true){\nif((i__4532__auto___28087 < len__4531__auto___28086)){\nargs__4534__auto__.push((arguments[i__4532__auto___28087]));\n\nvar G__28088 = (i__4532__auto___28087 + (1));\ni__4532__auto___28087 = G__28088;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn cljs_node_io.core.input_stream.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.input_stream.cljs$core$IFn$_invoke$arity$variadic = (function (x,opts){\nreturn cljs_node_io.protocols.make_input_stream(x,(cljs.core.truth_(opts)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):null));\n});\n\ncljs_node_io.core.input_stream.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ncljs_node_io.core.input_stream.cljs$lang$applyTo = (function (seq27954){\nvar G__27955 = cljs.core.first(seq27954);\nvar seq27954__$1 = cljs.core.next(seq27954);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__27955,seq27954__$1);\n});\n\n/**\n * For all streams it defers back to the stream. Note: stream objects are event driven.\n * + Files & Strings become FileOutputStreams.\n * + goog.Uri's are treated as local files. No other protocols are supported at\n * this time.\n * @return {!IOutputStream}\n */\ncljs_node_io.core.output_stream = (function cljs_node_io$core$output_stream(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___28092 = arguments.length;\nvar i__4532__auto___28093 = (0);\nwhile(true){\nif((i__4532__auto___28093 < len__4531__auto___28092)){\nargs__4534__auto__.push((arguments[i__4532__auto___28093]));\n\nvar G__28094 = (i__4532__auto___28093 + (1));\ni__4532__auto___28093 = G__28094;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn cljs_node_io.core.output_stream.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.output_stream.cljs$core$IFn$_invoke$arity$variadic = (function (x,opts){\nreturn cljs_node_io.protocols.make_output_stream(x,(cljs.core.truth_(opts)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):null));\n});\n\ncljs_node_io.core.output_stream.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ncljs_node_io.core.output_stream.cljs$lang$applyTo = (function (seq27956){\nvar G__27957 = cljs.core.first(seq27956);\nvar seq27956__$1 = cljs.core.next(seq27956);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__27957,seq27956__$1);\n});\n\n/**\n * sugar over Buffer.isBuffer\n * @param {*} b\n * @return {!boolean}\n */\ncljs_node_io.core.Buffer_QMARK_ = (function cljs_node_io$core$Buffer_QMARK_(b){\nreturn Buffer.isBuffer(b);\n});\n/**\n * @param {*} e\n * @return {!boolean}\n */\ncljs_node_io.core.Error_QMARK_ = (function cljs_node_io$core$Error_QMARK_(e){\nreturn (e instanceof Error);\n});\n/**\n * Returns a string synchronously. Unlike JVM, does not use FileInputStream.\n * Only option at this time is :encoding\n * If :encoding \"\" (an explicit empty string), returns raw buffer instead of string.\n * @return {(string|buffer.Buffer)}\n */\ncljs_node_io.core.slurp = (function cljs_node_io$core$slurp(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___28102 = arguments.length;\nvar i__4532__auto___28104 = (0);\nwhile(true){\nif((i__4532__auto___28104 < len__4531__auto___28102)){\nargs__4534__auto__.push((arguments[i__4532__auto___28104]));\n\nvar G__28105 = (i__4532__auto___28104 + (1));\ni__4532__auto___28104 = G__28105;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn cljs_node_io.core.slurp.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.slurp.cljs$core$IFn$_invoke$arity$variadic = (function (p,opts){\nvar opts__$1 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts);\nvar f = cljs_node_io.protocols.as_file(p);\nreturn f.read((function (){var or__3949__auto__ = new cljs.core.Keyword(null,\"encoding\",\"encoding\",1728578272).cljs$core$IFn$_invoke$arity$1(opts__$1);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn \"utf8\";\n}\n})());\n});\n\ncljs_node_io.core.slurp.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ncljs_node_io.core.slurp.cljs$lang$applyTo = (function (seq27960){\nvar G__27961 = cljs.core.first(seq27960);\nvar seq27960__$1 = cljs.core.next(seq27960);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__27961,seq27960__$1);\n});\n\n/**\n * @return {!Channel} a which will receive [?err ?data]\n */\ncljs_node_io.core.aslurp = (function cljs_node_io$core$aslurp(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___28118 = arguments.length;\nvar i__4532__auto___28119 = (0);\nwhile(true){\nif((i__4532__auto___28119 < len__4531__auto___28118)){\nargs__4534__auto__.push((arguments[i__4532__auto___28119]));\n\nvar G__28120 = (i__4532__auto___28119 + (1));\ni__4532__auto___28119 = G__28120;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn cljs_node_io.core.aslurp.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.aslurp.cljs$core$IFn$_invoke$arity$variadic = (function (p,opts){\nvar opts__$1 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts);\nvar f = cljs_node_io.protocols.as_file(p);\nreturn f.aread((function (){var or__3949__auto__ = new cljs.core.Keyword(null,\"encoding\",\"encoding\",1728578272).cljs$core$IFn$_invoke$arity$1(opts__$1);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn \"utf8\";\n}\n})());\n});\n\ncljs_node_io.core.aslurp.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ncljs_node_io.core.aslurp.cljs$lang$applyTo = (function (seq27962){\nvar G__27963 = cljs.core.first(seq27962);\nvar seq27962__$1 = cljs.core.next(seq27962);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__27963,seq27962__$1);\n});\n\n/**\n * Writes content synchronously to file f.\n * :encoding {string} encoding to write the string. Ignored when content is a buffer\n * :append - {boolean} - if true add content to end of file\n * @return {nil} or throws\n */\ncljs_node_io.core.spit = (function cljs_node_io$core$spit(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___28126 = arguments.length;\nvar i__4532__auto___28127 = (0);\nwhile(true){\nif((i__4532__auto___28127 < len__4531__auto___28126)){\nargs__4534__auto__.push((arguments[i__4532__auto___28127]));\n\nvar G__28128 = (i__4532__auto___28127 + (1));\ni__4532__auto___28127 = G__28128;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((2) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((2)),(0),null)):null);\nreturn cljs_node_io.core.spit.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.spit.cljs$core$IFn$_invoke$arity$variadic = (function (p,content,options){\nvar opts = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,options);\nvar f = cljs_node_io.protocols.as_file(p);\nreturn f.write([cljs.core.str.cljs$core$IFn$_invoke$arity$1(content)].join(''),opts);\n});\n\ncljs_node_io.core.spit.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ncljs_node_io.core.spit.cljs$lang$applyTo = (function (seq27969){\nvar G__27970 = cljs.core.first(seq27969);\nvar seq27969__$1 = cljs.core.next(seq27969);\nvar G__27971 = cljs.core.first(seq27969__$1);\nvar seq27969__$2 = cljs.core.next(seq27969__$1);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__27970,G__27971,seq27969__$2);\n});\n\n/**\n * Async spit. Wait for result before writing again!\n * @return {!Channel} recieves [?err]\n */\ncljs_node_io.core.aspit = (function cljs_node_io$core$aspit(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___28142 = arguments.length;\nvar i__4532__auto___28143 = (0);\nwhile(true){\nif((i__4532__auto___28143 < len__4531__auto___28142)){\nargs__4534__auto__.push((arguments[i__4532__auto___28143]));\n\nvar G__28144 = (i__4532__auto___28143 + (1));\ni__4532__auto___28143 = G__28144;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((2) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((2)),(0),null)):null);\nreturn cljs_node_io.core.aspit.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.aspit.cljs$core$IFn$_invoke$arity$variadic = (function (p,content,options){\nvar opts = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,options);\nvar f = cljs_node_io.protocols.as_file(p);\nreturn f.awrite([cljs.core.str.cljs$core$IFn$_invoke$arity$1(content)].join(''),opts);\n});\n\ncljs_node_io.core.aspit.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ncljs_node_io.core.aspit.cljs$lang$applyTo = (function (seq27973){\nvar G__27974 = cljs.core.first(seq27973);\nvar seq27973__$1 = cljs.core.next(seq27973);\nvar G__27975 = cljs.core.first(seq27973__$1);\nvar seq27973__$2 = cljs.core.next(seq27973__$1);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__27974,G__27975,seq27973__$2);\n});\n\n/**\n * taken from clojurescript/examples/nodels.cljs\n */\ncljs_node_io.core.file_seq = (function cljs_node_io$core$file_seq(dir){\nreturn cljs.core.tree_seq((function (f){\nreturn cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$1(f).isDirectory();\n}),(function (d){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__27977_SHARP_){\nreturn cljs_node_io.core.path.join(d,p1__27977_SHARP_);\n}),cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$1(d).list());\n}),dir);\n});\n/**\n * Given the same arg(s) as for file, creates all parent directories of\n * the file they represent.\n * @return {!boolean}\n */\ncljs_node_io.core.make_parents = (function cljs_node_io$core$make_parents(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___28157 = arguments.length;\nvar i__4532__auto___28158 = (0);\nwhile(true){\nif((i__4532__auto___28158 < len__4531__auto___28157)){\nargs__4534__auto__.push((arguments[i__4532__auto___28158]));\n\nvar G__28160 = (i__4532__auto___28158 + (1));\ni__4532__auto___28158 = G__28160;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn cljs_node_io.core.make_parents.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.make_parents.cljs$core$IFn$_invoke$arity$variadic = (function (f,more){\nvar temp__5457__auto__ = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs_node_io.core.file,f,more).getParentFile();\nif(cljs.core.truth_(temp__5457__auto__)){\nvar parent = temp__5457__auto__;\nreturn parent.mkdirs();\n} else {\nreturn null;\n}\n});\n\ncljs_node_io.core.make_parents.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ncljs_node_io.core.make_parents.cljs$lang$applyTo = (function (seq27983){\nvar G__27984 = cljs.core.first(seq27983);\nvar seq27983__$1 = cljs.core.next(seq27983);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__27984,seq27983__$1);\n});\n\n/**\n * @param {*} obj object to test\n * @return {!boolean} is object an input-stream?\n */\ncljs_node_io.core.input_stream_QMARK_ = (function cljs_node_io$core$input_stream_QMARK_(obj){\nif(!((obj == null))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.cljs_node_io$protocols$IInputStream$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\n/**\n * @param {*} obj object to test\n * @return {!boolean} is object an input-stream?\n */\ncljs_node_io.core.output_stream_QMARK_ = (function cljs_node_io$core$output_stream_QMARK_(obj){\nif(!((obj == null))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.cljs_node_io$protocols$IOutputStream$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\n/**\n * @param {*} obj The object to test\n */\ncljs_node_io.core.stream_type = (function cljs_node_io$core$stream_type(obj){\nif(cljs_node_io.core.input_stream_QMARK_(obj)){\nreturn new cljs.core.Keyword(null,\"InputStream\",\"InputStream\",1853664890);\n} else {\nif(cljs_node_io.core.output_stream_QMARK_(obj)){\nreturn new cljs.core.Keyword(null,\"OutputStream\",\"OutputStream\",-1389658127);\n} else {\nreturn null;\n}\n}\n});\n/**\n * @param {*} o\n * @return {!boolean}\n */\ncljs_node_io.core.rFile_QMARK_ = (function cljs_node_io$core$rFile_QMARK_(o){\nif(!((o == null))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === o.cljs_node_io$protocols$IFile$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\nif((typeof cljs_node_io !== 'undefined') && (typeof cljs_node_io.core !== 'undefined') && (typeof cljs_node_io.core.do_copy !== 'undefined')){\n} else {\n/**\n * Internal helper for copy\n */\ncljs_node_io.core.do_copy = (function (){var method_table__4414__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4415__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4416__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4417__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4418__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),cljs.core.get_global_hierarchy());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs-node-io.core\",\"do-copy\"),((function (method_table__4414__auto__,prefer_table__4415__auto__,method_cache__4416__auto__,cached_hierarchy__4417__auto__,hierarchy__4418__auto__){\nreturn (function (input,output,opts){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__3949__auto__ = cljs_node_io.core.stream_type(input);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nvar or__3949__auto____$1 = (cljs.core.truth_(cljs_node_io.core.rFile_QMARK_(input))?new cljs.core.Keyword(null,\"File\",\"File\",-1707525042):null);\nif(cljs.core.truth_(or__3949__auto____$1)){\nreturn or__3949__auto____$1;\n} else {\nreturn cljs.core.type(input);\n}\n}\n})(),(function (){var or__3949__auto__ = cljs_node_io.core.stream_type(output);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nvar or__3949__auto____$1 = (cljs.core.truth_(cljs_node_io.core.rFile_QMARK_(output))?new cljs.core.Keyword(null,\"File\",\"File\",-1707525042):null);\nif(cljs.core.truth_(or__3949__auto____$1)){\nreturn or__3949__auto____$1;\n} else {\nreturn cljs.core.type(output);\n}\n}\n})()], null);\n});})(method_table__4414__auto__,prefer_table__4415__auto__,method_cache__4416__auto__,cached_hierarchy__4417__auto__,hierarchy__4418__auto__))\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4418__auto__,method_table__4414__auto__,prefer_table__4415__auto__,method_cache__4416__auto__,cached_hierarchy__4417__auto__));\n})();\n}\ncljs_node_io.core.do_copy.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"InputStream\",\"InputStream\",1853664890),new cljs.core.Keyword(null,\"OutputStream\",\"OutputStream\",-1389658127)], null),(function (input,output,_){\nvar c = cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0();\noutput.on(\"finish\",((function (c){\nreturn (function (){\nreturn cljs.core.async.close_BANG_(c);\n});})(c))\n);\n\ninput.pipe(output);\n\nreturn c;\n}));\ncljs_node_io.core.do_copy.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"File\",\"File\",-1707525042),new cljs.core.Keyword(null,\"File\",\"File\",-1707525042)], null),(function (input,output,opts){\nvar in$ = cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2(input,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"encoding\",\"encoding\",1728578272),\"\"], null));\nvar out = cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$2(output,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"encoding\",\"encoding\",1728578272),\"\"], null),opts], 0)));\nreturn (cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3 ? cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3(in$,out,opts) : cljs_node_io.core.do_copy.call(null,in$,out,opts));\n}));\ncljs_node_io.core.do_copy.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"File\",\"File\",-1707525042),new cljs.core.Keyword(null,\"OutputStream\",\"OutputStream\",-1389658127)], null),(function (input,output,opts){\nvar in$ = cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2(input,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"encoding\",\"encoding\",1728578272),\"\"], null));\nreturn (cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3 ? cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3(in$,output,opts) : cljs_node_io.core.do_copy.call(null,in$,output,opts));\n}));\ncljs_node_io.core.do_copy.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"InputStream\",\"InputStream\",1853664890),new cljs.core.Keyword(null,\"File\",\"File\",-1707525042)], null),(function (input,output,opts){\nvar out = cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$2(output,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"encoding\",\"encoding\",1728578272),\"\"], null),opts], 0)));\nreturn (cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3 ? cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3(input,out,opts) : cljs_node_io.core.do_copy.call(null,input,out,opts));\n}));\ncljs_node_io.core.do_copy.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [Buffer,new cljs.core.Keyword(null,\"OutputStream\",\"OutputStream\",-1389658127)], null),(function (input,output,opts){\nvar G__28004 = cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$2(input,opts);\nvar G__28005 = output;\nvar G__28006 = null;\nreturn (cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3 ? cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3(G__28004,G__28005,G__28006) : cljs_node_io.core.do_copy.call(null,G__28004,G__28005,G__28006));\n}));\ncljs_node_io.core.do_copy.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [Buffer,new cljs.core.Keyword(null,\"File\",\"File\",-1707525042)], null),(function (input,output,opts){\nvar G__28007 = cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$2(input,opts);\nvar G__28008 = output;\nvar G__28009 = opts;\nreturn (cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3 ? cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3(G__28007,G__28008,G__28009) : cljs_node_io.core.do_copy.call(null,G__28007,G__28008,G__28009));\n}));\n/**\n * A repl/script convenience. Copies input to output.\n * Input may be an InputStream, cljs-node-io.File, Buffer, or string(file path).\n * Output may be an String(file), OutputStream or cljs-node-io.File.\n *  + Unlike JVM, strings are coerced to files.\n *    - If you have a big string, use a buffer.\n *    - By default no encoding ops occur\n *  + Options are passed to the output stream.\n *    - :encoding = destination encoding to use\n *      ex: (copy 'foo.txt' 'bar.txt' :encoding 'utf8')\n *  + Returns a chan thats closes when output finishes writing\n *    - use to asynchronously chain a series of calls.\n *    - Will still throw! For more sophisticated error handling,\n *      use the underlying streams manually\n * @return {!Channel}\n */\ncljs_node_io.core.copy = (function cljs_node_io$core$copy(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___28234 = arguments.length;\nvar i__4532__auto___28238 = (0);\nwhile(true){\nif((i__4532__auto___28238 < len__4531__auto___28234)){\nargs__4534__auto__.push((arguments[i__4532__auto___28238]));\n\nvar G__28245 = (i__4532__auto___28238 + (1));\ni__4532__auto___28238 = G__28245;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((2) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((2)),(0),null)):null);\nreturn cljs_node_io.core.copy.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.copy.cljs$core$IFn$_invoke$arity$variadic = (function (input,output,opts){\nvar input__$1 = ((typeof input === 'string')?cljs_node_io.protocols.as_file(input):input);\nvar output__$1 = ((typeof output === 'string')?cljs_node_io.protocols.as_file(output):output);\nvar G__28019 = input__$1;\nvar G__28020 = output__$1;\nvar G__28021 = (cljs.core.truth_(opts)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):null);\nreturn (cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3 ? cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3(G__28019,G__28020,G__28021) : cljs_node_io.core.do_copy.call(null,G__28019,G__28020,G__28021));\n});\n\ncljs_node_io.core.copy.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ncljs_node_io.core.copy.cljs$lang$applyTo = (function (seq28015){\nvar G__28016 = cljs.core.first(seq28015);\nvar seq28015__$1 = cljs.core.next(seq28015);\nvar G__28017 = cljs.core.first(seq28015__$1);\nvar seq28015__$2 = cljs.core.next(seq28015__$1);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__28016,G__28017,seq28015__$2);\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs_node_io/core.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",22],"~:ns-aliases",["^ ","~$clojure.core.async","~$cljs.core.async","~$raspicam","~$shadow.js.shim.module$raspicam"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$cljs-node-io.core","~:op","~:ns","~:imports",["^ ","~$Uri","~$goog.Uri"],"~:requires",["^ ","^=","^=","~$async","^=","~$cljs.core.async.impl.protocols","^L","~$cljs-node-io.file","^M","~$cljs-node-io.streams","^N","~$cljs-node-io.protocols","^O","^H","^I","~$cljs.core","^P","~$goog","^Q"],"~:seen",["^B",["~:require"]],"~:uses",["^ ","~$make-output-stream","^O","~$<!","^=","~$make-writer","^O","~$chan","^=","~$as-file","^O","~$BufferReadStream","^N","~$make-reader","^O","~$Coercions","^O","~$pipe","^=","~$Channel","^L","~$IInputStream","^O","~$File","^M","~$make-input-stream","^O","~$FileOutputStream","^N","~$FileInputStream","^N","~$alts!","^=","~$IOFactory","^O","~$IFile","^O","~$as-url","^O","~$IOutputStream","^O","~$put!","^=","~$take!","^="],"~:require-macros",["^ ","^P","^P","^=","^=","^K","^="],"~:form",["~#list",["~$ns","^D",["^1A",["^S",["^=","~:as","^K","~:refer",["^1=","^1>","^X","^V","^11","^18"]],["^L","^1D",["^12"]],["^M","^1D",["^14"]],["^N","^1D",["^17","^16","^Z"]],["^O","^1D",["^10","^1;","^Y","^13","^1<","^1:","^19","^[","^W","^15","^U"]]]],["^1A",["~:import","^I"]]]],"~:flags",["^ ","^S",["^B",[]]],"~:js-deps",["^ "],"~:deps",["^Q","^P","^=","^L","^M","^N","^O","^I"]],"^F","^D","~:resource-id",["~:shadow.build.classpath/resource","cljs_node_io/core.cljs"],"~:compiled-at",1540144999935,"~:resource-name","cljs_node_io/core.cljs","~:warnings",[],"~:source","(ns cljs-node-io.core\n  (:require [cljs.core.async :as async :refer [put! take! chan <! pipe alts!]]\n            [cljs.core.async.impl.protocols :refer [Channel]]\n            [cljs-node-io.file :refer [File]]\n            [cljs-node-io.streams :refer [FileInputStream FileOutputStream BufferReadStream]]\n            [cljs-node-io.protocols\n              :refer [Coercions as-url as-file IInputStream IOutputStream IFile\n                      IOFactory make-reader make-writer make-input-stream make-output-stream]])\n  (:import goog.Uri))\n\n(def path (js/require \"path\"))\n\n(extend-protocol IEquiv\n  js/Buffer\n  (-equiv [this that] (try (.equals this that) (catch js/Error e false))))\n\n(defn- filepath\n  \"This is needed to mock the java.io.File constructor.\n   The java File constructor is polymorphic and accepts one or two args:\n   (Uri), (pathstring), (parentstring, childstring), (File, childstring)\n   @return {!string}\"\n  ([a] (filepath a nil))\n  ([a b]\n   (condp = [(type a) (type b)]\n     [Uri nil] (.getPath a)\n     [js/String nil] a\n     [js/String js/String] (path.join a b)\n     [File js/String] (path.join (.getPath a) b)\n     :else\n     (throw\n       (js/TypeError.\n         (str \"Unrecognized path configuration passed to File constructor.\"\n              \"\\nYou passed \" (pr-str a) \" and \" (pr-str b)\n              \"\\nYou must pass a [string], [uri], [string string], or [file string].\"))))))\n\n(extend-protocol Coercions\n  nil\n  (as-file [_] nil)\n  (as-url [_] nil)\n  string\n  (as-file [s] (File. (filepath s)))\n  (as-url [s] (.getPath (Uri. s)))\n  Uri\n  (as-url [u] (.getPath u))\n  (as-file [u]\n    (if (= \"file\" (.getScheme u)) ;\"file://home/.../cljs-node-io/foo.edn\"\n      (as-file (.getPath u))\n      (throw (js/Error. (str \"IllegalArgumentException : Uri's must have file protocol: \" u))))))\n\n(extend-protocol IOFactory\n  Uri\n  (make-reader [x opts] (make-reader (make-input-stream x opts) opts))\n  (make-writer [x opts] (make-writer (make-output-stream x opts) opts))\n  (make-input-stream [x opts]\n   (if (= \"file\" (.getScheme x)) ;<---not implemented for other protocols ie HTTP, should be separate lib\n     (FileInputStream (as-file x) opts)\n     (throw (js/Error. (str \"IllegalArgumentException: Can not read from non-file URL <\" x \">\")))))\n  (make-output-stream [x opts]\n    (if (= \"file\" (.getScheme x))\n      (make-output-stream (as-file x) opts)\n      (throw (js/Error. (str \"IllegalArgumentException: Can not write to non-file URL <\" x \">\")))))\n\n  string\n  (make-reader [x opts] (make-reader (as-file x) opts))\n  (make-writer [x opts] (make-writer (as-file x) opts))\n  (make-input-stream [^String x opts]\n    (try\n      (make-input-stream (Uri. x) opts)\n      (catch js/Error e (make-input-stream (File. x) opts))))\n  (make-output-stream [^String x opts]\n    (try\n      (make-output-stream (Uri. x) opts)\n      (catch js/Error err (make-output-stream (File. x) opts))))\n  js/Buffer\n  (make-reader [b opts] (make-reader (make-input-stream b opts) opts))\n  (make-input-stream [b opts] (BufferReadStream b opts))\n  (make-writer [x opts] (make-writer (make-output-stream x opts) opts))\n  (make-output-stream [x opts]\n    (throw\n      (js/Error.  ;use Buffer.concat if you want to do this\n        (str \"IllegalArgumentException : Cannot open <\" (pr-str x) \"> as an OutputStream.\")))))\n\n(defn as-relative-path\n  \"a relative path, else IllegalArgumentException.\n   @param {(string|IFile|Uri)} x\n   @return {!string}\"\n  [x]\n  (let [f (as-file x)]\n    (if (.isAbsolute f)\n      (throw (js/Error. (str \"IllegalArgumentException: \" f \" is not a relative path\")))\n      (.getPath f))))\n\n(defn file\n  \"Returns a reified file, passing each arg to as-file.  Multiple-arg\n   versions treat the first argument as parent and subsequent args as\n   children relative to the parent. Use in place of File constructor\n   @return {!IFile}\"\n  ([arg]\n   (as-file arg))\n  ([parent child]\n   (File. (filepath (as-file parent) (as-relative-path child))))\n  ([parent child & more]\n   (reduce file (file parent child) more)))\n\n(defn delete-file\n  \"Delete file f. Raise an exception if it fails unless silently is true.\n   @return {!boolean}\"\n  [f & [silently]]\n  (or (.delete (file f))\n      silently\n      (throw (js/Error. (str \"Couldn't delete \" f)))))\n\n(defn reader\n  \"For all streams it defers back to the stream. Note: stream objects are event driven.\n     + buffers => BufferReadStream\n     + files + strings => FileInputStream\n     + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IInputStream}\"\n  [x & opts]\n  (make-reader x (when opts (apply hash-map opts))))\n\n(defn writer\n  \"For all streams it defers back to the stream. Note: stream objects are event driven.\n    + Files & Strings become FileOutputStreams.\n    + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IOutputStream}\"\n  [x & opts]\n  (make-writer x (when opts (apply hash-map opts))))\n\n(defn input-stream\n  \"For all streams it defers back to the stream. Note: stream objects are event driven.\n    + buffers => BufferReadStream\n    + files + strings => FileInputStream\n    + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IInputStream}\"\n  [x & opts]\n  (make-input-stream x (when opts (apply hash-map opts))))\n\n(defn output-stream\n  \"For all streams it defers back to the stream. Note: stream objects are event driven.\n   + Files & Strings become FileOutputStreams.\n   + goog.Uri's are treated as local files. No other protocols are supported at\n   this time.\n   @return {!IOutputStream}\"\n  [x & opts]\n  (make-output-stream x (when opts (apply hash-map opts))))\n\n(defn ^boolean Buffer?\n  \"sugar over Buffer.isBuffer\n   @param {*} b\n   @return {!boolean}\"\n  [b]\n  (js/Buffer.isBuffer b))\n\n(defn ^boolean Error?\n  \"@param {*} e\n   @return {!boolean}\"\n  [e]\n  (instance? js/Error e))\n\n(defn slurp\n  \"Returns a string synchronously. Unlike JVM, does not use FileInputStream.\n   Only option at this time is :encoding\n   If :encoding \\\"\\\" (an explicit empty string), returns raw buffer instead of string.\n   @return {(string|buffer.Buffer)}\"\n  [p & opts]\n  (let [opts (apply hash-map opts)\n        f    (as-file p)]\n    (.read f (or (:encoding opts) \"utf8\"))))\n\n(defn aslurp\n  \"@return {!Channel} a which will receive [?err ?data]\"\n  [p & opts]\n  (let [opts (apply hash-map opts)\n        f (as-file p)]\n    (.aread f (or (:encoding opts) \"utf8\"))))\n\n(defn spit\n  \"Writes content synchronously to file f.\n   :encoding {string} encoding to write the string. Ignored when content is a buffer\n   :append - {boolean} - if true add content to end of file\n   @return {nil} or throws\"\n  [p content & options]\n  (let [opts (apply hash-map options)\n        f    (as-file p)]\n    (.write f (str content) opts)))\n\n(defn aspit\n  \"Async spit. Wait for result before writing again!\n   @return {!Channel} recieves [?err]\"\n  [p content & options]\n  (let [opts (apply hash-map options)\n        f    (as-file p)]\n    (.awrite f (str content) opts)))\n\n(defn file-seq\n  \"taken from clojurescript/examples/nodels.cljs\"\n  [dir]\n  (tree-seq\n    (fn [f] (.isDirectory (file f) ))\n    (fn [d] (map #(.join path d %) (.list (file d))))\n    dir))\n\n(defn make-parents\n  \"Given the same arg(s) as for file, creates all parent directories of\n   the file they represent.\n   @return {!boolean}\"\n  [f & more]\n  (when-let [parent (.getParentFile (apply file f more))]\n    (.mkdirs parent)))\n\n(defn ^boolean input-stream?\n  \"@param {*} obj object to test\n   @return {!boolean} is object an input-stream?\"\n  [obj]\n  (implements? IInputStream obj))\n\n(defn ^boolean output-stream?\n  \"@param {*} obj object to test\n   @return {!boolean} is object an input-stream?\"\n  [obj]\n  (implements? IOutputStream obj))\n\n(defn stream-type\n  \"@param {*} obj The object to test\"\n  ; @return {?Keyword}\n  [obj]\n  (if ^boolean (input-stream? obj)\n    :InputStream\n    (if ^boolean (output-stream? obj)\n      :OutputStream)))\n\n(defn rFile?\n  \"@param {*} o\n   @return {!boolean}\"\n  [o]\n  (implements? IFile o))\n\n(defmulti\n  ^{:doc \"Internal helper for copy\"\n    :private true\n    :arglists '([input output opts])}\n  do-copy\n  (fn [input output opts]\n    [(or (stream-type input)  (if (rFile?  input) :File) (type input))\n     (or (stream-type output) (if (rFile? output) :File) (type output))]))\n\n(defmethod do-copy [:InputStream :OutputStream] [input output _]\n  (let [c (async/promise-chan)]\n    (.on output \"finish\" #(async/close! c))\n    (.pipe input output)\n    c))\n\n(defmethod do-copy [:File :File] [input output opts]\n  (let [in  (FileInputStream input {:encoding \"\"})\n        out (FileOutputStream output (merge {:encoding \"\"} opts))]\n    (do-copy in out opts)))\n\n(defmethod do-copy [:File :OutputStream] [input output opts]\n  (let [in (FileInputStream input {:encoding \"\"})] ;;bin by default\n    (do-copy in output opts)))\n\n(defmethod do-copy [:InputStream :File] [input output opts]\n  (let [out (FileOutputStream output (merge {:encoding \"\"} opts))]\n    (do-copy input out opts)))\n\n(defmethod do-copy [js/Buffer :OutputStream] [input output opts]\n  (do-copy (BufferReadStream input opts) output nil))\n\n(defmethod do-copy [js/Buffer :File] [input output opts]\n  (do-copy (BufferReadStream input opts) output opts))\n\n(defn copy\n  \"A repl/script convenience. Copies input to output.\n   Input may be an InputStream, cljs-node-io.File, Buffer, or string(file path).\n   Output may be an String(file), OutputStream or cljs-node-io.File.\n    + Unlike JVM, strings are coerced to files.\n      - If you have a big string, use a buffer.\n      - By default no encoding ops occur\n    + Options are passed to the output stream.\n      - :encoding = destination encoding to use\n        ex: (copy 'foo.txt' 'bar.txt' :encoding 'utf8')\n    + Returns a chan thats closes when output finishes writing\n      - use to asynchronously chain a series of calls.\n      - Will still throw! For more sophisticated error handling,\n        use the underlying streams manually\n   @return {!Channel}\"\n  [input output & opts]\n  (let [input  (if (string? input) (as-file input) input)\n        output (if (string? output) (as-file output) output)]\n    (do-copy input output (when opts (apply hash-map opts)))))\n","~:reader-features",["^B",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["cljs-node-io.core/path","js/require","cljs.core/PROTOCOL_SENTINEL","js/Buffer","this","that","e27823","js/Error","e","var_args","G__27827","cljs-node-io.core/filepath","a","cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$2","b","pred__27843","expr__27844","G__27850","G__27851","G__27857","G__27858","G__27859","G__27860","G__27867","G__27868","G__27872","G__27873","cljs.core/=","cljs.core/type","goog/Uri","js/String","cljs-node-io.core/path.join","cljs-node-io.file/File","G__27870","G__27871","js/TypeError","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","goog.object/set","cljs-node-io.protocols/Coercions","G__27874","cljs-node-io.protocols/as-file","G__27875","G__27876","G__27878","cljs-node-io.protocols/as-url","G__27879","G__27880","G__27881","G__27882","G__27883","G__27884","G__27885","G__27886","_","s","cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$1","u","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs-node-io.protocols/IOFactory","G__27892","cljs-node-io.protocols/make-reader","G__27893","G__27894","G__27895","cljs-node-io.protocols/make-writer","G__27896","G__27897","G__27901","cljs-node-io.protocols/make-input-stream","G__27902","G__27903","G__27905","cljs-node-io.protocols/make-output-stream","G__27906","G__27907","x","opts","cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2","e27904","e27908","err","cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$2","cljs-node-io.core/as-relative-path","f","G__27919","cljs-node-io.core/file","args-arr__4546__auto__","len__4531__auto__","i__4532__auto__","argseq__4547__auto__","cljs.core/IndexedSeq","seq27914","G__27915","cljs.core/first","cljs.core/next","G__27916","self__4518__auto__","arg","parent","child","more","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$2","args__4534__auto__","argseq__4535__auto__","cljs-node-io.core/delete-file","p__27934","vec__27935","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","seq27932","G__27933","silently","or__3949__auto__","cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$1","cljs-node-io.core/reader","seq27950","G__27951","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs-node-io.core/writer","seq27952","G__27953","cljs-node-io.core/input-stream","seq27954","G__27955","cljs-node-io.core/output-stream","seq27956","G__27957","cljs-node-io.core/Buffer?","js/Buffer.isBuffer","cljs-node-io.core/Error?","cljs-node-io.core/slurp","seq27960","G__27961","p","cljs-node-io.core/aslurp","seq27962","G__27963","cljs-node-io.core/spit","seq27969","G__27970","G__27971","content","options","cljs-node-io.core/aspit","seq27973","G__27974","G__27975","cljs-node-io.core/file-seq","dir","cljs.core/tree-seq","d","p1__27977#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs-node-io.core/make-parents","seq27983","G__27984","temp__5457__auto__","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","cljs-node-io.core/input-stream?","obj","cljs-node-io.core/output-stream?","cljs-node-io.core/stream-type","cljs-node-io.core/rFile?","o","js/cljs-node-io","js/cljs-node-io.core","js/cljs-node-io.core.do-copy","method-table__4414__auto__","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","prefer-table__4415__auto__","method-cache__4416__auto__","cached-hierarchy__4417__auto__","hierarchy__4418__auto__","cljs.core.get.cljs$core$IFn$_invoke$arity$3","cljs.core/get-global-hierarchy","cljs.core/MultiFn","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","cljs-node-io.core/do-copy","input","output","c","cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0","cljs.core.async/close!","in","out","cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$2","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","G__28004","G__28005","G__28006","G__28007","G__28008","G__28009","cljs-node-io.core/copy","seq28015","G__28016","G__28017","G__28019","G__28020","G__28021"]]],"~:cache-keys",["~#cmap",[["^1J","cljs_node_io/file.cljs"],[1537666007418,"^Q","^P","^I","^N","~$cljs-node-io.fs","^O"],["^1J","goog/dom/tagname.js"],[1530991559994,"^Q","~$goog.dom.HtmlElement"],["^1J","cljs/core/async/impl/ioc_helpers.cljs"],[1534380136417,"^Q","^P","^L"],["~:macro","^P"],[1534380137000],["^1J","cljs/core/async.cljs"],[1534380136417,"^Q","^P","^L","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers"],["^1J","cljs_node_io/fs.cljs"],[1537666007418,"^Q","^P","^=","^L"],["^1J","cljs_node_io/core.cljs"],[1537666007418,"^Q","^P","^=","^L","^M","^N","^O","^I"],["^1J","goog/math/math.js"],[1530991559994,"^Q","~$goog.array","~$goog.asserts"],["^1J","goog/labs/useragent/browser.js"],[1530991559994,"^Q","^23","~$goog.labs.userAgent.util","~$goog.object","~$goog.string"],["^1J","goog/array/array.js"],[1530991559994,"^Q","^24"],["^1J","cljs_node_io/protocols.cljs"],[1537666007418,"^Q","^P"],["^1Y","~$cljs.core.async.macros"],[1534380136000],["^1J","cljs_node_io/streams.cljs"],[1537666007418,"^Q","^P","^I","^=","^O"],["^1J","goog/debug/error.js"],[1530991559994,"^Q"],["^1J","goog/dom/nodetype.js"],[1530991559994,"^Q"],["^1J","goog/object/object.js"],[1530991559994,"^Q"],"~:SHADOW-TIMESTAMP",[1540077702000,1534380137000],["^1J","goog/math/long.js"],[1530991559994,"^Q","^24","~$goog.reflect"],["^1J","cljs/core/async/impl/channels.cljs"],[1534380136417,"^Q","^P","^L","^21","^1["],["^1J","goog/functions/functions.js"],[1530991559994,"^Q"],["^1J","cljs/core/async/impl/dispatch.cljs"],[1534380136417,"^Q","^P","^1[","~$goog.async.nextTick"],["^1J","cljs/core/async/impl/protocols.cljs"],[1534380136417,"^Q","^P"],["^1J","goog/structs/map.js"],[1530991559994,"^Q","~$goog.iter.Iterator","~$goog.iter.StopIteration","^26"],["^1J","goog/labs/useragent/engine.js"],[1530991559994,"^Q","^23","^25","^27"],["^1Y","~$cljs-node-io.macros"],[1537666007000],["^1J","goog/asserts/asserts.js"],[1530991559994,"^Q","~$goog.debug.Error","~$goog.dom.NodeType","^27"],["^1J","cljs/core/async/impl/buffers.cljs"],[1534380136417,"^Q","^P","^L"],["^1J","goog/uri/uri.js"],[1530991559994,"^Q","^23","^24","^27","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1Y","^="],[1534380136000],["^1J","cljs/core/async/impl/timers.cljs"],[1534380136417,"^Q","^P","^L","^1Z","^21"],["^1J","goog/base.js"],[1530991559994],["^1J","goog/structs/structs.js"],[1530991559994,"^Q","^23","^26"],["^1J","goog/debug/entrypointregistry.js"],[1530991559994,"^Q","^24"],["^1J","goog/string/string.js"],[1530991559994,"^Q"],["^1J","goog/reflect/reflect.js"],[1530991559994,"^Q"],["^1J","goog/labs/useragent/util.js"],[1530991559994,"^Q","^27"],["^1Y","~$cljs.core.async.impl.ioc-macros"],[1534380136000],["^1J","goog/string/stringbuffer.js"],[1530991559994,"^Q"],["^1J","goog/iter/iter.js"],[1530991559994,"^Q","^23","^24","~$goog.functions","~$goog.math"],["^1J","goog/async/nexttick.js"],[1530991559994,"^Q","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^2G","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"],["^1J","goog/dom/htmlelement.js"],[1530991559994,"^Q"],["^1J","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^27","^26","^23","^I","~$goog.string.StringBuffer"],["^1J","goog/math/integer.js"],[1530991559994,"^Q"],["^1J","goog/uri/utils.js"],[1530991559994,"^Q","^23","^24","^27"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","cljs_node_io/core.cljs","^7",1,"^8",5,"^9",1,"^:",22],"^;",["^ ","^<","^=","^>","^?"],"^@",null,"^A",["^B",[]],"~:shadow/js-access-properties",["^B",["isBuffer","equals"]],"^C","^D","^G",["^ ","^H","^I"],"^J",["^ ","^=","^=","^K","^=","^L","^L","^M","^M","^N","^N","^O","^O","^H","^I","^P","^P","^Q","^Q"],"^R",["^B",["^S"]],"~:shadow/js-access-global",["^B",["TypeError","require","Buffer","String","Error"]],"^T",["^ ","^U","^O","^V","^=","^W","^O","^X","^=","^Y","^O","^Z","^N","^[","^O","^10","^O","^11","^=","^12","^L","^13","^O","^14","^M","^15","^O","^16","^N","^17","^N","^18","^=","^19","^O","^1:","^O","^1;","^O","^1<","^O","^1=","^=","^1>","^="],"~:defs",["^ ","~$aslurp",["^ ","~:protocol-inline",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",171,"^8",7,"^9",171,"^:",13,"~:arglists",["^1A",["~$quote",["^1A",[["~$p","~$&","~$opts"]]]]],"~:doc","@return {!Channel} a which will receive [?err ?data]","~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",1,"~:method-params",[["^1A",["~$p","^2X"]]],"^2V",["^1A",[["~$p","~$&","^2X"]]],"~:arglists-meta",["^1A",[null]]]],"^C","~$cljs-node-io.core/aslurp","^2[",true,"^6","cljs_node_io/core.cljs","^:",13,"^2Z",["^ ","^2[",true,"^30",1,"^31",[["^1A",["~$p","^2X"]]],"^2V",["^1A",[["~$p","~$&","^2X"]]],"^32",["^1A",[null]]],"^31",[["^1A",["~$p","^2X"]]],"~:protocol-impl",null,"^32",["^1A",[null]],"^8",1,"^7",171,"^9",171,"^30",1,"~:fn-var",true,"^2V",["^1A",[["~$p","~$&","^2X"]]],"^2Y","@return {!Channel} a which will receive [?err ?data]"],"~$rFile?",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",233,"^8",7,"^9",233,"^:",13,"^2V",["^1A",["^2W",["^1A",[["~$o"]]]]],"^2Y","@param {*} o\n   @return {!boolean}"],"^C","~$cljs-node-io.core/rFile?","^2[",false,"^6","cljs_node_io/core.cljs","^:",13,"^31",["^1A",[["~$o"]]],"^34",null,"^32",["^1A",[null,null]],"^8",1,"^7",233,"^9",233,"^30",1,"^35",true,"^2V",["^1A",["^2W",["^1A",[["~$o"]]]]],"^2Y","@param {*} o\n   @return {!boolean}"],"~$slurp",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",161,"^8",7,"^9",161,"^:",12,"^2V",["^1A",["^2W",["^1A",[["~$p","~$&","^2X"]]]]],"^2Y","Returns a string synchronously. Unlike JVM, does not use FileInputStream.\n   Only option at this time is :encoding\n   If :encoding \"\" (an explicit empty string), returns raw buffer instead of string.\n   @return {(string|buffer.Buffer)}","^2Z",["^ ","^2[",true,"^30",1,"^31",[["^1A",["~$p","^2X"]]],"^2V",["^1A",[["~$p","~$&","^2X"]]],"^32",["^1A",[null]]]],"^C","~$cljs-node-io.core/slurp","^2[",true,"^6","cljs_node_io/core.cljs","^:",12,"^2Z",["^ ","^2[",true,"^30",1,"^31",[["^1A",["~$p","^2X"]]],"^2V",["^1A",[["~$p","~$&","^2X"]]],"^32",["^1A",[null]]],"^31",[["^1A",["~$p","^2X"]]],"^34",null,"^32",["^1A",[null]],"^8",1,"^7",161,"^9",161,"^30",1,"^35",true,"^2V",["^1A",[["~$p","~$&","^2X"]]],"^2Y","Returns a string synchronously. Unlike JVM, does not use FileInputStream.\n   Only option at this time is :encoding\n   If :encoding \"\" (an explicit empty string), returns raw buffer instead of string.\n   @return {(string|buffer.Buffer)}"],"~$make-parents",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",204,"^8",7,"^9",204,"^:",19,"^2V",["^1A",["^2W",["^1A",[["~$f","~$&","~$more"]]]]],"^2Y","Given the same arg(s) as for file, creates all parent directories of\n   the file they represent.\n   @return {!boolean}","^2Z",["^ ","^2[",true,"^30",1,"^31",[["^1A",["~$f","^3;"]]],"^2V",["^1A",[["~$f","~$&","^3;"]]],"^32",["^1A",[null]]]],"^C","~$cljs-node-io.core/make-parents","^2[",true,"^6","cljs_node_io/core.cljs","^:",19,"^2Z",["^ ","^2[",true,"^30",1,"^31",[["^1A",["~$f","^3;"]]],"^2V",["^1A",[["~$f","~$&","^3;"]]],"^32",["^1A",[null]]],"^31",[["^1A",["~$f","^3;"]]],"^34",null,"^32",["^1A",[null]],"^8",1,"^7",204,"^9",204,"^30",1,"^35",true,"^2V",["^1A",[["~$f","~$&","^3;"]]],"^2Y","Given the same arg(s) as for file, creates all parent directories of\n   the file they represent.\n   @return {!boolean}"],"~$spit",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",178,"^8",7,"^9",178,"^:",11,"^2V",["^1A",["^2W",["^1A",[["~$p","~$content","~$&","~$options"]]]]],"^2Y","Writes content synchronously to file f.\n   :encoding {string} encoding to write the string. Ignored when content is a buffer\n   :append - {boolean} - if true add content to end of file\n   @return {nil} or throws","^2Z",["^ ","^2[",true,"^30",2,"^31",[["^1A",["~$p","^3>","^3?"]]],"^2V",["^1A",[["~$p","^3>","~$&","^3?"]]],"^32",["^1A",[null]]]],"^C","~$cljs-node-io.core/spit","^2[",true,"^6","cljs_node_io/core.cljs","^:",11,"^2Z",["^ ","^2[",true,"^30",2,"^31",[["^1A",["~$p","^3>","^3?"]]],"^2V",["^1A",[["~$p","^3>","~$&","^3?"]]],"^32",["^1A",[null]]],"^31",[["^1A",["~$p","^3>","^3?"]]],"^34",null,"^32",["^1A",[null]],"^8",1,"^7",178,"^9",178,"^30",2,"^35",true,"^2V",["^1A",[["~$p","^3>","~$&","^3?"]]],"^2Y","Writes content synchronously to file f.\n   :encoding {string} encoding to write the string. Ignored when content is a buffer\n   :append - {boolean} - if true add content to end of file\n   @return {nil} or throws"],"~$Buffer?",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",148,"^8",16,"^9",148,"^:",23,"~:tag","~$boolean","^2V",["^1A",["^2W",["^1A",[["~$b"]]]]],"^2Y","sugar over Buffer.isBuffer\n   @param {*} b\n   @return {!boolean}"],"^C","~$cljs-node-io.core/Buffer?","^2[",false,"^6","cljs_node_io/core.cljs","^:",23,"^31",["^1A",[["~$b"]]],"^34",null,"^32",["^1A",[null,null]],"^8",1,"^7",148,"~:ret-tag","^3C","^9",148,"^30",1,"^3B","^3C","^35",true,"^2V",["^1A",["^2W",["^1A",[["~$b"]]]]],"^2Y","sugar over Buffer.isBuffer\n   @param {*} b\n   @return {!boolean}"],"~$delete-file",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",105,"^8",7,"^9",105,"^:",18,"^2V",["^1A",["^2W",["^1A",[["~$f","~$&",["~$silently"]]]]]],"^2Y","Delete file f. Raise an exception if it fails unless silently is true.\n   @return {!boolean}","^2Z",["^ ","^2[",true,"^30",1,"^31",[["^1A",["~$f",["^3G"]]]],"^2V",["^1A",[["~$f","~$&",["^3G"]]]],"^32",["^1A",[null]]]],"^C","~$cljs-node-io.core/delete-file","^2[",true,"^6","cljs_node_io/core.cljs","^:",18,"^2Z",["^ ","^2[",true,"^30",1,"^31",[["^1A",["~$f",["^3G"]]]],"^2V",["^1A",[["~$f","~$&",["^3G"]]]],"^32",["^1A",[null]]],"^31",[["^1A",["~$f",["^3G"]]]],"^34",null,"^32",["^1A",[null]],"^8",1,"^7",105,"^9",105,"^30",1,"^35",true,"^2V",["^1A",[["~$f","~$&",["^3G"]]]],"^2Y","Delete file f. Raise an exception if it fails unless silently is true.\n   @return {!boolean}"],"~$path",["^ ","^C","~$cljs-node-io.core/path","^6","cljs_node_io/core.cljs","^7",11,"^8",1,"^9",11,"^:",10,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",11,"^8",6,"^9",11,"^:",10],"^3B","~$js"],"~$input-stream",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",130,"^8",7,"^9",130,"^:",19,"^2V",["^1A",["^2W",["^1A",[["~$x","~$&","^2X"]]]]],"^2Y","For all streams it defers back to the stream. Note: stream objects are event driven.\n    + buffers => BufferReadStream\n    + files + strings => FileInputStream\n    + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IInputStream}","^2Z",["^ ","^2[",true,"^30",1,"^31",[["^1A",["~$x","^2X"]]],"^2V",["^1A",[["~$x","~$&","^2X"]]],"^32",["^1A",[null]]]],"^C","~$cljs-node-io.core/input-stream","^2[",true,"^6","cljs_node_io/core.cljs","^:",19,"^2Z",["^ ","^2[",true,"^30",1,"^31",[["^1A",["~$x","^2X"]]],"^2V",["^1A",[["~$x","~$&","^2X"]]],"^32",["^1A",[null]]],"^31",[["^1A",["~$x","^2X"]]],"^34",null,"^32",["^1A",[null]],"^8",1,"^7",130,"^9",130,"^30",1,"^35",true,"^2V",["^1A",[["~$x","~$&","^2X"]]],"^2Y","For all streams it defers back to the stream. Note: stream objects are event driven.\n    + buffers => BufferReadStream\n    + files + strings => FileInputStream\n    + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IInputStream}"],"~$Error?",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",155,"^8",16,"^9",155,"^:",22,"^3B","^3C","^2V",["^1A",["^2W",["^1A",[["~$e"]]]]],"^2Y","@param {*} e\n   @return {!boolean}"],"^C","~$cljs-node-io.core/Error?","^2[",false,"^6","cljs_node_io/core.cljs","^:",22,"^31",["^1A",[["~$e"]]],"^34",null,"^32",["^1A",[null,null]],"^8",1,"^7",155,"^3E","^3C","^9",155,"^30",1,"^3B","^3C","^35",true,"^2V",["^1A",["^2W",["^1A",[["~$e"]]]]],"^2Y","@param {*} e\n   @return {!boolean}"],"~$as-relative-path",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",83,"^8",7,"^9",83,"^:",23,"^2V",["^1A",["^2W",["^1A",[["~$x"]]]]],"^2Y","a relative path, else IllegalArgumentException.\n   @param {(string|IFile|Uri)} x\n   @return {!string}"],"^C","~$cljs-node-io.core/as-relative-path","^2[",false,"^6","cljs_node_io/core.cljs","^:",23,"^31",["^1A",[["~$x"]]],"^34",null,"^32",["^1A",[null,null]],"^8",1,"^7",83,"^9",83,"^30",1,"^35",true,"^2V",["^1A",["^2W",["^1A",[["~$x"]]]]],"^2Y","a relative path, else IllegalArgumentException.\n   @param {(string|IFile|Uri)} x\n   @return {!string}"],"~$copy",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",273,"^8",7,"^9",273,"^:",11,"^2V",["^1A",["^2W",["^1A",[["~$input","~$output","~$&","^2X"]]]]],"^2Y","A repl/script convenience. Copies input to output.\n   Input may be an InputStream, cljs-node-io.File, Buffer, or string(file path).\n   Output may be an String(file), OutputStream or cljs-node-io.File.\n    + Unlike JVM, strings are coerced to files.\n      - If you have a big string, use a buffer.\n      - By default no encoding ops occur\n    + Options are passed to the output stream.\n      - :encoding = destination encoding to use\n        ex: (copy 'foo.txt' 'bar.txt' :encoding 'utf8')\n    + Returns a chan thats closes when output finishes writing\n      - use to asynchronously chain a series of calls.\n      - Will still throw! For more sophisticated error handling,\n        use the underlying streams manually\n   @return {!Channel}","^2Z",["^ ","^2[",true,"^30",2,"^31",[["^1A",["^3S","^3T","^2X"]]],"^2V",["^1A",[["^3S","^3T","~$&","^2X"]]],"^32",["^1A",[null]]]],"^C","~$cljs-node-io.core/copy","^2[",true,"^6","cljs_node_io/core.cljs","^:",11,"^2Z",["^ ","^2[",true,"^30",2,"^31",[["^1A",["^3S","^3T","^2X"]]],"^2V",["^1A",[["^3S","^3T","~$&","^2X"]]],"^32",["^1A",[null]]],"^31",[["^1A",["^3S","^3T","^2X"]]],"^34",null,"^32",["^1A",[null]],"^8",1,"^7",273,"^9",273,"^30",2,"^35",true,"^2V",["^1A",[["^3S","^3T","~$&","^2X"]]],"^2Y","A repl/script convenience. Copies input to output.\n   Input may be an InputStream, cljs-node-io.File, Buffer, or string(file path).\n   Output may be an String(file), OutputStream or cljs-node-io.File.\n    + Unlike JVM, strings are coerced to files.\n      - If you have a big string, use a buffer.\n      - By default no encoding ops occur\n    + Options are passed to the output stream.\n      - :encoding = destination encoding to use\n        ex: (copy 'foo.txt' 'bar.txt' :encoding 'utf8')\n    + Returns a chan thats closes when output finishes writing\n      - use to asynchronously chain a series of calls.\n      - Will still throw! For more sophisticated error handling,\n        use the underlying streams manually\n   @return {!Channel}"],"~$input-stream?",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",212,"^8",16,"^9",212,"^:",29,"^3B","^3C","^2V",["^1A",["^2W",["^1A",[["~$obj"]]]]],"^2Y","@param {*} obj object to test\n   @return {!boolean} is object an input-stream?"],"^C","~$cljs-node-io.core/input-stream?","^2[",false,"^6","cljs_node_io/core.cljs","^:",29,"^31",["^1A",[["^3W"]]],"^34",null,"^32",["^1A",[null,null]],"^8",1,"^7",212,"^3E","^3C","^9",212,"^30",1,"^3B","^3C","^35",true,"^2V",["^1A",["^2W",["^1A",[["^3W"]]]]],"^2Y","@param {*} obj object to test\n   @return {!boolean} is object an input-stream?"],"~$filepath",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",17,"^8",8,"^9",17,"^:",16,"~:private",true,"^2V",["^1A",["^2W",["^1A",[["~$a"],["~$a","~$b"]]]]],"^2Y","This is needed to mock the java.io.File constructor.\n   The java File constructor is polymorphic and accepts one or two args:\n   (Uri), (pathstring), (parentstring, childstring), (File, childstring)\n   @return {!string}","^2Z",["^ ","^2[",false,"^30",2,"^31",["^1A",[["~$a"],["~$a","~$b"]]],"^2V",["^1A",[["~$a"],["~$a","~$b"]]],"^32",["^1A",[null,null]]]],"^3Z",true,"^C","~$cljs-node-io.core/filepath","^2[",false,"^6","cljs_node_io/core.cljs","^:",16,"^2Z",["^ ","^2[",false,"^30",2,"^31",["^1A",[["~$a"],["~$a","~$b"]]],"^2V",["^1A",[["~$a"],["~$a","~$b"]]],"^32",["^1A",[null,null]]],"^31",["^1A",[["~$a"],["~$a","~$b"]]],"^34",null,"^32",["^1A",[null,null]],"^8",1,"^7",17,"^9",17,"^30",2,"^35",true,"^2V",["^1A",[["~$a"],["~$a","~$b"]]],"^2Y","This is needed to mock the java.io.File constructor.\n   The java File constructor is polymorphic and accepts one or two args:\n   (Uri), (pathstring), (parentstring, childstring), (File, childstring)\n   @return {!string}"],"~$output-stream",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",139,"^8",7,"^9",139,"^:",20,"^2V",["^1A",["^2W",["^1A",[["~$x","~$&","^2X"]]]]],"^2Y","For all streams it defers back to the stream. Note: stream objects are event driven.\n   + Files & Strings become FileOutputStreams.\n   + goog.Uri's are treated as local files. No other protocols are supported at\n   this time.\n   @return {!IOutputStream}","^2Z",["^ ","^2[",true,"^30",1,"^31",[["^1A",["~$x","^2X"]]],"^2V",["^1A",[["~$x","~$&","^2X"]]],"^32",["^1A",[null]]]],"^C","~$cljs-node-io.core/output-stream","^2[",true,"^6","cljs_node_io/core.cljs","^:",20,"^2Z",["^ ","^2[",true,"^30",1,"^31",[["^1A",["~$x","^2X"]]],"^2V",["^1A",[["~$x","~$&","^2X"]]],"^32",["^1A",[null]]],"^31",[["^1A",["~$x","^2X"]]],"^34",null,"^32",["^1A",[null]],"^8",1,"^7",139,"^9",139,"^30",1,"^35",true,"^2V",["^1A",[["~$x","~$&","^2X"]]],"^2Y","For all streams it defers back to the stream. Note: stream objects are event driven.\n   + Files & Strings become FileOutputStreams.\n   + goog.Uri's are treated as local files. No other protocols are supported at\n   this time.\n   @return {!IOutputStream}"],"~$file",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",93,"^8",7,"^9",93,"^:",11,"^2V",["^1A",["^2W",["^1A",[["~$arg"],["~$parent","~$child"],["^44","^45","~$&","^3;"]]]]],"^2Y","Returns a reified file, passing each arg to as-file.  Multiple-arg\n   versions treat the first argument as parent and subsequent args as\n   children relative to the parent. Use in place of File constructor\n   @return {!IFile}","^2Z",["^ ","^2[",true,"^30",2,"^31",["^1A",[["^43"],["^44","^45"]]],"^2V",["^1A",[["^43"],["^44","^45"],["^44","^45","~$&","^3;"]]],"^32",["^1A",[null,null,null]]]],"^C","~$cljs-node-io.core/file","^2[",true,"^6","cljs_node_io/core.cljs","^:",11,"^2Z",["^ ","^2[",true,"^30",2,"^31",["^1A",[["^43"],["^44","^45"]]],"^2V",["^1A",[["^43"],["^44","^45"],["^44","^45","~$&","^3;"]]],"^32",["^1A",[null,null,null]]],"^31",["^1A",[["^43"],["^44","^45"]]],"^34",null,"^32",["^1A",[null,null,null]],"^8",1,"^7",93,"^9",93,"^30",2,"^35",true,"^2V",["^1A",[["^43"],["^44","^45"],["^44","^45","~$&","^3;"]]],"^2Y","Returns a reified file, passing each arg to as-file.  Multiple-arg\n   versions treat the first argument as parent and subsequent args as\n   children relative to the parent. Use in place of File constructor\n   @return {!IFile}"],"~$file-seq",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",196,"^8",7,"^9",196,"^:",15,"^2V",["^1A",["^2W",["^1A",[["~$dir"]]]]],"^2Y","taken from clojurescript/examples/nodels.cljs"],"^C","~$cljs-node-io.core/file-seq","^2[",false,"^6","cljs_node_io/core.cljs","^:",15,"^31",["^1A",[["^48"]]],"^34",null,"^32",["^1A",[null,null]],"^8",1,"^7",196,"^9",196,"^30",1,"^35",true,"^2V",["^1A",["^2W",["^1A",[["^48"]]]]],"^2Y","taken from clojurescript/examples/nodels.cljs"],"~$aspit",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",188,"^8",7,"^9",188,"^:",12,"^2V",["^1A",["^2W",["^1A",[["~$p","^3>","~$&","^3?"]]]]],"^2Y","Async spit. Wait for result before writing again!\n   @return {!Channel} recieves [?err]","^2Z",["^ ","^2[",true,"^30",2,"^31",[["^1A",["~$p","^3>","^3?"]]],"^2V",["^1A",[["~$p","^3>","~$&","^3?"]]],"^32",["^1A",[null]]]],"^C","~$cljs-node-io.core/aspit","^2[",true,"^6","cljs_node_io/core.cljs","^:",12,"^2Z",["^ ","^2[",true,"^30",2,"^31",[["^1A",["~$p","^3>","^3?"]]],"^2V",["^1A",[["~$p","^3>","~$&","^3?"]]],"^32",["^1A",[null]]],"^31",[["^1A",["~$p","^3>","^3?"]]],"^34",null,"^32",["^1A",[null]],"^8",1,"^7",188,"^9",188,"^30",2,"^35",true,"^2V",["^1A",[["~$p","^3>","~$&","^3?"]]],"^2Y","Async spit. Wait for result before writing again!\n   @return {!Channel} recieves [?err]"],"~$do-copy",["^ ","^5",["^ ","^6","cljs_node_io/core.cljs","^7",243,"^8",3,"^9",243,"^:",10,"^2Y","Internal helper for copy","^3Z",true,"^2V",["^1A",["^2W",["^1A",[["^3S","^3T","^2X"]]]]]],"^3Z",true,"^C","~$cljs-node-io.core/do-copy","^6","cljs_node_io/core.cljs","^:",10,"^8",1,"^7",239,"^9",243,"^3B","~$cljs.core/MultiFn","^2V",["^1A",["^2W",["^1A",[["^3S","^3T","^2X"]]]]],"^2Y","Internal helper for copy"],"~$stream-type",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",224,"^8",7,"^9",224,"^:",18,"^2V",["^1A",["^2W",["^1A",[["^3W"]]]]],"^2Y","@param {*} obj The object to test"],"^C","~$cljs-node-io.core/stream-type","^2[",false,"^6","cljs_node_io/core.cljs","^:",18,"^31",["^1A",[["^3W"]]],"^34",null,"^32",["^1A",[null,null]],"^8",1,"^7",224,"^9",224,"^30",1,"^35",true,"^2V",["^1A",["^2W",["^1A",[["^3W"]]]]],"^2Y","@param {*} obj The object to test"],"~$output-stream?",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",218,"^8",16,"^9",218,"^:",30,"^3B","^3C","^2V",["^1A",["^2W",["^1A",[["^3W"]]]]],"^2Y","@param {*} obj object to test\n   @return {!boolean} is object an input-stream?"],"^C","~$cljs-node-io.core/output-stream?","^2[",false,"^6","cljs_node_io/core.cljs","^:",30,"^31",["^1A",[["^3W"]]],"^34",null,"^32",["^1A",[null,null]],"^8",1,"^7",218,"^3E","^3C","^9",218,"^30",1,"^3B","^3C","^35",true,"^2V",["^1A",["^2W",["^1A",[["^3W"]]]]],"^2Y","@param {*} obj object to test\n   @return {!boolean} is object an input-stream?"],"~$writer",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",122,"^8",7,"^9",122,"^:",13,"^2V",["^1A",["^2W",["^1A",[["~$x","~$&","^2X"]]]]],"^2Y","For all streams it defers back to the stream. Note: stream objects are event driven.\n    + Files & Strings become FileOutputStreams.\n    + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IOutputStream}","^2Z",["^ ","^2[",true,"^30",1,"^31",[["^1A",["~$x","^2X"]]],"^2V",["^1A",[["~$x","~$&","^2X"]]],"^32",["^1A",[null]]]],"^C","~$cljs-node-io.core/writer","^2[",true,"^6","cljs_node_io/core.cljs","^:",13,"^2Z",["^ ","^2[",true,"^30",1,"^31",[["^1A",["~$x","^2X"]]],"^2V",["^1A",[["~$x","~$&","^2X"]]],"^32",["^1A",[null]]],"^31",[["^1A",["~$x","^2X"]]],"^34",null,"^32",["^1A",[null]],"^8",1,"^7",122,"^9",122,"^30",1,"^35",true,"^2V",["^1A",[["~$x","~$&","^2X"]]],"^2Y","For all streams it defers back to the stream. Note: stream objects are event driven.\n    + Files & Strings become FileOutputStreams.\n    + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IOutputStream}"],"~$reader",["^ ","^2U",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",113,"^8",7,"^9",113,"^:",13,"^2V",["^1A",["^2W",["^1A",[["~$x","~$&","^2X"]]]]],"^2Y","For all streams it defers back to the stream. Note: stream objects are event driven.\n     + buffers => BufferReadStream\n     + files + strings => FileInputStream\n     + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IInputStream}","^2Z",["^ ","^2[",true,"^30",1,"^31",[["^1A",["~$x","^2X"]]],"^2V",["^1A",[["~$x","~$&","^2X"]]],"^32",["^1A",[null]]]],"^C","~$cljs-node-io.core/reader","^2[",true,"^6","cljs_node_io/core.cljs","^:",13,"^2Z",["^ ","^2[",true,"^30",1,"^31",[["^1A",["~$x","^2X"]]],"^2V",["^1A",[["~$x","~$&","^2X"]]],"^32",["^1A",[null]]],"^31",[["^1A",["~$x","^2X"]]],"^34",null,"^32",["^1A",[null]],"^8",1,"^7",113,"^9",113,"^30",1,"^35",true,"^2V",["^1A",[["~$x","~$&","^2X"]]],"^2Y","For all streams it defers back to the stream. Note: stream objects are event driven.\n     + buffers => BufferReadStream\n     + files + strings => FileInputStream\n     + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IInputStream}"]],"^1?",["^ ","^P","^P","^=","^=","^K","^="],"~:cljs.analyzer/constants",["^ ","^R",["^B",["~:encoding","~:else","~:default","~:File","~:OutputStream","~:InputStream","~:hierarchy"]],"~:order",["^4I","^4H","^4M","^4L","^4N","^4K","^4J"]],"^1F",["^ ","^S",["^B",[]]],"^1G",["^ "],"^1H",["^Q","^P","^=","^L","^M","^N","^O","^I"]],"^F","^D","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1V",[["^4R","~:static-fns"],true,["^4R","~:elide-asserts"],false,["^4R","~:optimize-constants"],null,["^4R","~:external-config"],null,["^4R","~:tooling-config"],null,["^4R","~:emit-constants"],null,["^4R","~:infer-externs"],true,["^4R","^1O"],null,["~:js-options","~:js-provider"],"^S",["~:mode"],"~:dev",["^4R","~:fn-invoke-direct"],null,["^4R","~:source-map"],"/dev/null"]]]