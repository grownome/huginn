["^ ","~:output",["^ ","~:js","goog.provide('cljs_node_io.file');\ngoog.require('cljs.core');\ngoog.require('goog.Uri');\ngoog.require('cljs_node_io.streams');\ngoog.require('cljs_node_io.fs');\ngoog.require('cljs_node_io.protocols');\n/**\n * @param {!number} mode : the file's existing mode\n * @param {!boolean} readable : add or remove read permission\n * @param {!boolean} ownerOnly : restrict operation to user bit only\n * @return {!number} A int for chmod that only effects the targeted mode bits\n */\ncljs_node_io.file.setReadable_STAR_ = (function cljs_node_io$file$setReadable_STAR_(mode,readable,ownerOnly){\nvar pred__27594 = cljs.core._EQ_;\nvar expr__27595 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [readable,ownerOnly], null);\nif(cljs.core.truth_((function (){var G__27599 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,true], null);\nvar G__27600 = expr__27595;\nreturn (pred__27594.cljs$core$IFn$_invoke$arity$2 ? pred__27594.cljs$core$IFn$_invoke$arity$2(G__27599,G__27600) : pred__27594.call(null,G__27599,G__27600));\n})())){\nreturn (mode | (256));\n} else {\nif(cljs.core.truth_((function (){var G__27602 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false,true], null);\nvar G__27603 = expr__27595;\nreturn (pred__27594.cljs$core$IFn$_invoke$arity$2 ? pred__27594.cljs$core$IFn$_invoke$arity$2(G__27602,G__27603) : pred__27594.call(null,G__27602,G__27603));\n})())){\nreturn (mode & (~ (256)));\n} else {\nif(cljs.core.truth_((function (){var G__27605 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,false], null);\nvar G__27606 = expr__27595;\nreturn (pred__27594.cljs$core$IFn$_invoke$arity$2 ? pred__27594.cljs$core$IFn$_invoke$arity$2(G__27605,G__27606) : pred__27594.call(null,G__27605,G__27606));\n})())){\nreturn (((mode | (256)) | (32)) | (4));\n} else {\nif(cljs.core.truth_((function (){var G__27607 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false,false], null);\nvar G__27608 = expr__27595;\nreturn (pred__27594.cljs$core$IFn$_invoke$arity$2 ? pred__27594.cljs$core$IFn$_invoke$arity$2(G__27607,G__27608) : pred__27594.call(null,G__27607,G__27608));\n})())){\nreturn (((mode & (~ (256))) & (~ (32))) & (~ (4)));\n} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__27595)].join('')));\n}\n}\n}\n}\n});\n/**\n * toggles the readable permission bit(s) for the specified filepath.\n * If readable, set 1 else 0\n * If ownerOnly (default) set just user, else set for group & other as well.\n * Does not affect other permission bits.\n */\ncljs_node_io.file.setReadable = (function cljs_node_io$file$setReadable(var_args){\nvar G__27620 = arguments.length;\nswitch (G__27620) {\ncase 2:\nreturn cljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$2 = (function (pathstr,readable){\nreturn cljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$3(pathstr,readable,true);\n});\n\ncljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$3 = (function (pathstr,readable,ownerOnly){\nvar mode = cljs_node_io.fs.permissions(cljs_node_io.fs.stat(pathstr));\nvar n = cljs_node_io.file.setReadable_STAR_(mode,readable,ownerOnly);\nreturn cljs_node_io.fs.chmod(pathstr,n);\n});\n\ncljs_node_io.file.setReadable.cljs$lang$maxFixedArity = 3;\n\n/**\n * @param {!number} mode : the file's existing mode\n * @param {!boolean} writable : add or remove write permission\n * @param {!boolean} ownerOnly : restrict operation to user bit only\n * @return {!number} A int for chmod that only effects the targeted mode bits\n */\ncljs_node_io.file.setWritable_STAR_ = (function cljs_node_io$file$setWritable_STAR_(mode,writable,ownerOnly){\nvar pred__27627 = cljs.core._EQ_;\nvar expr__27628 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [writable,ownerOnly], null);\nif(cljs.core.truth_((function (){var G__27630 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,true], null);\nvar G__27631 = expr__27628;\nreturn (pred__27627.cljs$core$IFn$_invoke$arity$2 ? pred__27627.cljs$core$IFn$_invoke$arity$2(G__27630,G__27631) : pred__27627.call(null,G__27630,G__27631));\n})())){\nreturn (mode | (128));\n} else {\nif(cljs.core.truth_((function (){var G__27632 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false,true], null);\nvar G__27633 = expr__27628;\nreturn (pred__27627.cljs$core$IFn$_invoke$arity$2 ? pred__27627.cljs$core$IFn$_invoke$arity$2(G__27632,G__27633) : pred__27627.call(null,G__27632,G__27633));\n})())){\nreturn (mode & (~ (128)));\n} else {\nif(cljs.core.truth_((function (){var G__27634 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,false], null);\nvar G__27635 = expr__27628;\nreturn (pred__27627.cljs$core$IFn$_invoke$arity$2 ? pred__27627.cljs$core$IFn$_invoke$arity$2(G__27634,G__27635) : pred__27627.call(null,G__27634,G__27635));\n})())){\nreturn (((mode | (128)) | (16)) | (2));\n} else {\nif(cljs.core.truth_((function (){var G__27636 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false,false], null);\nvar G__27637 = expr__27628;\nreturn (pred__27627.cljs$core$IFn$_invoke$arity$2 ? pred__27627.cljs$core$IFn$_invoke$arity$2(G__27636,G__27637) : pred__27627.call(null,G__27636,G__27637));\n})())){\nreturn (((mode & (~ (128))) & (~ (16))) & (~ (2)));\n} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__27628)].join('')));\n}\n}\n}\n}\n});\n/**\n * toggles the writable permission bit(s) for the specified filepath.\n * If writable, set 1 else 0\n * If ownerOnly (default) set just user, else set for group & other as well.\n * Does not affect other permission bits.\n */\ncljs_node_io.file.setWritable = (function cljs_node_io$file$setWritable(var_args){\nvar G__27639 = arguments.length;\nswitch (G__27639) {\ncase 2:\nreturn cljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$2 = (function (pathstr,writable){\nreturn cljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$3(pathstr,writable,true);\n});\n\ncljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$3 = (function (pathstr,writable,ownerOnly){\nvar mode = cljs_node_io.fs.permissions(cljs_node_io.fs.stat(pathstr));\nvar n = cljs_node_io.file.setWritable_STAR_(mode,writable,ownerOnly);\nreturn cljs_node_io.fs.chmod(pathstr,n);\n});\n\ncljs_node_io.file.setWritable.cljs$lang$maxFixedArity = 3;\n\n/**\n * @param {!number} mode : the file's existing mode\n * @param {!boolean} executable : add or remove execute permission\n * @param {!boolean} ownerOnly : restrict operation to user bit only\n * @return {!number} A int for chmod that only effects the targeted mode bits\n */\ncljs_node_io.file.setExecutable_STAR_ = (function cljs_node_io$file$setExecutable_STAR_(mode,executable,ownerOnly){\nvar pred__27649 = cljs.core._EQ_;\nvar expr__27650 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [executable,ownerOnly], null);\nif(cljs.core.truth_((function (){var G__27654 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,true], null);\nvar G__27655 = expr__27650;\nreturn (pred__27649.cljs$core$IFn$_invoke$arity$2 ? pred__27649.cljs$core$IFn$_invoke$arity$2(G__27654,G__27655) : pred__27649.call(null,G__27654,G__27655));\n})())){\nreturn (mode | (64));\n} else {\nif(cljs.core.truth_((function (){var G__27659 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false,true], null);\nvar G__27660 = expr__27650;\nreturn (pred__27649.cljs$core$IFn$_invoke$arity$2 ? pred__27649.cljs$core$IFn$_invoke$arity$2(G__27659,G__27660) : pred__27649.call(null,G__27659,G__27660));\n})())){\nreturn (mode & (~ (64)));\n} else {\nif(cljs.core.truth_((function (){var G__27661 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,false], null);\nvar G__27662 = expr__27650;\nreturn (pred__27649.cljs$core$IFn$_invoke$arity$2 ? pred__27649.cljs$core$IFn$_invoke$arity$2(G__27661,G__27662) : pred__27649.call(null,G__27661,G__27662));\n})())){\nreturn (((mode | (64)) | (8)) | (1));\n} else {\nif(cljs.core.truth_((function (){var G__27663 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false,false], null);\nvar G__27664 = expr__27650;\nreturn (pred__27649.cljs$core$IFn$_invoke$arity$2 ? pred__27649.cljs$core$IFn$_invoke$arity$2(G__27663,G__27664) : pred__27649.call(null,G__27663,G__27664));\n})())){\nreturn (((mode & (~ (64))) & (~ (8))) & (~ (1)));\n} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__27650)].join('')));\n}\n}\n}\n}\n});\n/**\n * toggles the executable permission bit(s) for the specified filepath.\n * If executable, set 1 else 0\n * If ownerOnly (default) set just user, else set for group & other as well.\n * Does not affect other permission bits.\n */\ncljs_node_io.file.setExecutable = (function cljs_node_io$file$setExecutable(var_args){\nvar G__27669 = arguments.length;\nswitch (G__27669) {\ncase 2:\nreturn cljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$2 = (function (pathstr,executable){\nreturn cljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$3(pathstr,executable,true);\n});\n\ncljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$3 = (function (pathstr,executable,ownerOnly){\nvar mode = cljs_node_io.fs.permissions(cljs_node_io.fs.stat(pathstr));\nvar n = cljs_node_io.file.setExecutable_STAR_(mode,executable,ownerOnly);\nreturn cljs_node_io.fs.chmod(pathstr,n);\n});\n\ncljs_node_io.file.setExecutable.cljs$lang$maxFixedArity = 3;\n\n/**\n * Returns sequence of strings representing non-existing directory components\n * of the passed pathstring, root first, in order\n * @param {!string} pathstring\n * @return {!ISeq}\n */\ncljs_node_io.file.get_non_dirs = (function cljs_node_io$file$get_non_dirs(pathstring){\nreturn cljs.core.reverse(cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(cljs_node_io.fs.dir_QMARK_),cljs.core.iterate(cljs_node_io.fs.dirname,pathstring)));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs_node_io.protocols.Coercions}\n * @implements {cljs_node_io.protocols.IFile}\n * @implements {cljs_node_io.protocols.IOFactory}\n * @implements {cljs.core.IPrintWithWriter}\n*/\ncljs_node_io.file.File = (function (pathstring){\nthis.pathstring = pathstring;\nthis.cljs$lang$protocol_mask$partition0$ = 2149580800;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\ncljs_node_io.file.File.prototype.cljs_node_io$protocols$IFile$ = cljs.core.PROTOCOL_SENTINEL;\n\ncljs_node_io.file.File.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,that){\nvar self__ = this;\nvar this$__$1 = this;\nvar pathntype = cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(((function (this$__$1){\nreturn (function (p1__27672_SHARP_){\nreturn p1__27672_SHARP_.getPath;\n});})(this$__$1))\n,cljs.core.type);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((pathntype.cljs$core$IFn$_invoke$arity$1 ? pathntype.cljs$core$IFn$_invoke$arity$1(this$__$1) : pathntype.call(null,this$__$1)),(pathntype.cljs$core$IFn$_invoke$arity$1 ? pathntype.cljs$core$IFn$_invoke$arity$1(that) : pathntype.call(null,that)));\n});\n\ncljs_node_io.file.File.prototype.cljs_node_io$protocols$Coercions$ = cljs.core.PROTOCOL_SENTINEL;\n\ncljs_node_io.file.File.prototype.cljs_node_io$protocols$Coercions$as_file$arity$1 = (function (f){\nvar self__ = this;\nvar f__$1 = this;\nreturn f__$1;\n});\n\ncljs_node_io.file.File.prototype.cljs_node_io$protocols$Coercions$as_url$arity$1 = (function (f){\nvar self__ = this;\nvar f__$1 = this;\nreturn f__$1.to_url();\n});\n\ncljs_node_io.file.File.prototype.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;\n\ncljs_node_io.file.File.prototype.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = (function (this$,opts){\nvar self__ = this;\nvar this$__$1 = this;\nreturn cljs_node_io.protocols.make_reader(this$__$1.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2(null,opts),opts);\n});\n\ncljs_node_io.file.File.prototype.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = (function (this$,opts){\nvar self__ = this;\nvar this$__$1 = this;\nreturn cljs_node_io.protocols.make_writer(this$__$1.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2(null,opts),opts);\n});\n\ncljs_node_io.file.File.prototype.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = (function (this$,opts){\nvar self__ = this;\nvar this$__$1 = this;\nreturn cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2(this$__$1,opts);\n});\n\ncljs_node_io.file.File.prototype.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = (function (this$,opts){\nvar self__ = this;\nvar this$__$1 = this;\nreturn cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$2(this$__$1,opts);\n});\n\ncljs_node_io.file.File.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this$,writer,opts){\nvar self__ = this;\nvar this$__$1 = this;\ncljs.core._write(writer,\"#object [cljs-node-io.File\");\n\nreturn cljs.core._write(writer,[\"  \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1.getPath()),\" ]\"].join(''));\n});\n\ncljs_node_io.file.File.prototype.canExecute = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn cljs_node_io.fs.executable_QMARK_(self__.pathstring);\n});\n\ncljs_node_io.file.File.prototype.isDirectory = (function (){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.fs.dir_QMARK_(self__.pathstring);\n});\n\ncljs_node_io.file.File.prototype.getParent = (function (){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.fs.dirname(self__.pathstring);\n});\n\ncljs_node_io.file.File.prototype.setReadable = (function() {\nvar G__27812 = null;\nvar G__27812__1 = (function (r){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$2(self__.pathstring,r);\n});\nvar G__27812__2 = (function (r,o){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$3(self__.pathstring,r,o);\n});\nG__27812 = function(r,o){\nswitch(arguments.length){\ncase 1:\nreturn G__27812__1.call(this,r);\ncase 2:\nreturn G__27812__2.call(this,r,o);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__27812.cljs$core$IFn$_invoke$arity$1 = G__27812__1;\nG__27812.cljs$core$IFn$_invoke$arity$2 = G__27812__2;\nreturn G__27812;\n})()\n;\n\ncljs_node_io.file.File.prototype.canWrite = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn cljs_node_io.fs.writable_QMARK_(self__.pathstring);\n});\n\ncljs_node_io.file.File.prototype.stats = (function (){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.fs.stat__GT_clj(cljs_node_io.fs.stat(self__.pathstring));\n});\n\ncljs_node_io.file.File.prototype.getName = (function (){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.fs.basename.cljs$core$IFn$_invoke$arity$1(self__.pathstring);\n});\n\ncljs_node_io.file.File.prototype.exists = (function (){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.fs.fexists_QMARK_(self__.pathstring);\n});\n\ncljs_node_io.file.File.prototype.setLastModified = (function (time){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.fs.utimes(self__.pathstring,time,time);\n});\n\ncljs_node_io.file.File.prototype.canRead = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn cljs_node_io.fs.readable_QMARK_(self__.pathstring);\n});\n\ncljs_node_io.file.File.prototype.createNewFile = (function (){\nvar self__ = this;\nvar this$ = this;\ntry{this$.write(\"\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"flags\",\"flags\",1775418075),\"wx\"], null));\n\nreturn true;\n}catch (e27690){if((e27690 instanceof Error)){\nvar e = e27690;\nreturn false;\n} else {\nthrow e27690;\n\n}\n}});\n\ncljs_node_io.file.File.prototype.isAbsolute = (function (){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.fs.absolute_QMARK_(self__.pathstring);\n});\n\ncljs_node_io.file.File.prototype.read = (function() {\nvar G__27820 = null;\nvar G__27820__0 = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn cljs_node_io.fs.readFile(self__.pathstring,\"utf8\");\n});\nvar G__27820__1 = (function (enc){\nvar self__ = this;\nvar this$ = this;\nreturn cljs_node_io.fs.readFile(self__.pathstring,enc);\n});\nG__27820 = function(enc){\nswitch(arguments.length){\ncase 0:\nreturn G__27820__0.call(this);\ncase 1:\nreturn G__27820__1.call(this,enc);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__27820.cljs$core$IFn$_invoke$arity$0 = G__27820__0;\nG__27820.cljs$core$IFn$_invoke$arity$1 = G__27820__1;\nreturn G__27820;\n})()\n;\n\ncljs_node_io.file.File.prototype.listFiles = (function() {\nvar G__27821 = null;\nvar G__27821__0 = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (this$){\nreturn (function (p1__27673_SHARP_){\nreturn (new cljs_node_io.file.File([cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.pathstring),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs_node_io.fs.sep),cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__27673_SHARP_)].join('')));\n});})(this$))\n,this$.list());\n});\nvar G__27821__1 = (function (filterfn){\nvar self__ = this;\nvar this$ = this;\nvar temp__5455__auto__ = this$.listFiles();\nif(cljs.core.truth_(temp__5455__auto__)){\nvar files = temp__5455__auto__;\nreturn cljs.core.filterv(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(filterfn,self__.pathstring),files);\n} else {\nreturn null;\n}\n});\nG__27821 = function(filterfn){\nswitch(arguments.length){\ncase 0:\nreturn G__27821__0.call(this);\ncase 1:\nreturn G__27821__1.call(this,filterfn);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__27821.cljs$core$IFn$_invoke$arity$0 = G__27821__0;\nG__27821.cljs$core$IFn$_invoke$arity$1 = G__27821__1;\nreturn G__27821;\n})()\n;\n\ncljs_node_io.file.File.prototype.mkdir = (function (){\nvar self__ = this;\nvar _ = this;\ntry{cljs_node_io.fs.mkdir(self__.pathstring);\n\nreturn true;\n}catch (e27694){if((e27694 instanceof Error)){\nvar e = e27694;\nreturn false;\n} else {\nthrow e27694;\n\n}\n}});\n\ncljs_node_io.file.File.prototype.isFile = (function (){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.fs.file_QMARK_(self__.pathstring);\n});\n\ncljs_node_io.file.File.prototype.toURI = (function (){\nvar self__ = this;\nvar f = this;\nreturn (new goog.Uri([\"file:\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.pathstring)].join('')));\n});\n\ncljs_node_io.file.File.prototype.mkdirs = (function (){\nvar self__ = this;\nvar this$ = this;\nvar p = this$.getPath();\nvar dirs = cljs_node_io.file.get_non_dirs(p);\ntry{var seq__27701_27828 = cljs.core.seq(dirs);\nvar chunk__27702_27829 = null;\nvar count__27703_27830 = (0);\nvar i__27704_27831 = (0);\nwhile(true){\nif((i__27704_27831 < count__27703_27830)){\nvar d_27834 = chunk__27702_27829.cljs$core$IIndexed$_nth$arity$2(null,i__27704_27831);\ncljs_node_io.fs.mkdir(d_27834);\n\n\nvar G__27835 = seq__27701_27828;\nvar G__27836 = chunk__27702_27829;\nvar G__27837 = count__27703_27830;\nvar G__27838 = (i__27704_27831 + (1));\nseq__27701_27828 = G__27835;\nchunk__27702_27829 = G__27836;\ncount__27703_27830 = G__27837;\ni__27704_27831 = G__27838;\ncontinue;\n} else {\nvar temp__5457__auto___27839 = cljs.core.seq(seq__27701_27828);\nif(temp__5457__auto___27839){\nvar seq__27701_27840__$1 = temp__5457__auto___27839;\nif(cljs.core.chunked_seq_QMARK_(seq__27701_27840__$1)){\nvar c__4351__auto___27842 = cljs.core.chunk_first(seq__27701_27840__$1);\nvar G__27846 = cljs.core.chunk_rest(seq__27701_27840__$1);\nvar G__27847 = c__4351__auto___27842;\nvar G__27848 = cljs.core.count(c__4351__auto___27842);\nvar G__27849 = (0);\nseq__27701_27828 = G__27846;\nchunk__27702_27829 = G__27847;\ncount__27703_27830 = G__27848;\ni__27704_27831 = G__27849;\ncontinue;\n} else {\nvar d_27852 = cljs.core.first(seq__27701_27840__$1);\ncljs_node_io.fs.mkdir(d_27852);\n\n\nvar G__27853 = cljs.core.next(seq__27701_27840__$1);\nvar G__27854 = null;\nvar G__27855 = (0);\nvar G__27856 = (0);\nseq__27701_27828 = G__27853;\nchunk__27702_27829 = G__27854;\ncount__27703_27830 = G__27855;\ni__27704_27831 = G__27856;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn true;\n}catch (e27698){if((e27698 instanceof Error)){\nvar e = e27698;\nreturn false;\n} else {\nthrow e27698;\n\n}\n}});\n\ncljs_node_io.file.File.prototype.setReadOnly = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn this$.setWritable(false,false);\n});\n\ncljs_node_io.file.File.prototype.getCanonicalFile = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn (new cljs_node_io.file.File(this$.getCanonicalPath()));\n});\n\ncljs_node_io.file.File.prototype.getAbsoluteFile = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn (new cljs_node_io.file.File(this$.getAbsolutePath()));\n});\n\ncljs_node_io.file.File.prototype.getExt = (function (){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.fs.ext(self__.pathstring);\n});\n\ncljs_node_io.file.File.prototype.delete = (function (){\nvar self__ = this;\nvar this$ = this;\ntry{cljs_node_io.fs.rm(self__.pathstring);\n\nreturn true;\n}catch (e27712){if((e27712 instanceof Error)){\nvar e = e27712;\nreturn false;\n} else {\nthrow e27712;\n\n}\n}});\n\ncljs_node_io.file.File.prototype.getPath = (function (){\nvar self__ = this;\nvar _ = this;\nreturn self__.pathstring;\n});\n\ncljs_node_io.file.File.prototype.toString = (function (){\nvar self__ = this;\nvar _ = this;\nreturn self__.pathstring;\n});\n\ncljs_node_io.file.File.prototype.equals = (function (that){\nvar self__ = this;\nvar this$ = this;\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this$,that);\n});\n\ncljs_node_io.file.File.prototype.aread = (function() {\nvar G__27877 = null;\nvar G__27877__0 = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn cljs_node_io.fs.areadFile(self__.pathstring,\"utf8\");\n});\nvar G__27877__1 = (function (enc){\nvar self__ = this;\nvar this$ = this;\nreturn cljs_node_io.fs.areadFile(self__.pathstring,enc);\n});\nG__27877 = function(enc){\nswitch(arguments.length){\ncase 0:\nreturn G__27877__0.call(this);\ncase 1:\nreturn G__27877__1.call(this,enc);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__27877.cljs$core$IFn$_invoke$arity$0 = G__27877__0;\nG__27877.cljs$core$IFn$_invoke$arity$1 = G__27877__1;\nreturn G__27877;\n})()\n;\n\ncljs_node_io.file.File.prototype.write = (function (content,opts){\nvar self__ = this;\nvar this$ = this;\nreturn cljs_node_io.fs.writeFile(self__.pathstring,content,opts);\n});\n\ncljs_node_io.file.File.prototype.renameTo = (function (dest){\nvar self__ = this;\nvar this$ = this;\nif(typeof dest === 'string'){\n} else {\nthrow (new Error([\"Assert failed: \",\"destination must be a string\",\"\\n\",\"(string? dest)\"].join('')));\n}\n\ntry{cljs_node_io.fs.rename(self__.pathstring,dest);\n\ncljs_node_io.fs.unlink(self__.pathstring);\n\nself__.pathstring = dest;\n\nreturn true;\n}catch (e27719){if((e27719 instanceof Error)){\nvar e = e27719;\nreturn false;\n} else {\nthrow e27719;\n\n}\n}});\n\ncljs_node_io.file.File.prototype.deleteOnExit = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn process.on(\"exit\",((function (this$){\nreturn (function (exit_code){\nreturn this$.delete();\n});})(this$))\n);\n});\n\ncljs_node_io.file.File.prototype.setExecutable = (function() {\nvar G__27887 = null;\nvar G__27887__1 = (function (e){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$2(self__.pathstring,e);\n});\nvar G__27887__2 = (function (e,o){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$3(self__.pathstring,e,o);\n});\nG__27887 = function(e,o){\nswitch(arguments.length){\ncase 1:\nreturn G__27887__1.call(this,e);\ncase 2:\nreturn G__27887__2.call(this,e,o);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__27887.cljs$core$IFn$_invoke$arity$1 = G__27887__1;\nG__27887.cljs$core$IFn$_invoke$arity$2 = G__27887__2;\nreturn G__27887;\n})()\n;\n\ncljs_node_io.file.File.prototype.hashCode = (function (){\nvar self__ = this;\nvar _ = this;\nreturn cljs.core.hash(self__.pathstring);\n});\n\ncljs_node_io.file.File.prototype.lastModified = (function (){\nvar self__ = this;\nvar _ = this;\nvar stats = (function (){try{return cljs_node_io.fs.stat(self__.pathstring);\n}catch (e27730){if((e27730 instanceof Error)){\nvar e = e27730;\nreturn false;\n} else {\nthrow e27730;\n\n}\n}})();\nif(cljs.core.truth_(stats)){\nreturn stats.mtime.valueOf();\n} else {\nreturn (0);\n}\n});\n\ncljs_node_io.file.File.prototype.setWritable = (function() {\nvar G__27889 = null;\nvar G__27889__1 = (function (w){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$2(self__.pathstring,w);\n});\nvar G__27889__2 = (function (w,o){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$3(self__.pathstring,w,o);\n});\nG__27889 = function(w,o){\nswitch(arguments.length){\ncase 1:\nreturn G__27889__1.call(this,w);\ncase 2:\nreturn G__27889__2.call(this,w,o);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__27889.cljs$core$IFn$_invoke$arity$1 = G__27889__1;\nG__27889.cljs$core$IFn$_invoke$arity$2 = G__27889__2;\nreturn G__27889;\n})()\n;\n\ncljs_node_io.file.File.prototype.list = (function() {\nvar G__27891 = null;\nvar G__27891__0 = (function (){\nvar self__ = this;\nvar _ = this;\nif(!(cljs_node_io.fs.dir_QMARK_(self__.pathstring))){\nreturn null;\n} else {\ntry{return cljs_node_io.fs.readdir(self__.pathstring);\n}catch (e27742){if((e27742 instanceof Error)){\nvar e = e27742;\nreturn null;\n} else {\nthrow e27742;\n\n}\n}}\n});\nvar G__27891__1 = (function (filterfn){\nvar self__ = this;\nvar this$ = this;\nvar temp__5455__auto__ = this$.list();\nif(cljs.core.truth_(temp__5455__auto__)){\nvar files = temp__5455__auto__;\nreturn cljs.core.filterv(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(filterfn,self__.pathstring),files);\n} else {\nreturn null;\n}\n});\nG__27891 = function(filterfn){\nswitch(arguments.length){\ncase 0:\nreturn G__27891__0.call(this);\ncase 1:\nreturn G__27891__1.call(this,filterfn);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__27891.cljs$core$IFn$_invoke$arity$0 = G__27891__0;\nG__27891.cljs$core$IFn$_invoke$arity$1 = G__27891__1;\nreturn G__27891;\n})()\n;\n\ncljs_node_io.file.File.prototype.length = (function (){\nvar self__ = this;\nvar _ = this;\nvar stats = (function (){try{return cljs_node_io.fs.stat(self__.pathstring);\n}catch (e27744){if((e27744 instanceof Error)){\nvar e = e27744;\nreturn false;\n} else {\nthrow e27744;\n\n}\n}})();\nif(cljs.core.truth_(stats)){\nif(cljs.core.truth_(stats.isDirectory())){\nreturn null;\n} else {\nreturn stats.size;\n}\n} else {\nreturn (0);\n}\n});\n\ncljs_node_io.file.File.prototype.getAbsolutePath = (function (){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.fs.realpath(self__.pathstring);\n});\n\ncljs_node_io.file.File.prototype.getCanonicalPath = (function (){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.fs.normalize_path(self__.pathstring);\n});\n\ncljs_node_io.file.File.prototype.awrite = (function (content,opts){\nvar self__ = this;\nvar this$ = this;\nreturn cljs_node_io.fs.awriteFile(self__.pathstring,content,opts);\n});\n\ncljs_node_io.file.File.prototype.getParentFile = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn (new cljs_node_io.file.File(this$.getParent()));\n});\n\ncljs_node_io.file.File.prototype.isHidden = (function (){\nvar self__ = this;\nvar _ = this;\nreturn cljs_node_io.fs.hidden_QMARK_(self__.pathstring);\n});\n\ncljs_node_io.file.File.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"pathstring\",\"pathstring\",-647531094,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n});\n\ncljs_node_io.file.File.cljs$lang$type = true;\n\ncljs_node_io.file.File.cljs$lang$ctorStr = \"cljs-node-io.file/File\";\n\ncljs_node_io.file.File.cljs$lang$ctorPrWriter = (function (this__4192__auto__,writer__4193__auto__,opt__4194__auto__){\nreturn cljs.core._write(writer__4193__auto__,\"cljs-node-io.file/File\");\n});\n\n/**\n * Positional factory function for cljs-node-io.file/File.\n */\ncljs_node_io.file.__GT_File = (function cljs_node_io$file$__GT_File(pathstring){\nreturn (new cljs_node_io.file.File(pathstring));\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","a port of java.io.File's reified files to node","~:file","cljs_node_io/file.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",22],"~:ns-aliases",["^ ","~$clojure.core.async","~$cljs.core.async","~$raspicam","~$shadow.js.shim.module$raspicam"],"~:use-macros",["^ ","~$try-true","~$cljs-node-io.macros"],"~:excludes",["~#set",[]],"~:name","~$cljs-node-io.file","~:op","~:ns","~:imports",["^ ","~$Uri","~$goog.Uri"],"~:requires",["^ ","^K","^L","~$cljs-node-io.streams","^N","~$cljs-node-io.fs","^O","~$iofs","^O","~$cljs-node-io.protocols","^Q","~$cljs.core","^R","~$goog","^S"],"~:seen",["^E",["~:require","~:require-macros"]],"~:uses",["^ ","~$make-output-stream","^Q","~$make-writer","^Q","~$as-file","^Q","~$make-reader","^Q","~$Coercions","^Q","~$make-input-stream","^Q","~$FileOutputStream","^N","~$FileInputStream","^N","~$IOFactory","^Q","~$IFile","^Q","~$as-url","^Q"],"^V",["^ ","^C","^C","^R","^R"],"~:form",["~#list",["~$ns","^G","a port of java.io.File's reified files to node",["^18",["~:import","^L"]],["^18",["^V",["^C","~:refer",["^B"]]]],["^18",["^U",["^N","^1;",["^13","^12"]],["^O","~:as","^P"],["^Q","^1;",["^10","^16","^Z","^15","^14","^[","^Y","^11","^X"]]]]]],"~:flags",["^ ","^V",["^E",[]],"^U",["^E",[]]],"~:js-deps",["^ "],"~:deps",["^S","^R","^L","^N","^O","^Q"]],"^I","^G","~:resource-id",["~:shadow.build.classpath/resource","cljs_node_io/file.cljs"],"~:compiled-at",1540144999799,"~:resource-name","cljs_node_io/file.cljs","~:warnings",[],"~:source","(ns cljs-node-io.file \"a port of java.io.File's reified files to node\"\n  (:import goog.Uri)\n  (:require-macros [cljs-node-io.macros :refer [try-true]])\n  (:require [cljs-node-io.streams :refer [FileInputStream FileOutputStream]]\n            [cljs-node-io.fs :as iofs]\n            [cljs-node-io.protocols\n              :refer [Coercions as-url as-file IFile\n                      IOFactory make-reader make-writer make-input-stream make-output-stream]]))\n\n(defn setReadable*\n  \"@param {!number} mode : the file's existing mode\n   @param {!boolean} readable : add or remove read permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits\"\n  [mode ^boolean readable ^boolean ownerOnly]\n  (condp = [readable ownerOnly]\n    [true true]   (bit-or mode 256) ; add-user-read\n    [false true]  (bit-and mode (bit-not 256)) ; remove-user-read\n    [true false]  (bit-or mode 256 32 4) ; add-read-to-all\n    [false false] (bit-and mode  (bit-not 256) (bit-not 32) (bit-not 4)))) ;remove all reads\n\n(defn setReadable\n  \"toggles the readable permission bit(s) for the specified filepath.\n   If readable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits.\"\n  ([pathstr readable] (setReadable pathstr readable true))\n  ([pathstr ^boolean readable ^boolean ownerOnly]\n   (let [mode (iofs/permissions (iofs/stat pathstr))\n         n    (setReadable* mode readable ownerOnly)]\n     (iofs/chmod pathstr n))))\n\n(defn setWritable*\n  \"@param {!number} mode : the file's existing mode\n   @param {!boolean} writable : add or remove write permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits\"\n  [mode ^boolean writable ^boolean ownerOnly]\n  (condp = [writable ownerOnly]\n    [true true]   (bit-or mode 128) ; add-user-write\n    [false true]  (bit-and mode (bit-not 128)) ; remove-user-write\n    [true false]  (bit-or mode 128 16 2) ; add-write-to-all\n    [false false] (bit-and mode  (bit-not 128) (bit-not 16) (bit-not 2)))) ;remove all writes\n\n(defn setWritable\n  \"toggles the writable permission bit(s) for the specified filepath.\n   If writable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits.\"\n  ([pathstr ^boolean writable] (setWritable pathstr writable true))\n  ([pathstr ^boolean writable ^boolean ownerOnly]\n   (let [mode (iofs/permissions (iofs/stat pathstr))\n         n    (setWritable* mode writable ownerOnly)]\n     (iofs/chmod pathstr n))))\n\n(defn setExecutable*\n  \"@param {!number} mode : the file's existing mode\n   @param {!boolean} executable : add or remove execute permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits\"\n  [mode ^boolean executable ^boolean ownerOnly]\n  (condp = [executable ownerOnly]\n    [true true]   (bit-or mode 64) ; add-user-execute\n    [false true]  (bit-and mode (bit-not 64)) ; remove-user-execute\n    [true false]  (bit-or mode 64 8 1) ; add-execute-to-all\n    [false false] (bit-and mode  (bit-not 64) (bit-not 8) (bit-not 1)))) ;remove all executes\n\n(defn setExecutable\n  \"toggles the executable permission bit(s) for the specified filepath.\n   If executable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits.\"\n  ([pathstr ^boolean executable] (setExecutable pathstr executable true))\n  ([pathstr ^boolean executable ^boolean ownerOnly]\n   (let [mode (iofs/permissions (iofs/stat pathstr))\n         n    (setExecutable* mode executable ownerOnly)]\n     (iofs/chmod pathstr n))))\n\n(defn get-non-dirs\n  \"Returns sequence of strings representing non-existing directory components\n   of the passed pathstring, root first, in order\n   @param {!string} pathstring\n   @return {!ISeq}\"\n  [^String pathstring]\n  (reverse (take-while (complement iofs/dir?) (iterate iofs/dirname pathstring))))\n\n(deftype File\n  [^:mutable pathstring]\n  IFile\n  IEquiv\n  (-equiv [this that]\n    (let [pathntype (juxt #(.-getPath %) type)]\n      (= (pathntype this) (pathntype that))))\n  Coercions\n  (as-file [f] f)\n  (as-url [f] (.to-url f))\n  IOFactory\n  (make-reader [this opts] (make-reader (make-input-stream  this opts) opts))\n  (make-writer [this opts] (make-writer (make-output-stream this opts) opts))\n  (make-input-stream [this opts] (FileInputStream this opts))\n  (make-output-stream [this opts] (FileOutputStream this  opts))\n  IPrintWithWriter\n  (-pr-writer [this writer opts] ;#object[java.io.File 0x751b0a12 \"foo\\\\bar.txt\"]\n    (-write writer \"#object [cljs-node-io.File\")\n    (-write writer (str \"  \"  (.getPath this)  \" ]\")))\n  Object\n  (read [this](iofs/readFile pathstring \"utf8\"))\n  (read [this enc](iofs/readFile pathstring enc))\n  (aread [this](iofs/areadFile pathstring \"utf8\"))\n  (aread [this enc](iofs/areadFile pathstring enc))\n  (write [this content opts] (iofs/writeFile pathstring content opts))\n  (awrite [this content opts] (iofs/awriteFile pathstring content opts))\n  (canRead ^boolean [this] (iofs/readable? pathstring)) ;untested\n  (canWrite ^boolean [this] (iofs/writable? pathstring)) ;untested\n  (canExecute ^boolean [this] (iofs/executable? pathstring)) ;untested\n  (setReadable [_ r] (setReadable pathstring r))\n  (setReadable [_ r o] (setReadable pathstring r o))\n  (setWritable [_ w] (setWritable pathstring w))\n  (setWritable [_ w o] (setWritable pathstring w o))\n  (setExecutable [_ e] (setExecutable pathstring e))\n  (setExecutable [_ e o] (setExecutable pathstring e o))\n  (setReadOnly [this] (.setWritable this false false))\n  (setLastModified [_ time] (iofs/utimes pathstring time time)) ;sets atime + mtime\n  (createNewFile ^boolean [this] (try-true (.write this \"\" {:flags \"wx\"})))\n  (delete ^boolean [this] (try-true (iofs/rm pathstring)))\n  (deleteOnExit [this]\n    (.on js/process \"exit\"  (fn [exit-code] (.delete this))))\n  (equals ^boolean [this that] (= this that))\n  (exists ^boolean [_](iofs/fexists? pathstring))\n  (getAbsoluteFile [this] (File. (.getAbsolutePath this)))\n  (getAbsolutePath [_] (iofs/realpath pathstring))\n  (getCanonicalFile [this] (File. (.getCanonicalPath this)))\n  (getCanonicalPath [_] (iofs/normalize-path pathstring))\n  (getName [_] (iofs/basename pathstring))\n  (getExt  [_] (iofs/ext pathstring))\n  (getParent [_] (iofs/dirname pathstring))\n  (getParentFile [this] (File. (.getParent this))) ;=> File|nil\n  (getPath [_] pathstring)\n  (hashCode ^int [_] (hash pathstring))\n  (isAbsolute ^boolean [_] (iofs/absolute? pathstring))\n  (isDirectory ^boolean [_] (iofs/dir? pathstring))\n  (isFile ^boolean [_] (iofs/file? pathstring))\n  (isHidden ^boolean [_](iofs/hidden? pathstring))\n  (lastModified ^int [_]\n    (let [stats (try (iofs/stat pathstring) (catch js/Error e false))]\n      (if stats\n        (.valueOf (.-mtime stats))\n        0)))\n  (length ^int [_]\n    (let [stats (try (iofs/stat pathstring) (catch js/Error e false))]\n      (if stats\n        (if (.isDirectory stats)\n          nil\n          (.-size stats))\n        0)))\n  (list [_] ; ^ Vector|nil\n    (if-not (iofs/dir? pathstring)\n      nil\n      (try\n        (iofs/readdir pathstring)\n        (catch js/Error e nil))))\n  (list [this filterfn]\n    (if-let [files (.list this)]\n      (filterv (partial filterfn pathstring) files)))\n  (listFiles [this]\n    (mapv  #(File. (str pathstring iofs/sep %)) (.list this)))\n  (listFiles [this filterfn]\n    (if-let [files (.listFiles this)]\n      (filterv (partial filterfn pathstring) files))) ;trandsucers?\n  (mkdir ^boolean [_](try-true (iofs/mkdir pathstring)))\n  (mkdirs ^boolean [this]\n    (let [p  (.getPath this)\n          dirs (get-non-dirs p)]\n      (try-true (doseq [d dirs] (iofs/mkdir d)))))\n  (renameTo ^boolean [this dest]\n    (assert (string? dest) \"destination must be a string\")\n    (try-true\n      (iofs/rename pathstring dest)\n      (iofs/unlink pathstring)\n      (set! pathstring dest)))\n  (stats [_] (iofs/stat->clj (iofs/stat pathstring)))\n  (toString [_]  pathstring)\n  (toURI [f] (Uri. (str \"file:\" pathstring))))\n\n","~:reader-features",["^E",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["cljs-node-io.file/setReadable*","mode","readable","ownerOnly","pred__27594","expr__27595","G__27599","G__27600","G__27602","G__27603","G__27605","G__27606","G__27607","G__27608","js/Error","cljs.core/=","var_args","G__27620","cljs-node-io.file/setReadable","pathstr","cljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$3","cljs-node-io.fs/permissions","cljs-node-io.fs/stat","n","cljs-node-io.fs/chmod","cljs-node-io.file/setWritable*","writable","pred__27627","expr__27628","G__27630","G__27631","G__27632","G__27633","G__27634","G__27635","G__27636","G__27637","G__27639","cljs-node-io.file/setWritable","cljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$3","cljs-node-io.file/setExecutable*","executable","pred__27649","expr__27650","G__27654","G__27655","G__27659","G__27660","G__27661","G__27662","G__27663","G__27664","G__27669","cljs-node-io.file/setExecutable","cljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$3","cljs-node-io.file/get-non-dirs","pathstring","cljs.core/reverse","cljs.core.take_while.cljs$core$IFn$_invoke$arity$2","cljs.core/complement","cljs-node-io.fs/dir?","cljs.core/iterate","cljs-node-io.fs/dirname","cljs.core/PROTOCOL_SENTINEL","this__4192__auto__","writer__4193__auto__","opt__4194__auto__","cljs.core/-write","cljs-node-io.file/File","cljs-node-io.file/->File","this","that","pathntype","p1__27672#","cljs.core.juxt.cljs$core$IFn$_invoke$arity$2","cljs.core/type","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","f","opts","cljs-node-io.protocols/make-reader","cljs-node-io.protocols/make-writer","cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2","cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$2","writer","cljs-node-io.fs/readFile","enc","cljs-node-io.fs/areadFile","content","cljs-node-io.fs/writeFile","cljs-node-io.fs/awriteFile","cljs-node-io.fs/readable?","cljs-node-io.fs/writable?","cljs-node-io.fs/executable?","_","r","cljs_node_io.file.setReadable.cljs$core$IFn$_invoke$arity$2","o","w","cljs_node_io.file.setWritable.cljs$core$IFn$_invoke$arity$2","e","cljs_node_io.file.setExecutable.cljs$core$IFn$_invoke$arity$2","time","cljs-node-io.fs/utimes","e27690","e27712","cljs-node-io.fs/rm","js/process","exit-code","cljs-node-io.fs/fexists?","cljs-node-io.fs/realpath","cljs-node-io.fs/normalize-path","cljs_node_io.fs.basename.cljs$core$IFn$_invoke$arity$1","cljs-node-io.fs/ext","cljs.core/hash","cljs-node-io.fs/absolute?","cljs-node-io.fs/file?","cljs-node-io.fs/hidden?","stats","e27730","e27744","e27742","cljs-node-io.fs/readdir","filterfn","temp__5455__auto__","files","cljs.core/filterv","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","p1__27673#","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","cljs-node-io.fs/sep","e27694","cljs-node-io.fs/mkdir","p","dirs","e27698","seq__27701","cljs.core/seq","chunk__27702","count__27703","i__27704","temp__5457__auto__","cljs.core/chunked-seq?","c__4351__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","d","dest","e27719","cljs-node-io.fs/rename","cljs-node-io.fs/unlink","cljs-node-io.fs/stat->clj","goog/Uri"]]],"~:cache-keys",["~#cmap",[["^1A","cljs_node_io/file.cljs"],[1537666007418,"^S","^R","^L","^N","^O","^Q"],["^1A","goog/dom/tagname.js"],[1530991559994,"^S","~$goog.dom.HtmlElement"],["^1A","cljs/core/async/impl/ioc_helpers.cljs"],[1534380136417,"^S","^R","~$cljs.core.async.impl.protocols"],["~:macro","^R"],[1534380137000],["^1A","cljs/core/async.cljs"],[1534380136417,"^S","^R","^1O","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers"],["^1A","cljs_node_io/fs.cljs"],[1537666007418,"^S","^R","^>","^1O"],["^1A","goog/math/math.js"],[1530991559994,"^S","~$goog.array","~$goog.asserts"],["^1A","goog/labs/useragent/browser.js"],[1530991559994,"^S","^1V","~$goog.labs.userAgent.util","~$goog.object","~$goog.string"],["^1A","goog/array/array.js"],[1530991559994,"^S","^1W"],["^1A","cljs_node_io/protocols.cljs"],[1537666007418,"^S","^R"],["^1P","~$cljs.core.async.macros"],[1534380136000],["^1A","cljs_node_io/streams.cljs"],[1537666007418,"^S","^R","^L","^>","^Q"],["^1A","goog/debug/error.js"],[1530991559994,"^S"],["^1A","goog/dom/nodetype.js"],[1530991559994,"^S"],["^1A","goog/object/object.js"],[1530991559994,"^S"],"~:SHADOW-TIMESTAMP",[1540077702000,1534380137000],["^1A","goog/math/long.js"],[1530991559994,"^S","^1W","~$goog.reflect"],["^1A","cljs/core/async/impl/channels.cljs"],[1534380136417,"^S","^R","^1O","^1T","^1R"],["^1A","goog/functions/functions.js"],[1530991559994,"^S"],["^1A","cljs/core/async/impl/dispatch.cljs"],[1534380136417,"^S","^R","^1R","~$goog.async.nextTick"],["^1A","cljs/core/async/impl/protocols.cljs"],[1534380136417,"^S","^R"],["^1A","goog/structs/map.js"],[1530991559994,"^S","~$goog.iter.Iterator","~$goog.iter.StopIteration","^1Y"],["^1A","goog/labs/useragent/engine.js"],[1530991559994,"^S","^1V","^1X","^1Z"],["^1P","^C"],[1537666007000],["^1A","goog/asserts/asserts.js"],[1530991559994,"^S","~$goog.debug.Error","~$goog.dom.NodeType","^1Z"],["^1A","cljs/core/async/impl/buffers.cljs"],[1534380136417,"^S","^R","^1O"],["^1A","goog/uri/uri.js"],[1530991559994,"^S","^1V","^1W","^1Z","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1P","^>"],[1534380136000],["^1A","cljs/core/async/impl/timers.cljs"],[1534380136417,"^S","^R","^1O","^1Q","^1T"],["^1A","goog/base.js"],[1530991559994],["^1A","goog/structs/structs.js"],[1530991559994,"^S","^1V","^1Y"],["^1A","goog/debug/entrypointregistry.js"],[1530991559994,"^S","^1W"],["^1A","goog/string/string.js"],[1530991559994,"^S"],["^1A","goog/reflect/reflect.js"],[1530991559994,"^S"],["^1A","goog/labs/useragent/util.js"],[1530991559994,"^S","^1Z"],["^1P","~$cljs.core.async.impl.ioc-macros"],[1534380136000],["^1A","goog/string/stringbuffer.js"],[1530991559994,"^S"],["^1A","goog/iter/iter.js"],[1530991559994,"^S","^1V","^1W","~$goog.functions","~$goog.math"],["^1A","goog/async/nexttick.js"],[1530991559994,"^S","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^2=","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"],["^1A","goog/dom/htmlelement.js"],[1530991559994,"^S"],["^1A","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^1Z","^1Y","^1V","^L","~$goog.string.StringBuffer"],["^1A","goog/math/integer.js"],[1530991559994,"^S"],["^1A","goog/uri/utils.js"],[1530991559994,"^S","^1V","^1W","^1Z"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","a port of java.io.File's reified files to node","^7","cljs_node_io/file.cljs","^8",1,"^9",5,"^:",1,"^;",22],"^<",["^ ","^=","^>","^?","^@"],"^A",["^ ","^B","^C"],"^D",["^E",[]],"~:shadow/js-access-properties",["^E",["setReadOnly","awrite","deleteOnExit","toURI","mkdirs","getCanonicalPath","getPath","renameTo","canRead","on","isHidden","setLastModified","setReadable","listFiles","getExt","setWritable","canExecute","createNewFile","hashCode","aread","canWrite","exists","getParentFile","setExecutable","getAbsolutePath","getAbsoluteFile","equals","stats","isAbsolute","mkdir","getCanonicalFile"]],"^F","^G","^J",["^ ","^K","^L"],"^M",["^ ","^K","^L","^N","^N","^O","^O","^P","^O","^Q","^Q","^R","^R","^S","^S"],"^T",["^E",["^U","^V"]],"~:shadow/js-access-global",["^E",["process","Error"]],"^W",["^ ","^X","^Q","^Y","^Q","^Z","^Q","^[","^Q","^10","^Q","^11","^Q","^12","^N","^13","^N","^14","^Q","^15","^Q","^16","^Q"],"~:defs",["^ ","~$setReadable*",["^ ","~:protocol-inline",null,"^5",["^ ","^7","cljs_node_io/file.cljs","^8",10,"^9",7,"^:",10,"^;",19,"~:arglists",["^18",["~$quote",["^18",[["~$mode","~$readable","~$ownerOnly"]]]]],"^6","@param {!number} mode : the file's existing mode\n   @param {!boolean} readable : add or remove read permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"^F","~$cljs-node-io.file/setReadable*","~:variadic",false,"^7","cljs_node_io/file.cljs","^;",19,"~:method-params",["^18",[["^2N","^2O","^2P"]]],"~:protocol-impl",null,"~:arglists-meta",["^18",[null,null]],"^9",1,"^8",10,"^:",10,"~:max-fixed-arity",3,"~:fn-var",true,"^2L",["^18",["^2M",["^18",[["^2N","^2O","^2P"]]]]],"^6","@param {!number} mode : the file's existing mode\n   @param {!boolean} readable : add or remove read permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"~$setReadable",["^ ","^2K",null,"^5",["^ ","^7","cljs_node_io/file.cljs","^8",22,"^9",7,"^:",22,"^;",18,"^2L",["^18",["^2M",["^18",[["~$pathstr","^2O"],["^2Y","^2O","^2P"]]]]],"^6","toggles the readable permission bit(s) for the specified filepath.\n   If readable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits.","~:top-fn",["^ ","^2R",false,"^2V",3,"^2S",["^18",[["^2Y","^2O"],["^2Y","^2O","^2P"]]],"^2L",["^18",[["^2Y","^2O"],["^2Y","^2O","^2P"]]],"^2U",["^18",[null,null]]]],"^F","~$cljs-node-io.file/setReadable","^2R",false,"^7","cljs_node_io/file.cljs","^;",18,"^2Z",["^ ","^2R",false,"^2V",3,"^2S",["^18",[["^2Y","^2O"],["^2Y","^2O","^2P"]]],"^2L",["^18",[["^2Y","^2O"],["^2Y","^2O","^2P"]]],"^2U",["^18",[null,null]]],"^2S",["^18",[["^2Y","^2O"],["^2Y","^2O","^2P"]]],"^2T",null,"^2U",["^18",[null,null]],"^9",1,"^8",22,"^:",22,"^2V",3,"^2W",true,"^2L",["^18",[["^2Y","^2O"],["^2Y","^2O","^2P"]]],"^6","toggles the readable permission bit(s) for the specified filepath.\n   If readable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits."],"~$setWritable*",["^ ","^2K",null,"^5",["^ ","^7","cljs_node_io/file.cljs","^8",33,"^9",7,"^:",33,"^;",19,"^2L",["^18",["^2M",["^18",[["^2N","~$writable","^2P"]]]]],"^6","@param {!number} mode : the file's existing mode\n   @param {!boolean} writable : add or remove write permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"^F","~$cljs-node-io.file/setWritable*","^2R",false,"^7","cljs_node_io/file.cljs","^;",19,"^2S",["^18",[["^2N","^31","^2P"]]],"^2T",null,"^2U",["^18",[null,null]],"^9",1,"^8",33,"^:",33,"^2V",3,"^2W",true,"^2L",["^18",["^2M",["^18",[["^2N","^31","^2P"]]]]],"^6","@param {!number} mode : the file's existing mode\n   @param {!boolean} writable : add or remove write permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"~$setWritable",["^ ","^2K",null,"^5",["^ ","^7","cljs_node_io/file.cljs","^8",45,"^9",7,"^:",45,"^;",18,"^2L",["^18",["^2M",["^18",[["^2Y","^31"],["^2Y","^31","^2P"]]]]],"^6","toggles the writable permission bit(s) for the specified filepath.\n   If writable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits.","^2Z",["^ ","^2R",false,"^2V",3,"^2S",["^18",[["^2Y","^31"],["^2Y","^31","^2P"]]],"^2L",["^18",[["^2Y","^31"],["^2Y","^31","^2P"]]],"^2U",["^18",[null,null]]]],"^F","~$cljs-node-io.file/setWritable","^2R",false,"^7","cljs_node_io/file.cljs","^;",18,"^2Z",["^ ","^2R",false,"^2V",3,"^2S",["^18",[["^2Y","^31"],["^2Y","^31","^2P"]]],"^2L",["^18",[["^2Y","^31"],["^2Y","^31","^2P"]]],"^2U",["^18",[null,null]]],"^2S",["^18",[["^2Y","^31"],["^2Y","^31","^2P"]]],"^2T",null,"^2U",["^18",[null,null]],"^9",1,"^8",45,"^:",45,"^2V",3,"^2W",true,"^2L",["^18",[["^2Y","^31"],["^2Y","^31","^2P"]]],"^6","toggles the writable permission bit(s) for the specified filepath.\n   If writable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits."],"~$setExecutable*",["^ ","^2K",null,"^5",["^ ","^7","cljs_node_io/file.cljs","^8",56,"^9",7,"^:",56,"^;",21,"^2L",["^18",["^2M",["^18",[["^2N","~$executable","^2P"]]]]],"^6","@param {!number} mode : the file's existing mode\n   @param {!boolean} executable : add or remove execute permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"^F","~$cljs-node-io.file/setExecutable*","^2R",false,"^7","cljs_node_io/file.cljs","^;",21,"^2S",["^18",[["^2N","^36","^2P"]]],"^2T",null,"^2U",["^18",[null,null]],"^9",1,"^8",56,"^:",56,"^2V",3,"^2W",true,"^2L",["^18",["^2M",["^18",[["^2N","^36","^2P"]]]]],"^6","@param {!number} mode : the file's existing mode\n   @param {!boolean} executable : add or remove execute permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"~$setExecutable",["^ ","^2K",null,"^5",["^ ","^7","cljs_node_io/file.cljs","^8",68,"^9",7,"^:",68,"^;",20,"^2L",["^18",["^2M",["^18",[["^2Y","^36"],["^2Y","^36","^2P"]]]]],"^6","toggles the executable permission bit(s) for the specified filepath.\n   If executable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits.","^2Z",["^ ","^2R",false,"^2V",3,"^2S",["^18",[["^2Y","^36"],["^2Y","^36","^2P"]]],"^2L",["^18",[["^2Y","^36"],["^2Y","^36","^2P"]]],"^2U",["^18",[null,null]]]],"^F","~$cljs-node-io.file/setExecutable","^2R",false,"^7","cljs_node_io/file.cljs","^;",20,"^2Z",["^ ","^2R",false,"^2V",3,"^2S",["^18",[["^2Y","^36"],["^2Y","^36","^2P"]]],"^2L",["^18",[["^2Y","^36"],["^2Y","^36","^2P"]]],"^2U",["^18",[null,null]]],"^2S",["^18",[["^2Y","^36"],["^2Y","^36","^2P"]]],"^2T",null,"^2U",["^18",[null,null]],"^9",1,"^8",68,"^:",68,"^2V",3,"^2W",true,"^2L",["^18",[["^2Y","^36"],["^2Y","^36","^2P"]]],"^6","toggles the executable permission bit(s) for the specified filepath.\n   If executable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits."],"~$get-non-dirs",["^ ","^2K",null,"^5",["^ ","^7","cljs_node_io/file.cljs","^8",79,"^9",7,"^:",79,"^;",19,"^2L",["^18",["^2M",["^18",[["~$pathstring"]]]]],"^6","Returns sequence of strings representing non-existing directory components\n   of the passed pathstring, root first, in order\n   @param {!string} pathstring\n   @return {!ISeq}"],"^F","~$cljs-node-io.file/get-non-dirs","^2R",false,"^7","cljs_node_io/file.cljs","^;",19,"^2S",["^18",[["^3;"]]],"^2T",null,"^2U",["^18",[null,null]],"^9",1,"^8",79,"^:",79,"^2V",1,"^2W",true,"^2L",["^18",["^2M",["^18",[["^3;"]]]]],"^6","Returns sequence of strings representing non-existing directory components\n   of the passed pathstring, root first, in order\n   @param {!string} pathstring\n   @return {!ISeq}"],"~$File",["^ ","~:num-fields",1,"~:protocols",["^E",["~$cljs.core/IEquiv","~$cljs.core/Object","~$cljs-node-io.protocols/Coercions","~$cljs-node-io.protocols/IFile","~$cljs-node-io.protocols/IOFactory","~$cljs.core/IPrintWithWriter"]],"^F","~$cljs-node-io.file/File","^7","cljs_node_io/file.cljs","^;",14,"~:type",true,"^9",10,"^8",87,"~:record",false,"^:",87,"~:tag","~$function","~:skip-protocol-flag",["^E",["^3@","^3E"]]],"~$->File",["^ ","^2K",null,"^5",["^ ","^3?",["^E",["^3@","^3A","^3B","^3C","^3D","^3E"]],"^7","cljs_node_io/file.cljs","^;",14,"^9",10,"~:factory","~:positional","^8",87,"^:",87,"^2L",["^18",["^2M",["^18",[["^3;"]]]]],"^3K",["^E",["^3@","^3E"]],"^6","Positional factory function for cljs-node-io.file/File."],"^3?",["^E",["^3@","^3A","^3B","^3C","^3D","^3E"]],"^F","~$cljs-node-io.file/->File","^2R",false,"^7","cljs_node_io/file.cljs","^;",14,"^2S",["^18",[["^3;"]]],"^2T",null,"^2U",["^18",[null,null]],"^9",1,"^3M","^3N","^8",87,"^:",87,"^2V",1,"^2W",true,"^2L",["^18",["^2M",["^18",[["^3;"]]]]],"^3K",["^E",["^3@","^3E"]],"^6","Positional factory function for cljs-node-io.file/File."]],"^V",["^ ","^C","^C","^R","^R"],"~:cljs.analyzer/constants",["^ ","^T",["^E",["~:else","^3;","~:mutable","^1="]],"~:order",["^3Q","^1=","^3;","^3R"]],"^1=",["^ ","^V",["^E",[]],"^U",["^E",[]]],"^1>",["^ "],"^1?",["^S","^R","^L","^N","^O","^Q"]],"^I","^G","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1M",[["^3V","~:static-fns"],true,["^3V","~:elide-asserts"],false,["^3V","~:optimize-constants"],null,["^3V","~:external-config"],null,["^3V","~:tooling-config"],null,["^3V","~:emit-constants"],null,["^3V","~:infer-externs"],true,["^3V","^1F"],null,["~:js-options","~:js-provider"],"^U",["~:mode"],"~:dev",["^3V","~:fn-invoke-direct"],null,["^3V","~:source-map"],"/dev/null"]]]