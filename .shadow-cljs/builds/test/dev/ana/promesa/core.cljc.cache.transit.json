["^ ","~:output",["^ ","~:js","goog.provide('promesa.core');\ngoog.require('cljs.core');\ngoog.require('promesa.protocols');\ngoog.require('promesa.impl');\ngoog.require('promesa.impl.scheduler');\npromesa.core.Promise = promesa.impl.Promise;\n/**\n * Schedule a callable to be executed after the `ms` delay\n *   is reached.\n * \n *   In JVM it uses a scheduled executor service and in JS\n *   it uses the `setTimeout` function.\n */\npromesa.core.schedule = (function promesa$core$schedule(ms,func){\nreturn promesa.impl.scheduler.schedule(ms,func);\n});\n/**\n * Return a resolved promise with provided value.\n */\npromesa.core.resolved = (function promesa$core$resolved(v){\nreturn promesa.impl.resolved(v);\n});\n/**\n * Return a rejected promise with provided reason.\n */\npromesa.core.rejected = (function promesa$core$rejected(v){\nreturn promesa.impl.rejected(v);\n});\n/**\n * The promise constructor.\n */\npromesa.core.promise = (function promesa$core$promise(v){\nreturn promesa.protocols._promise(v);\n});\n/**\n * Return true if `v` is a promise instance.\n */\npromesa.core.promise_QMARK_ = (function promesa$core$promise_QMARK_(v){\nreturn (v instanceof promesa.core.Promise);\n});\n/**\n * Returns true if promise `p` is already fulfilled.\n */\npromesa.core.resolved_QMARK_ = (function promesa$core$resolved_QMARK_(p){\nreturn promesa.protocols._resolved_QMARK_(p);\n});\n/**\n * Returns true if promise `p` is already rejected.\n */\npromesa.core.rejected_QMARK_ = (function promesa$core$rejected_QMARK_(p){\nreturn promesa.protocols._rejected_QMARK_(p);\n});\n/**\n * Returns true if promise `p` is stil pending.\n */\npromesa.core.pending_QMARK_ = (function promesa$core$pending_QMARK_(p){\nreturn promesa.protocols._pending_QMARK_(p);\n});\n/**\n * Returns the current promise value.\n */\npromesa.core.extract = (function promesa$core$extract(p){\nreturn promesa.protocols._extract(p);\n});\n/**\n * Returns true if promise `p` is already done.\n */\npromesa.core.done_QMARK_ = cljs.core.complement(promesa.core.pending_QMARK_);\n/**\n * Apply a function to the promise value and\n *   return a new promise with the result.\n */\npromesa.core.map = (function promesa$core$map(f,p){\nreturn promesa.protocols._map(p,f);\n});\n/**\n * Same as `map` but removes one level of\n *   promise neesting. Useful when the map function\n *   returns a promise instead of value.\n * \n *   In JS environment this function is analogous\n *   to `map` because the promise abstraction overloads\n *   the `map` operator.\n */\npromesa.core.mapcat = (function promesa$core$mapcat(f,p){\nreturn promesa.protocols._bind(p,f);\n});\n/**\n * A chain helper for promises.\n */\npromesa.core.bind = (function promesa$core$bind(p,f){\nreturn promesa.protocols._bind(p,f);\n});\n/**\n * Similar to `map` but with parameters inverted\n *   for convenience and for familiarity with\n *   javascript's promises `.then` operator.\n * \n *   Unlike Clojure's `map`, will resolve any promises\n *   returned  by `f`.\n */\npromesa.core.then = (function promesa$core$then(p,f){\nreturn promesa.protocols._map(p,f);\n});\n/**\n * Like then but accepts multiple parameters.\n */\npromesa.core.chain = (function promesa$core$chain(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___18865 = arguments.length;\nvar i__4532__auto___18866 = (0);\nwhile(true){\nif((i__4532__auto___18866 < len__4531__auto___18865)){\nargs__4534__auto__.push((arguments[i__4532__auto___18866]));\n\nvar G__18868 = (i__4532__auto___18866 + (1));\ni__4532__auto___18866 = G__18868;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\npromesa.core.chain.cljs$core$IFn$_invoke$arity$variadic = (function (p,funcs){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__18855_SHARP_,p2__18856_SHARP_){\nreturn promesa.core.then(p1__18855_SHARP_,p2__18856_SHARP_);\n}),p,funcs);\n});\n\npromesa.core.chain.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\npromesa.core.chain.cljs$lang$applyTo = (function (seq18857){\nvar G__18858 = cljs.core.first(seq18857);\nvar seq18857__$1 = cljs.core.next(seq18857);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__18858,seq18857__$1);\n});\n\npromesa.core.branch = (function promesa$core$branch(p,success,failure){\nreturn promesa.protocols._catch(promesa.protocols._map(p,success),failure);\n});\n/**\n * Catch all promise chain helper.\n */\npromesa.core.catch$ = (function promesa$core$catch(var_args){\nvar G__18872 = arguments.length;\nswitch (G__18872) {\ncase 2:\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.catch$.cljs$core$IFn$_invoke$arity$2 = (function (p,f){\nreturn promesa.protocols._catch(p,f);\n});\n\npromesa.core.catch$.cljs$core$IFn$_invoke$arity$3 = (function (p,pred_or_type,f){\nvar accept_QMARK_ = ((cljs.core.ifn_QMARK_(pred_or_type))?pred_or_type:(function (p1__18870_SHARP_){\nreturn (p1__18870_SHARP_ instanceof pred_or_type);\n}));\nreturn promesa.protocols._catch(p,((function (accept_QMARK_){\nreturn (function (e){\nif(cljs.core.truth_((accept_QMARK_.cljs$core$IFn$_invoke$arity$1 ? accept_QMARK_.cljs$core$IFn$_invoke$arity$1(e) : accept_QMARK_.call(null,e)))){\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(e) : f.call(null,e));\n} else {\nreturn promesa.impl.rejected(e);\n}\n});})(accept_QMARK_))\n);\n});\n\npromesa.core.catch$.cljs$lang$maxFixedArity = 3;\n\n/**\n * Same as `catch` but with parameters inverted.\n */\npromesa.core.error = (function promesa$core$error(var_args){\nvar G__18876 = arguments.length;\nswitch (G__18876) {\ncase 2:\nreturn promesa.core.error.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn promesa.core.error.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.error.cljs$core$IFn$_invoke$arity$2 = (function (f,p){\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2(p,f);\n});\n\npromesa.core.error.cljs$core$IFn$_invoke$arity$3 = (function (f,type,p){\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$3(p,type,f);\n});\n\npromesa.core.error.cljs$lang$maxFixedArity = 3;\n\n/**\n * A short alias for `error` function.\n */\npromesa.core.err = promesa.core.error;\n/**\n * Attach handler to promise that will be\n *   executed independently if promise is\n *   resolved or rejected.\n */\npromesa.core.finally$ = (function promesa$core$finally(p,callback){\nreturn p.lastly(callback);\n});\n/**\n * Given an array of promises, return a promise\n *   that is fulfilled  when all the items in the\n *   array are fulfilled.\n * \n *   Example:\n * \n *   (-> (all [(promise :first-promise)\n *          (promise :second-promise)]\n *    (then (fn [[first-result second-result]]))\n *     (println (str first-result \", \" second-result)\n * \n *   Will print out\n *   :first-promise, :second-promise.\n * \n *   If at least one of the promises is rejected, the resulting promise will be\n *   rejected.\n */\npromesa.core.all = (function promesa$core$all(promises){\nreturn promesa.core.then(promesa.core.Promise.all(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(promises)),cljs.core.vec);\n});\n/**\n * Given an array of promises, return a promise\n *   that is fulfilled when first one item in the\n *   array is fulfilled.\n */\npromesa.core.any = (function promesa$core$any(promises){\nreturn promesa.core.Promise.any(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(promises));\n});\n/**\n * Cancel the promise.\n */\npromesa.core.cancel_BANG_ = (function promesa$core$cancel_BANG_(p){\npromesa.protocols._cancel(p);\n\nreturn p;\n});\n/**\n * Return true if `v` is a cancelled promise.\n */\npromesa.core.cancelled_QMARK_ = (function promesa$core$cancelled_QMARK_(v){\nreturn promesa.protocols._cancelled_QMARK_(v);\n});\n/**\n * Given a function that accepts a callback as the last argument return other\n *   function that returns a promise. Callback is expected to take single\n *   parameter (result of a computation).\n */\npromesa.core.promisify = (function promesa$core$promisify(callable){\nreturn (function() { \nvar G__18886__delegate = function (args){\nreturn promesa.core.promise((function (resolve,reject){\nvar args__$1 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(args),resolve);\ntry{return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(callable,args__$1);\n}catch (e18884){if((e18884 instanceof Error)){\nvar e = e18884;\nreturn (reject.cljs$core$IFn$_invoke$arity$1 ? reject.cljs$core$IFn$_invoke$arity$1(e) : reject.call(null,e));\n} else {\nthrow e18884;\n\n}\n}}));\n};\nvar G__18886 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__18887__i = 0, G__18887__a = new Array(arguments.length -  0);\nwhile (G__18887__i < G__18887__a.length) {G__18887__a[G__18887__i] = arguments[G__18887__i + 0]; ++G__18887__i;}\n  args = new cljs.core.IndexedSeq(G__18887__a,0,null);\n} \nreturn G__18886__delegate.call(this,args);};\nG__18886.cljs$lang$maxFixedArity = 0;\nG__18886.cljs$lang$applyTo = (function (arglist__18888){\nvar args = cljs.core.seq(arglist__18888);\nreturn G__18886__delegate(args);\n});\nG__18886.cljs$core$IFn$_invoke$arity$variadic = G__18886__delegate;\nreturn G__18886;\n})()\n;\n});\n/**\n * Returns a cancellable promise that will be fulfilled\n *   with this promise's fulfillment value or rejection reason.\n *   However, if this promise is not fulfilled or rejected\n *   within `ms` milliseconds, the returned promise is cancelled\n *   with a TimeoutError\n */\npromesa.core.timeout = (function promesa$core$timeout(var_args){\nvar G__18893 = arguments.length;\nswitch (G__18893) {\ncase 2:\nreturn promesa.core.timeout.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn promesa.core.timeout.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.timeout.cljs$core$IFn$_invoke$arity$2 = (function (p,t){\nreturn p.timeout(t);\n});\n\npromesa.core.timeout.cljs$core$IFn$_invoke$arity$3 = (function (p,t,v){\nreturn p.timeout(t,v);\n});\n\npromesa.core.timeout.cljs$lang$maxFixedArity = 3;\n\n/**\n * Given a timeout in miliseconds and optional\n *   value, returns a promise that will fulfilled\n *   with provided value (or nil) after the\n *   time is reached.\n */\npromesa.core.delay = (function promesa$core$delay(var_args){\nvar G__18903 = arguments.length;\nswitch (G__18903) {\ncase 1:\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.delay.cljs$core$IFn$_invoke$arity$1 = (function (t){\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$2(t,null);\n});\n\npromesa.core.delay.cljs$core$IFn$_invoke$arity$2 = (function (t,v){\nreturn promesa.core.promise((function (resolve,reject){\nreturn promesa.core.schedule(t,(function (){\nreturn (resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(v) : resolve.call(null,v));\n}));\n}));\n});\n\npromesa.core.delay.cljs$lang$maxFixedArity = 2;\n\n/**\n * A helper for start promise chain without worry about\n *   synchronous or asynchronous exceptions. Returns a promise\n *   resolved with the return value of the callback.\n */\npromesa.core.attempt = (function promesa$core$attempt(callback){\nreturn promesa.core.promise((function (resolve){\nvar G__18910 = (callback.cljs$core$IFn$_invoke$arity$0 ? callback.cljs$core$IFn$_invoke$arity$0() : callback.call(null));\nreturn (resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(G__18910) : resolve.call(null,G__18910));\n}));\n});\npromesa.core.await$ = (function promesa$core$await(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___18917 = arguments.length;\nvar i__4532__auto___18918 = (0);\nwhile(true){\nif((i__4532__auto___18918 < len__4531__auto___18917)){\nargs__4534__auto__.push((arguments[i__4532__auto___18918]));\n\nvar G__18919 = (i__4532__auto___18918 + (1));\ni__4532__auto___18918 = G__18919;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((0) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((0)),(0),null)):null);\nreturn promesa.core.await$.cljs$core$IFn$_invoke$arity$variadic(argseq__4535__auto__);\n});\n\npromesa.core.await$.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Should be only used in alet macro.\",cljs.core.PersistentArrayMap.EMPTY);\n});\n\npromesa.core.await$.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\npromesa.core.await$.cljs$lang$applyTo = (function (seq18915){\nvar self__4519__auto__ = this;\nreturn self__4519__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq18915));\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","promesa/core.cljc","~:line",25,"~:column",5,"~:end-line",25,"~:end-column",17],"~:ns-aliases",["^ ","~$clojure.core.async","~$cljs.core.async","~$raspicam","~$shadow.js.shim.module$raspicam"],"~:use-macros",null,"~:excludes",["~#set",["~$map","~$delay","~$mapcat","~$await","~$spread","~$promise"]],"~:name","~$promesa.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$promesa.protocols","^O","~$pt","^O","~$promesa.impl","^Q","~$impl","^Q","~$promesa.impl.scheduler","^S","~$ps","^S","~$cljs.core","^U","~$goog","^V"],"~:seen",["^B",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^U","^U"],"~:form",["~#list",["~$ns","^J",["^10",["~:refer-clojure","~:exclude",["^D","^G","^H","^F","^C","^E"]]],["^10",["^X",["^O","~:as","^P"],["^Q","^14","^R"],["^S","^14","^T"]]]]],"~:flags",["^ ","^X",["^B",[]]],"~:js-deps",["^ "],"~:deps",["^V","^U","^O","^Q","^S"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","promesa/core.cljc"],"~:compiled-at",1537546386665,"~:resource-name","promesa/core.cljc","~:warnings",[],"~:source",";; Copyright (c) 2015-2016 Andrey Antukh <niwi@niwi.nz>\n;; All rights reserved.\n;;\n;; Redistribution and use in source and binary forms, with or without\n;; modification, are permitted provided that the following conditions\n;; are met:\n;;\n;; 1. Redistributions of source code must retain the above copyright\n;;    notice, this list of conditions and the following disclaimer.\n;; 2. Redistributions in binary form must reproduce the above copyright\n;;    notice, this list of conditions and the following disclaimer in the\n;;    documentation and/or other materials provided with the distribution.\n;;\n;; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n;; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n;; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n;; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n;; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n;; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n;; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n;; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n;; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n;; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n(ns promesa.core\n  (:refer-clojure :exclude [delay spread promise await map mapcat])\n  (:require [promesa.protocols :as pt]\n            [promesa.impl :as impl]\n            [promesa.impl.scheduler :as ps])\n  #?(:clj\n     (:import java.util.concurrent.CompletableFuture\n              java.util.concurrent.CompletionStage)))\n\n;; --- Global Constants\n\n#?(:clj\n   (defn set-executor!\n     \"Replace the default executor instance with\n     your own instance.\"\n     [executor]\n     (alter-var-root #'impl/+executor+ (constantly executor))))\n\n#?(:cljs (def ^:const Promise impl/Promise))\n\n;; --- Scheduling helpers\n\n(defn schedule\n  \"Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function.\"\n  [ms func]\n  (ps/schedule ms func))\n\n;; --- Promise\n\n(defn resolved\n  \"Return a resolved promise with provided value.\"\n  [v]\n  (impl/resolved v))\n\n(defn rejected\n  \"Return a rejected promise with provided reason.\"\n  [v]\n  (impl/rejected v))\n\n(defn promise\n  \"The promise constructor.\"\n  [v]\n  (pt/-promise v))\n\n(defn promise?\n  \"Return true if `v` is a promise instance.\"\n  [v]\n  #?(:clj (instance? CompletionStage v)\n     :cljs (instance? Promise v)))\n\n;; Predicates\n\n(defn resolved?\n  \"Returns true if promise `p` is already fulfilled.\"\n  [p]\n  (pt/-resolved? p))\n\n(defn rejected?\n  \"Returns true if promise `p` is already rejected.\"\n  [p]\n  (pt/-rejected? p))\n\n(defn pending?\n  \"Returns true if promise `p` is stil pending.\"\n  [p]\n  (pt/-pending? p))\n\n(defn extract\n  \"Returns the current promise value.\"\n  [p]\n  (pt/-extract p))\n\n(def done?\n  \"Returns true if promise `p` is already done.\"\n  (complement pending?))\n\n;; Chaining\n\n(defn map\n  \"Apply a function to the promise value and\n  return a new promise with the result.\"\n  [f p]\n  (pt/-map p f))\n\n(defn mapcat\n  \"Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator.\"\n  [f p]\n  (pt/-bind p f))\n\n(defn bind\n  \"A chain helper for promises.\"\n  [p f]\n  (pt/-bind p f))\n\n(defn then\n  \"Similar to `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator.\n\n  Unlike Clojure's `map`, will resolve any promises\n  returned  by `f`.\"\n  [p f]\n  #?(:cljs (pt/-map p f)\n     :clj  (pt/-bind p (fn promise-wrap [in]\n                         (let [out (f in)]\n                           (if (promise? out)\n                             out\n                             (promise out)))))))\n\n(defn chain\n  \"Like then but accepts multiple parameters.\"\n  [p & funcs]\n  (reduce #(then %1 %2) p funcs))\n\n(defn branch\n  [p success failure]\n  (-> p\n      (pt/-map success)\n      (pt/-catch failure)))\n\n(defn catch\n  \"Catch all promise chain helper.\"\n  ([p f]\n   (pt/-catch p f))\n  ([p pred-or-type f]\n   (let [accept? (if (ifn? pred-or-type)\n                   pred-or-type\n                   #(instance? pred-or-type %))]\n     (pt/-catch p (fn [e]\n                    (if (accept? e)\n                      (f e)\n                      (impl/rejected e)))))))\n\n(defn error\n  \"Same as `catch` but with parameters inverted.\"\n  ([f p] (catch p f))\n  ([f type p] (catch p type f)))\n\n(def err\n  \"A short alias for `error` function.\"\n  error)\n\n(defn finally\n  \"Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected.\"\n  [p callback]\n  #?(:clj (-> p\n              (then (fn [_] (callback)))\n              (catch (fn [_] (callback))))\n     :cljs (.lastly p callback)))\n\n(defn all\n  \"Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled.\n\n  Example:\n\n  (-> (all [(promise :first-promise)\n            (promise :second-promise)]\n      (then (fn [[first-result second-result]]))\n       (println (str first-result \\\", \\\" second-result)\n\n  Will print out\n  :first-promise, :second-promise.\n\n  If at least one of the promises is rejected, the resulting promise will be\n  rejected.\"\n  [promises]\n  #?(:cljs (-> (.all Promise (into-array promises))\n               (then vec))\n     :clj (let [promises (clojure.core/map pt/-promise promises)]\n            (then (->> (into-array CompletableFuture promises)\n                       (CompletableFuture/allOf))\n                  (fn [_]\n                    (mapv pt/-extract promises))))))\n\n(defn any\n  \"Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled.\"\n  [promises]\n  #?(:cljs (.any Promise (into-array promises))\n     :clj (->> (clojure.core/map pt/-promise promises)\n               (into-array CompletableFuture)\n               (CompletableFuture/anyOf))))\n\n;; Cancellation\n\n(defn cancel!\n  \"Cancel the promise.\"\n  [p]\n  (pt/-cancel p)\n  p)\n\n(defn cancelled?\n  \"Return true if `v` is a cancelled promise.\"\n  [v]\n  (pt/-cancelled? v))\n\n;; Utils\n\n(defn promisify\n  \"Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation).\"\n  [callable]\n  (fn [& args]\n    (promise (fn [resolve reject]\n               (let [args (-> (vec args)\n                              (conj resolve))]\n                 (try\n                   (apply callable args)\n                   (catch #?(:clj Throwable :cljs js/Error) e\n                       (reject e))))))))\n\n#?(:cljs\n   (defn timeout\n     \"Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError\"\n     ([p t] (.timeout p t))\n     ([p t v] (.timeout p t v))))\n\n(defn delay\n  \"Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached.\"\n  ([t] (delay t nil))\n  ([t v]\n   #?(:cljs (promise (fn [resolve reject]\n                       (schedule t #(resolve v))))\n\n      :clj  (let [p (CompletableFuture.)]\n              (schedule t #(.complete p v))\n              p))))\n\n(defn attempt\n  \"A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback.\"\n  [callback]\n  #?(:cljs (promise (fn [resolve] (resolve (callback))))\n     :clj  (promise (fn [resolve reject]\n                      (let [result (callback)]\n                        (if (promise? result)\n                          (then result resolve)\n                          (resolve result)))))))\n\n#?(:clj\n   (defmacro do*\n     \"A sugar syntax on top of `attempt`.\"\n     [& body]\n     `(attempt #(do ~@body))))\n\n(defn await\n  [& args]\n  (throw (ex-info \"Should be only used in alet macro.\" {})))\n\n#?(:clj\n   (defmacro alet\n     \"A `let` alternative that always returns promise and allows\n     use `await` marker function in order to emulate the async/await\n     syntax and make the let expression look like synchronous where\n     async operations are performed.\"\n     [bindings & body]\n     (let [await# `await]\n       (->> (reverse (partition 2 bindings))\n            (reduce (fn [acc [l r]]\n                      (if (and (coll? r)\n                               (symbol? (first r))\n                               (not= \".\" (subs (name (first r)) 0 1)))\n                        `(if (= ~await# ~(first r))\n                           (bind ~(second r) (fn [~l] ~acc))\n                           (let [~l ~r] ~acc))\n                        `(let [~l ~r] ~acc)))\n                    `(promise (do ~@body)))))))\n","~:reader-features",["^B",["~:cljs"]],"~:source-map",["^ ","~i42",["^ ","~i9",[["^ ","~:gcol",0,"~:gline",5]],"~i22",[["^ ","^1B",0,"^1C",5,"^I","promesa.core/Promise"]],"~i30",[["^ ","^1B",23,"^1C",5,"^I","promesa.impl/Promise"]]],"~i46",["^ ","~i0",[["^ ","^1B",0,"^1C",6],["^ ","^1B",24,"^1C",13],["^ ","^1B",0,"^1C",14]],"~i6",[["^ ","^1B",0,"^1C",13,"^I","promesa.core/schedule"]]],"~i52",["^ ","~i3",[["^ ","^1B",56,"^1C",13,"^I","ms"]],"~i6",[["^ ","^1B",59,"^1C",13,"^I","func"]]],"~i53",["^ ","~i2",[["^ ","^1B",0,"^1C",14]],"~i3",[["^ ","^1B",7,"^1C",14,"^I","promesa.impl.scheduler/schedule"]],"~i15",[["^ ","^1B",39,"^1C",14,"^I","ms"]],"~i18",[["^ ","^1B",42,"^1C",14,"^I","func"]]],"~i57",["^ ","~i0",[["^ ","^1B",0,"^1C",16],["^ ","^1B",24,"^1C",19],["^ ","^1B",0,"^1C",20]],"~i6",[["^ ","^1B",0,"^1C",19,"^I","promesa.core/resolved"]]],"~i59",["^ ","~i3",[["^ ","^1B",56,"^1C",19,"^I","v"]]],"~i60",["^ ","~i2",[["^ ","^1B",0,"^1C",20]],"~i3",[["^ ","^1B",7,"^1C",20,"^I","promesa.impl/resolved"]],"~i17",[["^ ","^1B",29,"^1C",20,"^I","v"]]],"~i62",["^ ","~i0",[["^ ","^1B",0,"^1C",22],["^ ","^1B",24,"^1C",25],["^ ","^1B",0,"^1C",26]],"~i6",[["^ ","^1B",0,"^1C",25,"^I","promesa.core/rejected"]]],"~i64",["^ ","~i3",[["^ ","^1B",56,"^1C",25,"^I","v"]]],"~i65",["^ ","~i2",[["^ ","^1B",0,"^1C",26]],"~i3",[["^ ","^1B",7,"^1C",26,"^I","promesa.impl/rejected"]],"^1N",[["^ ","^1B",29,"^1C",26,"^I","v"]]],"~i67",["^ ","~i0",[["^ ","^1B",0,"^1C",28],["^ ","^1B",23,"^1C",31],["^ ","^1B",0,"^1C",32]],"~i6",[["^ ","^1B",0,"^1C",31,"^I","promesa.core/promise"]]],"~i69",["^ ","~i3",[["^ ","^1B",54,"^1C",31,"^I","v"]]],"~i70",["^ ","~i2",[["^ ","^1B",0,"^1C",32]],"~i3",[["^ ","^1B",7,"^1C",32,"^I","promesa.protocols/-promise"]],"^1I",[["^ ","^1B",34,"^1C",32,"^I","v"]]],"~i72",["^ ","~i0",[["^ ","^1B",0,"^1C",34],["^ ","^1B",30,"^1C",37],["^ ","^1B",0,"^1C",38]],"~i6",[["^ ","^1B",0,"^1C",37,"^I","promesa.core/promise?"]]],"~i74",["^ ","~i3",[["^ ","^1B",68,"^1C",37,"^I","v"]]],"~i76",["^ ","~i11",[["^ ","^1B",0,"^1C",38]],"^1D",[["^ ","^1B",21,"^1C",38,"^I","promesa.core/Promise"]],"^1E",[["^ ","^1B",8,"^1C",38,"^I","v"]]],"~i80",["^ ","~i0",[["^ ","^1B",0,"^1C",40],["^ ","^1B",31,"^1C",43],["^ ","^1B",0,"^1C",44]],"~i6",[["^ ","^1B",0,"^1C",43,"^I","promesa.core/resolved?"]]],"~i82",["^ ","~i3",[["^ ","^1B",70,"^1C",43,"^I","p"]]],"~i83",["^ ","~i2",[["^ ","^1B",0,"^1C",44]],"~i3",[["^ ","^1B",7,"^1C",44,"^I","promesa.protocols/-resolved?"]],"^1N",[["^ ","^1B",42,"^1C",44,"^I","p"]]],"~i85",["^ ","~i0",[["^ ","^1B",0,"^1C",46],["^ ","^1B",31,"^1C",49],["^ ","^1B",0,"^1C",50]],"~i6",[["^ ","^1B",0,"^1C",49,"^I","promesa.core/rejected?"]]],"~i87",["^ ","~i3",[["^ ","^1B",70,"^1C",49,"^I","p"]]],"~i88",["^ ","~i2",[["^ ","^1B",0,"^1C",50]],"~i3",[["^ ","^1B",7,"^1C",50,"^I","promesa.protocols/-rejected?"]],"^1N",[["^ ","^1B",42,"^1C",50,"^I","p"]]],"~i90",["^ ","~i0",[["^ ","^1B",0,"^1C",52],["^ ","^1B",30,"^1C",55],["^ ","^1B",0,"^1C",56]],"~i6",[["^ ","^1B",0,"^1C",55,"^I","promesa.core/pending?"]]],"~i92",["^ ","~i3",[["^ ","^1B",68,"^1C",55,"^I","p"]]],"~i93",["^ ","~i2",[["^ ","^1B",0,"^1C",56]],"~i3",[["^ ","^1B",7,"^1C",56,"^I","promesa.protocols/-pending?"]],"~i16",[["^ ","^1B",41,"^1C",56,"^I","p"]]],"~i95",["^ ","~i0",[["^ ","^1B",0,"^1C",58],["^ ","^1B",23,"^1C",61],["^ ","^1B",0,"^1C",62]],"~i6",[["^ ","^1B",0,"^1C",61,"^I","promesa.core/extract"]]],"~i97",["^ ","~i3",[["^ ","^1B",54,"^1C",61,"^I","p"]]],"~i98",["^ ","~i2",[["^ ","^1B",0,"^1C",62]],"~i3",[["^ ","^1B",7,"^1C",62,"^I","promesa.protocols/-extract"]],"^1I",[["^ ","^1B",34,"^1C",62,"^I","p"]]],"~i100",["^ ","~i0",[["^ ","^1B",0,"^1C",64]],"~i5",[["^ ","^1B",0,"^1C",67,"^I","promesa.core/done?"]]],"~i102",["^ ","~i2",[["^ ","^1B",27,"^1C",67]],"~i3",[["^ ","^1B",27,"^1C",67,"^I","cljs.core/complement"]],"~i14",[["^ ","^1B",48,"^1C",67,"^I","promesa.core/pending?"]]],"~i106",["^ ","~i0",[["^ ","^1B",0,"^1C",68],["^ ","^1B",19,"^1C",72],["^ ","^1B",0,"^1C",73]],"~i6",[["^ ","^1B",0,"^1C",72,"^I","promesa.core/map"]]],"~i109",["^ ","~i3",[["^ ","^1B",46,"^1C",72,"^I","f"]],"~i5",[["^ ","^1B",48,"^1C",72,"^I","p"]]],"~i110",["^ ","~i2",[["^ ","^1B",0,"^1C",73]],"~i3",[["^ ","^1B",7,"^1C",73,"^I","promesa.protocols/-map"]],"^1X",[["^ ","^1B",30,"^1C",73,"^I","p"]],"~i13",[["^ ","^1B",32,"^1C",73,"^I","f"]]],"~i112",["^ ","~i0",[["^ ","^1B",0,"^1C",75],["^ ","^1B",22,"^1C",84],["^ ","^1B",0,"^1C",85]],"~i6",[["^ ","^1B",0,"^1C",84,"^I","promesa.core/mapcat"]]],"~i120",["^ ","~i3",[["^ ","^1B",52,"^1C",84,"^I","f"]],"~i5",[["^ ","^1B",54,"^1C",84,"^I","p"]]],"~i121",["^ ","~i2",[["^ ","^1B",0,"^1C",85]],"~i3",[["^ ","^1B",7,"^1C",85,"^I","promesa.protocols/-bind"]],"~i12",[["^ ","^1B",31,"^1C",85,"^I","p"]],"^2<",[["^ ","^1B",33,"^1C",85,"^I","f"]]],"~i123",["^ ","~i0",[["^ ","^1B",0,"^1C",87],["^ ","^1B",20,"^1C",90],["^ ","^1B",0,"^1C",91]],"~i6",[["^ ","^1B",0,"^1C",90,"^I","promesa.core/bind"]]],"~i125",["^ ","~i3",[["^ ","^1B",48,"^1C",90,"^I","p"]],"~i5",[["^ ","^1B",50,"^1C",90,"^I","f"]]],"~i126",["^ ","~i2",[["^ ","^1B",0,"^1C",91]],"~i3",[["^ ","^1B",7,"^1C",91,"^I","promesa.protocols/-bind"]],"^2D",[["^ ","^1B",31,"^1C",91,"^I","p"]],"^2<",[["^ ","^1B",33,"^1C",91,"^I","f"]]],"~i128",["^ ","~i0",[["^ ","^1B",0,"^1C",93],["^ ","^1B",20,"^1C",101],["^ ","^1B",0,"^1C",102]],"~i6",[["^ ","^1B",0,"^1C",101,"^I","promesa.core/then"]]],"~i135",["^ ","~i3",[["^ ","^1B",48,"^1C",101,"^I","p"]],"~i5",[["^ ","^1B",50,"^1C",101,"^I","f"]]],"~i136",["^ ","^1X",[["^ ","^1B",0,"^1C",102]],"^2D",[["^ ","^1B",7,"^1C",102,"^I","promesa.protocols/-map"]],"~i20",[["^ ","^1B",30,"^1C",102,"^I","p"]],"^1D",[["^ ","^1B",32,"^1C",102,"^I","f"]]],"~i143",["^ ","~i0",[["^ ","^1B",0,"^1C",104],["^ ","^1B",0,"^1C",104],["^ ","^1B",21,"^1C",107],["^ ","^1B",50,"^1C",107,"^I","var_args"],["^ ","^1B",0,"^1C",108],["^ ","^1B",0,"^1C",108],["^ ","^1B",4,"^1C",108,"^I","args__4534__auto__"],["^ ","^1B",25,"^1C",108],["^ ","^1B",0,"^1C",109],["^ ","^1B",0,"^1C",109],["^ ","^1B",4,"^1C",109,"^I","len__4531__auto__"],["^ ","^1B",30,"^1C",109],["^ ","^1B",30,"^1C",109],["^ ","^1B",0,"^1C",110],["^ ","^1B",0,"^1C",110],["^ ","^1B",4,"^1C",110,"^I","i__4532__auto__"],["^ ","^1B",28,"^1C",110],["^ ","^1B",0,"^1C",112],["^ ","^1B",0,"^1C",112],["^ ","^1B",3,"^1C",112],["^ ","^1B",4,"^1C",112,"^I","i__4532__auto__"],["^ ","^1B",28,"^1C",112,"^I","len__4531__auto__"],["^ ","^1B",0,"^1C",113],["^ ","^1B",0,"^1C",113],["^ ","^1B",0,"^1C",113,"^I","args__4534__auto__"],["^ ","^1B",24,"^1C",113],["^ ","^1B",25,"^1C",113],["^ ","^1B",35,"^1C",113,"^I","i__4532__auto__"],["^ ","^1B",0,"^1C",115],["^ ","^1B",15,"^1C",115],["^ ","^1B",16,"^1C",115,"^I","i__4532__auto__"],["^ ","^1B",40,"^1C",115],["^ ","^1B",0,"^1C",119],["^ ","^1B",0,"^1C",123],["^ ","^1B",4,"^1C",123,"^I","argseq__4535__auto__"],["^ ","^1B",27,"^1C",123],["^ ","^1B",29,"^1C",123],["^ ","^1B",30,"^1C",123],["^ ","^1B",36,"^1C",123],["^ ","^1B",36,"^1C",123,"^I","args__4534__auto__"],["^ ","^1B",64,"^1C",123],["^ ","^1B",64,"^1C",123],["^ ","^1B",69,"^1C",123,"^I","cljs.core/IndexedSeq"],["^ ","^1B",90,"^1C",123],["^ ","^1B",90,"^1C",123,"^I","args__4534__auto__"],["^ ","^1B",115,"^1C",123],["^ ","^1B",120,"^1C",123],["^ ","^1B",124,"^1C",123],["^ ","^1B",131,"^1C",123],["^ ","^1B",0,"^1C",124],["^ ","^1B",0,"^1C",124],["^ ","^1B",7,"^1C",124,"^I","promesa.core/chain"],["^ ","^1B",63,"^1C",124],["^ ","^1B",64,"^1C",124],["^ ","^1B",74,"^1C",124],["^ ","^1B",80,"^1C",124,"^I","argseq__4535__auto__"],["^ ","^1B",0,"^1C",127],["^ ","^1B",0,"^1C",127],["^ ","^1B",0,"^1C",127],["^ ","^1B",0,"^1C",127,"^I","promesa.core/chain"],["^ ","^1B",58,"^1C",127],["^ ","^1B",0,"^1C",128],["^ ","^1B",0,"^1C",133],["^ ","^1B",0,"^1C",133],["^ ","^1B",0,"^1C",133,"^I","promesa.core/chain"],["^ ","^1B",45,"^1C",133],["^ ","^1B",0,"^1C",135],["^ ","^1B",0,"^1C",136],["^ ","^1B",0,"^1C",136],["^ ","^1B",0,"^1C",136,"^I","promesa.core/chain"],["^ ","^1B",39,"^1C",136],["^ ","^1B",50,"^1C",136,"^I","seq18857"],["^ ","^1B",0,"^1C",137],["^ ","^1B",0,"^1C",137],["^ ","^1B",4,"^1C",137,"^I","G__18858"],["^ ","^1B",15,"^1C",137],["^ ","^1B",15,"^1C",137,"^I","cljs.core/first"],["^ ","^1B",31,"^1C",137,"^I","seq18857"],["^ ","^1B",4,"^1C",138,"^I","seq18857"],["^ ","^1B",19,"^1C",138],["^ ","^1B",19,"^1C",138,"^I","cljs.core/next"],["^ ","^1B",34,"^1C",138,"^I","seq18857"],["^ ","^1B",0,"^1C",139],["^ ","^1B",0,"^1C",139],["^ ","^1B",4,"^1C",139,"^I","self__4518__auto__"],["^ ","^1B",25,"^1C",139],["^ ","^1B",0,"^1C",140],["^ ","^1B",0,"^1C",140],["^ ","^1B",7,"^1C",140,"^I","self__4518__auto__"],["^ ","^1B",63,"^1C",140,"^I","G__18858"],["^ ","^1B",72,"^1C",140,"^I","seq18857"],["^ ","^1B",0,"^1C",143]],"~i6",[["^ ","^1B",0,"^1C",107,"^I","promesa.core/chain"]]],"~i145",["^ ","~i3",[["^ ","^1B",69,"^1C",127,"^I","p"]],"~i7",[["^ ","^1B",71,"^1C",127,"^I","funcs"]]],"~i146",["^ ","~i2",[["^ ","^1B",0,"^1C",128],["^ ","^1B",54,"^1C",128],["^ ","^1B",65,"^1C",128,"^I","p1__18855#"],["^ ","^1B",82,"^1C",128,"^I","p2__18856#"],["^ ","^1B",0,"^1C",129]],"~i3",[["^ ","^1B",7,"^1C",128,"^I","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^1X",[["^ ","^1B",0,"^1C",129],["^ ","^1B",25,"^1C",129,"^I","p1__18855#"],["^ ","^1B",42,"^1C",129,"^I","p2__18856#"]],"^2D",[["^ ","^1B",7,"^1C",129,"^I","promesa.core/then"]],"~i24",[["^ ","^1B",3,"^1C",130,"^I","p"]],"~i26",[["^ ","^1B",5,"^1C",130,"^I","funcs"]]],"~i148",["^ ","~i0",[["^ ","^1B",0,"^1C",143],["^ ","^1B",22,"^1C",143],["^ ","^1B",0,"^1C",144]],"~i6",[["^ ","^1B",0,"^1C",143,"^I","promesa.core/branch"]]],"~i149",["^ ","~i3",[["^ ","^1B",52,"^1C",143,"^I","p"]],"~i5",[["^ ","^1B",54,"^1C",143,"^I","success"]],"^2@",[["^ ","^1B",62,"^1C",143,"^I","failure"]]],"~i150",["^ ","~i6",[["^ ","^1B",55,"^1C",144,"^I","p"]]],"~i151",["^ ","~i6",[["^ ","^1B",32,"^1C",144]],"~i7",[["^ ","^1B",32,"^1C",144,"^I","promesa.protocols/-map"]],"^1I",[["^ ","^1B",57,"^1C",144,"^I","success"]]],"~i152",["^ ","~i6",[["^ ","^1B",0,"^1C",144]],"~i7",[["^ ","^1B",7,"^1C",144,"^I","promesa.protocols/-catch"]],"^1N",[["^ ","^1B",66,"^1C",144,"^I","failure"]]],"~i154",["^ ","~i0",[["^ ","^1B",0,"^1C",146],["^ ","^1B",0,"^1C",146],["^ ","^1B",22,"^1C",149],["^ ","^1B",51,"^1C",149,"^I","var_args"],["^ ","^1B",0,"^1C",150],["^ ","^1B",0,"^1C",150],["^ ","^1B",4,"^1C",150,"^I","G__18872"],["^ ","^1B",15,"^1C",150],["^ ","^1B",15,"^1C",150],["^ ","^1B",0,"^1C",151],["^ ","^1B",0,"^1C",151],["^ ","^1B",8,"^1C",151,"^I","G__18872"],["^ ","^1B",5,"^1C",152],["^ ","^1B",0,"^1C",153],["^ ","^1B",7,"^1C",153,"^I","promesa.core/catch"],["^ ","^1B",57,"^1C",153],["^ ","^1B",58,"^1C",153],["^ ","^1B",68,"^1C",153],["^ ","^1B",74,"^1C",153],["^ ","^1B",75,"^1C",153],["^ ","^1B",85,"^1C",153],["^ ","^1B",5,"^1C",156],["^ ","^1B",0,"^1C",157],["^ ","^1B",7,"^1C",157,"^I","promesa.core/catch"],["^ ","^1B",57,"^1C",157],["^ ","^1B",58,"^1C",157],["^ ","^1B",68,"^1C",157],["^ ","^1B",74,"^1C",157],["^ ","^1B",75,"^1C",157],["^ ","^1B",85,"^1C",157],["^ ","^1B",91,"^1C",157],["^ ","^1B",92,"^1C",157],["^ ","^1B",102,"^1C",157],["^ ","^1B",0,"^1C",161],["^ ","^1B",6,"^1C",161],["^ ","^1B",11,"^1C",161,"^I","js/Error"],["^ ","^1B",17,"^1C",161],["^ ","^1B",18,"^1C",161],["^ ","^1B",80,"^1C",161],["^ ","^1B",80,"^1C",161],["^ ","^1B",0,"^1C",166],["^ ","^1B",0,"^1C",166],["^ ","^1B",52,"^1C",166],["^ ","^1B",0,"^1C",167],["^ ","^1B",0,"^1C",170],["^ ","^1B",0,"^1C",170],["^ ","^1B",52,"^1C",170],["^ ","^1B",0,"^1C",171],["^ ","^1B",0,"^1C",185],["^ ","^1B",0,"^1C",185],["^ ","^1B",46,"^1C",185],["^ ","^1B",0,"^1C",187]],"~i6",[["^ ","^1B",0,"^1C",149,"^I","promesa.core/catch"],["^ ","^1B",0,"^1C",166,"^I","promesa.core/catch"],["^ ","^1B",0,"^1C",170,"^I","promesa.core/catch"],["^ ","^1B",0,"^1C",185,"^I","promesa.core/catch"]]],"~i156",["^ ","~i4",[["^ ","^1B",63,"^1C",166,"^I","p"]],"~i6",[["^ ","^1B",65,"^1C",166,"^I","f"]]],"~i157",["^ ","~i3",[["^ ","^1B",0,"^1C",167]],"~i4",[["^ ","^1B",7,"^1C",167,"^I","promesa.protocols/-catch"]],"^2<",[["^ ","^1B",32,"^1C",167,"^I","p"]],"^26",[["^ ","^1B",34,"^1C",167,"^I","f"]]],"~i158",["^ ","~i4",[["^ ","^1B",63,"^1C",170,"^I","p"]],"~i6",[["^ ","^1B",65,"^1C",170,"^I","pred-or-type"]],"~i19",[["^ ","^1B",78,"^1C",170,"^I","f"]]],"~i159",["^ ","~i3",[["^ ","^1B",0,"^1C",171],["^ ","^1B",0,"^1C",174]],"~i9",[["^ ","^1B",4,"^1C",171,"^I","accept?"]],"^1N",[["^ ","^1B",20,"^1C",171],["^ ","^1B",71,"^1C",171],["^ ","^1B",82,"^1C",171,"^I","p1__18870#"],["^ ","^1B",0,"^1C",172]],"~i21",[["^ ","^1B",22,"^1C",171]],"^1D",[["^ ","^1B",22,"^1C",171,"^I","cljs.core/ifn?"]],"~i27",[["^ ","^1B",43,"^1C",171,"^I","pred-or-type"]]],"~i160",["^ ","^2Z",[["^ ","^1B",58,"^1C",171,"^I","pred-or-type"]]],"~i161",["^ ","^2K",[["^ ","^1B",0,"^1C",172],["^ ","^1B",8,"^1C",172,"^I","p1__18870#"]],"~i31",[["^ ","^1B",36,"^1C",172,"^I","pred-or-type"]]],"~i162",["^ ","~i5",[["^ ","^1B",0,"^1C",174]],"~i6",[["^ ","^1B",7,"^1C",174,"^I","promesa.protocols/-catch"]],"^26",[["^ ","^1B",32,"^1C",174,"^I","p"]],"^1J",[["^ ","^1B",34,"^1C",174],["^ ","^1B",0,"^1C",176]],"~i23",[["^ ","^1B",18,"^1C",175,"^I","e"]]],"~i163",["^ ","^2K",[["^ ","^1B",0,"^1C",176]],"^2O",[["^ ","^1B",20,"^1C",176]],"~i25",[["^ ","^1B",21,"^1C",176,"^I","accept?"],["^ ","^1B",67,"^1C",176,"^I","accept?"],["^ ","^1B",116,"^1C",176,"^I","accept?"]],"~i33",[["^ ","^1B",111,"^1C",176,"^I","e"],["^ ","^1B",140,"^1C",176,"^I","e"]]],"~i164",["^ ","^1D",[["^ ","^1B",0,"^1C",177]],"^36",[["^ ","^1B",8,"^1C",177,"^I","f"],["^ ","^1B",42,"^1C",177,"^I","f"],["^ ","^1B",79,"^1C",177,"^I","f"]],"^38",[["^ ","^1B",74,"^1C",177,"^I","e"],["^ ","^1B",91,"^1C",177,"^I","e"]]],"~i165",["^ ","^1D",[["^ ","^1B",0,"^1C",179]],"^36",[["^ ","^1B",7,"^1C",179,"^I","promesa.impl/rejected"]],"~i37",[["^ ","^1B",29,"^1C",179,"^I","e"]]],"~i167",["^ ","~i0",[["^ ","^1B",0,"^1C",187],["^ ","^1B",0,"^1C",187],["^ ","^1B",21,"^1C",190],["^ ","^1B",50,"^1C",190,"^I","var_args"],["^ ","^1B",0,"^1C",191],["^ ","^1B",0,"^1C",191],["^ ","^1B",4,"^1C",191,"^I","G__18876"],["^ ","^1B",15,"^1C",191],["^ ","^1B",15,"^1C",191],["^ ","^1B",0,"^1C",192],["^ ","^1B",0,"^1C",192],["^ ","^1B",8,"^1C",192,"^I","G__18876"],["^ ","^1B",5,"^1C",193],["^ ","^1B",0,"^1C",194],["^ ","^1B",7,"^1C",194,"^I","promesa.core/error"],["^ ","^1B",56,"^1C",194],["^ ","^1B",57,"^1C",194],["^ ","^1B",67,"^1C",194],["^ ","^1B",73,"^1C",194],["^ ","^1B",74,"^1C",194],["^ ","^1B",84,"^1C",194],["^ ","^1B",5,"^1C",197],["^ ","^1B",0,"^1C",198],["^ ","^1B",7,"^1C",198,"^I","promesa.core/error"],["^ ","^1B",56,"^1C",198],["^ ","^1B",57,"^1C",198],["^ ","^1B",67,"^1C",198],["^ ","^1B",73,"^1C",198],["^ ","^1B",74,"^1C",198],["^ ","^1B",84,"^1C",198],["^ ","^1B",90,"^1C",198],["^ ","^1B",91,"^1C",198],["^ ","^1B",101,"^1C",198],["^ ","^1B",0,"^1C",202],["^ ","^1B",6,"^1C",202],["^ ","^1B",11,"^1C",202,"^I","js/Error"],["^ ","^1B",17,"^1C",202],["^ ","^1B",18,"^1C",202],["^ ","^1B",80,"^1C",202],["^ ","^1B",80,"^1C",202],["^ ","^1B",0,"^1C",207],["^ ","^1B",0,"^1C",207],["^ ","^1B",51,"^1C",207],["^ ","^1B",0,"^1C",208],["^ ","^1B",0,"^1C",211],["^ ","^1B",0,"^1C",211],["^ ","^1B",51,"^1C",211],["^ ","^1B",0,"^1C",212],["^ ","^1B",0,"^1C",215],["^ ","^1B",0,"^1C",215],["^ ","^1B",45,"^1C",215],["^ ","^1B",0,"^1C",217]],"~i6",[["^ ","^1B",0,"^1C",190,"^I","promesa.core/error"],["^ ","^1B",0,"^1C",207,"^I","promesa.core/error"],["^ ","^1B",0,"^1C",211,"^I","promesa.core/error"],["^ ","^1B",0,"^1C",215,"^I","promesa.core/error"]]],"~i169",["^ ","~i4",[["^ ","^1B",62,"^1C",207,"^I","f"]],"~i6",[["^ ","^1B",64,"^1C",207,"^I","p"]],"~i9",[["^ ","^1B",0,"^1C",208]],"~i10",[["^ ","^1B",7,"^1C",208,"^I","promesa.core.catch$.cljs$core$IFn$_invoke$arity$2"]],"^26",[["^ ","^1B",57,"^1C",208,"^I","p"]],"^1J",[["^ ","^1B",59,"^1C",208,"^I","f"]]],"~i170",["^ ","~i4",[["^ ","^1B",62,"^1C",211,"^I","f"]],"~i6",[["^ ","^1B",64,"^1C",211,"^I","type"]],"^1X",[["^ ","^1B",69,"^1C",211,"^I","p"]],"^2<",[["^ ","^1B",0,"^1C",212]],"^1I",[["^ ","^1B",7,"^1C",212,"^I","promesa.core.catch$.cljs$core$IFn$_invoke$arity$3"]],"^30",[["^ ","^1B",57,"^1C",212,"^I","p"]],"^36",[["^ ","^1B",59,"^1C",212,"^I","type"]],"~i28",[["^ ","^1B",64,"^1C",212,"^I","f"]]],"~i172",["^ ","~i0",[["^ ","^1B",0,"^1C",217]],"~i5",[["^ ","^1B",0,"^1C",220,"^I","promesa.core/err"]]],"~i174",["^ ","~i2",[["^ ","^1B",19,"^1C",220,"^I","promesa.core/error"]]],"~i176",["^ ","~i0",[["^ ","^1B",0,"^1C",221],["^ ","^1B",24,"^1C",226],["^ ","^1B",0,"^1C",227]],"~i6",[["^ ","^1B",0,"^1C",226,"^I","promesa.core/finally"]]],"~i180",["^ ","~i3",[["^ ","^1B",55,"^1C",226,"^I","p"]],"~i5",[["^ ","^1B",57,"^1C",226,"^I","callback"]]],"~i184",["^ ","^1X",[["^ ","^1B",0,"^1C",227]],"^2K",[["^ ","^1B",7,"^1C",227,"^I","p"]],"^1D",[["^ ","^1B",16,"^1C",227,"^I","callback"]]],"~i186",["^ ","~i0",[["^ ","^1B",0,"^1C",229],["^ ","^1B",19,"^1C",247],["^ ","^1B",0,"^1C",248]],"~i6",[["^ ","^1B",0,"^1C",247,"^I","promesa.core/all"]]],"~i203",["^ ","~i3",[["^ ","^1B",46,"^1C",247,"^I","promises"]]],"~i204",["^ ","^1I",[["^ ","^1B",25,"^1C",248]],"^30",[["^ ","^1B",25,"^1C",248,"^I","promesa.core/Promise"]],"~i29",[["^ ","^1B",50,"^1C",248]],"^1E",[["^ ","^1B",50,"^1C",248,"^I","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1"]],"~i41",[["^ ","^1B",101,"^1C",248,"^I","promises"]]],"~i205",["^ ","^1I",[["^ ","^1B",0,"^1C",248]],"^26",[["^ ","^1B",7,"^1C",248,"^I","promesa.core/then"]],"^30",[["^ ","^1B",112,"^1C",248,"^I","cljs.core/vec"]]],"~i212",["^ ","~i0",[["^ ","^1B",0,"^1C",250],["^ ","^1B",19,"^1C",255],["^ ","^1B",0,"^1C",256]],"~i6",[["^ ","^1B",0,"^1C",255,"^I","promesa.core/any"]]],"~i216",["^ ","~i3",[["^ ","^1B",46,"^1C",255,"^I","promises"]]],"~i217",["^ ","^1X",[["^ ","^1B",0,"^1C",256]],"^1N",[["^ ","^1B",7,"^1C",256,"^I","promesa.core/Promise"]],"^38",[["^ ","^1B",32,"^1C",256]],"^2P",[["^ ","^1B",32,"^1C",256,"^I","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1"]],"^3<",[["^ ","^1B",83,"^1C",256,"^I","promises"]]],"~i224",["^ ","~i0",[["^ ","^1B",0,"^1C",258],["^ ","^1B",28,"^1C",261],["^ ","^1B",0,"^1C",262]],"~i6",[["^ ","^1B",0,"^1C",261,"^I","promesa.core/cancel!"]]],"~i226",["^ ","~i3",[["^ ","^1B",64,"^1C",261,"^I","p"]]],"~i227",["^ ","~i2",[["^ ","^1B",0,"^1C",262]],"~i3",[["^ ","^1B",0,"^1C",262,"^I","promesa.protocols/-cancel"]],"^2<",[["^ ","^1B",26,"^1C",262,"^I","p"]]],"~i228",["^ ","~i2",[["^ ","^1B",0,"^1C",264,"^I","p"]]],"~i230",["^ ","~i0",[["^ ","^1B",0,"^1C",266],["^ ","^1B",32,"^1C",269],["^ ","^1B",0,"^1C",270]],"~i6",[["^ ","^1B",0,"^1C",269,"^I","promesa.core/cancelled?"]]],"~i232",["^ ","~i3",[["^ ","^1B",72,"^1C",269,"^I","v"]]],"~i233",["^ ","~i2",[["^ ","^1B",0,"^1C",270]],"~i3",[["^ ","^1B",7,"^1C",270,"^I","promesa.protocols/-cancelled?"]],"^1J",[["^ ","^1B",43,"^1C",270,"^I","v"]]],"~i237",["^ ","~i0",[["^ ","^1B",0,"^1C",272],["^ ","^1B",25,"^1C",277],["^ ","^1B",0,"^1C",278]],"~i6",[["^ ","^1B",0,"^1C",277,"^I","promesa.core/promisify"]]],"~i241",["^ ","~i3",[["^ ","^1B",58,"^1C",277,"^I","callable"]]],"~i242",["^ ","~i2",[["^ ","^1B",0,"^1C",278],["^ ","^1B",0,"^1C",280]],"~i9",[["^ ","^1B",35,"^1C",279,"^I","args"],["^ ","^1B",4,"^1C",293,"^I","args"],["^ ","^1B",2,"^1C",297,"^I","args"],["^ ","^1B",36,"^1C",299,"^I","args"],["^ ","^1B",4,"^1C",302,"^I","args"],["^ ","^1B",26,"^1C",303,"^I","args"]]],"~i243",["^ ","~i4",[["^ ","^1B",0,"^1C",280]],"~i5",[["^ ","^1B",7,"^1C",280,"^I","promesa.core/promise"]],"^2@",[["^ ","^1B",28,"^1C",280],["^ ","^1B",0,"^1C",281]],"^1J",[["^ ","^1B",39,"^1C",280,"^I","resolve"]],"^2P",[["^ ","^1B",47,"^1C",280,"^I","reject"]]],"~i244",["^ ","^1I",[["^ ","^1B",0,"^1C",281],["^ ","^1B",0,"^1C",282]],"^30",[["^ ","^1B",4,"^1C",281,"^I","args"]],"^1E",[["^ ","^1B",60,"^1C",281]],"^34",[["^ ","^1B",60,"^1C",281,"^I","cljs.core/vec"]],"~i35",[["^ ","^1B",74,"^1C",281,"^I","args"]]],"~i245",["^ ","^1E",[["^ ","^1B",15,"^1C",281]],"^34",[["^ ","^1B",15,"^1C",281,"^I","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"~i36",[["^ ","^1B",80,"^1C",281,"^I","resolve"]]],"~i246",["^ ","^1N",[["^ ","^1B",0,"^1C",282],["^ ","^1B",4,"^1C",282],["^ ","^1B",16,"^1C",283],["^ ","^1B",19,"^1C",283],["^ ","^1B",20,"^1C",283,"^I","e18884"],["^ ","^1B",0,"^1C",284],["^ ","^1B",8,"^1C",284,"^I","e18884"],["^ ","^1B",0,"^1C",285],["^ ","^1B",0,"^1C",287],["^ ","^1B",0,"^1C",287],["^ ","^1B",6,"^1C",287,"^I","e18884"]]],"~i247",["^ ","^2Z",[["^ ","^1B",4,"^1C",282]],"^2K",[["^ ","^1B",11,"^1C",282,"^I","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"^2P",[["^ ","^1B",57,"^1C",282,"^I","callable"]],"^40",[["^ ","^1B",66,"^1C",282,"^I","args"]]],"~i248",["^ ","~i50",[["^ ","^1B",38,"^1C",283,"^I","js/Error"]],"^1M",[["^ ","^1B",4,"^1C",284,"^I","e"]]],"~i249",["^ ","^36",[["^ ","^1B",0,"^1C",285]],"^2O",[["^ ","^1B",8,"^1C",285,"^I","reject"],["^ ","^1B",47,"^1C",285,"^I","reject"],["^ ","^1B",89,"^1C",285,"^I","reject"]],"^34",[["^ ","^1B",84,"^1C",285,"^I","e"],["^ ","^1B",106,"^1C",285,"^I","e"]]],"~i252",["^ ","~i3",[["^ ","^1B",0,"^1C",310],["^ ","^1B",0,"^1C",310],["^ ","^1B",23,"^1C",317],["^ ","^1B",54,"^1C",317,"^I","var_args"],["^ ","^1B",0,"^1C",318],["^ ","^1B",0,"^1C",318],["^ ","^1B",4,"^1C",318,"^I","G__18893"],["^ ","^1B",15,"^1C",318],["^ ","^1B",15,"^1C",318],["^ ","^1B",0,"^1C",319],["^ ","^1B",0,"^1C",319],["^ ","^1B",8,"^1C",319,"^I","G__18893"],["^ ","^1B",5,"^1C",320],["^ ","^1B",0,"^1C",321],["^ ","^1B",7,"^1C",321,"^I","promesa.core/timeout"],["^ ","^1B",58,"^1C",321],["^ ","^1B",59,"^1C",321],["^ ","^1B",69,"^1C",321],["^ ","^1B",75,"^1C",321],["^ ","^1B",76,"^1C",321],["^ ","^1B",86,"^1C",321],["^ ","^1B",5,"^1C",324],["^ ","^1B",0,"^1C",325],["^ ","^1B",7,"^1C",325,"^I","promesa.core/timeout"],["^ ","^1B",58,"^1C",325],["^ ","^1B",59,"^1C",325],["^ ","^1B",69,"^1C",325],["^ ","^1B",75,"^1C",325],["^ ","^1B",76,"^1C",325],["^ ","^1B",86,"^1C",325],["^ ","^1B",92,"^1C",325],["^ ","^1B",93,"^1C",325],["^ ","^1B",103,"^1C",325],["^ ","^1B",0,"^1C",329],["^ ","^1B",6,"^1C",329],["^ ","^1B",11,"^1C",329,"^I","js/Error"],["^ ","^1B",17,"^1C",329],["^ ","^1B",18,"^1C",329],["^ ","^1B",80,"^1C",329],["^ ","^1B",80,"^1C",329],["^ ","^1B",0,"^1C",334],["^ ","^1B",0,"^1C",334],["^ ","^1B",53,"^1C",334],["^ ","^1B",0,"^1C",335],["^ ","^1B",0,"^1C",338],["^ ","^1B",0,"^1C",338],["^ ","^1B",53,"^1C",338],["^ ","^1B",0,"^1C",339],["^ ","^1B",0,"^1C",342],["^ ","^1B",0,"^1C",342],["^ ","^1B",47,"^1C",342],["^ ","^1B",0,"^1C",344]],"~i9",[["^ ","^1B",0,"^1C",317,"^I","promesa.core/timeout"],["^ ","^1B",0,"^1C",334,"^I","promesa.core/timeout"],["^ ","^1B",0,"^1C",338,"^I","promesa.core/timeout"],["^ ","^1B",0,"^1C",342,"^I","promesa.core/timeout"]]],"~i258",["^ ","~i7",[["^ ","^1B",64,"^1C",334,"^I","p"]],"~i9",[["^ ","^1B",66,"^1C",334,"^I","t"]],"^2D",[["^ ","^1B",0,"^1C",335]],"^1D",[["^ ","^1B",7,"^1C",335,"^I","p"]],"^2O",[["^ ","^1B",17,"^1C",335,"^I","t"]]],"~i259",["^ ","~i7",[["^ ","^1B",64,"^1C",338,"^I","p"]],"~i9",[["^ ","^1B",66,"^1C",338,"^I","t"]],"^1X",[["^ ","^1B",68,"^1C",338,"^I","v"]],"^2<",[["^ ","^1B",0,"^1C",339]],"^2O",[["^ ","^1B",7,"^1C",339,"^I","p"]],"^2P",[["^ ","^1B",17,"^1C",339,"^I","t"]],"^3A",[["^ ","^1B",19,"^1C",339,"^I","v"]]],"~i261",["^ ","~i0",[["^ ","^1B",0,"^1C",344],["^ ","^1B",0,"^1C",344],["^ ","^1B",21,"^1C",350],["^ ","^1B",50,"^1C",350,"^I","var_args"],["^ ","^1B",0,"^1C",351],["^ ","^1B",0,"^1C",351],["^ ","^1B",4,"^1C",351,"^I","G__18903"],["^ ","^1B",15,"^1C",351],["^ ","^1B",15,"^1C",351],["^ ","^1B",0,"^1C",352],["^ ","^1B",0,"^1C",352],["^ ","^1B",8,"^1C",352,"^I","G__18903"],["^ ","^1B",5,"^1C",353],["^ ","^1B",0,"^1C",354],["^ ","^1B",7,"^1C",354,"^I","promesa.core/delay"],["^ ","^1B",56,"^1C",354],["^ ","^1B",57,"^1C",354],["^ ","^1B",67,"^1C",354],["^ ","^1B",5,"^1C",357],["^ ","^1B",0,"^1C",358],["^ ","^1B",7,"^1C",358,"^I","promesa.core/delay"],["^ ","^1B",56,"^1C",358],["^ ","^1B",57,"^1C",358],["^ ","^1B",67,"^1C",358],["^ ","^1B",73,"^1C",358],["^ ","^1B",74,"^1C",358],["^ ","^1B",84,"^1C",358],["^ ","^1B",0,"^1C",362],["^ ","^1B",6,"^1C",362],["^ ","^1B",11,"^1C",362,"^I","js/Error"],["^ ","^1B",17,"^1C",362],["^ ","^1B",18,"^1C",362],["^ ","^1B",80,"^1C",362],["^ ","^1B",80,"^1C",362],["^ ","^1B",0,"^1C",367],["^ ","^1B",0,"^1C",367],["^ ","^1B",51,"^1C",367],["^ ","^1B",0,"^1C",368],["^ ","^1B",0,"^1C",371],["^ ","^1B",0,"^1C",371],["^ ","^1B",51,"^1C",371],["^ ","^1B",0,"^1C",372],["^ ","^1B",0,"^1C",379],["^ ","^1B",0,"^1C",379],["^ ","^1B",45,"^1C",379],["^ ","^1B",0,"^1C",381]],"~i6",[["^ ","^1B",0,"^1C",350,"^I","promesa.core/delay"],["^ ","^1B",0,"^1C",367,"^I","promesa.core/delay"],["^ ","^1B",0,"^1C",371,"^I","promesa.core/delay"],["^ ","^1B",0,"^1C",379,"^I","promesa.core/delay"]]],"~i266",["^ ","~i4",[["^ ","^1B",62,"^1C",367,"^I","t"]],"~i7",[["^ ","^1B",0,"^1C",368],["^ ","^1B",58,"^1C",368]],"~i8",[["^ ","^1B",7,"^1C",368,"^I","promesa.core.delay.cljs$core$IFn$_invoke$arity$2"]],"^2<",[["^ ","^1B",56,"^1C",368,"^I","t"]]],"~i267",["^ ","~i4",[["^ ","^1B",62,"^1C",371,"^I","t"]],"~i6",[["^ ","^1B",64,"^1C",371,"^I","v"]]],"~i268",["^ ","^2D",[["^ ","^1B",0,"^1C",372]],"^2@",[["^ ","^1B",7,"^1C",372,"^I","promesa.core/promise"]],"^30",[["^ ","^1B",28,"^1C",372],["^ ","^1B",0,"^1C",373]],"^2P",[["^ ","^1B",39,"^1C",372,"^I","resolve"]],"~i34",[["^ ","^1B",47,"^1C",372,"^I","reject"]]],"~i269",["^ ","^36",[["^ ","^1B",0,"^1C",373],["^ ","^1B",31,"^1C",373],["^ ","^1B",0,"^1C",374]],"^2O",[["^ ","^1B",7,"^1C",373,"^I","promesa.core/schedule"]],"^39",[["^ ","^1B",29,"^1C",373,"^I","t"]],"^42",[["^ ","^1B",0,"^1C",374]],"^3<",[["^ ","^1B",8,"^1C",374,"^I","resolve"],["^ ","^1B",48,"^1C",374,"^I","resolve"],["^ ","^1B",91,"^1C",374,"^I","resolve"]],"~i45",[["^ ","^1B",86,"^1C",374,"^I","v"],["^ ","^1B",109,"^1C",374,"^I","v"]]],"~i275",["^ ","~i0",[["^ ","^1B",0,"^1C",381],["^ ","^1B",23,"^1C",386],["^ ","^1B",0,"^1C",387]],"~i6",[["^ ","^1B",0,"^1C",386,"^I","promesa.core/attempt"]]],"~i279",["^ ","~i3",[["^ ","^1B",54,"^1C",386,"^I","callback"]]],"~i280",["^ ","^1X",[["^ ","^1B",0,"^1C",387]],"^2D",[["^ ","^1B",7,"^1C",387,"^I","promesa.core/promise"]],"^2K",[["^ ","^1B",28,"^1C",387],["^ ","^1B",0,"^1C",388]],"^38",[["^ ","^1B",39,"^1C",387,"^I","resolve"]],"^4?",[["^ ","^1B",0,"^1C",388],["^ ","^1B",4,"^1C",388,"^I","G__18910"],["^ ","^1B",0,"^1C",389],["^ ","^1B",0,"^1C",389],["^ ","^1B",86,"^1C",389,"^I","G__18910"],["^ ","^1B",116,"^1C",389,"^I","G__18910"]],"^40",[["^ ","^1B",8,"^1C",389,"^I","resolve"],["^ ","^1B",48,"^1C",389,"^I","resolve"],["^ ","^1B",98,"^1C",389,"^I","resolve"]],"~i43",[["^ ","^1B",15,"^1C",388]],"~i44",[["^ ","^1B",16,"^1C",388,"^I","callback"],["^ ","^1B",57,"^1C",388,"^I","callback"],["^ ","^1B",100,"^1C",388,"^I","callback"]]],"~i293",["^ ","~i0",[["^ ","^1B",0,"^1C",392],["^ ","^1B",0,"^1C",392],["^ ","^1B",22,"^1C",392],["^ ","^1B",51,"^1C",392,"^I","var_args"],["^ ","^1B",0,"^1C",393],["^ ","^1B",0,"^1C",393],["^ ","^1B",4,"^1C",393,"^I","args__4534__auto__"],["^ ","^1B",25,"^1C",393],["^ ","^1B",0,"^1C",394],["^ ","^1B",0,"^1C",394],["^ ","^1B",4,"^1C",394,"^I","len__4531__auto__"],["^ ","^1B",30,"^1C",394],["^ ","^1B",30,"^1C",394],["^ ","^1B",0,"^1C",395],["^ ","^1B",0,"^1C",395],["^ ","^1B",4,"^1C",395,"^I","i__4532__auto__"],["^ ","^1B",28,"^1C",395],["^ ","^1B",0,"^1C",397],["^ ","^1B",0,"^1C",397],["^ ","^1B",3,"^1C",397],["^ ","^1B",4,"^1C",397,"^I","i__4532__auto__"],["^ ","^1B",28,"^1C",397,"^I","len__4531__auto__"],["^ ","^1B",0,"^1C",398],["^ ","^1B",0,"^1C",398],["^ ","^1B",0,"^1C",398,"^I","args__4534__auto__"],["^ ","^1B",24,"^1C",398],["^ ","^1B",25,"^1C",398],["^ ","^1B",35,"^1C",398,"^I","i__4532__auto__"],["^ ","^1B",0,"^1C",400],["^ ","^1B",15,"^1C",400],["^ ","^1B",16,"^1C",400,"^I","i__4532__auto__"],["^ ","^1B",40,"^1C",400],["^ ","^1B",0,"^1C",404],["^ ","^1B",0,"^1C",408],["^ ","^1B",4,"^1C",408,"^I","argseq__4535__auto__"],["^ ","^1B",27,"^1C",408],["^ ","^1B",29,"^1C",408],["^ ","^1B",30,"^1C",408],["^ ","^1B",36,"^1C",408],["^ ","^1B",36,"^1C",408,"^I","args__4534__auto__"],["^ ","^1B",64,"^1C",408],["^ ","^1B",64,"^1C",408],["^ ","^1B",69,"^1C",408,"^I","cljs.core/IndexedSeq"],["^ ","^1B",90,"^1C",408],["^ ","^1B",90,"^1C",408,"^I","args__4534__auto__"],["^ ","^1B",115,"^1C",408],["^ ","^1B",120,"^1C",408],["^ ","^1B",124,"^1C",408],["^ ","^1B",131,"^1C",408],["^ ","^1B",0,"^1C",409],["^ ","^1B",0,"^1C",409],["^ ","^1B",7,"^1C",409,"^I","promesa.core/await"],["^ ","^1B",64,"^1C",409,"^I","argseq__4535__auto__"],["^ ","^1B",0,"^1C",412],["^ ","^1B",0,"^1C",412],["^ ","^1B",0,"^1C",412],["^ ","^1B",0,"^1C",412,"^I","promesa.core/await"],["^ ","^1B",59,"^1C",412],["^ ","^1B",0,"^1C",413],["^ ","^1B",0,"^1C",416],["^ ","^1B",0,"^1C",416],["^ ","^1B",0,"^1C",416,"^I","promesa.core/await"],["^ ","^1B",46,"^1C",416],["^ ","^1B",0,"^1C",418],["^ ","^1B",0,"^1C",419],["^ ","^1B",0,"^1C",419],["^ ","^1B",0,"^1C",419,"^I","promesa.core/await"],["^ ","^1B",40,"^1C",419],["^ ","^1B",51,"^1C",419,"^I","seq18915"],["^ ","^1B",0,"^1C",420],["^ ","^1B",0,"^1C",420],["^ ","^1B",4,"^1C",420,"^I","self__4519__auto__"],["^ ","^1B",25,"^1C",420],["^ ","^1B",0,"^1C",421],["^ ","^1B",0,"^1C",421],["^ ","^1B",7,"^1C",421,"^I","self__4519__auto__"],["^ ","^1B",63,"^1C",421],["^ ","^1B",63,"^1C",421,"^I","cljs.core/seq"],["^ ","^1B",77,"^1C",421,"^I","seq18915"],["^ ","^1B",0,"^1C",424]],"~i6",[["^ ","^1B",0,"^1C",392,"^I","promesa.core/await"]]],"~i294",["^ ","~i5",[["^ ","^1B",70,"^1C",412,"^I","args"]]],"~i295",["^ ","~i2",[["^ ","^1B",0,"^1C",413]],"~i9",[["^ ","^1B",6,"^1C",413],["^ ","^1B",54,"^1C",413],["^ ","^1B",91,"^1C",413]],"^3?",[["^ ","^1B",6,"^1C",413,"^I","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^U"],[1534380137000],["^19","goog/math/math.js"],[1530991559994,"^V","~$goog.array","~$goog.asserts"],["^19","goog/array/array.js"],[1530991559994,"^V","^4O"],["^19","goog/debug/error.js"],[1530991559994,"^V"],["^19","promesa/impl/scheduler.cljc"],[1535586406328,"^V","^U","^O"],["^19","promesa/impl.cljc"],[1535586406328,"^V","^U","^O","~$org.bluebird"],["^19","goog/dom/nodetype.js"],[1530991559994,"^V"],["^19","goog/object/object.js"],[1530991559994,"^V"],"~:SHADOW-TIMESTAMP",[1535989513000,1534380137000],["^19","goog/math/long.js"],[1530991559994,"^V","^4O","~$goog.reflect"],["^19","goog/functions/functions.js"],[1530991559994,"^V"],["^19","goog/structs/map.js"],[1530991559994,"^V","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["~:shadow.build.js-support/require","bluebird"],["~$shadow.js.shim.module$bluebird","shadow.js.shim.module$bluebird.js","^V"],["^19","goog/asserts/asserts.js"],[1530991559994,"^V","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^19","goog/uri/uri.js"],[1530991559994,"^V","^4N","^4O","^4Z","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^19","goog/base.js"],[1530991559994],["^19","promesa/core.cljc"],[1535586406328,"^V","^U","^O","^Q","^S"],["^19","goog/structs/structs.js"],[1530991559994,"^V","^4N","^4U"],["^19","org/bluebird.cljs"],[1535669979047,"^V","^U","^4W"],["^19","goog/string/string.js"],[1530991559994,"^V"],["^19","goog/reflect/reflect.js"],[1530991559994,"^V"],["^19","goog/string/stringbuffer.js"],[1530991559994,"^V"],["^19","promesa/protocols.cljc"],[1535586406328,"^V","^U"],["^19","goog/iter/iter.js"],[1530991559994,"^V","^4N","^4O","~$goog.functions","~$goog.math"],["^19","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^4Z","^4U","^4N","~$goog.Uri","~$goog.string.StringBuffer"],["^19","goog/math/integer.js"],[1530991559994,"^V"],["^19","goog/uri/utils.js"],[1530991559994,"^V","^4N","^4O","^4Z"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","promesa/core.cljc","^7",25,"^8",5,"^9",25,"^:",17],"^;",["^ ","^<","^=","^>","^?"],"^@",null,"^A",["^B",["^C","^D","^E","^F","^G","^H"]],"~:shadow/js-access-properties",["^B",["any"]],"^I","^J","^M",null,"^N",["^ ","^O","^O","^P","^O","^Q","^Q","^R","^Q","^S","^S","^T","^S","^U","^U","^V","^V"],"^W",["^B",["^X"]],"~:shadow/js-access-global",["^B",["Error"]],"^Y",null,"~:defs",["^ ","~$timeout",["^ ","~:protocol-inline",null,"^5",["^ ","^6","promesa/core.cljc","^7",253,"^8",10,"^9",253,"^:",17,"~:arglists",["^10",["~$quote",["^10",[["~$p","~$t"],["~$p","~$t","~$v"]]]]],"~:doc","Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError","~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",3,"~:method-params",["^10",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5@",["^10",[["~$p","~$t"],["~$p","~$t","~$v"]]],"~:arglists-meta",["^10",[null,null]]]],"^I","~$promesa.core/timeout","^5D",false,"^6","promesa/core.cljc","^:",17,"^5C",["^ ","^5D",false,"^5E",3,"^5F",["^10",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5@",["^10",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5G",["^10",[null,null]]],"^5F",["^10",[["~$p","~$t"],["~$p","~$t","~$v"]]],"~:protocol-impl",null,"^5G",["^10",[null,null]],"^8",4,"^7",253,"^9",253,"^5E",3,"~:fn-var",true,"^5@",["^10",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5B","Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError"],"~$Promise",["^ ","^I","~$promesa.core/Promise","^6","promesa/core.cljc","^7",43,"^8",10,"^9",43,"^:",30,"~:const",true,"^5",["^ ","^6","promesa/core.cljc","^7",43,"^8",23,"^9",43,"^:",30,"^5M",true],"~:tag","~$js"],"~$branch",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",149,"^8",7,"^9",149,"^:",13,"^5@",["^10",["^5A",["^10",[["~$p","~$success","~$failure"]]]]]],"^I","~$promesa.core/branch","^5D",false,"^6","promesa/core.cljc","^:",13,"^5F",["^10",[["~$p","^5Q","^5R"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",149,"^9",149,"^5E",3,"^5J",true,"^5@",["^10",["^5A",["^10",[["~$p","^5Q","^5R"]]]]]],"~$attempt",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",276,"^8",7,"^9",276,"^:",14,"^5@",["^10",["^5A",["^10",[["~$callback"]]]]],"^5B","A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback."],"^I","~$promesa.core/attempt","^5D",false,"^6","promesa/core.cljc","^:",14,"^5F",["^10",[["^5U"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",276,"^9",276,"^5E",1,"^5J",true,"^5@",["^10",["^5A",["^10",[["^5U"]]]]],"^5B","A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback."],"^C",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",107,"^8",7,"^9",107,"^:",10,"^5@",["^10",["^5A",["^10",[["~$f","~$p"]]]]],"^5B","Apply a function to the promise value and\n  return a new promise with the result."],"^I","~$promesa.core/map","^5D",false,"^6","promesa/core.cljc","^:",10,"^5F",["^10",[["~$f","~$p"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",107,"^9",107,"^5E",2,"^5J",true,"^5@",["^10",["^5A",["^10",[["~$f","~$p"]]]]],"^5B","Apply a function to the promise value and\n  return a new promise with the result."],"^D",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",262,"^8",7,"^9",262,"^:",12,"^5@",["^10",["^5A",["^10",[["~$t"],["~$t","~$v"]]]]],"^5B","Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached.","^5C",["^ ","^5D",false,"^5E",2,"^5F",["^10",[["~$t"],["~$t","~$v"]]],"^5@",["^10",[["~$t"],["~$t","~$v"]]],"^5G",["^10",[null,null]]]],"^I","~$promesa.core/delay","^5D",false,"^6","promesa/core.cljc","^:",12,"^5C",["^ ","^5D",false,"^5E",2,"^5F",["^10",[["~$t"],["~$t","~$v"]]],"^5@",["^10",[["~$t"],["~$t","~$v"]]],"^5G",["^10",[null,null]]],"^5F",["^10",[["~$t"],["~$t","~$v"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",262,"^9",262,"^5E",2,"^5J",true,"^5@",["^10",[["~$t"],["~$t","~$v"]]],"^5B","Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached."],"~$resolved?",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",81,"^8",7,"^9",81,"^:",16,"^5@",["^10",["^5A",["^10",[["~$p"]]]]],"^5B","Returns true if promise `p` is already fulfilled."],"^I","~$promesa.core/resolved?","^5D",false,"^6","promesa/core.cljc","^:",16,"^5F",["^10",[["~$p"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",81,"^9",81,"^5E",1,"^5J",true,"^5@",["^10",["^5A",["^10",[["~$p"]]]]],"^5B","Returns true if promise `p` is already fulfilled."],"^E",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",113,"^8",7,"^9",113,"^:",13,"^5@",["^10",["^5A",["^10",[["~$f","~$p"]]]]],"^5B","Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator."],"^I","~$promesa.core/mapcat","^5D",false,"^6","promesa/core.cljc","^:",13,"^5F",["^10",[["~$f","~$p"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",113,"^9",113,"^5E",2,"^5J",true,"^5@",["^10",["^5A",["^10",[["~$f","~$p"]]]]],"^5B","Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator."],"~$cancelled?",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",231,"^8",7,"^9",231,"^:",17,"^5@",["^10",["^5A",["^10",[["~$v"]]]]],"^5B","Return true if `v` is a cancelled promise."],"^I","~$promesa.core/cancelled?","^5D",false,"^6","promesa/core.cljc","^:",17,"^5F",["^10",[["~$v"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",231,"^9",231,"^5E",1,"^5J",true,"^5@",["^10",["^5A",["^10",[["~$v"]]]]],"^5B","Return true if `v` is a cancelled promise."],"^F",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",294,"^8",7,"^9",294,"^:",12,"^5@",["^10",["^5A",["^10",[["~$&","~$args"]]]]],"^5C",["^ ","^5D",true,"^5E",0,"^5F",[["^10",["^62"]]],"^5@",["^10",[["~$&","^62"]]],"^5G",["^10",[null]]]],"^I","~$promesa.core/await","^5D",true,"^6","promesa/core.cljc","^:",12,"^5C",["^ ","^5D",true,"^5E",0,"^5F",[["^10",["^62"]]],"^5@",["^10",[["~$&","^62"]]],"^5G",["^10",[null]]],"^5F",[["^10",["^62"]]],"^5I",null,"^5G",["^10",[null]],"^8",1,"^7",294,"^9",294,"^5E",0,"^5J",true,"^5@",["^10",[["~$&","^62"]]]],"~$bind",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",124,"^8",7,"^9",124,"^:",11,"^5@",["^10",["^5A",["^10",[["~$p","~$f"]]]]],"^5B","A chain helper for promises."],"^I","~$promesa.core/bind","^5D",false,"^6","promesa/core.cljc","^:",11,"^5F",["^10",[["~$p","~$f"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",124,"^9",124,"^5E",2,"^5J",true,"^5@",["^10",["^5A",["^10",[["~$p","~$f"]]]]],"^5B","A chain helper for promises."],"~$any",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",213,"^8",7,"^9",213,"^:",10,"^5@",["^10",["^5A",["^10",[["~$promises"]]]]],"^5B","Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled."],"^I","~$promesa.core/any","^5D",false,"^6","promesa/core.cljc","^:",10,"^5F",["^10",[["^67"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",213,"^9",213,"^5E",1,"^5J",true,"^5@",["^10",["^5A",["^10",[["^67"]]]]],"^5B","Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled."],"~$finally",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",177,"^8",7,"^9",177,"^:",14,"^5@",["^10",["^5A",["^10",[["~$p","^5U"]]]]],"^5B","Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected."],"^I","~$promesa.core/finally","^5D",false,"^6","promesa/core.cljc","^:",14,"^5F",["^10",[["~$p","^5U"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",177,"^9",177,"^5E",2,"^5J",true,"^5@",["^10",["^5A",["^10",[["~$p","^5U"]]]]],"^5B","Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected."],"~$schedule",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",47,"^8",7,"^9",47,"^:",15,"^5@",["^10",["^5A",["^10",[["~$ms","~$func"]]]]],"^5B","Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function."],"^I","~$promesa.core/schedule","^5D",false,"^6","promesa/core.cljc","^:",15,"^5F",["^10",[["^6<","^6="]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",47,"^9",47,"^5E",2,"^5J",true,"^5@",["^10",["^5A",["^10",[["^6<","^6="]]]]],"^5B","Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function."],"~$promisify",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",238,"^8",7,"^9",238,"^:",16,"^5@",["^10",["^5A",["^10",[["~$callable"]]]]],"^5B","Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation)."],"^I","~$promesa.core/promisify","^5D",false,"^6","promesa/core.cljc","^:",16,"^5F",["^10",[["^6@"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",238,"^9",238,"^5E",1,"^5J",true,"^5@",["^10",["^5A",["^10",[["^6@"]]]]],"^5B","Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation)."],"~$rejected",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",63,"^8",7,"^9",63,"^:",15,"^5@",["^10",["^5A",["^10",[["~$v"]]]]],"^5B","Return a rejected promise with provided reason."],"^I","~$promesa.core/rejected","^5D",false,"^6","promesa/core.cljc","^:",15,"^5F",["^10",[["~$v"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",63,"^9",63,"^5E",1,"^5J",true,"^5@",["^10",["^5A",["^10",[["~$v"]]]]],"^5B","Return a rejected promise with provided reason."],"^H",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",68,"^8",7,"^9",68,"^:",14,"^5@",["^10",["^5A",["^10",[["~$v"]]]]],"^5B","The promise constructor."],"^I","~$promesa.core/promise","^5D",false,"^6","promesa/core.cljc","^:",14,"^5F",["^10",[["~$v"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",68,"^9",68,"^5E",1,"^5J",true,"^5@",["^10",["^5A",["^10",[["~$v"]]]]],"^5B","The promise constructor."],"~$cancel!",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",225,"^8",7,"^9",225,"^:",14,"^5@",["^10",["^5A",["^10",[["~$p"]]]]],"^5B","Cancel the promise."],"^I","~$promesa.core/cancel!","^5D",false,"^6","promesa/core.cljc","^:",14,"^5F",["^10",[["~$p"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",225,"^9",225,"^5E",1,"^5J",true,"^5@",["^10",["^5A",["^10",[["~$p"]]]]],"^5B","Cancel the promise."],"~$done?",["^ ","^I","~$promesa.core/done?","^6","promesa/core.cljc","^7",101,"^8",1,"^9",101,"^:",11,"^5",["^ ","^6","promesa/core.cljc","^7",101,"^8",6,"^9",101,"^:",11],"^5B","Returns true if promise `p` is already done.","^5N","^66"],"~$err",["^ ","^I","~$promesa.core/err","^6","promesa/core.cljc","^7",173,"^8",1,"^9",173,"^:",9,"^5",["^ ","^6","promesa/core.cljc","^7",173,"^8",6,"^9",173,"^:",9],"^5B","A short alias for `error` function."],"~$all",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",187,"^8",7,"^9",187,"^:",10,"^5@",["^10",["^5A",["^10",[["^67"]]]]],"^5B","Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled.\n\n  Example:\n\n  (-> (all [(promise :first-promise)\n            (promise :second-promise)]\n      (then (fn [[first-result second-result]]))\n       (println (str first-result \", \" second-result)\n\n  Will print out\n  :first-promise, :second-promise.\n\n  If at least one of the promises is rejected, the resulting promise will be\n  rejected."],"^I","~$promesa.core/all","^5D",false,"^6","promesa/core.cljc","^:",10,"^5F",["^10",[["^67"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",187,"^9",187,"^5E",1,"^5J",true,"^5@",["^10",["^5A",["^10",[["^67"]]]]],"^5B","Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled.\n\n  Example:\n\n  (-> (all [(promise :first-promise)\n            (promise :second-promise)]\n      (then (fn [[first-result second-result]]))\n       (println (str first-result \", \" second-result)\n\n  Will print out\n  :first-promise, :second-promise.\n\n  If at least one of the promises is rejected, the resulting promise will be\n  rejected."],"~$promise?",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",73,"^8",7,"^9",73,"^:",15,"^5@",["^10",["^5A",["^10",[["~$v"]]]]],"^5B","Return true if `v` is a promise instance."],"^I","~$promesa.core/promise?","^5D",false,"^6","promesa/core.cljc","^:",15,"^5F",["^10",[["~$v"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",73,"^9",73,"^5E",1,"^5J",true,"^5@",["^10",["^5A",["^10",[["~$v"]]]]],"^5B","Return true if `v` is a promise instance."],"~$resolved",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",58,"^8",7,"^9",58,"^:",15,"^5@",["^10",["^5A",["^10",[["~$v"]]]]],"^5B","Return a resolved promise with provided value."],"^I","~$promesa.core/resolved","^5D",false,"^6","promesa/core.cljc","^:",15,"^5F",["^10",[["~$v"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",58,"^9",58,"^5E",1,"^5J",true,"^5@",["^10",["^5A",["^10",[["~$v"]]]]],"^5B","Return a resolved promise with provided value."],"~$catch",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",155,"^8",7,"^9",155,"^:",12,"^5@",["^10",["^5A",["^10",[["~$p","~$f"],["~$p","~$pred-or-type","~$f"]]]]],"^5B","Catch all promise chain helper.","^5C",["^ ","^5D",false,"^5E",3,"^5F",["^10",[["~$p","~$f"],["~$p","^6R","~$f"]]],"^5@",["^10",[["~$p","~$f"],["~$p","^6R","~$f"]]],"^5G",["^10",[null,null]]]],"^I","~$promesa.core/catch","^5D",false,"^6","promesa/core.cljc","^:",12,"^5C",["^ ","^5D",false,"^5E",3,"^5F",["^10",[["~$p","~$f"],["~$p","^6R","~$f"]]],"^5@",["^10",[["~$p","~$f"],["~$p","^6R","~$f"]]],"^5G",["^10",[null,null]]],"^5F",["^10",[["~$p","~$f"],["~$p","^6R","~$f"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",155,"^9",155,"^5E",3,"^5J",true,"^5@",["^10",[["~$p","~$f"],["~$p","^6R","~$f"]]],"^5B","Catch all promise chain helper."],"~$chain",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",144,"^8",7,"^9",144,"^:",12,"^5@",["^10",["^5A",["^10",[["~$p","~$&","~$funcs"]]]]],"^5B","Like then but accepts multiple parameters.","^5C",["^ ","^5D",true,"^5E",1,"^5F",[["^10",["~$p","^6U"]]],"^5@",["^10",[["~$p","~$&","^6U"]]],"^5G",["^10",[null]]]],"^I","~$promesa.core/chain","^5D",true,"^6","promesa/core.cljc","^:",12,"^5C",["^ ","^5D",true,"^5E",1,"^5F",[["^10",["~$p","^6U"]]],"^5@",["^10",[["~$p","~$&","^6U"]]],"^5G",["^10",[null]]],"^5F",[["^10",["~$p","^6U"]]],"^5I",null,"^5G",["^10",[null]],"^8",1,"^7",144,"^9",144,"^5E",1,"^5J",true,"^5@",["^10",[["~$p","~$&","^6U"]]],"^5B","Like then but accepts multiple parameters."],"~$rejected?",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",86,"^8",7,"^9",86,"^:",16,"^5@",["^10",["^5A",["^10",[["~$p"]]]]],"^5B","Returns true if promise `p` is already rejected."],"^I","~$promesa.core/rejected?","^5D",false,"^6","promesa/core.cljc","^:",16,"^5F",["^10",[["~$p"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",86,"^9",86,"^5E",1,"^5J",true,"^5@",["^10",["^5A",["^10",[["~$p"]]]]],"^5B","Returns true if promise `p` is already rejected."],"~$then",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",129,"^8",7,"^9",129,"^:",11,"^5@",["^10",["^5A",["^10",[["~$p","~$f"]]]]],"^5B","Similar to `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator.\n\n  Unlike Clojure's `map`, will resolve any promises\n  returned  by `f`."],"^I","~$promesa.core/then","^5D",false,"^6","promesa/core.cljc","^:",11,"^5F",["^10",[["~$p","~$f"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",129,"^9",129,"^5E",2,"^5J",true,"^5@",["^10",["^5A",["^10",[["~$p","~$f"]]]]],"^5B","Similar to `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator.\n\n  Unlike Clojure's `map`, will resolve any promises\n  returned  by `f`."],"~$extract",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",96,"^8",7,"^9",96,"^:",14,"^5@",["^10",["^5A",["^10",[["~$p"]]]]],"^5B","Returns the current promise value."],"^I","~$promesa.core/extract","^5D",false,"^6","promesa/core.cljc","^:",14,"^5F",["^10",[["~$p"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",96,"^9",96,"^5E",1,"^5J",true,"^5@",["^10",["^5A",["^10",[["~$p"]]]]],"^5B","Returns the current promise value."],"~$error",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",168,"^8",7,"^9",168,"^:",12,"^5@",["^10",["^5A",["^10",[["~$f","~$p"],["~$f","~$type","~$p"]]]]],"^5B","Same as `catch` but with parameters inverted.","^5C",["^ ","^5D",false,"^5E",3,"^5F",["^10",[["~$f","~$p"],["~$f","^72","~$p"]]],"^5@",["^10",[["~$f","~$p"],["~$f","^72","~$p"]]],"^5G",["^10",[null,null]]]],"^I","~$promesa.core/error","^5D",false,"^6","promesa/core.cljc","^:",12,"^5C",["^ ","^5D",false,"^5E",3,"^5F",["^10",[["~$f","~$p"],["~$f","^72","~$p"]]],"^5@",["^10",[["~$f","~$p"],["~$f","^72","~$p"]]],"^5G",["^10",[null,null]]],"^5F",["^10",[["~$f","~$p"],["~$f","^72","~$p"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",168,"^9",168,"^5E",3,"^5J",true,"^5@",["^10",[["~$f","~$p"],["~$f","^72","~$p"]]],"^5B","Same as `catch` but with parameters inverted."],"~$pending?",["^ ","^5?",null,"^5",["^ ","^6","promesa/core.cljc","^7",91,"^8",7,"^9",91,"^:",15,"^5@",["^10",["^5A",["^10",[["~$p"]]]]],"^5B","Returns true if promise `p` is stil pending."],"^I","~$promesa.core/pending?","^5D",false,"^6","promesa/core.cljc","^:",15,"^5F",["^10",[["~$p"]]],"^5I",null,"^5G",["^10",[null,null]],"^8",1,"^7",91,"^9",91,"^5E",1,"^5J",true,"^5@",["^10",["^5A",["^10",[["~$p"]]]]],"^5B","Returns true if promise `p` is stil pending."]],"^Z",["^ ","^U","^U"],"~:cljs.analyzer/constants",["^ ","^W",["^B",["~:else"]],"~:order",["^77"]],"^15",["^ ","^X",["^B",[]]],"^16",["^ "],"^17",["^V","^U","^O","^Q","^S"]],"^L","^J","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^4L",[["^7;","~:static-fns"],true,["^7;","~:elide-asserts"],false,["^7;","~:optimize-constants"],null,["^7;","~:external-config"],null,["^7;","~:tooling-config"],null,["^7;","~:emit-constants"],null,["^7;","~:infer-externs"],true,["^7;","^1>"],null,["~:js-options","~:js-provider"],"^X",["~:mode"],"~:dev",["^7;","~:fn-invoke-direct"],null,["^7;","^1@"],"/dev/null"]]]