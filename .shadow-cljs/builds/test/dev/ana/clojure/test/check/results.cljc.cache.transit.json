["^ ","~:output",["^ ","~:js","goog.provide('clojure.test.check.results');\ngoog.require('cljs.core');\n\n/**\n * @interface\n */\nclojure.test.check.results.Result = function(){};\n\nclojure.test.check.results.passing_QMARK_ = (function clojure$test$check$results$passing_QMARK_(result){\nif(((!((result == null))) && (!((result.clojure$test$check$results$Result$passing_QMARK_$arity$1 == null))))){\nreturn result.clojure$test$check$results$Result$passing_QMARK_$arity$1(result);\n} else {\nvar x__4243__auto__ = (((result == null))?null:result);\nvar m__4244__auto__ = (clojure.test.check.results.passing_QMARK_[goog.typeOf(x__4243__auto__)]);\nif(!((m__4244__auto__ == null))){\nreturn (m__4244__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4244__auto__.cljs$core$IFn$_invoke$arity$1(result) : m__4244__auto__.call(null,result));\n} else {\nvar m__4244__auto____$1 = (clojure.test.check.results.passing_QMARK_[\"_\"]);\nif(!((m__4244__auto____$1 == null))){\nreturn (m__4244__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4244__auto____$1.cljs$core$IFn$_invoke$arity$1(result) : m__4244__auto____$1.call(null,result));\n} else {\nthrow cljs.core.missing_protocol(\"Result.passing?\",result);\n}\n}\n}\n});\n\n/**\n * A map of data about the trial.\n */\nclojure.test.check.results.result_data = (function clojure$test$check$results$result_data(result){\nif(((!((result == null))) && (!((result.clojure$test$check$results$Result$result_data$arity$1 == null))))){\nreturn result.clojure$test$check$results$Result$result_data$arity$1(result);\n} else {\nvar x__4243__auto__ = (((result == null))?null:result);\nvar m__4244__auto__ = (clojure.test.check.results.result_data[goog.typeOf(x__4243__auto__)]);\nif(!((m__4244__auto__ == null))){\nreturn (m__4244__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4244__auto__.cljs$core$IFn$_invoke$arity$1(result) : m__4244__auto__.call(null,result));\n} else {\nvar m__4244__auto____$1 = (clojure.test.check.results.result_data[\"_\"]);\nif(!((m__4244__auto____$1 == null))){\nreturn (m__4244__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4244__auto____$1.cljs$core$IFn$_invoke$arity$1(result) : m__4244__auto____$1.call(null,result));\n} else {\nthrow cljs.core.missing_protocol(\"Result.result-data\",result);\n}\n}\n}\n});\n\ngoog.object.set(clojure.test.check.results.Result,\"_\",true);\n\nvar G__26328_26345 = clojure.test.check.results.passing_QMARK_;\nvar G__26329_26346 = \"_\";\nvar G__26330_26347 = ((function (G__26328_26345,G__26329_26346){\nreturn (function (this$){\nreturn cljs.core.boolean$(this$);\n});})(G__26328_26345,G__26329_26346))\n;\ngoog.object.set(G__26328_26345,G__26329_26346,G__26330_26347);\n\nvar G__26331_26349 = clojure.test.check.results.result_data;\nvar G__26332_26350 = \"_\";\nvar G__26333_26351 = ((function (G__26331_26349,G__26332_26350){\nreturn (function (this$){\nreturn cljs.core.PersistentArrayMap.EMPTY;\n});})(G__26331_26349,G__26332_26350))\n;\ngoog.object.set(G__26331_26349,G__26332_26350,G__26333_26351);\n\ngoog.object.set(clojure.test.check.results.Result,\"null\",true);\n\nvar G__26337_26353 = clojure.test.check.results.passing_QMARK_;\nvar G__26338_26354 = \"null\";\nvar G__26339_26355 = ((function (G__26337_26353,G__26338_26354){\nreturn (function (this$){\nreturn false;\n});})(G__26337_26353,G__26338_26354))\n;\ngoog.object.set(G__26337_26353,G__26338_26354,G__26339_26355);\n\nvar G__26340_26357 = clojure.test.check.results.result_data;\nvar G__26341_26358 = \"null\";\nvar G__26342_26359 = ((function (G__26340_26357,G__26341_26358){\nreturn (function (this$){\nreturn cljs.core.PersistentArrayMap.EMPTY;\n});})(G__26340_26357,G__26341_26358))\n;\ngoog.object.set(G__26340_26357,G__26341_26358,G__26342_26359);\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","clojure/test/check/results.cljc","~:line",12,"~:column",5,"~:end-line",12,"~:end-column",31,"~:author","Gary Fredericks","~:doc","A protocol and helper functions for trial results."],"~:ns-aliases",["^ ","~$clojure.core.async","~$cljs.core.async","~$raspicam","~$shadow.js.shim.module$raspicam"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$clojure.test.check.results","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^K","~$goog","^L"],"~:seen",["^D",[]],"~:uses",null,"~:require-macros",["^ ","^K","^K"],"~:form",["~#list",["~$ns","^F"]],"~:flags",["^ "],"~:js-deps",["^ "],"~:deps",["^L","^K"]],"^H","^F","~:resource-id",["~:shadow.build.classpath/resource","clojure/test/check/results.cljc"],"~:compiled-at",1537546389047,"~:resource-name","clojure/test/check/results.cljc","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey, Reid Draper, and contributors.\n;   All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns ^{:author \"Gary Fredericks\"\n      :doc \"A protocol and helper functions for trial results.\"}\n    clojure.test.check.results)\n\n(defprotocol Result\n  (passing? [result])\n  (result-data [result] \"A map of data about the trial.\"))\n\n(extend-protocol Result\n  #?(:clj Object :cljs default)\n  (passing? [this] (boolean this))\n  (result-data [this] {})\n\n  nil\n  (passing? [this] false)\n  (result-data [this] {}))\n","~:reader-features",["^D",["~:cljs"]],"~:source-map",["^ ","~i13",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",2],["^ ","^14",0,"^15",2],["^ ","^14",0,"^15",3],["^ ","^14",36,"^15",6],["^ ","^14",0,"^15",8],["^ ","^14",44,"^15",8],["^ ","^14",0,"^15",9],["^ ","^14",0,"^15",9],["^ ","^14",3,"^15",9],["^ ","^14",5,"^15",9],["^ ","^14",7,"^15",9],["^ ","^14",18,"^15",9],["^ ","^14",30,"^15",9],["^ ","^14",32,"^15",9],["^ ","^14",33,"^15",9],["^ ","^14",100,"^15",9],["^ ","^14",0,"^15",10],["^ ","^14",0,"^15",12],["^ ","^14",4,"^15",12,"^E","x__4243__auto__"],["^ ","^14",22,"^15",12],["^ ","^14",24,"^15",12],["^ ","^14",35,"^15",12],["^ ","^14",42,"^15",12],["^ ","^14",4,"^15",13,"^E","m__4244__auto__"],["^ ","^14",22,"^15",13],["^ ","^14",23,"^15",13,"^E","clojure/test.check.results.passing?"],["^ ","^14",65,"^15",13],["^ ","^14",65,"^15",13,"^E","goog/typeOf"],["^ ","^14",77,"^15",13,"^E","x__4243__auto__"],["^ ","^14",0,"^15",14],["^ ","^14",0,"^15",14],["^ ","^14",3,"^15",14],["^ ","^14",5,"^15",14],["^ ","^14",6,"^15",14,"^E","m__4244__auto__"],["^ ","^14",25,"^15",14],["^ ","^14",0,"^15",15],["^ ","^14",8,"^15",15,"^E","m__4244__auto__"],["^ ","^14",56,"^15",15,"^E","m__4244__auto__"],["^ ","^14",112,"^15",15,"^E","m__4244__auto__"],["^ ","^14",0,"^15",17],["^ ","^14",4,"^15",17,"^E","m__4244__auto__"],["^ ","^14",26,"^15",17],["^ ","^14",27,"^15",17,"^E","clojure/test.check.results.passing?"],["^ ","^14",69,"^15",17],["^ ","^14",0,"^15",18],["^ ","^14",0,"^15",18],["^ ","^14",3,"^15",18],["^ ","^14",5,"^15",18],["^ ","^14",6,"^15",18,"^E","m__4244__auto__"],["^ ","^14",29,"^15",18],["^ ","^14",0,"^15",19],["^ ","^14",8,"^15",19,"^E","m__4244__auto__"],["^ ","^14",60,"^15",19,"^E","m__4244__auto__"],["^ ","^14",120,"^15",19,"^E","m__4244__auto__"],["^ ","^14",0,"^15",21],["^ ","^14",6,"^15",21],["^ ","^14",6,"^15",21,"^E","cljs.core/missing-protocol"],["^ ","^14",33,"^15",21],["^ ","^14",0,"^15",27],["^ ","^14",41,"^15",30],["^ ","^14",0,"^15",31],["^ ","^14",0,"^15",31],["^ ","^14",3,"^15",31],["^ ","^14",5,"^15",31],["^ ","^14",7,"^15",31],["^ ","^14",18,"^15",31],["^ ","^14",30,"^15",31],["^ ","^14",32,"^15",31],["^ ","^14",33,"^15",31],["^ ","^14",97,"^15",31],["^ ","^14",0,"^15",32],["^ ","^14",0,"^15",34],["^ ","^14",4,"^15",34,"^E","x__4243__auto__"],["^ ","^14",22,"^15",34],["^ ","^14",24,"^15",34],["^ ","^14",35,"^15",34],["^ ","^14",42,"^15",34],["^ ","^14",4,"^15",35,"^E","m__4244__auto__"],["^ ","^14",22,"^15",35],["^ ","^14",23,"^15",35,"^E","clojure/test.check.results.result-data"],["^ ","^14",62,"^15",35],["^ ","^14",62,"^15",35,"^E","goog/typeOf"],["^ ","^14",74,"^15",35,"^E","x__4243__auto__"],["^ ","^14",0,"^15",36],["^ ","^14",0,"^15",36],["^ ","^14",3,"^15",36],["^ ","^14",5,"^15",36],["^ ","^14",6,"^15",36,"^E","m__4244__auto__"],["^ ","^14",25,"^15",36],["^ ","^14",0,"^15",37],["^ ","^14",8,"^15",37,"^E","m__4244__auto__"],["^ ","^14",56,"^15",37,"^E","m__4244__auto__"],["^ ","^14",112,"^15",37,"^E","m__4244__auto__"],["^ ","^14",0,"^15",39],["^ ","^14",4,"^15",39,"^E","m__4244__auto__"],["^ ","^14",26,"^15",39],["^ ","^14",27,"^15",39,"^E","clojure/test.check.results.result-data"],["^ ","^14",66,"^15",39],["^ ","^14",0,"^15",40],["^ ","^14",0,"^15",40],["^ ","^14",3,"^15",40],["^ ","^14",5,"^15",40],["^ ","^14",6,"^15",40,"^E","m__4244__auto__"],["^ ","^14",29,"^15",40],["^ ","^14",0,"^15",41],["^ ","^14",8,"^15",41,"^E","m__4244__auto__"],["^ ","^14",60,"^15",41,"^E","m__4244__auto__"],["^ ","^14",120,"^15",41,"^E","m__4244__auto__"],["^ ","^14",0,"^15",43],["^ ","^14",6,"^15",43],["^ ","^14",6,"^15",43,"^E","cljs.core/missing-protocol"],["^ ","^14",33,"^15",43],["^ ","^14",0,"^15",49]],"^13",[["^ ","^14",0,"^15",6,"^E","clojure.test.check.results/Result"]]],"~i14",["^ ","~i3",[["^ ","^14",0,"^15",8,"^E","clojure.test.check.results/passing?"]],"^13",[["^ ","^14",96,"^15",8,"^E","result"],["^ ","^14",8,"^15",9,"^E","result"],["^ ","^14",33,"^15",9,"^E","result"],["^ ","^14",7,"^15",10,"^E","result"],["^ ","^14",71,"^15",10,"^E","result"],["^ ","^14",25,"^15",12,"^E","result"],["^ ","^14",47,"^15",12,"^E","result"],["^ ","^14",102,"^15",15,"^E","result"],["^ ","^14",138,"^15",15,"^E","result"],["^ ","^14",110,"^15",19,"^E","result"],["^ ","^14",150,"^15",19,"^E","result"],["^ ","^14",51,"^15",21,"^E","result"]]],"~i15",["^ ","~i3",[["^ ","^14",0,"^15",30,"^E","clojure.test.check.results/result-data"]],"~i16",[["^ ","^14",90,"^15",30,"^E","result"],["^ ","^14",8,"^15",31,"^E","result"],["^ ","^14",33,"^15",31,"^E","result"],["^ ","^14",7,"^15",32,"^E","result"],["^ ","^14",68,"^15",32,"^E","result"],["^ ","^14",25,"^15",34,"^E","result"],["^ ","^14",47,"^15",34,"^E","result"],["^ ","^14",102,"^15",37,"^E","result"],["^ ","^14",138,"^15",37,"^E","result"],["^ ","^14",110,"^15",41,"^E","result"],["^ ","^14",150,"^15",41,"^E","result"],["^ ","^14",54,"^15",43,"^E","result"]]],"~i17",["^ ","~i0",[["^ ","^14",0,"^15",49],["^ ","^14",0,"^15",49],["^ ","^14",0,"^15",49],["^ ","^14",0,"^15",49,"^E","goog.object/set"],["^ ","^14",16,"^15",49,"^E","clojure.test.check.results/Result"],["^ ","^14",50,"^15",49],["^ ","^14",54,"^15",49],["^ ","^14",0,"^15",51],["^ ","^14",4,"^15",51,"^E","G__26328"],["^ ","^14",21,"^15",51,"^E","clojure.test.check.results/passing?"],["^ ","^14",4,"^15",52,"^E","G__26329"],["^ ","^14",21,"^15",52],["^ ","^14",4,"^15",53,"^E","G__26330"],["^ ","^14",0,"^15",58],["^ ","^14",0,"^15",58],["^ ","^14",0,"^15",58,"^E","goog.object/set"],["^ ","^14",16,"^15",58,"^E","G__26328"],["^ ","^14",31,"^15",58,"^E","G__26329"],["^ ","^14",46,"^15",58,"^E","G__26330"],["^ ","^14",0,"^15",60],["^ ","^14",4,"^15",60,"^E","G__26331"],["^ ","^14",21,"^15",60,"^E","clojure.test.check.results/result-data"],["^ ","^14",4,"^15",61,"^E","G__26332"],["^ ","^14",21,"^15",61],["^ ","^14",4,"^15",62,"^E","G__26333"],["^ ","^14",0,"^15",67],["^ ","^14",0,"^15",67],["^ ","^14",0,"^15",67,"^E","goog.object/set"],["^ ","^14",16,"^15",67,"^E","G__26331"],["^ ","^14",31,"^15",67,"^E","G__26332"],["^ ","^14",46,"^15",67,"^E","G__26333"],["^ ","^14",0,"^15",69],["^ ","^14",0,"^15",69],["^ ","^14",0,"^15",69,"^E","goog.object/set"],["^ ","^14",16,"^15",69,"^E","clojure.test.check.results/Result"],["^ ","^14",50,"^15",69],["^ ","^14",57,"^15",69],["^ ","^14",0,"^15",71],["^ ","^14",4,"^15",71,"^E","G__26337"],["^ ","^14",21,"^15",71,"^E","clojure.test.check.results/passing?"],["^ ","^14",4,"^15",72,"^E","G__26338"],["^ ","^14",21,"^15",72],["^ ","^14",4,"^15",73,"^E","G__26339"],["^ ","^14",0,"^15",78],["^ ","^14",0,"^15",78],["^ ","^14",0,"^15",78,"^E","goog.object/set"],["^ ","^14",16,"^15",78,"^E","G__26337"],["^ ","^14",31,"^15",78,"^E","G__26338"],["^ ","^14",46,"^15",78,"^E","G__26339"],["^ ","^14",0,"^15",80],["^ ","^14",4,"^15",80,"^E","G__26340"],["^ ","^14",21,"^15",80,"^E","clojure.test.check.results/result-data"],["^ ","^14",4,"^15",81,"^E","G__26341"],["^ ","^14",21,"^15",81],["^ ","^14",4,"^15",82,"^E","G__26342"],["^ ","^14",0,"^15",87],["^ ","^14",0,"^15",87],["^ ","^14",0,"^15",87,"^E","goog.object/set"],["^ ","^14",16,"^15",87,"^E","G__26340"],["^ ","^14",31,"^15",87,"^E","G__26341"],["^ ","^14",46,"^15",87,"^E","G__26342"]]],"~i19",["^ ","~i2",[["^ ","^14",21,"^15",53],["^ ","^14",0,"^15",55]],"^13",[["^ ","^14",18,"^15",54,"^E","this"]],"^1:",[["^ ","^14",0,"^15",55]],"~i20",[["^ ","^14",7,"^15",55,"^E","cljs.core/boolean"]],"~i28",[["^ ","^14",26,"^15",55,"^E","this"]]],"^1;",["^ ","~i2",[["^ ","^14",21,"^15",62],["^ ","^14",0,"^15",64],["^ ","^14",0,"^15",64]],"^18",[["^ ","^14",18,"^15",63,"^E","this"]]],"~i23",["^ ","~i2",[["^ ","^14",21,"^15",73],["^ ","^14",0,"^15",75],["^ ","^14",0,"^15",75]],"^13",[["^ ","^14",18,"^15",74,"^E","this"]]],"~i24",["^ ","~i2",[["^ ","^14",21,"^15",82],["^ ","^14",0,"^15",84],["^ ","^14",0,"^15",84]],"^18",[["^ ","^14",18,"^15",83,"^E","this"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^K"],[1534380137000],["^W","goog/math/math.js"],[1530991559994,"^L","~$goog.array","~$goog.asserts"],["^W","goog/array/array.js"],[1530991559994,"^L","^1D"],["^W","goog/debug/error.js"],[1530991559994,"^L"],["^W","goog/dom/nodetype.js"],[1530991559994,"^L"],["^W","goog/object/object.js"],[1530991559994,"^L"],"~:SHADOW-TIMESTAMP",[1535989513000,1534380137000],["^W","goog/math/long.js"],[1530991559994,"^L","^1D","~$goog.reflect"],["^W","goog/functions/functions.js"],[1530991559994,"^L"],["^W","goog/structs/map.js"],[1530991559994,"^L","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^W","goog/asserts/asserts.js"],[1530991559994,"^L","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^W","goog/uri/uri.js"],[1530991559994,"^L","^1C","^1D","^1L","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^W","goog/base.js"],[1530991559994],["^W","goog/structs/structs.js"],[1530991559994,"^L","^1C","^1I"],["^W","goog/string/string.js"],[1530991559994,"^L"],["^W","goog/reflect/reflect.js"],[1530991559994,"^L"],["^W","goog/string/stringbuffer.js"],[1530991559994,"^L"],["^W","goog/iter/iter.js"],[1530991559994,"^L","^1C","^1D","~$goog.functions","~$goog.math"],["^W","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^1L","^1I","^1C","~$goog.Uri","~$goog.string.StringBuffer"],["^W","goog/math/integer.js"],[1530991559994,"^L"],["^W","goog/uri/utils.js"],[1530991559994,"^L","^1C","^1D","^1L"],["^W","clojure/test/check/results.cljc"],[1535586405418,"^L","^K"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","clojure/test/check/results.cljc","^7",12,"^8",5,"^9",12,"^:",31,"^;","Gary Fredericks","^<","A protocol and helper functions for trial results."],"^=",["^ ","^>","^?","^@","^A"],"~:shadow/protocol-prefixes",["^D",["clojure$test$check$results$Result$"]],"^B",null,"^C",["^D",[]],"^E","^F","^I",null,"^J",["^ ","^K","^K","^L","^L"],"^M",["^D",[]],"^N",null,"~:defs",["^ ","~$Result",["^ ","^5",["^ ","^6","clojure/test/check/results.cljc","^7",14,"^8",14,"^9",14,"^:",20,"^<",null,"~:protocol-symbol",true,"~:jsdoc",["^Q",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$passing?",[["~$result"]],"~$result-data",[["^25"]]]]],"^20",true,"^E","~$clojure.test.check.results/Result","^6","clojure/test/check/results.cljc","^:",20,"^8",1,"^7",14,"^22",["^ ","^23",["^ ","^24",[["^25"]],"^26",[["^25"]]]],"~:info",null,"^9",14,"~:tag","~$any","~:impls",["^D",[null,"~$default"]],"^<",null,"^21",["^Q",["@interface"]]],"^24",["^ ","~:protocol-inline",null,"^5",["^ ","^6","clojure/test/check/results.cljc","^7",15,"^8",4,"^9",15,"^:",12,"~:protocol","^27","^<",null,"~:arglists",["^Q",["~$quote",["^Q",[["^25"]]]]]],"^2>","^27","^E","~$clojure.test.check.results/passing?","~:variadic",false,"^6","clojure/test/check/results.cljc","^:",12,"~:method-params",["^Q",[["^25"]]],"~:protocol-impl",null,"~:arglists-meta",["^Q",[null,null]],"^8",1,"^7",14,"^9",15,"~:max-fixed-arity",1,"~:fn-var",true,"^2?",["^Q",["^2@",["^Q",[["^25"]]]]],"^<",null],"^26",["^ ","^2=",null,"^5",["^ ","^6","clojure/test/check/results.cljc","^7",16,"^8",4,"^9",16,"^:",15,"^2>","^27","^<","A map of data about the trial.","^2?",["^Q",["^2@",["^Q",[["^25"]]]]]],"^2>","^27","^E","~$clojure.test.check.results/result-data","^2B",false,"^6","clojure/test/check/results.cljc","^:",15,"^2C",["^Q",[["^25"]]],"^2D",null,"^2E",["^Q",[null,null]],"^8",1,"^7",14,"^9",16,"^2F",1,"^2G",true,"^2?",["^Q",["^2@",["^Q",[["^25"]]]]],"^<","A map of data about the trial."]],"^O",["^ ","^K","^K"],"^S",["^ "],"^T",["^ "],"^U",["^L","^K"]],"^H","^F","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1A",[["^2K","~:static-fns"],true,["^2K","~:elide-asserts"],false,["^2K","~:optimize-constants"],null,["^2K","~:external-config"],null,["^2K","~:tooling-config"],null,["^2K","~:emit-constants"],null,["^2K","~:infer-externs"],true,["^2K","^10"],null,["~:js-options","~:js-provider"],"~:require",["~:mode"],"~:dev",["^2K","~:fn-invoke-direct"],null,["^2K","^12"],"/dev/null"]]]