["^ ","~:output",["^ ","~:js","goog.provide('shadow.test.node');\ngoog.require('cljs.core');\ngoog.require('shadow.test.env');\ngoog.require('cljs.test');\ngoog.require('shadow.test');\ncljs.test.report.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.test\",\"default\",\"cljs.test/default\",-1581405322),new cljs.core.Keyword(null,\"end-run-tests\",\"end-run-tests\",267300563)], null),(function (m){\nif(cljs.core.truth_(cljs.test.successful_QMARK_(m))){\nreturn process.exit((0));\n} else {\nreturn process.exit((1));\n}\n}));\nshadow.test.node.main = (function shadow$test$node$main(){\nreturn shadow.test.run_all_tests.cljs$core$IFn$_invoke$arity$0();\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","shadow/test/node.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",21],"~:ns-aliases",["^ ","~$clojure.core.async","~$cljs.core.async","~$raspicam","~$shadow.js.shim.module$raspicam"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$shadow.test.node","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$shadow.test.env","^I","~$env","^I","~$cljs.test","^K","~$ct","^K","~$shadow.test","^M","~$st","^M","~$cljs.core","^O","~$goog","^P"],"~:seen",["^B",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^O","^O","^K","^K","^L","^K"],"~:form",["~#list",["~$ns","^D",["^V",["^R",["^I","~:as","^J"],["^K","^X","^L"],["^M","^X","^N"]]]]],"~:flags",["^ ","^R",["^B",[]]],"~:js-deps",["^ "],"~:deps",["^P","^O","^I","^K","^M"]],"^F","^D","~:resource-id",["~:shadow.build.classpath/resource","shadow/test/node.cljs"],"~:compiled-at",1540144999934,"~:resource-name","shadow/test/node.cljs","~:warnings",[],"~:source","(ns shadow.test.node\r\n  (:require\r\n    [shadow.test.env :as env]\r\n    [cljs.test :as ct]\r\n    [shadow.test :as st]))\r\n\r\n;; FIXME: add option to not exit the node process?\r\n(defmethod ct/report [::ct/default :end-run-tests] [m]\r\n  (if (ct/successful? m)\r\n    (js/process.exit 0)\r\n    (js/process.exit 1)))\r\n\r\n(defn main []\r\n   (st/run-all-tests))\r\n","~:reader-features",["^B",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";;;;;AAOA,AAAAA,6DAAA,mFAAA,6EAAA,8EAAA,WAAoDC;AAApD,AACE,oBAAI,AAACC,4BAAeD;AAClB,oBAAA,bAACE;;AACD,oBAAA,bAACA;;;AAEL,wBAAA,xBAAMC;AAAN,AACG,OAACC","names",["cljs.test/report","m","cljs.test/successful?","js/process.exit","shadow.test.node/main","shadow.test.run_all_tests.cljs$core$IFn$_invoke$arity$0"]]],"~:cache-keys",["~#cmap",[["~:macro","^O"],[1534380137000],["^11","goog/math/math.js"],[1530991559994,"^P","~$goog.array","~$goog.asserts"],["^11","goog/array/array.js"],[1530991559994,"^P","^1@"],["^11","goog/debug/error.js"],[1530991559994,"^P"],["^11","goog/dom/nodetype.js"],[1530991559994,"^P"],["^11","cljs/pprint.cljs"],[1534380137690,"^P","^O","~$clojure.string","~$goog.string","~$goog.string.StringBuffer"],["^11","shadow/test/node.cljs"],[1540077702615,"^P","^O","^I","^K","^M"],["^11","shadow/test.cljs"],[1540077702615,"^P","^O","^K","^I"],["^11","goog/object/object.js"],[1530991559994,"^P"],"~:SHADOW-TIMESTAMP",[1540077702000,1534380137000],["^11","goog/math/long.js"],[1530991559994,"^P","^1@","~$goog.reflect"],["^11","shadow/test/env.cljs"],[1540077702615,"^P","^O"],["^11","goog/functions/functions.js"],[1530991559994,"^P"],["^11","goog/structs/map.js"],[1530991559994,"^P","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^11","goog/asserts/asserts.js"],[1530991559994,"^P","~$goog.debug.Error","~$goog.dom.NodeType","^1B"],["^1>","~$cljs.pprint"],[1534380137000],["^11","goog/uri/uri.js"],[1530991559994,"^P","^1?","^1@","^1B","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1>","^K"],[1534380137000],["^11","goog/base.js"],[1530991559994],["^11","goog/structs/structs.js"],[1530991559994,"^P","^1?","^1H"],["^11","clojure/string.cljs"],[1534380137690,"^P","^O","^1B","^1C"],["^11","goog/string/string.js"],[1530991559994,"^P"],["^11","goog/reflect/reflect.js"],[1530991559994,"^P"],["^1>","~$clojure.template"],[1534380136000],["^11","goog/string/stringbuffer.js"],[1530991559994,"^P"],["^11","goog/iter/iter.js"],[1530991559994,"^P","^1?","^1@","~$goog.functions","~$goog.math"],["^11","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^1B","^1H","^1?","~$goog.Uri","^1C"],["^11","goog/math/integer.js"],[1530991559994,"^P"],["^11","goog/uri/utils.js"],[1530991559994,"^P","^1?","^1@","^1B"],["^11","cljs/test.cljs"],[1534380137690,"^I","^P","^O","^1A","^1K"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","shadow/test/node.cljs","^7",1,"^8",5,"^9",1,"^:",21],"^;",["^ ","^<","^=","^>","^?"],"^@",null,"^A",["^B",[]],"~:shadow/js-access-properties",["^B",["exit"]],"^C","^D","^G",null,"^H",["^ ","^I","^I","^J","^I","^K","^K","^L","^K","^M","^M","^N","^M","^O","^O","^P","^P"],"^Q",["^B",["^R"]],"~:shadow/js-access-global",["^B",["process"]],"^S",null,"~:defs",["^ ","~$main",["^ ","~:protocol-inline",null,"^5",["^ ","^6","shadow/test/node.cljs","^7",13,"^8",7,"^9",13,"^:",11,"~:arglists",["^V",["~$quote",["^V",[[]]]]]],"^C","~$shadow.test.node/main","~:variadic",false,"^6","shadow/test/node.cljs","^:",11,"~:method-params",["^V",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^V",[null,null]],"^8",1,"^7",13,"^9",13,"~:max-fixed-arity",0,"~:fn-var",true,"^21",["^V",["^22",["^V",[[]]]]]]],"^T",["^ ","^O","^O","^K","^K","^L","^K"],"~:cljs.analyzer/constants",["^ ","^Q",["^B",["~:end-run-tests","~:cljs.test/default"]],"~:order",["^2<","^2;"]],"^Y",["^ ","^R",["^B",[]]],"^Z",["^ "],"^[",["^P","^O","^I","^K","^M"]],"^F","^D","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1=",[["^2@","~:static-fns"],true,["^2@","~:elide-asserts"],false,["^2@","~:optimize-constants"],null,["^2@","~:external-config"],null,["^2@","~:tooling-config"],null,["^2@","~:emit-constants"],null,["^2@","~:infer-externs"],true,["^2@","^16"],null,["~:js-options","~:js-provider"],"^R",["~:mode"],"~:dev",["^2@","~:fn-invoke-direct"],null,["^2@","~:source-map"],"/dev/null"]]]