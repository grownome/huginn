["^ ","~:output",["^ ","~:js","goog.provide('huginn.mqtt');\ngoog.require('cljs.core');\ngoog.require('promesa.core');\ngoog.require('clojure.string');\ngoog.require('huginn.jwt');\ngoog.require('shadow.js.shim.module$gcic_mqtt_client');\ngoog.require('huginn.config');\ngoog.require('taoensso.timbre');\ngoog.require('cljs.core.async');\ngoog.require('shadow.js.shim.module$systeminformation');\ngoog.require('cljs.spec.alpha');\ngoog.require('cljs.nodejs');\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"events\",null,\"state\",null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"events\",null,\"state\",null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),null,null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__21444){\nreturn cljs.core.map_QMARK_(G__21444);\n}),(function (G__21444){\nreturn cljs.core.contains_QMARK_(G__21444,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096));\n}),(function (G__21444){\nreturn cljs.core.contains_QMARK_(G__21444,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\n}),(function (G__21444){\nreturn cljs.core.contains_QMARK_(G__21444,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214));\n}),(function (G__21444){\nreturn cljs.core.contains_QMARK_(G__21444,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\n})], null),(function (G__21444){\nreturn ((cljs.core.map_QMARK_(G__21444)) && (cljs.core.contains_QMARK_(G__21444,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096))) && (cljs.core.contains_QMARK_(G__21444,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006))) && (cljs.core.contains_QMARK_(G__21444,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214))) && (cljs.core.contains_QMARK_(G__21444,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096),new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006),new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214),new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208)))], null),null])));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__21445#\",\"p1__21445#\",-523831748,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"p1__21445#\",\"p1__21445#\",-523831748,null)),(200000)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)),(200000)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_,(function (p1__21445_SHARP_){\nreturn (cljs.core.count(p1__21445_SHARP_) < (200000));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__21446#\",\"p1__21446#\",845169370,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"p1__21446#\",\"p1__21446#\",845169370,null)),(200)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)),(200)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_,(function (p1__21446_SHARP_){\nreturn (cljs.core.count(p1__21446_SHARP_) < (200));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"ts\",\"huginn.mqtt/ts\",2127118637),new cljs.core.Symbol(\"cljs.core\",\"float?\",\"cljs.core/float?\",-941017745,null),cljs.core.float_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"qos\",\"huginn.mqtt/qos\",-601553370),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(0),null,(1),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(0),null,(1),null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),new cljs.core.Keyword(\"huginn.mqtt\",\"qos\",\"huginn.mqtt/qos\",-601553370),new cljs.core.Keyword(\"huginn.mqtt\",\"ts\",\"huginn.mqtt/ts\",2127118637)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),new cljs.core.Keyword(\"huginn.mqtt\",\"qos\",\"huginn.mqtt/qos\",-601553370),new cljs.core.Keyword(\"huginn.mqtt\",\"ts\",\"huginn.mqtt/ts\",2127118637)], null),null,null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__21447){\nreturn cljs.core.map_QMARK_(G__21447);\n}),(function (G__21447){\nreturn cljs.core.contains_QMARK_(G__21447,new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092));\n}),(function (G__21447){\nreturn cljs.core.contains_QMARK_(G__21447,new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439));\n}),(function (G__21447){\nreturn cljs.core.contains_QMARK_(G__21447,new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319));\n}),(function (G__21447){\nreturn cljs.core.contains_QMARK_(G__21447,new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904));\n})], null),(function (G__21447){\nreturn ((cljs.core.map_QMARK_(G__21447)) && (cljs.core.contains_QMARK_(G__21447,new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092))) && (cljs.core.contains_QMARK_(G__21447,new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439))) && (cljs.core.contains_QMARK_(G__21447,new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319))) && (cljs.core.contains_QMARK_(G__21447,new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),new cljs.core.Keyword(\"huginn.mqtt\",\"qos\",\"huginn.mqtt/qos\",-601553370),new cljs.core.Keyword(\"huginn.mqtt\",\"ts\",\"huginn.mqtt/ts\",2127118637)], null),null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319),new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904)))], null),null])));\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"client-id\",\"huginn.mqtt/client-id\",1699900680,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),null,null),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),null,null,null));\n/**\n * Builds a client id used to identify the device this message is\n *   comming from\n */\nhuginn.mqtt.client_id = (function huginn$mqtt$client_id(p__21448){\nvar map__21449 = p__21448;\nvar map__21449__$1 = ((((!((map__21449 == null)))?(((((map__21449.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__21449.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21449):map__21449);\nvar opts = map__21449__$1;\nvar projectId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21449__$1,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096));\nvar registryId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21449__$1,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\nvar cloudRegion = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21449__$1,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214));\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21449__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"projects/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(projectId),\"/locations/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cloudRegion),\"/registries/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(registryId),\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId)].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"config-chan\",\"huginn.mqtt/config-chan\",-1665797133,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null))),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__21451){\nreturn cljs.core.map_QMARK_(G__21451);\n}),(function (G__21451){\nreturn cljs.core.contains_QMARK_(G__21451,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\n})], null),(function (G__21451){\nreturn ((cljs.core.map_QMARK_(G__21451)) && (cljs.core.contains_QMARK_(G__21451,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208)))], null),null]))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),null,null,null));\n/**\n * google give each device two channeles, a state channel (the config channel)\n *   and a telemetry channel (the one that we push all our data over). The name of\n *   these channels are determined by google iot core.\n */\nhuginn.mqtt.config_chan = (function huginn$mqtt$config_chan(p__21452){\nvar map__21453 = p__21452;\nvar map__21453__$1 = ((((!((map__21453 == null)))?(((((map__21453.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__21453.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21453):map__21453);\nvar opts = map__21453__$1;\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21453__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId),\"/config\"].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"client-handlers\",\"huginn.mqtt/client-handlers\",1114981143,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.fn_QMARK_,cljs.core.fn_QMARK_,new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\n/**\n * builds a map of handels to attach to the mqtt object\n */\nhuginn.mqtt.client_handlers = (function huginn$mqtt$client_handlers(success_fn,fail,send,recv){\nreturn new cljs.core.PersistentArrayMap(null, 5, [\"connect\",(function (success){\nif(cljs.core.truth_(success)){\nreturn (success_fn.cljs$core$IFn$_invoke$arity$0 ? success_fn.cljs$core$IFn$_invoke$arity$0() : success_fn.call(null));\n} else {\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"huginn.mqtt\",\"*cider-repl src/huginn:localhost:41263(clj)*\",82,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"client connection failure\"], null);\n}),null)),null,1101054017);\n\nreturn (fail.cljs$core$IFn$_invoke$arity$0 ? fail.cljs$core$IFn$_invoke$arity$0() : fail.call(null));\n}\n}),\"close\",(function (){\nreturn null;\n}),\"reconnect\",(function (){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"huginn.mqtt\",\"*cider-repl src/huginn:localhost:41263(clj)*\",85,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"reconnecting\"], null);\n}),null)),null,-1341520371);\n}),\"error\",(function (err){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"huginn.mqtt\",\"*cider-repl src/huginn:localhost:41263(clj)*\",86,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"error: \",err], null);\n}),null)),null,-1675531630);\n}),\"message\",(function (topic,message,packet){\nvar c__14273__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__14273__auto__){\nreturn (function (){\nvar f__14274__auto__ = (function (){var switch__14250__auto__ = ((function (c__14273__auto__){\nreturn (function (state_21461){\nvar state_val_21462 = (state_21461[(1)]);\nif((state_val_21462 === (1))){\nvar inst_21455 = [new cljs.core.Keyword(null,\"topic\",\"topic\",-1960480691),new cljs.core.Keyword(null,\"message\",\"message\",-406056002),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081)];\nvar inst_21456 = [topic,message,packet];\nvar inst_21457 = cljs.core.PersistentHashMap.fromArrays(inst_21455,inst_21456);\nvar state_21461__$1 = state_21461;\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_21461__$1,(2),recv,inst_21457);\n} else {\nif((state_val_21462 === (2))){\nvar inst_21459 = (state_21461[(2)]);\nvar state_21461__$1 = state_21461;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_21461__$1,inst_21459);\n} else {\nreturn null;\n}\n}\n});})(c__14273__auto__))\n;\nreturn ((function (switch__14250__auto__,c__14273__auto__){\nreturn (function() {\nvar huginn$mqtt$client_handlers_$_state_machine__14251__auto__ = null;\nvar huginn$mqtt$client_handlers_$_state_machine__14251__auto____0 = (function (){\nvar statearr_21463 = [null,null,null,null,null,null,null];\n(statearr_21463[(0)] = huginn$mqtt$client_handlers_$_state_machine__14251__auto__);\n\n(statearr_21463[(1)] = (1));\n\nreturn statearr_21463;\n});\nvar huginn$mqtt$client_handlers_$_state_machine__14251__auto____1 = (function (state_21461){\nwhile(true){\nvar ret_value__14252__auto__ = (function (){try{while(true){\nvar result__14253__auto__ = switch__14250__auto__(state_21461);\nif(cljs.core.keyword_identical_QMARK_(result__14253__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__14253__auto__;\n}\nbreak;\n}\n}catch (e21464){if((e21464 instanceof Object)){\nvar ex__14254__auto__ = e21464;\nvar statearr_21465_21636 = state_21461;\n(statearr_21465_21636[(5)] = ex__14254__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_21461);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e21464;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__14252__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__21637 = state_21461;\nstate_21461 = G__21637;\ncontinue;\n} else {\nreturn ret_value__14252__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$client_handlers_$_state_machine__14251__auto__ = function(state_21461){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$client_handlers_$_state_machine__14251__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$client_handlers_$_state_machine__14251__auto____1.call(this,state_21461);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$client_handlers_$_state_machine__14251__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$client_handlers_$_state_machine__14251__auto____0;\nhuginn$mqtt$client_handlers_$_state_machine__14251__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$client_handlers_$_state_machine__14251__auto____1;\nreturn huginn$mqtt$client_handlers_$_state_machine__14251__auto__;\n})()\n;})(switch__14250__auto__,c__14273__auto__))\n})();\nvar state__14275__auto__ = (function (){var statearr_21466 = (f__14274__auto__.cljs$core$IFn$_invoke$arity$0 ? f__14274__auto__.cljs$core$IFn$_invoke$arity$0() : f__14274__auto__.call(null));\n(statearr_21466[(6)] = c__14273__auto__);\n\nreturn statearr_21466;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__14275__auto__);\n});})(c__14273__auto__))\n);\n\nreturn c__14273__auto__;\n})], null);\n});\n/**\n * takes a map of handlers and attaches them to the mqtt object\n */\nhuginn.mqtt.add_handlers = (function huginn$mqtt$add_handlers(client,handlers){\nvar seq__21467 = cljs.core.seq(handlers);\nvar chunk__21468 = null;\nvar count__21469 = (0);\nvar i__21470 = (0);\nwhile(true){\nif((i__21470 < count__21469)){\nvar vec__21471 = chunk__21468.cljs$core$IIndexed$_nth$arity$2(null,i__21470);\nvar key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21471,(0),null);\nvar hand = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21471,(1),null);\nclient.on(key,hand);\n\n\nvar G__21638 = seq__21467;\nvar G__21639 = chunk__21468;\nvar G__21640 = count__21469;\nvar G__21641 = (i__21470 + (1));\nseq__21467 = G__21638;\nchunk__21468 = G__21639;\ncount__21469 = G__21640;\ni__21470 = G__21641;\ncontinue;\n} else {\nvar temp__5457__auto__ = cljs.core.seq(seq__21467);\nif(temp__5457__auto__){\nvar seq__21467__$1 = temp__5457__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__21467__$1)){\nvar c__4351__auto__ = cljs.core.chunk_first(seq__21467__$1);\nvar G__21642 = cljs.core.chunk_rest(seq__21467__$1);\nvar G__21643 = c__4351__auto__;\nvar G__21644 = cljs.core.count(c__4351__auto__);\nvar G__21645 = (0);\nseq__21467 = G__21642;\nchunk__21468 = G__21643;\ncount__21469 = G__21644;\ni__21470 = G__21645;\ncontinue;\n} else {\nvar vec__21474 = cljs.core.first(seq__21467__$1);\nvar key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21474,(0),null);\nvar hand = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21474,(1),null);\nclient.on(key,hand);\n\n\nvar G__21646 = cljs.core.next(seq__21467__$1);\nvar G__21647 = null;\nvar G__21648 = (0);\nvar G__21649 = (0);\nseq__21467 = G__21646;\nchunk__21468 = G__21647;\ncount__21469 = G__21648;\ni__21470 = G__21649;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"build-client\",\"huginn.mqtt/build-client\",-620852627,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\nhuginn.mqtt.build_client = (function huginn$mqtt$build_client(opts){\n\nvar conn_args = huginn.jwt.google_iot_conn_args(opts);\nvar client = (new shadow.js.shim.module$gcic_mqtt_client(conn_args));\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),client], null);\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"init-client\",\"huginn.mqtt/init-client\",-283765885,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"promesa.core\",\"promise?\",\"promesa.core/promise?\",-1893544292,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"promesa.core\",\"promise?\",\"promesa.core/promise?\",-1893544292,null),promesa.core.promise_QMARK_,null,null),new cljs.core.Symbol(\"promesa.core\",\"promise?\",\"promesa.core/promise?\",-1893544292,null),null,null,null));\nhuginn.mqtt.init_client = (function huginn$mqtt$init_client(opts,send,recv){\n\nreturn promesa.core.promise((function (resolve,reject){\nvar map__21477 = huginn.mqtt.build_client(opts);\nvar map__21477__$1 = ((((!((map__21477 == null)))?(((((map__21477.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__21477.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21477):map__21477);\nvar init = map__21477__$1;\nvar client = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21477__$1,new cljs.core.Keyword(null,\"client\",\"client\",-1323448117));\nvar handlers = huginn.mqtt.client_handlers(((function (map__21477,map__21477__$1,init,client){\nreturn (function (){\nreturn (resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(client) : resolve.call(null,client));\n});})(map__21477,map__21477__$1,init,client))\n,((function (map__21477,map__21477__$1,init,client){\nreturn (function (){\nvar G__21479 = new cljs.core.Keyword(null,\"client-fail\",\"client-fail\",1564298304);\nreturn (reject.cljs$core$IFn$_invoke$arity$1 ? reject.cljs$core$IFn$_invoke$arity$1(G__21479) : reject.call(null,G__21479));\n});})(map__21477,map__21477__$1,init,client))\n,send,recv);\nclient.subscribe(huginn.mqtt.config_chan(opts));\n\nreturn huginn.mqtt.add_handlers(client,handlers);\n}));\n});\n/**\n * builds the prefix of the actual values being sent\n *   (str (payload-root config) sensor-name /  sensor-value)\n */\nhuginn.mqtt.payload_root = (function huginn$mqtt$payload_root(p__21480){\nvar map__21481 = p__21480;\nvar map__21481__$1 = ((((!((map__21481 == null)))?(((((map__21481.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__21481.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21481):map__21481);\nvar opts = map__21481__$1;\nvar registryId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21481__$1,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\nvar userId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21481__$1,new cljs.core.Keyword(null,\"userId\",\"userId\",575594135));\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21481__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(registryId),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(userId),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId),\"-payload\"].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"mqtt-topic\",\"huginn.mqtt/mqtt-topic\",-2087820524,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),null,null,null));\n/**\n * msg-type can be 'state' for state updates\n * or 'events' to publish telemetry\n */\nhuginn.mqtt.mqtt_topic = (function huginn$mqtt$mqtt_topic(p__21483,msg_type){\nvar map__21484 = p__21483;\nvar map__21484__$1 = ((((!((map__21484 == null)))?(((((map__21484.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__21484.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21484):map__21484);\nvar opts = map__21484__$1;\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21484__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg_type)].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"prep-temps\",\"huginn.mqtt/prep-temps\",-1223395116,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"data\",\"data\",-232669377)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.core.any_QMARK_], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),null,new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__21486){\nreturn cljs.core.coll_QMARK_(G__21486);\n}),new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))], null),null),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)),null,null,null));\n/**\n * pulls the data out of the systeminformation library and wrapping them up\n *   to be sent into mqtt\n */\nhuginn.mqtt.prep_temps = (function huginn$mqtt$prep_temps(opts,data){\nvar pr = huginn.mqtt.payload_root(opts);\nvar cores_raw = cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(data.cores);\nvar cores = cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(((function (pr,cores_raw){\nreturn (function (index,value){\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(pr),\"-core-temp-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(index),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(value)].join(''))].join(''),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),[\"metrics/core-temp-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(index)].join(''),new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319),(1),new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904),huginn.jwt.round_now()], null);\n});})(pr,cores_raw))\n,cores_raw);\nvar main = (cljs.core.truth_(data.main)?new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(pr),\"-core-temp-main/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(data.main)].join(''))].join(''),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),\"metrics/core-temp-main\",new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319),(1),new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904),huginn.jwt.round_now()], null):null);\nvar max = (cljs.core.truth_(data.max)?new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(pr),\"-core-temp-max/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(data.max)].join(''))].join(''),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),\"metrics/core-temp-max\",new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319),(1),new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904),huginn.jwt.round_now()], null):null);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [main], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [max], null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cores], 0));\n});\nhuginn.mqtt.stop = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"publish-one\",\"huginn.mqtt/publish-one\",1981166109,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.any_QMARK_,cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Keyword(null,\"value\",\"value\",305978217)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nil_QMARK_,new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)], null),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\n/**\n * Publises one mqtt packet to the client\n */\nhuginn.mqtt.publish_one = (function huginn$mqtt$publish_one(client,p__21487){\nvar map__21488 = p__21487;\nvar map__21488__$1 = ((((!((map__21488 == null)))?(((((map__21488.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__21488.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21488):map__21488);\nvar p = map__21488__$1;\nvar topic = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21488__$1,new cljs.core.Keyword(null,\"topic\",\"topic\",-1960480691));\nvar payload = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21488__$1,new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092));\nvar qos = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21488__$1,new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319));\nif(cljs.core.truth_(p)){\nreturn client.publishEvent(payload,qos,topic);\n} else {\nreturn null;\n}\n});\n/**\n * main loop that pushes packets added to the send-chan to google iot core\n */\nhuginn.mqtt.publisher = (function huginn$mqtt$publisher(client_atom,send_chan){\nvar c__14273__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__14273__auto__){\nreturn (function (){\nvar f__14274__auto__ = (function (){var switch__14250__auto__ = ((function (c__14273__auto__){\nreturn (function (state_21499){\nvar state_val_21500 = (state_21499[(1)]);\nif((state_val_21500 === (1))){\nvar state_21499__$1 = state_21499;\nvar statearr_21501_21654 = state_21499__$1;\n(statearr_21501_21654[(2)] = null);\n\n(statearr_21501_21654[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21500 === (2))){\nvar state_21499__$1 = state_21499;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_21499__$1,(4),send_chan);\n} else {\nif((state_val_21500 === (3))){\nvar inst_21497 = (state_21499[(2)]);\nvar state_21499__$1 = state_21499;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_21499__$1,inst_21497);\n} else {\nif((state_val_21500 === (4))){\nvar inst_21492 = (state_21499[(2)]);\nvar inst_21493 = cljs.core.deref(client_atom);\nvar inst_21494 = huginn.mqtt.publish_one(inst_21493,inst_21492);\nvar state_21499__$1 = (function (){var statearr_21502 = state_21499;\n(statearr_21502[(7)] = inst_21494);\n\nreturn statearr_21502;\n})();\nvar statearr_21503_21655 = state_21499__$1;\n(statearr_21503_21655[(2)] = null);\n\n(statearr_21503_21655[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n});})(c__14273__auto__))\n;\nreturn ((function (switch__14250__auto__,c__14273__auto__){\nreturn (function() {\nvar huginn$mqtt$publisher_$_state_machine__14251__auto__ = null;\nvar huginn$mqtt$publisher_$_state_machine__14251__auto____0 = (function (){\nvar statearr_21504 = [null,null,null,null,null,null,null,null];\n(statearr_21504[(0)] = huginn$mqtt$publisher_$_state_machine__14251__auto__);\n\n(statearr_21504[(1)] = (1));\n\nreturn statearr_21504;\n});\nvar huginn$mqtt$publisher_$_state_machine__14251__auto____1 = (function (state_21499){\nwhile(true){\nvar ret_value__14252__auto__ = (function (){try{while(true){\nvar result__14253__auto__ = switch__14250__auto__(state_21499);\nif(cljs.core.keyword_identical_QMARK_(result__14253__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__14253__auto__;\n}\nbreak;\n}\n}catch (e21505){if((e21505 instanceof Object)){\nvar ex__14254__auto__ = e21505;\nvar statearr_21506_21656 = state_21499;\n(statearr_21506_21656[(5)] = ex__14254__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_21499);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e21505;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__14252__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__21657 = state_21499;\nstate_21499 = G__21657;\ncontinue;\n} else {\nreturn ret_value__14252__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$publisher_$_state_machine__14251__auto__ = function(state_21499){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$publisher_$_state_machine__14251__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$publisher_$_state_machine__14251__auto____1.call(this,state_21499);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$publisher_$_state_machine__14251__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$publisher_$_state_machine__14251__auto____0;\nhuginn$mqtt$publisher_$_state_machine__14251__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$publisher_$_state_machine__14251__auto____1;\nreturn huginn$mqtt$publisher_$_state_machine__14251__auto__;\n})()\n;})(switch__14250__auto__,c__14273__auto__))\n})();\nvar state__14275__auto__ = (function (){var statearr_21507 = (f__14274__auto__.cljs$core$IFn$_invoke$arity$0 ? f__14274__auto__.cljs$core$IFn$_invoke$arity$0() : f__14274__auto__.call(null));\n(statearr_21507[(6)] = c__14273__auto__);\n\nreturn statearr_21507;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__14275__auto__);\n});})(c__14273__auto__))\n);\n\nreturn c__14273__auto__;\n});\n/**\n * loops and refreshs the client atom every token experation.\n *   Mqtt requires that you refresh your token frequently (less then 20 mins)\n */\nhuginn.mqtt.client_refresher = (function huginn$mqtt$client_refresher(client_atom,p__21508,send,recv){\nvar map__21509 = p__21508;\nvar map__21509__$1 = ((((!((map__21509 == null)))?(((((map__21509.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__21509.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21509):map__21509);\nvar opts = map__21509__$1;\nvar tokenExpMins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21509__$1,new cljs.core.Keyword(null,\"tokenExpMins\",\"tokenExpMins\",-1638711857));\nvar delayMs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21509__$1,new cljs.core.Keyword(null,\"delayMs\",\"delayMs\",-1017330168));\nvar client_send_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar client_mixer = cljs.core.async.mix(client_send_chan);\ncljs.core.async.admix(client_mixer,send);\n\nvar c__14273__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__14273__auto__,client_send_chan,client_mixer,map__21509,map__21509__$1,opts,tokenExpMins,delayMs){\nreturn (function (){\nvar f__14274__auto__ = (function (){var switch__14250__auto__ = ((function (c__14273__auto__,client_send_chan,client_mixer,map__21509,map__21509__$1,opts,tokenExpMins,delayMs){\nreturn (function (state_21534){\nvar state_val_21535 = (state_21534[(1)]);\nif((state_val_21535 === (1))){\nvar state_21534__$1 = state_21534;\nvar statearr_21536_21661 = state_21534__$1;\n(statearr_21536_21661[(2)] = null);\n\n(statearr_21536_21661[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21535 === (2))){\nvar inst_21512 = (tokenExpMins * (1000));\nvar inst_21513 = (inst_21512 * (60));\nvar inst_21514 = cljs.core.async.timeout(inst_21513);\nvar state_21534__$1 = state_21534;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_21534__$1,(4),inst_21514);\n} else {\nif((state_val_21535 === (3))){\nvar inst_21532 = (state_21534[(2)]);\nvar state_21534__$1 = state_21534;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_21534__$1,inst_21532);\n} else {\nif((state_val_21535 === (4))){\nvar inst_21516 = (state_21534[(2)]);\nvar inst_21517 = (function (){var wait = inst_21516;\nreturn ((function (wait,inst_21516,state_val_21535,c__14273__auto__,client_send_chan,client_mixer,map__21509,map__21509__$1,opts,tokenExpMins,delayMs){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"\\tRefreshing token after \",((tokenExpMins * (1000)) * (60)),\"ms\"], null);\n});\n;})(wait,inst_21516,state_val_21535,c__14273__auto__,client_send_chan,client_mixer,map__21509,map__21509__$1,opts,tokenExpMins,delayMs))\n})();\nvar inst_21518 = (new cljs.core.Delay(inst_21517,null));\nvar inst_21519 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"huginn.mqtt\",\"*cider-repl src/huginn:localhost:41263(clj)*\",211,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),inst_21518,null,-1669290359);\nvar inst_21520 = [send];\nvar inst_21521 = [new cljs.core.Keyword(null,\"pause\",\"pause\",-2095325672)];\nvar inst_21522 = [true];\nvar inst_21523 = cljs.core.PersistentHashMap.fromArrays(inst_21521,inst_21522);\nvar inst_21524 = [inst_21523];\nvar inst_21525 = cljs.core.PersistentHashMap.fromArrays(inst_21520,inst_21524);\nvar inst_21526 = cljs.core.async.toggle(client_mixer,inst_21525);\nvar inst_21527 = cljs.core.deref(client_atom);\nvar inst_21528 = (function (){var wait = inst_21516;\nreturn ((function (wait,inst_21516,inst_21517,inst_21518,inst_21519,inst_21520,inst_21521,inst_21522,inst_21523,inst_21524,inst_21525,inst_21526,inst_21527,state_val_21535,c__14273__auto__,client_send_chan,client_mixer,map__21509,map__21509__$1,opts,tokenExpMins,delayMs){\nreturn (function (){\n(cljs.core.deref(client_atom)[\"password\"] = cljs.core.clj__GT_js(huginn.jwt.create_jwt(opts)));\n\nreturn cljs.core.deref(client_atom).reconnect(((function (wait,inst_21516,inst_21517,inst_21518,inst_21519,inst_21520,inst_21521,inst_21522,inst_21523,inst_21524,inst_21525,inst_21526,inst_21527,state_val_21535,c__14273__auto__,client_send_chan,client_mixer,map__21509,map__21509__$1,opts,tokenExpMins,delayMs){\nreturn (function (){\nreturn cljs.core.async.toggle(client_mixer,cljs.core.PersistentArrayMap.createAsIfByAssoc([send,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"pause\",\"pause\",-2095325672),false], null)]));\n});})(wait,inst_21516,inst_21517,inst_21518,inst_21519,inst_21520,inst_21521,inst_21522,inst_21523,inst_21524,inst_21525,inst_21526,inst_21527,state_val_21535,c__14273__auto__,client_send_chan,client_mixer,map__21509,map__21509__$1,opts,tokenExpMins,delayMs))\n);\n});\n;})(wait,inst_21516,inst_21517,inst_21518,inst_21519,inst_21520,inst_21521,inst_21522,inst_21523,inst_21524,inst_21525,inst_21526,inst_21527,state_val_21535,c__14273__auto__,client_send_chan,client_mixer,map__21509,map__21509__$1,opts,tokenExpMins,delayMs))\n})();\nvar inst_21529 = inst_21527.end(inst_21528);\nvar state_21534__$1 = (function (){var statearr_21537 = state_21534;\n(statearr_21537[(7)] = inst_21529);\n\n(statearr_21537[(8)] = inst_21519);\n\n(statearr_21537[(9)] = inst_21526);\n\nreturn statearr_21537;\n})();\nvar statearr_21538_21664 = state_21534__$1;\n(statearr_21538_21664[(2)] = null);\n\n(statearr_21538_21664[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n});})(c__14273__auto__,client_send_chan,client_mixer,map__21509,map__21509__$1,opts,tokenExpMins,delayMs))\n;\nreturn ((function (switch__14250__auto__,c__14273__auto__,client_send_chan,client_mixer,map__21509,map__21509__$1,opts,tokenExpMins,delayMs){\nreturn (function() {\nvar huginn$mqtt$client_refresher_$_state_machine__14251__auto__ = null;\nvar huginn$mqtt$client_refresher_$_state_machine__14251__auto____0 = (function (){\nvar statearr_21539 = [null,null,null,null,null,null,null,null,null,null];\n(statearr_21539[(0)] = huginn$mqtt$client_refresher_$_state_machine__14251__auto__);\n\n(statearr_21539[(1)] = (1));\n\nreturn statearr_21539;\n});\nvar huginn$mqtt$client_refresher_$_state_machine__14251__auto____1 = (function (state_21534){\nwhile(true){\nvar ret_value__14252__auto__ = (function (){try{while(true){\nvar result__14253__auto__ = switch__14250__auto__(state_21534);\nif(cljs.core.keyword_identical_QMARK_(result__14253__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__14253__auto__;\n}\nbreak;\n}\n}catch (e21540){if((e21540 instanceof Object)){\nvar ex__14254__auto__ = e21540;\nvar statearr_21541_21672 = state_21534;\n(statearr_21541_21672[(5)] = ex__14254__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_21534);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e21540;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__14252__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__21673 = state_21534;\nstate_21534 = G__21673;\ncontinue;\n} else {\nreturn ret_value__14252__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$client_refresher_$_state_machine__14251__auto__ = function(state_21534){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$client_refresher_$_state_machine__14251__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$client_refresher_$_state_machine__14251__auto____1.call(this,state_21534);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$client_refresher_$_state_machine__14251__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$client_refresher_$_state_machine__14251__auto____0;\nhuginn$mqtt$client_refresher_$_state_machine__14251__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$client_refresher_$_state_machine__14251__auto____1;\nreturn huginn$mqtt$client_refresher_$_state_machine__14251__auto__;\n})()\n;})(switch__14250__auto__,c__14273__auto__,client_send_chan,client_mixer,map__21509,map__21509__$1,opts,tokenExpMins,delayMs))\n})();\nvar state__14275__auto__ = (function (){var statearr_21542 = (f__14274__auto__.cljs$core$IFn$_invoke$arity$0 ? f__14274__auto__.cljs$core$IFn$_invoke$arity$0() : f__14274__auto__.call(null));\n(statearr_21542[(6)] = c__14273__auto__);\n\nreturn statearr_21542;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__14275__auto__);\n});})(c__14273__auto__,client_send_chan,client_mixer,map__21509,map__21509__$1,opts,tokenExpMins,delayMs))\n);\n\nreturn c__14273__auto__;\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"tele-chan\",\"huginn.mqtt/tele-chan\",1912072830,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),null,null),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),null,null,null));\n/**\n * takes the client opts and builds a channel with system telementry\n *   values on it (cpu tempratures specifically)\n */\nhuginn.mqtt.tele_chan = (function huginn$mqtt$tele_chan(opts){\nvar temp_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar out_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar c__14273__auto___21678 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__14273__auto___21678,temp_chan,out_chan){\nreturn (function (){\nvar f__14274__auto__ = (function (){var switch__14250__auto__ = ((function (c__14273__auto___21678,temp_chan,out_chan){\nreturn (function (state_21557){\nvar state_val_21558 = (state_21557[(1)]);\nif((state_val_21558 === (1))){\nvar state_21557__$1 = state_21557;\nvar statearr_21559_21679 = state_21557__$1;\n(statearr_21559_21679[(2)] = null);\n\n(statearr_21559_21679[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21558 === (2))){\nvar inst_21545 = shadow.js.shim.module$systeminformation.cpuTemperature();\nvar inst_21546 = (function (){return ((function (inst_21545,state_val_21558,c__14273__auto___21678,temp_chan,out_chan){\nreturn (function (p1__21543_SHARP_){\nreturn huginn.mqtt.prep_temps(opts,p1__21543_SHARP_);\n});\n;})(inst_21545,state_val_21558,c__14273__auto___21678,temp_chan,out_chan))\n})();\nvar inst_21547 = (function (){return ((function (inst_21545,inst_21546,state_val_21558,c__14273__auto___21678,temp_chan,out_chan){\nreturn (function (mqtt_packets){\nvar c__14273__auto____$1 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__14273__auto____$1,inst_21545,inst_21546,state_val_21558,c__14273__auto___21678,temp_chan,out_chan){\nreturn (function (){\nvar f__14274__auto__ = (function (){var switch__14250__auto__ = ((function (c__14273__auto____$1,inst_21545,inst_21546,state_val_21558,c__14273__auto___21678,temp_chan,out_chan){\nreturn (function (state_21568){\nvar state_val_21569 = (state_21568[(1)]);\nif((state_val_21569 === (1))){\nvar inst_21560 = ((1000) * (60));\nvar inst_21561 = (inst_21560 * (1));\nvar inst_21562 = cljs.core.async.timeout(inst_21561);\nvar state_21568__$1 = state_21568;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_21568__$1,(2),inst_21562);\n} else {\nif((state_val_21569 === (2))){\nvar inst_21564 = (state_21568[(2)]);\nvar state_21568__$1 = (function (){var statearr_21570 = state_21568;\n(statearr_21570[(7)] = inst_21564);\n\nreturn statearr_21570;\n})();\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_21568__$1,(3),temp_chan,mqtt_packets);\n} else {\nif((state_val_21569 === (3))){\nvar inst_21566 = (state_21568[(2)]);\nvar state_21568__$1 = state_21568;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_21568__$1,inst_21566);\n} else {\nreturn null;\n}\n}\n}\n});})(c__14273__auto____$1,inst_21545,inst_21546,state_val_21558,c__14273__auto___21678,temp_chan,out_chan))\n;\nreturn ((function (switch__14250__auto__,c__14273__auto____$1,inst_21545,inst_21546,state_val_21558,c__14273__auto___21678,temp_chan,out_chan){\nreturn (function() {\nvar huginn$mqtt$tele_chan_$_state_machine__14251__auto__ = null;\nvar huginn$mqtt$tele_chan_$_state_machine__14251__auto____0 = (function (){\nvar statearr_21571 = [null,null,null,null,null,null,null,null];\n(statearr_21571[(0)] = huginn$mqtt$tele_chan_$_state_machine__14251__auto__);\n\n(statearr_21571[(1)] = (1));\n\nreturn statearr_21571;\n});\nvar huginn$mqtt$tele_chan_$_state_machine__14251__auto____1 = (function (state_21568){\nwhile(true){\nvar ret_value__14252__auto__ = (function (){try{while(true){\nvar result__14253__auto__ = switch__14250__auto__(state_21568);\nif(cljs.core.keyword_identical_QMARK_(result__14253__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__14253__auto__;\n}\nbreak;\n}\n}catch (e21572){if((e21572 instanceof Object)){\nvar ex__14254__auto__ = e21572;\nvar statearr_21573_21685 = state_21568;\n(statearr_21573_21685[(5)] = ex__14254__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_21568);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e21572;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__14252__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__21686 = state_21568;\nstate_21568 = G__21686;\ncontinue;\n} else {\nreturn ret_value__14252__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$tele_chan_$_state_machine__14251__auto__ = function(state_21568){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$tele_chan_$_state_machine__14251__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$tele_chan_$_state_machine__14251__auto____1.call(this,state_21568);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$tele_chan_$_state_machine__14251__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$tele_chan_$_state_machine__14251__auto____0;\nhuginn$mqtt$tele_chan_$_state_machine__14251__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$tele_chan_$_state_machine__14251__auto____1;\nreturn huginn$mqtt$tele_chan_$_state_machine__14251__auto__;\n})()\n;})(switch__14250__auto__,c__14273__auto____$1,inst_21545,inst_21546,state_val_21558,c__14273__auto___21678,temp_chan,out_chan))\n})();\nvar state__14275__auto__ = (function (){var statearr_21574 = (f__14274__auto__.cljs$core$IFn$_invoke$arity$0 ? f__14274__auto__.cljs$core$IFn$_invoke$arity$0() : f__14274__auto__.call(null));\n(statearr_21574[(6)] = c__14273__auto____$1);\n\nreturn statearr_21574;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__14275__auto__);\n});})(c__14273__auto____$1,inst_21545,inst_21546,state_val_21558,c__14273__auto___21678,temp_chan,out_chan))\n);\n\nreturn c__14273__auto____$1;\n});\n;})(inst_21545,inst_21546,state_val_21558,c__14273__auto___21678,temp_chan,out_chan))\n})();\nvar inst_21548 = promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic(inst_21545,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([inst_21546,inst_21547], 0));\nvar state_21557__$1 = (function (){var statearr_21575 = state_21557;\n(statearr_21575[(7)] = inst_21548);\n\nreturn statearr_21575;\n})();\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_21557__$1,(4),temp_chan);\n} else {\nif((state_val_21558 === (3))){\nvar inst_21555 = (state_21557[(2)]);\nvar state_21557__$1 = state_21557;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_21557__$1,inst_21555);\n} else {\nif((state_val_21558 === (4))){\nvar inst_21550 = (state_21557[(2)]);\nvar state_21557__$1 = state_21557;\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_21557__$1,(5),out_chan,inst_21550);\n} else {\nif((state_val_21558 === (5))){\nvar inst_21552 = (state_21557[(2)]);\nvar state_21557__$1 = (function (){var statearr_21576 = state_21557;\n(statearr_21576[(8)] = inst_21552);\n\nreturn statearr_21576;\n})();\nvar statearr_21577_21687 = state_21557__$1;\n(statearr_21577_21687[(2)] = null);\n\n(statearr_21577_21687[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n});})(c__14273__auto___21678,temp_chan,out_chan))\n;\nreturn ((function (switch__14250__auto__,c__14273__auto___21678,temp_chan,out_chan){\nreturn (function() {\nvar huginn$mqtt$tele_chan_$_state_machine__14251__auto__ = null;\nvar huginn$mqtt$tele_chan_$_state_machine__14251__auto____0 = (function (){\nvar statearr_21578 = [null,null,null,null,null,null,null,null,null];\n(statearr_21578[(0)] = huginn$mqtt$tele_chan_$_state_machine__14251__auto__);\n\n(statearr_21578[(1)] = (1));\n\nreturn statearr_21578;\n});\nvar huginn$mqtt$tele_chan_$_state_machine__14251__auto____1 = (function (state_21557){\nwhile(true){\nvar ret_value__14252__auto__ = (function (){try{while(true){\nvar result__14253__auto__ = switch__14250__auto__(state_21557);\nif(cljs.core.keyword_identical_QMARK_(result__14253__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__14253__auto__;\n}\nbreak;\n}\n}catch (e21579){if((e21579 instanceof Object)){\nvar ex__14254__auto__ = e21579;\nvar statearr_21580_21688 = state_21557;\n(statearr_21580_21688[(5)] = ex__14254__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_21557);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e21579;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__14252__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__21689 = state_21557;\nstate_21557 = G__21689;\ncontinue;\n} else {\nreturn ret_value__14252__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$tele_chan_$_state_machine__14251__auto__ = function(state_21557){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$tele_chan_$_state_machine__14251__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$tele_chan_$_state_machine__14251__auto____1.call(this,state_21557);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$tele_chan_$_state_machine__14251__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$tele_chan_$_state_machine__14251__auto____0;\nhuginn$mqtt$tele_chan_$_state_machine__14251__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$tele_chan_$_state_machine__14251__auto____1;\nreturn huginn$mqtt$tele_chan_$_state_machine__14251__auto__;\n})()\n;})(switch__14250__auto__,c__14273__auto___21678,temp_chan,out_chan))\n})();\nvar state__14275__auto__ = (function (){var statearr_21581 = (f__14274__auto__.cljs$core$IFn$_invoke$arity$0 ? f__14274__auto__.cljs$core$IFn$_invoke$arity$0() : f__14274__auto__.call(null));\n(statearr_21581[(6)] = c__14273__auto___21678);\n\nreturn statearr_21581;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__14275__auto__);\n});})(c__14273__auto___21678,temp_chan,out_chan))\n);\n\n\nreturn out_chan;\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"sender\",\"huginn.mqtt/sender\",-581128399,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\n/**\n * takes information for the tele-chan in the form of collections of\n *   mqtt-packets and assignes a default topic if a subfolder is set,\n *   adds a default qos. Then takes the resulting structures and puts\n *   them on to the send channel. waits for :delayMs between collections \n */\nhuginn.mqtt.sender = (function huginn$mqtt$sender(topic_name,opts,send,t_chan){\nvar c__14273__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__14273__auto__){\nreturn (function (){\nvar f__14274__auto__ = (function (){var switch__14250__auto__ = ((function (c__14273__auto__){\nreturn (function (state_21606){\nvar state_val_21607 = (state_21606[(1)]);\nif((state_val_21607 === (1))){\nvar state_21606__$1 = state_21606;\nvar statearr_21608_21691 = state_21606__$1;\n(statearr_21608_21691[(2)] = null);\n\n(statearr_21608_21691[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21607 === (2))){\nvar state_21606__$1 = state_21606;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_21606__$1,(4),t_chan);\n} else {\nif((state_val_21607 === (3))){\nvar inst_21604 = (state_21606[(2)]);\nvar state_21606__$1 = state_21606;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_21606__$1,inst_21604);\n} else {\nif((state_val_21607 === (4))){\nvar inst_21584 = (state_21606[(2)]);\nvar inst_21585 = huginn.mqtt.mqtt_topic(opts,topic_name);\nvar inst_21586 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"state\",topic_name);\nvar state_21606__$1 = (function (){var statearr_21609 = state_21606;\n(statearr_21609[(7)] = inst_21585);\n\n(statearr_21609[(8)] = inst_21584);\n\nreturn statearr_21609;\n})();\nif(inst_21586){\nvar statearr_21610_21692 = state_21606__$1;\n(statearr_21610_21692[(1)] = (5));\n\n} else {\nvar statearr_21611_21693 = state_21606__$1;\n(statearr_21611_21693[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21607 === (5))){\nvar inst_21585 = (state_21606[(7)]);\nvar inst_21584 = (state_21606[(8)]);\nvar inst_21588 = (function (){var teles = inst_21584;\nvar topic = inst_21585;\nvar qos = ({\"qos\": (1)});\nreturn ((function (teles,topic,qos,inst_21585,inst_21584,state_val_21607,c__14273__auto__){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"pushing state\",topic], null);\n});\n;})(teles,topic,qos,inst_21585,inst_21584,state_val_21607,c__14273__auto__))\n})();\nvar inst_21589 = (new cljs.core.Delay(inst_21588,null));\nvar inst_21590 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"huginn.mqtt\",\"*cider-repl src/huginn:localhost:41263(clj)*\",266,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),inst_21589,null,195175042);\nvar state_21606__$1 = state_21606;\nvar statearr_21612_21694 = state_21606__$1;\n(statearr_21612_21694[(2)] = inst_21590);\n\n(statearr_21612_21694[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21607 === (6))){\nvar state_21606__$1 = state_21606;\nvar statearr_21613_21695 = state_21606__$1;\n(statearr_21613_21695[(2)] = null);\n\n(statearr_21613_21695[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_21607 === (7))){\nvar inst_21585 = (state_21606[(7)]);\nvar inst_21584 = (state_21606[(8)]);\nvar inst_21593 = (state_21606[(2)]);\nvar inst_21595 = (function (){var teles = inst_21584;\nvar topic = inst_21585;\nvar qos = ({\"qos\": (1)});\nreturn ((function (teles,topic,qos,inst_21585,inst_21584,inst_21593,state_val_21607,c__14273__auto__){\nreturn (function (p__21594){\nvar map__21614 = p__21594;\nvar map__21614__$1 = ((((!((map__21614 == null)))?(((((map__21614.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__21614.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21614):map__21614);\nvar mqtt_packet = map__21614__$1;\nvar subfolder = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21614__$1,new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439));\nvar my_topic = (cljs.core.truth_(subfolder)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(topic),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(subfolder)].join(''):topic);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(mqtt_packet,new cljs.core.Keyword(null,\"topic\",\"topic\",-1960480691),my_topic),new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319),qos);\n});\n;})(teles,topic,qos,inst_21585,inst_21584,inst_21593,state_val_21607,c__14273__auto__))\n})();\nvar inst_21596 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(inst_21595,inst_21584);\nvar inst_21597 = cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(send,inst_21596,false);\nvar inst_21598 = new cljs.core.Keyword(null,\"delayMs\",\"delayMs\",-1017330168).cljs$core$IFn$_invoke$arity$1(opts);\nvar inst_21599 = cljs.core.async.timeout(inst_21598);\nvar state_21606__$1 = (function (){var statearr_21616 = state_21606;\n(statearr_21616[(9)] = inst_21597);\n\n(statearr_21616[(10)] = inst_21593);\n\nreturn statearr_21616;\n})();\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_21606__$1,(8),inst_21599);\n} else {\nif((state_val_21607 === (8))){\nvar inst_21601 = (state_21606[(2)]);\nvar state_21606__$1 = (function (){var statearr_21617 = state_21606;\n(statearr_21617[(11)] = inst_21601);\n\nreturn statearr_21617;\n})();\nvar statearr_21618_21696 = state_21606__$1;\n(statearr_21618_21696[(2)] = null);\n\n(statearr_21618_21696[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__14273__auto__))\n;\nreturn ((function (switch__14250__auto__,c__14273__auto__){\nreturn (function() {\nvar huginn$mqtt$sender_$_state_machine__14251__auto__ = null;\nvar huginn$mqtt$sender_$_state_machine__14251__auto____0 = (function (){\nvar statearr_21619 = [null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_21619[(0)] = huginn$mqtt$sender_$_state_machine__14251__auto__);\n\n(statearr_21619[(1)] = (1));\n\nreturn statearr_21619;\n});\nvar huginn$mqtt$sender_$_state_machine__14251__auto____1 = (function (state_21606){\nwhile(true){\nvar ret_value__14252__auto__ = (function (){try{while(true){\nvar result__14253__auto__ = switch__14250__auto__(state_21606);\nif(cljs.core.keyword_identical_QMARK_(result__14253__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__14253__auto__;\n}\nbreak;\n}\n}catch (e21620){if((e21620 instanceof Object)){\nvar ex__14254__auto__ = e21620;\nvar statearr_21621_21697 = state_21606;\n(statearr_21621_21697[(5)] = ex__14254__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_21606);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e21620;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__14252__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__21698 = state_21606;\nstate_21606 = G__21698;\ncontinue;\n} else {\nreturn ret_value__14252__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$sender_$_state_machine__14251__auto__ = function(state_21606){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$sender_$_state_machine__14251__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$sender_$_state_machine__14251__auto____1.call(this,state_21606);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$sender_$_state_machine__14251__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$sender_$_state_machine__14251__auto____0;\nhuginn$mqtt$sender_$_state_machine__14251__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$sender_$_state_machine__14251__auto____1;\nreturn huginn$mqtt$sender_$_state_machine__14251__auto__;\n})()\n;})(switch__14250__auto__,c__14273__auto__))\n})();\nvar state__14275__auto__ = (function (){var statearr_21622 = (f__14274__auto__.cljs$core$IFn$_invoke$arity$0 ? f__14274__auto__.cljs$core$IFn$_invoke$arity$0() : f__14274__auto__.call(null));\n(statearr_21622[(6)] = c__14273__auto__);\n\nreturn statearr_21622;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__14275__auto__);\n});})(c__14273__auto__))\n);\n\nreturn c__14273__auto__;\n});\nhuginn.mqtt.state_send = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(huginn.mqtt.sender,\"state\");\nhuginn.mqtt.tele_send = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(huginn.mqtt.sender,\"events\");\nhuginn.mqtt.clean_up = (function huginn$mqtt$clean_up(p__21623){\nvar map__21624 = p__21623;\nvar map__21624__$1 = ((((!((map__21624 == null)))?(((((map__21624.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__21624.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21624):map__21624);\nvar system = map__21624__$1;\nvar send_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21624__$1,new cljs.core.Keyword(null,\"send-chan\",\"send-chan\",1681189602));\nvar recv_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21624__$1,new cljs.core.Keyword(null,\"recv-chan\",\"recv-chan\",869238850));\nvar telemetry_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21624__$1,new cljs.core.Keyword(null,\"telemetry-chan\",\"telemetry-chan\",-1991836503));\nvar state_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21624__$1,new cljs.core.Keyword(null,\"state-chan\",\"state-chan\",-1042477017));\nvar client_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21624__$1,new cljs.core.Keyword(null,\"client-atom\",\"client-atom\",-1733084110));\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"huginn.mqtt\",\"*cider-repl src/huginn:localhost:41263(clj)*\",287,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (map__21624,map__21624__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Killing system\"], null);\n});})(map__21624,map__21624__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom))\n,null)),null,1229536698);\n\ncljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (map__21624,map__21624__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom){\nreturn (function (c){\nreturn cljs.core.async.close_BANG_(c);\n});})(map__21624,map__21624__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom))\n,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [send_chan,recv_chan,state_chan,telemetry_chan], null)));\n\nreturn cljs.core.deref(client_atom).end();\n});\n/**\n * the heart of the system lies here.\n *   This function takes options (config/default-options works well)\n *   It returns a map\n *   This map has\n *   :send-chan A channel you can use to directly send messages of mqtt, must be of the\n *   form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n *   :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n *   :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n *   (google publishes these values to a differnt pubsub channel then device telemetry)\n *   :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n *   are sent in the same batch, the same is true for stat-chan.\n *   :client-atom, contains the current version of the mqtt client. This is an atom so\n *   that the client-refersher can refresh the authentication token and swap it.\n *   this pattern also ensures only one client\n * \n *   payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you\n */\nhuginn.mqtt.system_function = (function huginn$mqtt$system_function(opts){\nvar send = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar recv = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar kill = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\nvar client_promise = huginn.mqtt.init_client(opts,send,recv);\nvar client_atom = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\nvar t_chan = huginn.mqtt.tele_chan(opts);\nvar state_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nreturn promesa.core.then(client_promise,((function (send,recv,kill,client_promise,client_atom,t_chan,state_chan){\nreturn (function (client){\ncljs.core.reset_BANG_(client_atom,client);\n\nhuginn.mqtt.publisher(client_atom,send);\n\n(huginn.mqtt.tele_send.cljs$core$IFn$_invoke$arity$3 ? huginn.mqtt.tele_send.cljs$core$IFn$_invoke$arity$3(opts,send,t_chan) : huginn.mqtt.tele_send.call(null,opts,send,t_chan));\n\n(huginn.mqtt.state_send.cljs$core$IFn$_invoke$arity$3 ? huginn.mqtt.state_send.cljs$core$IFn$_invoke$arity$3(opts,send,state_chan) : huginn.mqtt.state_send.call(null,opts,send,state_chan));\n\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"send-chan\",\"send-chan\",1681189602),send,new cljs.core.Keyword(null,\"recv-chan\",\"recv-chan\",869238850),recv,new cljs.core.Keyword(null,\"state-chan\",\"state-chan\",-1042477017),state_chan,new cljs.core.Keyword(null,\"telemetry-chan\",\"telemetry-chan\",-1991836503),t_chan,new cljs.core.Keyword(null,\"client-atom\",\"client-atom\",-1733084110),client_atom], null);\n});})(send,recv,kill,client_promise,client_atom,t_chan,state_chan))\n);\n});\n/**\n * Feed the system promise to this and it will kill it\n */\nhuginn.mqtt.kill_it = (function huginn$mqtt$kill_it(system_promise){\nreturn promesa.core.then(system_promise,huginn.mqtt.clean_up);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","huginn/mqtt.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$jsonwebtoken","~$shadow.js.shim.module$jsonwebtoken","~$systeminformation","~$shadow.js.shim.module$systeminformation","~$clojure.core.async","~$cljs.core.async","~$raspicam","~$shadow.js.shim.module$raspicam"],"~:use-macros",["^ ","~$get-env","~$taoensso.timbre","~$log","^F","~$logf","^F","~$reportf","^F","~$fatalf","^F","~$warnf","^F","~$report","^F","~$spy","^F","~$warn","^F","~$trace","^F","~$debug","^F","~$debugf","^F","~$tracef","^F","~$infof","^F","~$fatal","^F","~$errorf","^F","~$info","^F","~$error","^F"],"~:excludes",["~#set",[]],"~:name","~$huginn.mqtt","~:js-aliases",["^ ","gcic-mqtt-client","~$shadow.js.shim.module$gcic_mqtt_client"],"~:op","~:ns","~:imports",null,"~:requires",["^ ","^12","^12","~$p","~$promesa.core","^17","^17","~$timbre","^F","~$a","^A","~$si","^?","~$huginn.config","^1:","~$cljs.core","^1;","~$goog","^1<","^A","^A","^>","^?","~$config","^1:","~$cljs.nodejs","^1>","~$huginn.jwt","^1?","~$nodejs","^1>","~$s","~$cljs.spec.alpha","~$mqtt","^12","~$jw","^1?","^F","^F","^?","^?","~$clojure.string","^1D","~$st","^1D","^1A","^1A"],"~:seen",["^Y",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^F","^F","^18","^F","^1;","^1;","~$a","^A","^A","^A","~$s","^1A","^1A","^1A"],"~:form",["~#list",["~$ns","^[",["^1K",["^1G",["^17","~:as","~$p"],["^1D","^1M","^1E"],["^1?","^1M","^1C"],["gcic-mqtt-client","^1M","^1B"],["^1:","^1M","^1="],["^F","^1M","^18","~:refer-macros",["^G","^O","^P","^V","^N","^W","^T","^L","^H","^R","^Q","^S","^K","^U","^J","^I","^M","^E"]],["^A","^1M","~$a"],["^>","^1M","^19"],["^1A","^1M","~$s"],["^1>","^1M","^1@"]]]]],"~:flags",["^ ","^1G",["^Y",[]]],"~:js-deps",["^ ","^11",["^ ","^1M","^1B"]],"~:deps",["^1<","^1;","^17","^1D","^1?","^12","^1:","^F","^A","^?","^1A","^1>"]],"^14","^[","~:resource-id",["~:shadow.build.classpath/resource","huginn/mqtt.cljs"],"~:compiled-at",1540157731448,"~:resource-name","huginn/mqtt.cljs","~:warnings",[],"~:source","(ns huginn.mqtt\n  (:require\n   [promesa.core :as p]\n   [clojure.string :as st]\n   [huginn.jwt :as jw]\n   [\"gcic-mqtt-client\" :as mqtt]\n   [huginn.config :as config]\n   [taoensso.timbre :as timbre\n    :refer-macros [log  trace  debug  info  warn  error  fatal  report\n                   logf tracef debugf infof warnf errorf fatalf reportf\n                   spy get-env]]\n   [cljs.core.async :as a]\n   [systeminformation :as si]\n   [cljs.spec.alpha :as s]\n   [cljs.nodejs :as nodejs]))\n\n\n\n(s/def ::projectId string?)\n(s/def ::registryId string?)\n(s/def ::cloudRegion string?)\n(s/def ::deviceId string?)\n(s/def ::chan any?)\n\n(s/def ::topic-type #{\"events\" \"state\"})\n\n\n(s/def ::client-config (s/keys :req-un\n                               [::projectId\n                                ::registryId\n                                ::cloudRegion\n                                ::deviceId]))\n\n(s/def ::payload (s/and string? #(< ( count %) 200000)))\n(s/def ::subfolder (s/and string? #(< (count %) 200)))\n(s/def ::ts float?)\n(s/def ::qos #{0 1})\n(s/def ::mqtt-packet\n  (s/keys :req-un [::payload\n                   ::subfolder\n                   ::qos \n                   ::ts]))\n\n(s/fdef client-id\n  :args ::client-config\n  :ret  string?)\n\n\n(defn client-id\n  \"Builds a client id used to identify the device this message is\n  comming from\"\n  [{:keys [projectId registryId cloudRegion deviceId] :as opts}]\n  (str \"projects/\" projectId\n       \"/locations/\" cloudRegion\n       \"/registries/\" registryId\n       \"/devices/\" deviceId))\n\n(s/fdef config-chan\n  :args (s/cat :opts (s/keys :req-un [::deviceId]))\n  :ret string?)\n(defn config-chan\n  \"google give each device two channeles, a state channel (the config channel)\n  and a telemetry channel (the one that we push all our data over). The name of\n  these channels are determined by google iot core.\"\n  [{:keys [deviceId] :as opts}]\n  (str \"/devices/\" deviceId \"/config\"))\n\n(s/fdef client-handlers\n  :args (s/cat :success-fn fn?\n               :fail       fn?\n               :send       ::chan\n               :recv       ::chan))\n\n(defn client-handlers\n  \"builds a map of handels to attach to the mqtt object\"\n  [success-fn fail send recv]\n  {\"connect\" (fn [success]\n               (if success\n                 (do\n                   (success-fn))\n                 (do\n                   (debug \"client connection failure\")\n                   (fail))))\n   \"close\"   (fn [] )\n   \"reconnect\" (fn [] (info \"reconnecting\"))\n   \"error\"   (fn [err] (error \"error: \" err))\n   \"message\" (fn [topic message packet]\n               (a/go\n                 (a/>! recv {:topic topic\n                             :message message\n                             :packet packet})))})\n\n\n(defn add-handlers\n  \"takes a map of handlers and attaches them to the mqtt object\"\n  [client handlers]\n  (doseq [[key hand] handlers]\n    (.on client key hand)))\n\n(s/fdef build-client\n  :args (s/cat :opts ::client-config))\n\n(defn build-client [opts]\n  \"builds the mqtt client using the client-config\nthe mqtt client is responsible for holding on to\nauth to talk to google iot core. The mqtt client\nis also responsible for actually pushing the data\nto google iot core.\"\n  (let [conn-args (jw/google-iot-conn-args opts)\n        client    (mqtt. conn-args)]\n    {:client client}))\n\n;This function is referenced before it is defined so we\n;declare it\n(declare publish-async)\n\n(s/fdef init-client\n  :args (s/cat :opts ::client-config\n               :send ::chan\n               :recv ::chan)\n  :ret p/promise?)\n\n(defn init-client [opts send recv]\n  \"using client config and a channel to send and a channel to recv on,\nbuilds an mqtt client that will read from the send chan and push to google\n  and write to the recv chan when google pushes to it. This object is wrapped\nin a promise that returns when the client is ready\"\n  (p/promise\n   (fn [resolve reject]\n     (let [{:keys [client] :as init} (build-client opts)\n           handlers (client-handlers #(resolve client) #(reject :client-fail) send recv)]\n       (.subscribe client (config-chan opts))\n       (add-handlers client handlers)))))\n\n(defn payload-root\n  \"builds the prefix of the actual values being sent\n  (str (payload-root config) sensor-name /  sensor-value)\"\n  [{:keys [registryId userId deviceId] :as opts}]\n  (str registryId \"/\" userId \"/\" deviceId \"-payload\"))\n\n(s/fdef mqtt-topic\n    :args (s/cat :opts     ::client-config\n                 :msg-type ::topic-type)\n    :ret string?)\n\n(defn mqtt-topic\n  \"msg-type can be 'state' for state updates\n   or 'events' to publish telemetry\"\n  [{:keys [deviceId] :as opts} msg-type]\n  (str \"/devices/\" deviceId \"/\" msg-type))\n\n(s/fdef prep-temps\n  :args (s/cat :opts ::client-config :data any?)\n  :ret (s/coll-of ::mqtt-packet))\n(defn prep-temps\n  \"pulls the data out of the systeminformation library and wrapping them up\n  to be sent into mqtt\"\n  [opts data]\n  (let [pr (payload-root opts)\n        cores-raw (js->clj (.-cores data))\n        cores (map-indexed\n               (fn [index value]\n                 {:payload (str pr \"-core-temp-\" index \"/\" (str value))\n                  :subfolder (str \"metrics/core-temp-\" index)\n                  :qos 1\n                  :ts (jw/round-now)})\n               cores-raw)\n        main (when (.-main data)\n               {:payload (str pr \"-core-temp-main/\" (str (.-main data)))\n                :subfolder \"metrics/core-temp-main\"\n                :qos 1\n                :ts (jw/round-now)})\n        max (when (.-max data)\n              {:payload (str pr \"-core-temp-max/\" (str (.-max data)))\n               :subfolder \"metrics/core-temp-max\"\n               :qos 1\n               :ts (jw/round-now)})]\n    (concat [main] [max] cores)))\n\n(def stop (atom false))\n\n(s/fdef publish-one\n  :args (s/cat :client any? :packet (s/or :nil nil? :value ::mqtt-packet)))\n(defn publish-one\n  \"Publises one mqtt packet to the client\"\n  [client {:keys [topic payload qos] :as p}]\n  (when p\n    (.publishEvent client payload qos topic)))\n\n\n(defn publisher\n  \"main loop that pushes packets added to the send-chan to google iot core\"\n  [client-atom send-chan]\n  (a/go-loop []\n    (let [to-send (a/<! send-chan)]\n      (publish-one @client-atom to-send)\n      (recur))))\n\n(defn client-refresher\n  \"loops and refreshs the client atom every token experation.\n  Mqtt requires that you refresh your token frequently (less then 20 mins)\"\n  [client-atom {:keys [tokenExpMins delayMs] :as opts} send recv]\n  ; make a mixer so that we can pause the data when switching clients\n  (let [client-send-chan (a/chan)\n        client-mixer (a/mix client-send-chan)]\n    (a/admix client-mixer send)\n   ;Loop forever waiting for the tokenExpMins, then building a new client\n    (a/go-loop []\n   ; use core.async/timeout to set up a channel that has a value every tokenExpMins\n      (let [wait (a/<! (a/timeout (* tokenExpMins 1000 60)))]\n        (info \"\\tRefreshing token after \" (* tokenExpMins 1000 60)  \"ms\")\n        (a/toggle client-mixer {send {:pause true}})\n        (.end @client-atom\n              (fn []\n                (aset @client-atom \"password\" (clj->js (jw/create-jwt opts)))\n                (.reconnect @client-atom\n                            (fn []\n                              (a/toggle client-mixer {send {:pause false}})))))\n;        (let [wait-again (a/<! (a/timeout 100))]\n;          (p/then (init-client opts send recv)\n;                  (fn [new-client]\n;                    (reset! client-atom new-client)\n        (recur)))))\n\n(s/fdef tele-chan\n  :args (s/cat :opts  ::client-config)\n  :ret ::chan)\n(defn tele-chan\n  \"takes the client opts and builds a channel with system telementry\n  values on it (cpu tempratures specifically)\"\n  [opts]\n  (let [temp-chan (a/chan)\n        out-chan (a/chan)]\n    (a/go-loop []\n        (p/chain\n         (si/cpuTemperature)\n         #(prep-temps opts %)\n         (fn [mqtt-packets] (a/go\n                              (a/<! (a/timeout (* 1000 60 1)))\n                              (a/>! temp-chan mqtt-packets))))\n        (let [v (a/<! temp-chan)]\n          (a/>! out-chan v)\n          (recur)))\n    out-chan))\n\n\n(s/fdef sender\n  :args (s/cat :topic-name ::topic-type\n               :opts       ::client-config\n               :send       ::chan\n               :t-chan     ::chan))\n\n(defn sender\n  \"takes information for the tele-chan in the form of collections of\n  mqtt-packets and assignes a default topic if a subfolder is set,\n  adds a default qos. Then takes the resulting structures and puts\n  them on to the send channel. waits for :delayMs between collections \"\n  [topic-name opts send t-chan]\n  (a/go-loop []\n    (let [teles (a/<! t-chan)\n          topic (mqtt-topic opts topic-name)\n          qos #js {:qos 1}]\n\n      ;becuase this should rarely happen\n      (when (= \"state\" topic-name)\n        (debug \"pushing state\" topic))\n      (a/onto-chan\n       send\n       (map\n        (fn [{:keys [subfolder] :as mqtt-packet}]\n          (let [my-topic (if subfolder (str topic \"/\" subfolder) topic)]\n            (-> mqtt-packet\n                (assoc :topic my-topic)\n                (assoc :qos qos)))) teles)\n       false)\n      (a/<! (a/timeout (:delayMs opts)))\n      (recur))))\n\n(def state-send\n  (partial sender \"state\"))\n\n(def tele-send\n  (partial sender \"events\"))\n\n(defn clean-up\n  [{:keys [send-chan recv-chan telemetry-chan state-chan client-atom] :as system}]\n  (debug \"Killing system\")\n  (doall\n   (map (fn [c] (a/close! c))\n        [send-chan recv-chan state-chan telemetry-chan]))\n  (.end @client-atom))\n\n(defn system-function\n  \"the heart of the system lies here.\n  This function takes options (config/default-options works well)\n  It returns a map\n  This map has\n  :send-chan A channel you can use to directly send messages of mqtt, must be of the\n  form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n  :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n  :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n  (google publishes these values to a differnt pubsub channel then device telemetry)\n  :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n  are sent in the same batch, the same is true for stat-chan.\n  :client-atom, contains the current version of the mqtt client. This is an atom so\n  that the client-refersher can refresh the authentication token and swap it.\n  this pattern also ensures only one client\n\n  payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you\"\n  [opts]\n  (let [send (a/chan)\n        recv (a/chan)\n        kill (atom false)\n        client-promise (init-client opts send recv)\n        client-atom (atom nil)\n        t-chan (tele-chan opts)\n        state-chan (a/chan)]\n    (p/then\n     client-promise\n     (fn [client]\n       (reset! client-atom client)\n;       (client-refresher client-atom opts send recv)\n       (publisher client-atom send)\n       (tele-send opts send t-chan)\n       (state-send opts send state-chan)\n       {:send-chan send\n        :recv-chan recv\n        :state-chan state-chan\n        :telemetry-chan t-chan\n        :client-atom client-atom}))))\n\n\n;(def system-promise (system-function config/default-options))\n\n(defn kill-it\n  \"Feed the system promise to this and it will kill it\"\n  [system-promise]\n  (p/then system-promise\n          clean-up))\n\n;(kill-it system-promise)\n","~:reader-features",["^Y",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["cljs.spec.alpha/def-impl","cljs.core/string?","cljs.core/any?","cljs.spec.alpha/map-spec-impl","G__21444","cljs.core/map?","cljs.core/contains?","cljs.spec.alpha/and-spec-impl","p1__21445#","cljs.core/count","p1__21446#","cljs.core/float?","G__21447","cljs.spec.alpha/fspec-impl","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4","p__21448","map__21449","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","huginn.mqtt/client-id","projectId","registryId","cloudRegion","deviceId","opts","cljs.spec.alpha/cat-impl","G__21451","p__21452","map__21453","huginn.mqtt/config-chan","cljs.core/fn?","huginn.mqtt/client-handlers","success-fn","fail","send","recv","success","taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10","taoensso.timbre/*config*","cljs.core/Delay","err","topic","message","packet","c__14273__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__14274__auto__","switch__14250__auto__","state_21461","state_val_21462","inst_21455","inst_21456","inst_21457","cljs.core/PersistentHashMap","cljs.core.async.impl.ioc-helpers/put!","inst_21459","cljs.core.async.impl.ioc-helpers/return-chan","statearr-21463","state-machine__14251__auto__","ret-value__14252__auto__","result__14253__auto__","cljs.core/keyword-identical?","e21464","js/Object","ex__14254__auto__","statearr-21465","cljs.core.async.impl.ioc-helpers/process-exception","state__14275__auto__","statearr-21466","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","huginn.mqtt/add-handlers","client","handlers","seq__21467","cljs.core/seq","chunk__21468","count__21469","i__21470","vec__21471","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","temp__5457__auto__","cljs.core/chunked-seq?","c__4351__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","vec__21474","cljs.core/first","cljs.core/next","key","hand","huginn.mqtt/build-client","conn-args","huginn.jwt/google-iot-conn-args","js/shadow.js.shim.module$gcic_mqtt_client","promesa.core/promise?","huginn.mqtt/init-client","promesa.core/promise","resolve","reject","map__21477","init","G__21479","p__21480","map__21481","huginn.mqtt/payload-root","userId","p__21483","map__21484","huginn.mqtt/mqtt-topic","msg-type","cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4","G__21486","cljs.core/coll?","huginn.mqtt/prep-temps","data","pr","cores-raw","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","cores","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","index","value","huginn.jwt/round-now","main","max","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","huginn.mqtt/stop","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","cljs.spec.alpha/or-spec-impl","cljs.core/nil?","p__21487","map__21488","huginn.mqtt/publish-one","payload","qos","p","huginn.mqtt/publisher","client-atom","send-chan","state_21499","state_val_21500","statearr-21501","cljs.core.async.impl.ioc-helpers/take!","inst_21497","inst_21492","inst_21493","cljs.core/deref","inst_21494","statearr-21502","statearr-21503","statearr-21504","e21505","statearr-21506","statearr-21507","p__21508","map__21509","huginn.mqtt/client-refresher","tokenExpMins","delayMs","client-send-chan","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0","client-mixer","cljs.core.async/mix","cljs.core.async/admix","state_21534","state_val_21535","statearr-21536","inst_21512","inst_21513","inst_21514","inst_21532","inst_21516","inst_21517","inst_21518","inst_21519","inst_21520","inst_21521","inst_21522","inst_21523","inst_21524","inst_21525","inst_21526","inst_21527","inst_21528","inst_21529","statearr-21537","statearr-21538","statearr-21539","e21540","statearr-21541","statearr-21542","wait","cljs.core.async/timeout","cljs.core.async/toggle","cljs.core/clj->js","huginn.jwt/create-jwt","huginn.mqtt/tele-chan","temp-chan","out-chan","state_21557","state_val_21558","statearr-21559","inst_21545","inst_21546","p1__21543#","inst_21547","inst_21548","statearr-21575","inst_21555","inst_21550","inst_21552","statearr-21576","statearr-21577","statearr-21578","e21579","statearr-21580","statearr-21581","promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic","js/shadow.js.shim.module$systeminformation.cpuTemperature","mqtt-packets","state_21568","state_val_21569","inst_21560","inst_21561","inst_21562","inst_21564","statearr-21570","inst_21566","statearr-21571","e21572","statearr-21573","statearr-21574","huginn.mqtt/sender","topic-name","t-chan","state_21606","state_val_21607","statearr-21608","inst_21604","inst_21584","inst_21585","inst_21586","statearr-21609","statearr-21610","statearr-21611","inst_21588","inst_21589","inst_21590","statearr-21612","statearr-21613","inst_21593","inst_21595","inst_21596","inst_21597","inst_21598","inst_21599","statearr-21616","inst_21601","statearr-21617","statearr-21618","statearr-21619","e21620","statearr-21621","statearr-21622","teles","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3","cljs.core.map.cljs$core$IFn$_invoke$arity$2","p__21594","map__21614","subfolder","mqtt-packet","my-topic","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","huginn.mqtt/state-send","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","huginn.mqtt/tele-send","p__21623","map__21624","huginn.mqtt/clean-up","recv-chan","telemetry-chan","state-chan","system","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","c","cljs.core.async/close!","huginn.mqtt/system-function","kill","client-promise","promesa.core/then","cljs.core/reset!","huginn.mqtt/kill-it","system-promise"]]],"~:cache-keys",["~#cmap",[["^1S","cljs_node_io/file.cljs"],[1537666007418,"^1<","^1;","~$goog.Uri","~$cljs-node-io.streams","~$cljs-node-io.fs","~$cljs-node-io.protocols"],["^1S","goog/dom/tagname.js"],[1530991559994,"^1<","~$goog.dom.HtmlElement"],["^1S","goog/async/freelist.js"],[1530991559994,"^1<"],["^1S","cljs/core/async/impl/ioc_helpers.cljs"],[1534380136417,"^1<","^1;","~$cljs.core.async.impl.protocols"],["^1S","goog/labs/useragent/platform.js"],[1530991559994,"^1<","~$goog.labs.userAgent.util","~$goog.string"],["~:macro","^1;"],[1534380137000],["^1S","cljs/core/async.cljs"],[1534380136417,"^1<","^1;","^29","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers"],["^1S","goog/timer/timer.js"],[1530991559994,"^1<","~$goog.Promise","~$goog.events.EventTarget"],["^1S","cljs/nodejs.cljs"],[1534380137690,"^1<","^1;"],["^1S","cljs/spec/gen/alpha.cljs"],[1534380137690,"^1<","^1;","^24"],["^1S","cljs/tools/reader/impl/utils.cljs"],[1535586405375,"^1<","^1;","^1D","^2;"],["^1S","cljs_node_io/fs.cljs"],[1537666007418,"^1<","^1;","^A","^29"],["^1S","cljs_node_io/core.cljs"],[1537666007418,"^1<","^1;","^A","^29","~$cljs-node-io.file","^25","^27","^24"],["^1S","goog/math/math.js"],[1530991559994,"^1<","~$goog.array","~$goog.asserts"],["^1S","goog/string/stringformat.js"],[1530991559994,"^1<","^2;"],["^1S","goog/events/eventtype.js"],[1530991559994,"^1<","~$goog.userAgent"],["^1S","goog/labs/useragent/browser.js"],[1530991559994,"^1<","^2E","^2:","~$goog.object","^2;"],["^1S","goog/array/array.js"],[1530991559994,"^1<","^2F"],["^1S","huginn/mqtt.cljs"],[1540157724982,"^1<","^1;","^17","^1D","^1?","^12","^1:","^F","^A","^?","^1A","^1>"],["^1S","cljs_node_io/protocols.cljs"],[1537666007418,"^1<","^1;"],["^2<","~$cljs.core.async.macros"],[1534380136000],["^1S","cljs_node_io/streams.cljs"],[1537666007418,"^1<","^1;","^24","^A","^27"],["^1S","huginn/config.cljs"],[1540154895584,"^1<","^1;"],["^1S","goog/useragent/useragent.js"],[1530991559994,"^1<","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2:","~$goog.reflect","^2;"],["^1S","goog/structs/prioritypool.js"],[1530991559994,"^1<","~$goog.structs.Pool","~$goog.structs.PriorityQueue"],["^2<","~$cljs.tools.reader.reader-types"],[1535586405000],["^1S","goog/async/run.js"],[1530991559994,"^1<","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"],["^1S","taoensso/encore.cljs"],[1535586406568,"^1<","^1;","^1D","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","~$cljs.test","^2H","^2;","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.structs","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"],["^1S","goog/debug/error.js"],[1530991559994,"^1<"],["^1S","goog/async/workqueue.js"],[1530991559994,"^1<","^2F","~$goog.async.FreeList"],["^1S","huginn/jwt.cljs"],[1540154806767,"^1<","^1;","^1D","^17","~$cljs-node-io.core","^1>","^="],["^1S","promesa/impl/scheduler.cljc"],[1535586406328,"^1<","^1;","~$promesa.protocols"],["^1S","goog/events/events.js"],[1530991559994,"^1<","^2F","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","~$goog.events.BrowserFeature","~$goog.events.Listenable","~$goog.events.ListenerMap"],["^1S","goog/promise/resolver.js"],[1530991559994,"^1<"],["^1S","goog/events/browserfeature.js"],[1530991559994,"^1<","^2G"],["^1S","cljs/tools/reader/edn.cljs"],[1535586405375,"^1<","^1;","~$cljs.tools.reader.impl.errors","^2P","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^2;","^2Y"],["^1S","goog/structs/priorityqueue.js"],[1530991559994,"^1<","~$goog.structs.Heap"],["^1S","goog/net/xhrio.js"],[1530991559994,"^1<","~$goog.Timer","^2E","^2F","^39","^2C","~$goog.json.hybrid","~$goog.log","^34","^33","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^2;","^32","~$goog.structs.Map","~$goog.uri.utils","^2G"],["^1S","goog/promise/thenable.js"],[1530991559994,"^1<"],["^1S","promesa/impl.cljc"],[1535586406328,"^1<","^1;","^38","~$org.bluebird"],["^1S","goog/dom/nodetype.js"],[1530991559994,"^1<"],["^2<","^F"],[1535586406000],["^1S","cljs/tools/reader/impl/inspect.cljs"],[1535586405375,"^1<","^1;"],["^1S","cljs/pprint.cljs"],[1534380137690,"^1<","^1;","^1D","^2;","^2Y"],["^2<","~$cljs.spec.gen.alpha"],[1534380137000],["^1S","cljs/tools/reader.cljs"],[1535586405375,"^1<","^1;","^2P","^3?","^3@","^3>","^2E","^2;","^2Y"],["^1S","goog/net/wrapperxmlhttpfactory.js"],[1530991559994,"^1<","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"],["^1S","goog/events/eventtarget.js"],[1530991559994,"^1<","~$goog.Disposable","^2F","^2Z","~$goog.events.Event","^3<","^3=","^2H"],["^1S","goog/disposable/disposable.js"],[1530991559994,"^1<","~$goog.disposable.IDisposable"],["^1S","goog/object/object.js"],[1530991559994,"^1<"],["^1S","goog/structs/set.js"],[1530991559994,"^1<","^32","~$goog.structs.Collection","^3H"],"~:SHADOW-TIMESTAMP",[1540077702000,1534380137000],["^1S","goog/math/long.js"],[1530991559994,"^1<","^2F","^2M"],["^1S","goog/events/listener.js"],[1530991559994,"^1<","~$goog.events.ListenableKey"],["^1S","cljs/core/async/impl/channels.cljs"],[1534380136417,"^1<","^1;","^29","^2@","^2>"],["^1S","goog/events/listenermap.js"],[1530991559994,"^1<","^2E","~$goog.events.Listener","^2H"],["^1S","goog/events/eventid.js"],[1530991559994,"^1<"],["^1S","taoensso/truss.cljs"],[1535586406478,"^1<","^1;","~$taoensso.truss.impl"],["^1S","shadow/test/env.cljs"],[1540077702615,"^1<","^1;"],["^1S","goog/functions/functions.js"],[1530991559994,"^1<"],["^1S","cljs/core/async/impl/dispatch.cljs"],[1534380136417,"^1<","^1;","^2>","^2R"],["^1S","taoensso/truss/impl.cljs"],[1535586406478,"^1<","^1;","^2T"],["^1S","clojure/walk.cljs"],[1534380137690,"^1<","^1;"],["^1S","cljs/core/async/impl/protocols.cljs"],[1534380136417,"^1<","^1;"],["^1S","goog/net/eventtype.js"],[1530991559994,"^1<"],["^1S","goog/structs/map.js"],[1530991559994,"^1<","~$goog.iter.Iterator","~$goog.iter.StopIteration","^2H"],["^1S","goog/net/xhriopool.js"],[1530991559994,"^1<","^2[","~$goog.structs.PriorityPool"],["^1S","goog/structs/queue.js"],[1530991559994,"^1<","^2E"],["^1S","goog/labs/useragent/engine.js"],[1530991559994,"^1<","^2E","^2:","^2;"],["^1S","taoensso/timbre/appenders/core.cljs"],[1535586406375,"^1<","^1;","^1D","~$taoensso.encore"],["^1S","cljs/reader.cljs"],[1534380137690,"^1<","^1;","^2H","^3A","^2V","^2Y"],["~:shadow.build.js-support/require","bluebird"],["~$shadow.js.shim.module$bluebird","shadow.js.shim.module$bluebird.js","^1<"],["^2<","~$cljs-node-io.macros"],[1537666007000],["^2<","^1A"],[1534380137000],["^1S","goog/asserts/asserts.js"],[1530991559994,"^1<","~$goog.debug.Error","~$goog.dom.NodeType","^2;"],["^1S","cljs/core/async/impl/buffers.cljs"],[1534380136417,"^1<","^1;","^29"],["^2<","~$cljs.pprint"],[1534380137000],["^1S","goog/debug/logbuffer.js"],[1530991559994,"^1<","^2F","~$goog.debug.LogRecord"],["^3Z","jsonwebtoken"],["^=","shadow.js.shim.module$jsonwebtoken.js","^1<"],["^2<","^3Y"],[1535586406000],["^1S","goog/uri/uri.js"],[1530991559994,"^1<","^2E","^2F","^2;","^32","^3H","^3I","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1S","goog/net/errorcode.js"],[1530991559994,"^1<"],["^2<","^2W"],[1534380137000],["^2<","^A"],[1534380136000],["^1S","goog/disposable/idisposable.js"],[1530991559994,"^1<"],["^1S","goog/promise/promise.js"],[1530991559994,"^1<","~$goog.Thenable","^2F","^36","~$goog.async.run","^2S","^41","~$goog.promise.Resolver"],["^1S","cljs/core/async/impl/timers.cljs"],[1534380136417,"^1<","^1;","^29","^2=","^2@"],["^1S","cljs/spec/alpha.cljs"],[1534380137690,"^1<","^1;","^2H","~$clojure.walk","^3K","^1D"],["^1S","goog/debug/logrecord.js"],[1530991559994,"^1<"],["^1S","goog/base.js"],[1530991559994],["^1S","promesa/core.cljc"],[1535586406328,"^1<","^1;","^38","~$promesa.impl","~$promesa.impl.scheduler"],["^1S","goog/json/hybrid.js"],[1530991559994,"^1<","^2F","~$goog.json"],["^1S","goog/structs/structs.js"],[1530991559994,"^1<","^2E","^2H"],["^1S","cljs/tools/reader/impl/errors.cljs"],[1535586405375,"^1<","^1;","^2P","^1D","~$cljs.tools.reader.impl.inspect"],["^1S","org/bluebird.cljs"],[1535669979047,"^1<","^1;","^3["],["^1S","clojure/string.cljs"],[1534380137690,"^1<","^1;","^2;","^2Y"],["^1S","goog/structs/pool.js"],[1530991559994,"^1<","^3N","~$goog.structs.Queue","~$goog.structs.Set"],["^1S","goog/net/httpstatus.js"],[1530991559994,"^1<"],["^1S","goog/structs/heap.js"],[1530991559994,"^1<","^2E","^2H","~$goog.structs.Node"],["^1S","goog/debug/entrypointregistry.js"],[1530991559994,"^1<","^2F"],["^1S","goog/string/string.js"],[1530991559994,"^1<"],["^1S","goog/reflect/reflect.js"],[1530991559994,"^1<"],["^1S","goog/labs/useragent/util.js"],[1530991559994,"^1<","^2;"],["^2<","~$clojure.template"],[1534380136000],["^2<","~$cljs.core.async.impl.ioc-macros"],[1534380136000],["^3Z","gcic-mqtt-client"],["^12","shadow.js.shim.module$gcic_mqtt_client.js","^1<"],["^1S","goog/debug/debug.js"],[1530991559994,"^1<","^2E","~$goog.debug.errorcontext","^2G"],["^1S","goog/string/stringbuffer.js"],[1530991559994,"^1<"],["^1S","goog/debug/errorcontext.js"],[1530991559994,"^1<"],["^1S","cljs/tools/reader/reader_types.cljs"],[1535586405375,"^1<","^1;","^3?","^2;","^2Y"],["^1S","promesa/protocols.cljc"],[1535586406328,"^1<","^1;"],["^1S","goog/iter/iter.js"],[1530991559994,"^1<","^2E","^2F","~$goog.functions","~$goog.math"],["^1S","goog/async/nexttick.js"],[1530991559994,"^1<","^39","~$goog.dom.TagName","^4E","^2J","^2K"],["^1S","goog/debug/logger.js"],[1530991559994,"^1<","^2E","^2F","~$goog.debug","~$goog.debug.LogBuffer","^44"],["^1S","goog/events/event.js"],[1530991559994,"^1<","^3N","~$goog.events.EventId"],["^1S","cljs/tools/reader/impl/commons.cljs"],[1535586405375,"^1<","^1;","^3>","^2P","^3?"],["^3Z","systeminformation"],["^?","shadow.js.shim.module$systeminformation.js","^1<"],["^1S","goog/dom/htmlelement.js"],[1530991559994,"^1<"],["^1S","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^2;","^2H","^2E","^24","^2Y"],["^1S","goog/log/log.js"],[1530991559994,"^1<","^4H","~$goog.debug.LogManager","^44","~$goog.debug.Logger"],["^1S","goog/structs/collection.js"],[1530991559994,"^1<"],["^1S","goog/events/browserevent.js"],[1530991559994,"^1<","^3;","^3O","~$goog.events.EventType","^2M","^2G"],["^1S","goog/math/integer.js"],[1530991559994,"^1<"],["^1S","goog/structs/node.js"],[1530991559994,"^1<"],["^2<","^3U"],[1535586406000],["^1S","clojure/set.cljs"],[1534380137690,"^1<","^1;"],["^1S","goog/uri/utils.js"],[1530991559994,"^1<","^2E","^2F","^2;"],["^1S","taoensso/timbre.cljs"],[1535586406375,"^1<","^1;","^1D","^3Y","~$taoensso.timbre.appenders.core"],["^1S","goog/json/json.js"],[1530991559994,"^1<"],["^1S","goog/events/listenable.js"],[1530991559994,"^1<","^4J"],["^1S","goog/net/xmlhttpfactory.js"],[1530991559994,"^1<","^3L"],["^1S","goog/net/xmlhttp.js"],[1530991559994,"^1<","^2F","~$goog.net.WrapperXmlHttpFactory","^3M"],["^1S","cljs/test.cljs"],[1534380137690,"~$shadow.test.env","^1<","^1;","^1D","^43"],["^1S","goog/net/xhrlike.js"],[1530991559994,"^1<"],["^2<","^2U"],[1534380137000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","huginn/mqtt.cljs","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",["^ ","^E","^F","^G","^F","^H","^F","^I","^F","^J","^F","^K","^F","^L","^F","^M","^F","^N","^F","^O","^F","^P","^F","^Q","^F","^R","^F","^S","^F","^T","^F","^U","^F","^V","^F","^W","^F"],"^X",["^Y",[]],"~:shadow/js-access-properties",["^Y",["cpuTemperature"]],"^Z","^[","^10",["^ ","^11","^12"],"^15",null,"^16",["^ ","^12","^12","~$p","^17","^17","^17","^18","^F","~$a","^A","^19","^?","^1:","^1:","^1;","^1;","^1<","^1<","^A","^A","^>","^?","^1=","^1:","^1>","^1>","^1?","^1?","^1@","^1>","~$s","^1A","^1B","^12","^1C","^1?","^F","^F","^?","^?","^1D","^1D","^1E","^1D","^1A","^1A"],"^1F",["^Y",["^1G"]],"~:shadow/js-access-global",["^Y",["Object"]],"^1H",null,"~:defs",["^ ","~$tele-send",["^ ","^Z","~$huginn.mqtt/tele-send","^6","huginn/mqtt.cljs","^7",282,"^8",1,"^9",282,"^:",15,"^5",["^ ","^6","huginn/mqtt.cljs","^7",282,"^8",6,"^9",282,"^:",15],"~:tag","~$any"],"~$publish-async",["^ ","^Z","~$huginn.mqtt/publish-async","^6","huginn/mqtt.cljs","^7",115,"^8",1,"^9",115,"^:",23,"~:declared",true,"^5",["^ ","^6","huginn/mqtt.cljs","^7",115,"^8",10,"^9",115,"^:",23,"^51",true]],"~$build-client",["^ ","~:protocol-inline",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",103,"^8",7,"^9",103,"^:",19,"~:arglists",["^1K",["~$quote",["^1K",[["~$opts"]]]]]],"^Z","~$huginn.mqtt/build-client","~:variadic",false,"^6","huginn/mqtt.cljs","^:",19,"~:method-params",["^1K",[["^56"]]],"~:protocol-impl",null,"~:arglists-meta",["^1K",[null,null]],"^8",1,"^7",103,"^9",103,"~:max-fixed-arity",1,"~:fn-var",true,"^54",["^1K",["^55",["^1K",[["^56"]]]]]],"~$client-id",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",49,"^8",7,"^9",49,"^:",16,"^54",["^1K",["^55",["^1K",[[["^ ","~:keys",["~$projectId","~$registryId","~$cloudRegion","~$deviceId"],"^1M","^56"]]]]]],"~:doc","Builds a client id used to identify the device this message is\n  comming from"],"^Z","~$huginn.mqtt/client-id","^58",false,"^6","huginn/mqtt.cljs","^:",16,"^59",["^1K",[["~$p__21448"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",49,"^9",49,"^5<",1,"^5=",true,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5@","^5A","^5B","^5C"],"^1M","^56"]]]]]],"^5D","Builds a client id used to identify the device this message is\n  comming from"],"~$prep-temps",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",155,"^8",7,"^9",155,"^:",17,"^54",["^1K",["^55",["^1K",[["^56","~$data"]]]]],"^5D","pulls the data out of the systeminformation library and wrapping them up\n  to be sent into mqtt"],"^Z","~$huginn.mqtt/prep-temps","^58",false,"^6","huginn/mqtt.cljs","^:",17,"^59",["^1K",[["^56","^5H"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",155,"^9",155,"^5<",2,"^5=",true,"^54",["^1K",["^55",["^1K",[["^56","^5H"]]]]],"^5D","pulls the data out of the systeminformation library and wrapping them up\n  to be sent into mqtt"],"~$publisher",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",191,"^8",7,"^9",191,"^:",16,"^54",["^1K",["^55",["^1K",[["~$client-atom","~$send-chan"]]]]],"^5D","main loop that pushes packets added to the send-chan to google iot core"],"^Z","~$huginn.mqtt/publisher","^58",false,"^6","huginn/mqtt.cljs","^:",16,"^59",["^1K",[["^5K","^5L"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",191,"^9",191,"^5<",2,"^5=",true,"^54",["^1K",["^55",["^1K",[["^5K","^5L"]]]]],"^5D","main loop that pushes packets added to the send-chan to google iot core"],"~$init-client",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",123,"^8",7,"^9",123,"^:",18,"^54",["^1K",["^55",["^1K",[["^56","~$send","~$recv"]]]]]],"^Z","~$huginn.mqtt/init-client","^58",false,"^6","huginn/mqtt.cljs","^:",18,"^59",["^1K",[["^56","^5O","^5P"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",123,"^9",123,"^5<",3,"^5=",true,"^54",["^1K",["^55",["^1K",[["^56","^5O","^5P"]]]]]],"~$payload-root",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",135,"^8",7,"^9",135,"^:",19,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5A","~$userId","^5C"],"^1M","^56"]]]]]],"^5D","builds the prefix of the actual values being sent\n  (str (payload-root config) sensor-name /  sensor-value)"],"^Z","~$huginn.mqtt/payload-root","^58",false,"^6","huginn/mqtt.cljs","^:",19,"^59",["^1K",[["~$p__21480"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",135,"^9",135,"^5<",1,"^5=",true,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5A","^5S","^5C"],"^1M","^56"]]]]]],"^5D","builds the prefix of the actual values being sent\n  (str (payload-root config) sensor-name /  sensor-value)"],"~$config-chan",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",61,"^8",7,"^9",61,"^:",18,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5C"],"^1M","^56"]]]]]],"^5D","google give each device two channeles, a state channel (the config channel)\n  and a telemetry channel (the one that we push all our data over). The name of\n  these channels are determined by google iot core."],"^Z","~$huginn.mqtt/config-chan","^58",false,"^6","huginn/mqtt.cljs","^:",18,"^59",["^1K",[["~$p__21452"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",61,"^9",61,"^5<",1,"^5=",true,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5C"],"^1M","^56"]]]]]],"^5D","google give each device two channeles, a state channel (the config channel)\n  and a telemetry channel (the one that we push all our data over). The name of\n  these channels are determined by google iot core."],"~$mqtt-topic",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",146,"^8",7,"^9",146,"^:",17,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5C"],"^1M","^56"],"~$msg-type"]]]]],"^5D","msg-type can be 'state' for state updates\n   or 'events' to publish telemetry"],"^Z","~$huginn.mqtt/mqtt-topic","^58",false,"^6","huginn/mqtt.cljs","^:",17,"^59",["^1K",[["~$p__21483","^5Z"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",146,"^9",146,"^5<",2,"^5=",true,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5C"],"^1M","^56"],"^5Z"]]]]],"^5D","msg-type can be 'state' for state updates\n   or 'events' to publish telemetry"],"~$tele-chan",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",228,"^8",7,"^9",228,"^:",16,"^54",["^1K",["^55",["^1K",[["^56"]]]]],"^5D","takes the client opts and builds a channel with system telementry\n  values on it (cpu tempratures specifically)"],"^Z","~$huginn.mqtt/tele-chan","^58",false,"^6","huginn/mqtt.cljs","^:",16,"^59",["^1K",[["^56"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",228,"^9",228,"^5<",1,"^5=",true,"^54",["^1K",["^55",["^1K",[["^56"]]]]],"^5D","takes the client opts and builds a channel with system telementry\n  values on it (cpu tempratures specifically)"],"~$client-handlers",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",74,"^8",7,"^9",74,"^:",22,"^54",["^1K",["^55",["^1K",[["~$success-fn","~$fail","^5O","^5P"]]]]],"^5D","builds a map of handels to attach to the mqtt object"],"^Z","~$huginn.mqtt/client-handlers","^58",false,"^6","huginn/mqtt.cljs","^:",22,"^59",["^1K",[["^64","^65","^5O","^5P"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",74,"^9",74,"^5<",4,"^5=",true,"^54",["^1K",["^55",["^1K",[["^64","^65","^5O","^5P"]]]]],"^5D","builds a map of handels to attach to the mqtt object"],"~$kill-it",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",335,"^8",7,"^9",335,"^:",14,"^54",["^1K",["^55",["^1K",[["~$system-promise"]]]]],"^5D","Feed the system promise to this and it will kill it"],"^Z","~$huginn.mqtt/kill-it","^58",false,"^6","huginn/mqtt.cljs","^:",14,"^59",["^1K",[["^68"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",335,"^9",335,"^5<",1,"^5=",true,"^54",["^1K",["^55",["^1K",[["^68"]]]]],"^5D","Feed the system promise to this and it will kill it"],"~$state-send",["^ ","^Z","~$huginn.mqtt/state-send","^6","huginn/mqtt.cljs","^7",279,"^8",1,"^9",279,"^:",16,"^5",["^ ","^6","huginn/mqtt.cljs","^7",279,"^8",6,"^9",279,"^:",16],"^4Y","^4Z"],"~$publish-one",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",184,"^8",7,"^9",184,"^:",18,"^54",["^1K",["^55",["^1K",[["~$client",["^ ","^5?",["~$topic","~$payload","~$qos"],"^1M","~$p"]]]]]],"^5D","Publises one mqtt packet to the client"],"^Z","~$huginn.mqtt/publish-one","^58",false,"^6","huginn/mqtt.cljs","^:",18,"^59",["^1K",[["^6=","~$p__21487"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",184,"^9",184,"^5<",2,"^5=",true,"^54",["^1K",["^55",["^1K",[["^6=",["^ ","^5?",["^6>","^6?","^6@"],"^1M","~$p"]]]]]],"^5D","Publises one mqtt packet to the client"],"~$system-function",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",293,"^8",7,"^9",293,"^:",22,"^54",["^1K",["^55",["^1K",[["^56"]]]]],"^5D","the heart of the system lies here.\n  This function takes options (config/default-options works well)\n  It returns a map\n  This map has\n  :send-chan A channel you can use to directly send messages of mqtt, must be of the\n  form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n  :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n  :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n  (google publishes these values to a differnt pubsub channel then device telemetry)\n  :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n  are sent in the same batch, the same is true for stat-chan.\n  :client-atom, contains the current version of the mqtt client. This is an atom so\n  that the client-refersher can refresh the authentication token and swap it.\n  this pattern also ensures only one client\n\n  payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you"],"^Z","~$huginn.mqtt/system-function","^58",false,"^6","huginn/mqtt.cljs","^:",22,"^59",["^1K",[["^56"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",293,"^9",293,"^5<",1,"^5=",true,"^54",["^1K",["^55",["^1K",[["^56"]]]]],"^5D","the heart of the system lies here.\n  This function takes options (config/default-options works well)\n  It returns a map\n  This map has\n  :send-chan A channel you can use to directly send messages of mqtt, must be of the\n  form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n  :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n  :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n  (google publishes these values to a differnt pubsub channel then device telemetry)\n  :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n  are sent in the same batch, the same is true for stat-chan.\n  :client-atom, contains the current version of the mqtt client. This is an atom so\n  that the client-refersher can refresh the authentication token and swap it.\n  this pattern also ensures only one client\n\n  payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you"],"~$stop",["^ ","^Z","~$huginn.mqtt/stop","^6","huginn/mqtt.cljs","^7",180,"^8",1,"^9",180,"^:",10,"^5",["^ ","^6","huginn/mqtt.cljs","^7",180,"^8",6,"^9",180,"^:",10],"^4Y","^4Z"],"~$sender",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",253,"^8",7,"^9",253,"^:",13,"^54",["^1K",["^55",["^1K",[["~$topic-name","^56","^5O","~$t-chan"]]]]],"^5D","takes information for the tele-chan in the form of collections of\n  mqtt-packets and assignes a default topic if a subfolder is set,\n  adds a default qos. Then takes the resulting structures and puts\n  them on to the send channel. waits for :delayMs between collections "],"^Z","~$huginn.mqtt/sender","^58",false,"^6","huginn/mqtt.cljs","^:",13,"^59",["^1K",[["^6H","^56","^5O","^6I"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",253,"^9",253,"^5<",4,"^5=",true,"^54",["^1K",["^55",["^1K",[["^6H","^56","^5O","^6I"]]]]],"^5D","takes information for the tele-chan in the form of collections of\n  mqtt-packets and assignes a default topic if a subfolder is set,\n  adds a default qos. Then takes the resulting structures and puts\n  them on to the send channel. waits for :delayMs between collections "],"~$client-refresher",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",199,"^8",7,"^9",199,"^:",23,"^54",["^1K",["^55",["^1K",[["^5K",["^ ","^5?",["~$tokenExpMins","~$delayMs"],"^1M","^56"],"^5O","^5P"]]]]],"^5D","loops and refreshs the client atom every token experation.\n  Mqtt requires that you refresh your token frequently (less then 20 mins)"],"^Z","~$huginn.mqtt/client-refresher","^58",false,"^6","huginn/mqtt.cljs","^:",23,"^59",["^1K",[["^5K","~$p__21508","^5O","^5P"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",199,"^9",199,"^5<",4,"^5=",true,"^54",["^1K",["^55",["^1K",[["^5K",["^ ","^5?",["^6L","^6M"],"^1M","^56"],"^5O","^5P"]]]]],"^5D","loops and refreshs the client atom every token experation.\n  Mqtt requires that you refresh your token frequently (less then 20 mins)"],"~$add-handlers",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",94,"^8",7,"^9",94,"^:",19,"^54",["^1K",["^55",["^1K",[["^6=","~$handlers"]]]]],"^5D","takes a map of handlers and attaches them to the mqtt object"],"^Z","~$huginn.mqtt/add-handlers","^58",false,"^6","huginn/mqtt.cljs","^:",19,"^59",["^1K",[["^6=","^6Q"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",94,"^9",94,"^5<",2,"^5=",true,"^54",["^1K",["^55",["^1K",[["^6=","^6Q"]]]]],"^5D","takes a map of handlers and attaches them to the mqtt object"],"~$clean-up",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",285,"^8",7,"^9",285,"^:",15,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5L","~$recv-chan","~$telemetry-chan","~$state-chan","^5K"],"^1M","~$system"]]]]]]],"^Z","~$huginn.mqtt/clean-up","^58",false,"^6","huginn/mqtt.cljs","^:",15,"^59",["^1K",[["~$p__21623"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",285,"^9",285,"^5<",1,"^5=",true,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5L","^6T","^6U","^6V","^5K"],"^1M","^6W"]]]]]]]],"^1I",["^ ","^F","^F","^18","^F","^1;","^1;","~$a","^A","^A","^A","~$s","^1A","^1A","^1A"],"~:cljs.analyzer/constants",["^ ","^1F",["^Y",["~:client-fail","~:args","~:req-un","~:opt-un","~:huginn.mqtt/payload","~:qos","~$cljs.core/<","~:recv-chan","~:ret","~:gfn","~:cloudRegion","~:send-chan","~:recv","~:pred-exprs","~:keys-pred","~:huginn.mqtt/client-config","^5Q","~:payload","~:opt-keys","~:huginn.mqtt/cloudRegion","~:else","~:huginn.mqtt/qos","~$cljs.core/count","~:state-chan","~$cljs.spec.alpha/and","~$cljs.spec.alpha/coll-of","~$cljs.spec.alpha/cat","~:cljs.spec.alpha/kind-form","~:subfolder","^5E","~:delayMs","~:deviceId","~:telemetry-chan","~$cljs.core/string?","~:t-chan","~:req-specs","~$cljs.spec.alpha/or","~:value","~:huginn.mqtt/topic-type","~:registryId","~:client","~$cljs.spec.alpha/fspec","~:recur","~:debug","~:topic","~:huginn.mqtt/ts","~$cljs.core/contains?","^57","~$cljs.core/map?","~:cljs.spec.alpha/cpred","~$%","~$cljs.core/float?","~:tokenExpMins","~$cljs.core/fn?","~:huginn.mqtt/chan","~:topic-name","~:ts","~$cljs.spec.alpha/keys","~:huginn.mqtt/projectId","^6J","~:req","~:client-atom","~:msg-type","~:fail","~:huginn.mqtt/mqtt-packet","~$fn*","^5W","^5I","^5[","~:opts","~:nil","~$cljs.core/nil?","~:req-keys","~$cljs.core/fn","~:info","~:send","~:opt-specs","~:huginn.mqtt/registryId","~:userId","^66","~:pred-forms","~:pause","~:error","~:projectId","~$p1__21446#","~:huginn.mqtt/deviceId","~$p1__21445#","~$promesa.core/promise?","~:auto","~:huginn.mqtt/subfolder","~:p","~:cljs.spec.alpha/conform-all","^6A","~:success-fn","~$cljs.core/any?","^62","~:message","~:packet","~:cljs.spec.alpha/describe","~:opt","~:data"]],"~:order",["^89","^7N","^8H","^7A","^8O","^85","^8V","^7S","^7>","^88","^71","^72","^78","^7<","^7=","^7@","^7P","^8:","^8C","^8G","^8J","^8Z","^8M","^7T","^79","^7L","^8D","~$%","^80","^7[","^73","^7F","^8?","^8P","^75","^7D","^8S","^8N","^7Z","^82","^7C","^8>","^7?","^7J","^74","^87","^5E","^7V","^70","^77","^5W","^7H","^8@","^66","^8U","^84","^8=","^8F","^7;","^7X","~:p","^8R","^8E","^8L","^7Y","^8W","^8X","^7W","^7B","^57","^7U","^5Q","^8Q","^6[","^8I","^5[","^8<","^5I","^8[","^7G","^7I","^81","^8T","^8Y","^6A","^7Q","^8A","^8B","^7R","^83","^7K","^8K","^62","^6J","^86","^7O","^7:","^76","^7M","^7E","^8;"]],"^1O",["^ ","^1G",["^Y",[]]],"^1P",["^ ","^11",["^ ","^1M","^1B"]],"^1Q",["^1<","^1;","^17","^1D","^1?","^12","^1:","^F","^A","^?","^1A","^1>"]],"^14","^[","~:ns-specs",["^ ","^73",["^1K",["^7F","^7N",["^1K",["^8?",["^8P"],["^1K",["^75",["^1K",["^7D","^8P"]],200000]]]]]],"^7>",["^1K",["^88","^71",["^89","^8H","^7A","^8O"]]],"^5Q",["^1K",["^7V","^70",["^1K",["^7H","^8@","^7>","^8F","^85","^7;","^85"]],"^77","^8Q"]],"^7A","^7N","^7C",["^Y",[0,1]],"^5E",["^1K",["^7V","^70","^7>","^77","^7N"]],"^7S",["^Y",["events","state"]],"^7Z","^82","^57",["^1K",["^7V","^70",["^1K",["^7H","^8@","^7>"]]]],"^85","^8V","^89","^7N","^6J",["^1K",["^7V","^70",["^1K",["^7H","^86","^7S","^8@","^7>","^8F","^85","^7O","^85"]]]],"^8>",["^1K",["^88","^71",["^73","^8S","^7C","^7Z"]]],"^5W",["^1K",["^7V","^70",["^1K",["^7H","^8@",["^1K",["^88","^71",["^8O"]]]]],"^77","^7N"]],"^5I",["^1K",["^7V","^70",["^1K",["^7H","^8@","^7>","^8[","^8V"]],"^77",["^1K",["^7G","^8>"]]]],"^5[",["^1K",["^7V","^70",["^1K",["^7H","^8@","^7>","^8<","^7S"]],"^77","^7N"]],"^8H","^7N","^66",["^1K",["^7V","^70",["^1K",["^7H","^8U","^84","^8=","^84","^8F","^85","^7;","^85"]]]],"^8O","^7N","^8S",["^1K",["^7F","^7N",["^1K",["^8?",["^8N"],["^1K",["^75",["^1K",["^7D","^8N"]],200]]]]]],"^6A",["^1K",["^7V","^70",["^1K",["^7H","^7U","^8V","^8X",["^1K",["^7Q","^8A","^8B","^7R","^8>"]]]]]],"^62",["^1K",["^7V","^70",["^1K",["^7H","^8@","^7>"]],"^77","^85"]]],"~:ns-speced-vars",["^5Q","^5E","^57","^6J","^5W","^5I","^5[","^66","^6A","^62"],"~:compiler-options",["^23",[["^93","~:static-fns"],true,["^93","~:elide-asserts"],false,["^93","~:optimize-constants"],null,["^93","~:external-config"],null,["^93","~:tooling-config"],null,["^93","~:emit-constants"],null,["^93","~:infer-externs"],true,["^93","^1X"],null,["~:js-options","~:js-provider"],"^1G",["~:mode"],"~:dev",["^93","~:fn-invoke-direct"],null,["^93","~:source-map"],"/dev/null"]]]