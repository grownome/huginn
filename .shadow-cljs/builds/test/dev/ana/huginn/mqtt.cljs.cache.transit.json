["^ ","~:output",["^ ","~:js","goog.provide('huginn.mqtt');\ngoog.require('cljs.core');\ngoog.require('promesa.core');\ngoog.require('clojure.string');\ngoog.require('huginn.jwt');\ngoog.require('shadow.js.shim.module$mqtt');\ngoog.require('huginn.config');\ngoog.require('taoensso.timbre');\ngoog.require('cljs.core.async');\ngoog.require('shadow.js.shim.module$systeminformation');\ngoog.require('cljs.spec.alpha');\ngoog.require('cljs.nodejs');\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"partial\",\"cljs.core/partial\",1483172485,null),new cljs.core.Symbol(\"cljs.core\",\"instance?\",\"cljs.core/instance?\",2044751870,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core.async\",\"chan\",\"cljs.core.async/chan\",589627473,null))),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.instance_QMARK_,cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0()));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"events\",null,\"state\",null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"events\",null,\"state\",null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),null,null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__39872){\nreturn cljs.core.map_QMARK_(G__39872);\n}),(function (G__39872){\nreturn cljs.core.contains_QMARK_(G__39872,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096));\n}),(function (G__39872){\nreturn cljs.core.contains_QMARK_(G__39872,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\n}),(function (G__39872){\nreturn cljs.core.contains_QMARK_(G__39872,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214));\n}),(function (G__39872){\nreturn cljs.core.contains_QMARK_(G__39872,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\n})], null),(function (G__39872){\nreturn ((cljs.core.map_QMARK_(G__39872)) && (cljs.core.contains_QMARK_(G__39872,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096))) && (cljs.core.contains_QMARK_(G__39872,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006))) && (cljs.core.contains_QMARK_(G__39872,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214))) && (cljs.core.contains_QMARK_(G__39872,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096),new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006),new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214),new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208)))], null),null])));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__39873#\",\"p1__39873#\",900006307,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"p1__39873#\",\"p1__39873#\",900006307,null)),(200000)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)),(200000)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_,(function (p1__39873_SHARP_){\nreturn (cljs.core.count(p1__39873_SHARP_) < (200000));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__39874#\",\"p1__39874#\",1643461121,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"p1__39874#\",\"p1__39874#\",1643461121,null)),(200)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)),(200)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_,(function (p1__39874_SHARP_){\nreturn (cljs.core.count(p1__39874_SHARP_) < (200));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"ts\",\"huginn.mqtt/ts\",2127118637),new cljs.core.Symbol(\"cljs.core\",\"float?\",\"cljs.core/float?\",-941017745,null),cljs.core.float_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),new cljs.core.Keyword(\"huginn.mqtt\",\"ts\",\"huginn.mqtt/ts\",2127118637)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),new cljs.core.Keyword(\"huginn.mqtt\",\"ts\",\"huginn.mqtt/ts\",2127118637)], null),null,null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__39875){\nreturn cljs.core.map_QMARK_(G__39875);\n}),(function (G__39875){\nreturn cljs.core.contains_QMARK_(G__39875,new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092));\n}),(function (G__39875){\nreturn cljs.core.contains_QMARK_(G__39875,new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439));\n}),(function (G__39875){\nreturn cljs.core.contains_QMARK_(G__39875,new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904));\n})], null),(function (G__39875){\nreturn ((cljs.core.map_QMARK_(G__39875)) && (cljs.core.contains_QMARK_(G__39875,new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092))) && (cljs.core.contains_QMARK_(G__39875,new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439))) && (cljs.core.contains_QMARK_(G__39875,new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),new cljs.core.Keyword(\"huginn.mqtt\",\"ts\",\"huginn.mqtt/ts\",2127118637)], null),null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904)))], null),null])));\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"client-id\",\"huginn.mqtt/client-id\",1699900680,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),null,null),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),null,null,null));\n/**\n * Builds a client id used to identify the device this message is\n *   comming from\n */\nhuginn.mqtt.client_id = (function huginn$mqtt$client_id(p__39876){\nvar map__39877 = p__39876;\nvar map__39877__$1 = ((((!((map__39877 == null)))?(((((map__39877.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39877.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39877):map__39877);\nvar opts = map__39877__$1;\nvar projectId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39877__$1,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096));\nvar registryId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39877__$1,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\nvar cloudRegion = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39877__$1,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214));\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39877__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"projects/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(projectId),\"/locations/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cloudRegion),\"/registries/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(registryId),\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId)].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"config-chan\",\"huginn.mqtt/config-chan\",-1665797133,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__39879){\nreturn cljs.core.map_QMARK_(G__39879);\n}),(function (G__39879){\nreturn cljs.core.contains_QMARK_(G__39879,new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099));\n})], null),(function (G__39879){\nreturn ((cljs.core.map_QMARK_(G__39879)) && (cljs.core.contains_QMARK_(G__39879,new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)))], null),null])),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),null,null,null));\n/**\n * google give each device two channeles, a state channel (the config channel)\n *   and a telemetry channel (the one that we push all our data over). The name of\n *   these channels are determined by google iot core.\n */\nhuginn.mqtt.config_chan = (function huginn$mqtt$config_chan(p__39880){\nvar map__39881 = p__39880;\nvar map__39881__$1 = ((((!((map__39881 == null)))?(((((map__39881.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39881.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39881):map__39881);\nvar opts = map__39881__$1;\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39881__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId),\"/config\"].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"client-handlers\",\"huginn.mqtt/client-handlers\",1114981143,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.fn_QMARK_,cljs.core.fn_QMARK_,new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\n/**\n * builds a map of handels to attach to the mqtt object\n */\nhuginn.mqtt.client_handlers = (function huginn$mqtt$client_handlers(success_fn,fail,send,recv){\nreturn new cljs.core.PersistentArrayMap(null, 5, [\"connect\",(function (success){\nif(cljs.core.truth_(success)){\nreturn (success_fn.cljs$core$IFn$_invoke$arity$0 ? success_fn.cljs$core$IFn$_invoke$arity$0() : success_fn.call(null));\n} else {\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"huginn.mqtt\",\"*cider-repl src/huginn:localhost:46665(clj)*\",81,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"client connection failure\"], null);\n}),null)),null,-1935168529);\n\nreturn (fail.cljs$core$IFn$_invoke$arity$0 ? fail.cljs$core$IFn$_invoke$arity$0() : fail.call(null));\n}\n}),\"close\",(function (){\nreturn null;\n}),\"reconnect\",(function (){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,\"reconnecting\",\"huginn.mqtt\",\"*cider-repl src/huginn:localhost:46665(clj)*\",84,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}),null)),null,898937655);\n}),\"error\",(function (err){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"huginn.mqtt\",\"*cider-repl src/huginn:localhost:46665(clj)*\",85,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"error: \",err], null);\n}),null)),null,-552559133);\n}),\"message\",(function (topic,message,packet){\nvar c__23855__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto__){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto__){\nreturn (function (state_39889){\nvar state_val_39890 = (state_39889[(1)]);\nif((state_val_39890 === (1))){\nvar inst_39883 = [new cljs.core.Keyword(null,\"topic\",\"topic\",-1960480691),new cljs.core.Keyword(null,\"message\",\"message\",-406056002),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081)];\nvar inst_39884 = [topic,message,packet];\nvar inst_39885 = cljs.core.PersistentHashMap.fromArrays(inst_39883,inst_39884);\nvar state_39889__$1 = state_39889;\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_39889__$1,(2),recv,inst_39885);\n} else {\nif((state_val_39890 === (2))){\nvar inst_39887 = (state_39889[(2)]);\nvar state_39889__$1 = state_39889;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_39889__$1,inst_39887);\n} else {\nreturn null;\n}\n}\n});})(c__23855__auto__))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto__){\nreturn (function() {\nvar huginn$mqtt$client_handlers_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$client_handlers_$_state_machine__23691__auto____0 = (function (){\nvar statearr_39891 = [null,null,null,null,null,null,null];\n(statearr_39891[(0)] = huginn$mqtt$client_handlers_$_state_machine__23691__auto__);\n\n(statearr_39891[(1)] = (1));\n\nreturn statearr_39891;\n});\nvar huginn$mqtt$client_handlers_$_state_machine__23691__auto____1 = (function (state_39889){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_39889);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e39892){if((e39892 instanceof Object)){\nvar ex__23694__auto__ = e39892;\nvar statearr_39893_40073 = state_39889;\n(statearr_39893_40073[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_39889);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e39892;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__40074 = state_39889;\nstate_39889 = G__40074;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$client_handlers_$_state_machine__23691__auto__ = function(state_39889){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$client_handlers_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$client_handlers_$_state_machine__23691__auto____1.call(this,state_39889);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$client_handlers_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$client_handlers_$_state_machine__23691__auto____0;\nhuginn$mqtt$client_handlers_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$client_handlers_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$client_handlers_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto__))\n})();\nvar state__23857__auto__ = (function (){var statearr_39894 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_39894[(6)] = c__23855__auto__);\n\nreturn statearr_39894;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto__))\n);\n\nreturn c__23855__auto__;\n})], null);\n});\n/**\n * takes a map of handlers and attaches them to the mqtt object\n */\nhuginn.mqtt.add_handlers = (function huginn$mqtt$add_handlers(client,handlers){\nvar seq__39895 = cljs.core.seq(handlers);\nvar chunk__39896 = null;\nvar count__39897 = (0);\nvar i__39898 = (0);\nwhile(true){\nif((i__39898 < count__39897)){\nvar vec__39899 = chunk__39896.cljs$core$IIndexed$_nth$arity$2(null,i__39898);\nvar key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39899,(0),null);\nvar hand = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39899,(1),null);\nclient.on(key,hand);\n\n\nvar G__40076 = seq__39895;\nvar G__40077 = chunk__39896;\nvar G__40078 = count__39897;\nvar G__40079 = (i__39898 + (1));\nseq__39895 = G__40076;\nchunk__39896 = G__40077;\ncount__39897 = G__40078;\ni__39898 = G__40079;\ncontinue;\n} else {\nvar temp__5457__auto__ = cljs.core.seq(seq__39895);\nif(temp__5457__auto__){\nvar seq__39895__$1 = temp__5457__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__39895__$1)){\nvar c__4351__auto__ = cljs.core.chunk_first(seq__39895__$1);\nvar G__40080 = cljs.core.chunk_rest(seq__39895__$1);\nvar G__40081 = c__4351__auto__;\nvar G__40082 = cljs.core.count(c__4351__auto__);\nvar G__40083 = (0);\nseq__39895 = G__40080;\nchunk__39896 = G__40081;\ncount__39897 = G__40082;\ni__39898 = G__40083;\ncontinue;\n} else {\nvar vec__39902 = cljs.core.first(seq__39895__$1);\nvar key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39902,(0),null);\nvar hand = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39902,(1),null);\nclient.on(key,hand);\n\n\nvar G__40084 = cljs.core.next(seq__39895__$1);\nvar G__40085 = null;\nvar G__40086 = (0);\nvar G__40087 = (0);\nseq__39895 = G__40084;\nchunk__39896 = G__40085;\ncount__39897 = G__40086;\ni__39898 = G__40087;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"build-client\",\"huginn.mqtt/build-client\",-620852627,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),null,null),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\nhuginn.mqtt.build_client = (function huginn$mqtt$build_client(opts){\n\nvar conn_args = huginn.jwt.connection_args(opts);\nvar client = shadow.js.shim.module$mqtt.connect(conn_args);\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),shadow.js.shim.module$mqtt.connect(conn_args),new cljs.core.Keyword(null,\"iat-time\",\"iat-time\",111865064),huginn.jwt.round_now()], null);\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"init-client\",\"huginn.mqtt/init-client\",-283765885,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"promesa.core\",\"promise?\",\"promesa.core/promise?\",-1893544292,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"promesa.core\",\"promise?\",\"promesa.core/promise?\",-1893544292,null),promesa.core.promise_QMARK_,null,null),new cljs.core.Symbol(\"promesa.core\",\"promise?\",\"promesa.core/promise?\",-1893544292,null),null,null,null));\nhuginn.mqtt.init_client = (function huginn$mqtt$init_client(opts,send,recv){\n\nreturn promesa.core.promise((function (resolve,reject){\nvar map__39905 = huginn.mqtt.build_client(opts);\nvar map__39905__$1 = ((((!((map__39905 == null)))?(((((map__39905.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39905.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39905):map__39905);\nvar init = map__39905__$1;\nvar time = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39905__$1,new cljs.core.Keyword(null,\"time\",\"time\",1385887882));\nvar client = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39905__$1,new cljs.core.Keyword(null,\"client\",\"client\",-1323448117));\nvar handlers = huginn.mqtt.client_handlers(((function (map__39905,map__39905__$1,init,time,client){\nreturn (function (){\nreturn (resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(client) : resolve.call(null,client));\n});})(map__39905,map__39905__$1,init,time,client))\n,((function (map__39905,map__39905__$1,init,time,client){\nreturn (function (){\nvar G__39907 = new cljs.core.Keyword(null,\"client-fail\",\"client-fail\",1564298304);\nreturn (reject.cljs$core$IFn$_invoke$arity$1 ? reject.cljs$core$IFn$_invoke$arity$1(G__39907) : reject.call(null,G__39907));\n});})(map__39905,map__39905__$1,init,time,client))\n,send,recv);\nclient.subscribe(huginn.mqtt.config_chan(opts));\n\nreturn huginn.mqtt.add_handlers(client,handlers);\n}));\n});\n/**\n * builds the prefix of the actual values being sent\n *   (str (payload-root config) sensor-name /  sensor-value)\n */\nhuginn.mqtt.payload_root = (function huginn$mqtt$payload_root(p__39908){\nvar map__39909 = p__39908;\nvar map__39909__$1 = ((((!((map__39909 == null)))?(((((map__39909.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39909.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39909):map__39909);\nvar opts = map__39909__$1;\nvar registryId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39909__$1,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\nvar userId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39909__$1,new cljs.core.Keyword(null,\"userId\",\"userId\",575594135));\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39909__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(registryId),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(userId),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId),\"-payload\"].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"mqtt-topic\",\"huginn.mqtt/mqtt-topic\",-2087820524,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),null,null,null));\n/**\n * msg-type can be 'state' for state updates\n * or 'events' to publish telemetry\n */\nhuginn.mqtt.mqtt_topic = (function huginn$mqtt$mqtt_topic(p__39911,msg_type){\nvar map__39912 = p__39911;\nvar map__39912__$1 = ((((!((map__39912 == null)))?(((((map__39912.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39912.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39912):map__39912);\nvar opts = map__39912__$1;\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39912__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg_type)].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"prep-temps\",\"huginn.mqtt/prep-temps\",-1223395116,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"data\",\"data\",-232669377)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.core.any_QMARK_], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),null,new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__39914){\nreturn cljs.core.coll_QMARK_(G__39914);\n}),new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))], null),null),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)),null,null,null));\n/**\n * pulls the data out of the systeminformation library and wrapping them up\n *   to be sent into mqtt\n */\nhuginn.mqtt.prep_temps = (function huginn$mqtt$prep_temps(opts,data){\nvar pr = huginn.mqtt.payload_root(opts);\nvar cores_raw = cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(data.cores);\nvar cores = cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(((function (pr,cores_raw){\nreturn (function (index,value){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(pr),\"-core-temp-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(index),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(value)].join(''))].join(''),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),[\"metrics/core-temp-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(index)].join(''),new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904),huginn.jwt.round_now()], null);\n});})(pr,cores_raw))\n,cores_raw);\nvar main = (cljs.core.truth_(data.main)?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(pr),\"-core-temp-main/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(data.main)].join(''))].join(''),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),\"metrics/core-temp-main\",new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904),huginn.jwt.round_now()], null):null);\nvar max = (cljs.core.truth_(data.max)?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(pr),\"-core-temp-max/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(data.max)].join(''))].join(''),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),\"metrics/core-temp-max\",new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904),huginn.jwt.round_now()], null):null);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [main], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [max], null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cores], 0));\n});\nhuginn.mqtt.stop = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"publish-one\",\"huginn.mqtt/publish-one\",1981166109,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.any_QMARK_,new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\n/**\n * Publises one mqtt packet to the client\n */\nhuginn.mqtt.publish_one = (function huginn$mqtt$publish_one(client,p__39915){\nvar map__39916 = p__39915;\nvar map__39916__$1 = ((((!((map__39916 == null)))?(((((map__39916.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39916.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39916):map__39916);\nvar p = map__39916__$1;\nvar topic = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39916__$1,new cljs.core.Keyword(null,\"topic\",\"topic\",-1960480691));\nvar payload = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39916__$1,new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092));\nvar qos = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39916__$1,new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319));\nreturn client.publish(topic,payload,qos);\n});\n/**\n * main loop that pushes packets added to the send-chan to google iot core\n */\nhuginn.mqtt.publisher = (function huginn$mqtt$publisher(client_atom,send_chan){\nvar c__23855__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto__){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto__){\nreturn (function (state_39927){\nvar state_val_39928 = (state_39927[(1)]);\nif((state_val_39928 === (1))){\nvar state_39927__$1 = state_39927;\nvar statearr_39929_40089 = state_39927__$1;\n(statearr_39929_40089[(2)] = null);\n\n(statearr_39929_40089[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_39928 === (2))){\nvar state_39927__$1 = state_39927;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_39927__$1,(4),send_chan);\n} else {\nif((state_val_39928 === (3))){\nvar inst_39925 = (state_39927[(2)]);\nvar state_39927__$1 = state_39927;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_39927__$1,inst_39925);\n} else {\nif((state_val_39928 === (4))){\nvar inst_39920 = (state_39927[(2)]);\nvar inst_39921 = cljs.core.deref(client_atom);\nvar inst_39922 = huginn.mqtt.publish_one(inst_39921,inst_39920);\nvar state_39927__$1 = (function (){var statearr_39930 = state_39927;\n(statearr_39930[(7)] = inst_39922);\n\nreturn statearr_39930;\n})();\nvar statearr_39931_40090 = state_39927__$1;\n(statearr_39931_40090[(2)] = null);\n\n(statearr_39931_40090[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n});})(c__23855__auto__))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto__){\nreturn (function() {\nvar huginn$mqtt$publisher_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$publisher_$_state_machine__23691__auto____0 = (function (){\nvar statearr_39932 = [null,null,null,null,null,null,null,null];\n(statearr_39932[(0)] = huginn$mqtt$publisher_$_state_machine__23691__auto__);\n\n(statearr_39932[(1)] = (1));\n\nreturn statearr_39932;\n});\nvar huginn$mqtt$publisher_$_state_machine__23691__auto____1 = (function (state_39927){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_39927);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e39933){if((e39933 instanceof Object)){\nvar ex__23694__auto__ = e39933;\nvar statearr_39934_40091 = state_39927;\n(statearr_39934_40091[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_39927);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e39933;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__40092 = state_39927;\nstate_39927 = G__40092;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$publisher_$_state_machine__23691__auto__ = function(state_39927){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$publisher_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$publisher_$_state_machine__23691__auto____1.call(this,state_39927);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$publisher_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$publisher_$_state_machine__23691__auto____0;\nhuginn$mqtt$publisher_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$publisher_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$publisher_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto__))\n})();\nvar state__23857__auto__ = (function (){var statearr_39935 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_39935[(6)] = c__23855__auto__);\n\nreturn statearr_39935;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto__))\n);\n\nreturn c__23855__auto__;\n});\n/**\n * loops and refreshs the client atom every token experation.\n *   Mqtt requires that you refresh your token frequently (less then 20 mins)\n */\nhuginn.mqtt.client_refresher = (function huginn$mqtt$client_refresher(client_atom,p__39936,send,recv){\nvar map__39937 = p__39936;\nvar map__39937__$1 = ((((!((map__39937 == null)))?(((((map__39937.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__39937.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39937):map__39937);\nvar opts = map__39937__$1;\nvar tokenExpMins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39937__$1,new cljs.core.Keyword(null,\"tokenExpMins\",\"tokenExpMins\",-1638711857));\nvar delayMs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39937__$1,new cljs.core.Keyword(null,\"delayMs\",\"delayMs\",-1017330168));\nvar client_send_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar client_mixer = cljs.core.async.mix(client_send_chan);\ncljs.core.async.admix(client_mixer,send);\n\nvar c__23855__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto__,client_send_chan,client_mixer,map__39937,map__39937__$1,opts,tokenExpMins,delayMs){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto__,client_send_chan,client_mixer,map__39937,map__39937__$1,opts,tokenExpMins,delayMs){\nreturn (function (state_39970){\nvar state_val_39971 = (state_39970[(1)]);\nif((state_val_39971 === (1))){\nvar state_39970__$1 = state_39970;\nvar statearr_39972_40094 = state_39970__$1;\n(statearr_39972_40094[(2)] = null);\n\n(statearr_39972_40094[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_39971 === (2))){\nvar inst_39940 = (tokenExpMins * (1000));\nvar inst_39941 = (inst_39940 * (60));\nvar inst_39942 = cljs.core.async.timeout(inst_39941);\nvar state_39970__$1 = state_39970;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_39970__$1,(4),inst_39942);\n} else {\nif((state_val_39971 === (3))){\nvar inst_39968 = (state_39970[(2)]);\nvar state_39970__$1 = state_39970;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_39970__$1,inst_39968);\n} else {\nif((state_val_39971 === (4))){\nvar inst_39944 = (state_39970[(2)]);\nvar inst_39945 = (function (){var wait = inst_39944;\nreturn ((function (wait,inst_39944,state_val_39971,c__23855__auto__,client_send_chan,client_mixer,map__39937,map__39937__$1,opts,tokenExpMins,delayMs){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"\\tRefreshing token after \",((tokenExpMins * (1000)) * (60)),\"ms\"], null);\n});\n;})(wait,inst_39944,state_val_39971,c__23855__auto__,client_send_chan,client_mixer,map__39937,map__39937__$1,opts,tokenExpMins,delayMs))\n})();\nvar inst_39946 = (new cljs.core.Delay(inst_39945,null));\nvar inst_39947 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"huginn.mqtt\",\"*cider-repl src/huginn:localhost:46665(clj)*\",207,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),inst_39946,null,524892822);\nvar inst_39948 = [send];\nvar inst_39949 = [new cljs.core.Keyword(null,\"pause\",\"pause\",-2095325672)];\nvar inst_39950 = [true];\nvar inst_39951 = cljs.core.PersistentHashMap.fromArrays(inst_39949,inst_39950);\nvar inst_39952 = [inst_39951];\nvar inst_39953 = cljs.core.PersistentHashMap.fromArrays(inst_39948,inst_39952);\nvar inst_39954 = cljs.core.async.toggle(client_mixer,inst_39953);\nvar inst_39955 = cljs.core.deref(client_atom);\nvar inst_39956 = huginn.jwt.create_jwt(opts);\nvar inst_39957 = cljs.core.clj__GT_js(inst_39956);\nvar inst_39958 = (inst_39955[\"password\"] = inst_39957);\nvar inst_39959 = [send];\nvar inst_39960 = [new cljs.core.Keyword(null,\"pause\",\"pause\",-2095325672)];\nvar inst_39961 = [false];\nvar inst_39962 = cljs.core.PersistentHashMap.fromArrays(inst_39960,inst_39961);\nvar inst_39963 = [inst_39962];\nvar inst_39964 = cljs.core.PersistentHashMap.fromArrays(inst_39959,inst_39963);\nvar inst_39965 = cljs.core.async.toggle(client_mixer,inst_39964);\nvar state_39970__$1 = (function (){var statearr_39973 = state_39970;\n(statearr_39973[(7)] = inst_39958);\n\n(statearr_39973[(8)] = inst_39965);\n\n(statearr_39973[(9)] = inst_39954);\n\n(statearr_39973[(10)] = inst_39947);\n\nreturn statearr_39973;\n})();\nvar statearr_39974_40095 = state_39970__$1;\n(statearr_39974_40095[(2)] = null);\n\n(statearr_39974_40095[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n});})(c__23855__auto__,client_send_chan,client_mixer,map__39937,map__39937__$1,opts,tokenExpMins,delayMs))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto__,client_send_chan,client_mixer,map__39937,map__39937__$1,opts,tokenExpMins,delayMs){\nreturn (function() {\nvar huginn$mqtt$client_refresher_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$client_refresher_$_state_machine__23691__auto____0 = (function (){\nvar statearr_39975 = [null,null,null,null,null,null,null,null,null,null,null];\n(statearr_39975[(0)] = huginn$mqtt$client_refresher_$_state_machine__23691__auto__);\n\n(statearr_39975[(1)] = (1));\n\nreturn statearr_39975;\n});\nvar huginn$mqtt$client_refresher_$_state_machine__23691__auto____1 = (function (state_39970){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_39970);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e39976){if((e39976 instanceof Object)){\nvar ex__23694__auto__ = e39976;\nvar statearr_39977_40096 = state_39970;\n(statearr_39977_40096[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_39970);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e39976;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__40097 = state_39970;\nstate_39970 = G__40097;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$client_refresher_$_state_machine__23691__auto__ = function(state_39970){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$client_refresher_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$client_refresher_$_state_machine__23691__auto____1.call(this,state_39970);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$client_refresher_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$client_refresher_$_state_machine__23691__auto____0;\nhuginn$mqtt$client_refresher_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$client_refresher_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$client_refresher_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto__,client_send_chan,client_mixer,map__39937,map__39937__$1,opts,tokenExpMins,delayMs))\n})();\nvar state__23857__auto__ = (function (){var statearr_39978 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_39978[(6)] = c__23855__auto__);\n\nreturn statearr_39978;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto__,client_send_chan,client_mixer,map__39937,map__39937__$1,opts,tokenExpMins,delayMs))\n);\n\nreturn c__23855__auto__;\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"tele-chan\",\"huginn.mqtt/tele-chan\",1912072830,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),null,null),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),null,null),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),null,null,null));\n/**\n * takes the client opts and builds a channel with system telementry\n *   values on it (cpu tempratures specifically)\n */\nhuginn.mqtt.tele_chan = (function huginn$mqtt$tele_chan(opts){\nvar temp_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar out_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar c__23855__auto___40098 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto___40098,temp_chan,out_chan){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto___40098,temp_chan,out_chan){\nreturn (function (state_39993){\nvar state_val_39994 = (state_39993[(1)]);\nif((state_val_39994 === (1))){\nvar state_39993__$1 = state_39993;\nvar statearr_39995_40099 = state_39993__$1;\n(statearr_39995_40099[(2)] = null);\n\n(statearr_39995_40099[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_39994 === (2))){\nvar inst_39981 = shadow.js.shim.module$systeminformation.cpuTemperature();\nvar inst_39982 = (function (){return ((function (inst_39981,state_val_39994,c__23855__auto___40098,temp_chan,out_chan){\nreturn (function (p1__39979_SHARP_){\nreturn huginn.mqtt.prep_temps(opts,p1__39979_SHARP_);\n});\n;})(inst_39981,state_val_39994,c__23855__auto___40098,temp_chan,out_chan))\n})();\nvar inst_39983 = (function (){return ((function (inst_39981,inst_39982,state_val_39994,c__23855__auto___40098,temp_chan,out_chan){\nreturn (function (mqtt_packets){\nvar c__23855__auto____$1 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto____$1,inst_39981,inst_39982,state_val_39994,c__23855__auto___40098,temp_chan,out_chan){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto____$1,inst_39981,inst_39982,state_val_39994,c__23855__auto___40098,temp_chan,out_chan){\nreturn (function (state_40004){\nvar state_val_40005 = (state_40004[(1)]);\nif((state_val_40005 === (1))){\nvar inst_39996 = ((1000) * (60));\nvar inst_39997 = (inst_39996 * (1));\nvar inst_39998 = cljs.core.async.timeout(inst_39997);\nvar state_40004__$1 = state_40004;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_40004__$1,(2),inst_39998);\n} else {\nif((state_val_40005 === (2))){\nvar inst_40000 = (state_40004[(2)]);\nvar state_40004__$1 = (function (){var statearr_40006 = state_40004;\n(statearr_40006[(7)] = inst_40000);\n\nreturn statearr_40006;\n})();\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_40004__$1,(3),temp_chan,mqtt_packets);\n} else {\nif((state_val_40005 === (3))){\nvar inst_40002 = (state_40004[(2)]);\nvar state_40004__$1 = state_40004;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_40004__$1,inst_40002);\n} else {\nreturn null;\n}\n}\n}\n});})(c__23855__auto____$1,inst_39981,inst_39982,state_val_39994,c__23855__auto___40098,temp_chan,out_chan))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto____$1,inst_39981,inst_39982,state_val_39994,c__23855__auto___40098,temp_chan,out_chan){\nreturn (function() {\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto____0 = (function (){\nvar statearr_40007 = [null,null,null,null,null,null,null,null];\n(statearr_40007[(0)] = huginn$mqtt$tele_chan_$_state_machine__23691__auto__);\n\n(statearr_40007[(1)] = (1));\n\nreturn statearr_40007;\n});\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto____1 = (function (state_40004){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_40004);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e40008){if((e40008 instanceof Object)){\nvar ex__23694__auto__ = e40008;\nvar statearr_40009_40100 = state_40004;\n(statearr_40009_40100[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_40004);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e40008;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__40101 = state_40004;\nstate_40004 = G__40101;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__ = function(state_40004){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto____1.call(this,state_40004);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$tele_chan_$_state_machine__23691__auto____0;\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$tele_chan_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto____$1,inst_39981,inst_39982,state_val_39994,c__23855__auto___40098,temp_chan,out_chan))\n})();\nvar state__23857__auto__ = (function (){var statearr_40010 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_40010[(6)] = c__23855__auto____$1);\n\nreturn statearr_40010;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto____$1,inst_39981,inst_39982,state_val_39994,c__23855__auto___40098,temp_chan,out_chan))\n);\n\nreturn c__23855__auto____$1;\n});\n;})(inst_39981,inst_39982,state_val_39994,c__23855__auto___40098,temp_chan,out_chan))\n})();\nvar inst_39984 = promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic(inst_39981,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([inst_39982,inst_39983], 0));\nvar state_39993__$1 = (function (){var statearr_40011 = state_39993;\n(statearr_40011[(7)] = inst_39984);\n\nreturn statearr_40011;\n})();\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_39993__$1,(4),temp_chan);\n} else {\nif((state_val_39994 === (3))){\nvar inst_39991 = (state_39993[(2)]);\nvar state_39993__$1 = state_39993;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_39993__$1,inst_39991);\n} else {\nif((state_val_39994 === (4))){\nvar inst_39986 = (state_39993[(2)]);\nvar state_39993__$1 = state_39993;\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_39993__$1,(5),out_chan,inst_39986);\n} else {\nif((state_val_39994 === (5))){\nvar inst_39988 = (state_39993[(2)]);\nvar state_39993__$1 = (function (){var statearr_40012 = state_39993;\n(statearr_40012[(8)] = inst_39988);\n\nreturn statearr_40012;\n})();\nvar statearr_40013_40102 = state_39993__$1;\n(statearr_40013_40102[(2)] = null);\n\n(statearr_40013_40102[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n});})(c__23855__auto___40098,temp_chan,out_chan))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto___40098,temp_chan,out_chan){\nreturn (function() {\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto____0 = (function (){\nvar statearr_40014 = [null,null,null,null,null,null,null,null,null];\n(statearr_40014[(0)] = huginn$mqtt$tele_chan_$_state_machine__23691__auto__);\n\n(statearr_40014[(1)] = (1));\n\nreturn statearr_40014;\n});\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto____1 = (function (state_39993){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_39993);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e40015){if((e40015 instanceof Object)){\nvar ex__23694__auto__ = e40015;\nvar statearr_40016_40103 = state_39993;\n(statearr_40016_40103[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_39993);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e40015;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__40104 = state_39993;\nstate_39993 = G__40104;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__ = function(state_39993){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto____1.call(this,state_39993);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$tele_chan_$_state_machine__23691__auto____0;\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$tele_chan_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto___40098,temp_chan,out_chan))\n})();\nvar state__23857__auto__ = (function (){var statearr_40017 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_40017[(6)] = c__23855__auto___40098);\n\nreturn statearr_40017;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto___40098,temp_chan,out_chan))\n);\n\n\nreturn out_chan;\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"sender\",\"huginn.mqtt/sender\",-581128399,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\n/**\n * takes information for the tele-chan in the form of collections of\n *   mqtt-packets and assignes a default topic if a subfolder is set,\n *   adds a default qos. Then takes the resulting structures and puts\n *   them on to the send channel. waits for :delayMs between collections \n */\nhuginn.mqtt.sender = (function huginn$mqtt$sender(topic_name,opts,send,t_chan){\nvar c__23855__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto__){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto__){\nreturn (function (state_40042){\nvar state_val_40043 = (state_40042[(1)]);\nif((state_val_40043 === (1))){\nvar state_40042__$1 = state_40042;\nvar statearr_40044_40105 = state_40042__$1;\n(statearr_40044_40105[(2)] = null);\n\n(statearr_40044_40105[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_40043 === (2))){\nvar state_40042__$1 = state_40042;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_40042__$1,(4),t_chan);\n} else {\nif((state_val_40043 === (3))){\nvar inst_40040 = (state_40042[(2)]);\nvar state_40042__$1 = state_40042;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_40042__$1,inst_40040);\n} else {\nif((state_val_40043 === (4))){\nvar inst_40020 = (state_40042[(2)]);\nvar inst_40021 = huginn.mqtt.mqtt_topic(opts,topic_name);\nvar inst_40022 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"state\",topic_name);\nvar state_40042__$1 = (function (){var statearr_40045 = state_40042;\n(statearr_40045[(7)] = inst_40021);\n\n(statearr_40045[(8)] = inst_40020);\n\nreturn statearr_40045;\n})();\nif(inst_40022){\nvar statearr_40046_40106 = state_40042__$1;\n(statearr_40046_40106[(1)] = (5));\n\n} else {\nvar statearr_40047_40107 = state_40042__$1;\n(statearr_40047_40107[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_40043 === (5))){\nvar inst_40021 = (state_40042[(7)]);\nvar inst_40020 = (state_40042[(8)]);\nvar inst_40024 = (function (){var teles = inst_40020;\nvar topic = inst_40021;\nvar qos = ({\"qos\": (1)});\nreturn ((function (teles,topic,qos,inst_40021,inst_40020,state_val_40043,c__23855__auto__){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"pushing state\",topic], null);\n});\n;})(teles,topic,qos,inst_40021,inst_40020,state_val_40043,c__23855__auto__))\n})();\nvar inst_40025 = (new cljs.core.Delay(inst_40024,null));\nvar inst_40026 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"huginn.mqtt\",\"*cider-repl src/huginn:localhost:46665(clj)*\",260,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),inst_40025,null,-855477577);\nvar state_40042__$1 = state_40042;\nvar statearr_40048_40108 = state_40042__$1;\n(statearr_40048_40108[(2)] = inst_40026);\n\n(statearr_40048_40108[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_40043 === (6))){\nvar state_40042__$1 = state_40042;\nvar statearr_40049_40109 = state_40042__$1;\n(statearr_40049_40109[(2)] = null);\n\n(statearr_40049_40109[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_40043 === (7))){\nvar inst_40021 = (state_40042[(7)]);\nvar inst_40020 = (state_40042[(8)]);\nvar inst_40029 = (state_40042[(2)]);\nvar inst_40031 = (function (){var teles = inst_40020;\nvar topic = inst_40021;\nvar qos = ({\"qos\": (1)});\nreturn ((function (teles,topic,qos,inst_40021,inst_40020,inst_40029,state_val_40043,c__23855__auto__){\nreturn (function (p__40030){\nvar map__40050 = p__40030;\nvar map__40050__$1 = ((((!((map__40050 == null)))?(((((map__40050.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40050.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40050):map__40050);\nvar mqtt_packet = map__40050__$1;\nvar subfolder = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40050__$1,new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439));\nvar my_topic = (cljs.core.truth_(subfolder)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(topic),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(subfolder)].join(''):topic);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(mqtt_packet,new cljs.core.Keyword(null,\"topic\",\"topic\",-1960480691),my_topic),new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319),qos);\n});\n;})(teles,topic,qos,inst_40021,inst_40020,inst_40029,state_val_40043,c__23855__auto__))\n})();\nvar inst_40032 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(inst_40031,inst_40020);\nvar inst_40033 = cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(send,inst_40032,false);\nvar inst_40034 = new cljs.core.Keyword(null,\"delayMs\",\"delayMs\",-1017330168).cljs$core$IFn$_invoke$arity$1(opts);\nvar inst_40035 = cljs.core.async.timeout(inst_40034);\nvar state_40042__$1 = (function (){var statearr_40052 = state_40042;\n(statearr_40052[(9)] = inst_40033);\n\n(statearr_40052[(10)] = inst_40029);\n\nreturn statearr_40052;\n})();\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_40042__$1,(8),inst_40035);\n} else {\nif((state_val_40043 === (8))){\nvar inst_40037 = (state_40042[(2)]);\nvar state_40042__$1 = (function (){var statearr_40053 = state_40042;\n(statearr_40053[(11)] = inst_40037);\n\nreturn statearr_40053;\n})();\nvar statearr_40054_40110 = state_40042__$1;\n(statearr_40054_40110[(2)] = null);\n\n(statearr_40054_40110[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__23855__auto__))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto__){\nreturn (function() {\nvar huginn$mqtt$sender_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$sender_$_state_machine__23691__auto____0 = (function (){\nvar statearr_40055 = [null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_40055[(0)] = huginn$mqtt$sender_$_state_machine__23691__auto__);\n\n(statearr_40055[(1)] = (1));\n\nreturn statearr_40055;\n});\nvar huginn$mqtt$sender_$_state_machine__23691__auto____1 = (function (state_40042){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_40042);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e40056){if((e40056 instanceof Object)){\nvar ex__23694__auto__ = e40056;\nvar statearr_40057_40111 = state_40042;\n(statearr_40057_40111[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_40042);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e40056;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__40112 = state_40042;\nstate_40042 = G__40112;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$sender_$_state_machine__23691__auto__ = function(state_40042){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$sender_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$sender_$_state_machine__23691__auto____1.call(this,state_40042);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$sender_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$sender_$_state_machine__23691__auto____0;\nhuginn$mqtt$sender_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$sender_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$sender_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto__))\n})();\nvar state__23857__auto__ = (function (){var statearr_40058 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_40058[(6)] = c__23855__auto__);\n\nreturn statearr_40058;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto__))\n);\n\nreturn c__23855__auto__;\n});\nhuginn.mqtt.state_send = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(huginn.mqtt.sender,\"state\");\nhuginn.mqtt.tele_send = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(huginn.mqtt.sender,\"events\");\nhuginn.mqtt.clean_up = (function huginn$mqtt$clean_up(p__40059){\nvar map__40060 = p__40059;\nvar map__40060__$1 = ((((!((map__40060 == null)))?(((((map__40060.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40060.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40060):map__40060);\nvar system = map__40060__$1;\nvar send_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40060__$1,new cljs.core.Keyword(null,\"send-chan\",\"send-chan\",1681189602));\nvar recv_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40060__$1,new cljs.core.Keyword(null,\"recv-chan\",\"recv-chan\",869238850));\nvar telemetry_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40060__$1,new cljs.core.Keyword(null,\"telemetry-chan\",\"telemetry-chan\",-1991836503));\nvar state_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40060__$1,new cljs.core.Keyword(null,\"state-chan\",\"state-chan\",-1042477017));\nvar client_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40060__$1,new cljs.core.Keyword(null,\"client-atom\",\"client-atom\",-1733084110));\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,\"Killing system\",\"huginn.mqtt\",\"*cider-repl src/huginn:localhost:46665(clj)*\",282,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (map__40060,map__40060__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom){\nreturn (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n});})(map__40060,map__40060__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom))\n,null)),null,-553334699);\n\ncljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (map__40060,map__40060__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom){\nreturn (function (c){\nreturn cljs.core.async.close_BANG_(c);\n});})(map__40060,map__40060__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom))\n,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [send_chan,recv_chan,state_chan,telemetry_chan], null)));\n\nreturn cljs.core.deref(client_atom).end();\n});\n/**\n * the heart of the system lies here.\n *   This function takes options (config/default-options works well)\n *   It returns a map\n *   This map has\n *   :send-chan A channel you can use to directly send messages of mqtt, must be of the\n *   form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n *   :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n *   :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n *   (google publishes these values to a differnt pubsub channel then device telemetry)\n *   :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n *   are sent in the same batch, the same is true for stat-chan.\n *   :client-atom, contains the current version of the mqtt client. This is an atom so\n *   that the client-refersher can refresh the authentication token and swap it.\n *   this pattern also ensures only one client\n * \n *   payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you\n */\nhuginn.mqtt.system_function = (function huginn$mqtt$system_function(opts){\nvar send = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar recv = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar kill = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\nvar client_promise = huginn.mqtt.init_client(opts,send,recv);\nvar client_atom = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\nvar t_chan = huginn.mqtt.tele_chan(opts);\nvar state_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nreturn promesa.core.then(client_promise,((function (send,recv,kill,client_promise,client_atom,t_chan,state_chan){\nreturn (function (client){\ncljs.core.reset_BANG_(client_atom,client);\n\nhuginn.mqtt.client_refresher(client_atom,opts,send,recv);\n\nhuginn.mqtt.publisher(client_atom,send);\n\n(huginn.mqtt.tele_send.cljs$core$IFn$_invoke$arity$3 ? huginn.mqtt.tele_send.cljs$core$IFn$_invoke$arity$3(opts,send,t_chan) : huginn.mqtt.tele_send.call(null,opts,send,t_chan));\n\n(huginn.mqtt.state_send.cljs$core$IFn$_invoke$arity$3 ? huginn.mqtt.state_send.cljs$core$IFn$_invoke$arity$3(opts,send,state_chan) : huginn.mqtt.state_send.call(null,opts,send,state_chan));\n\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"send-chan\",\"send-chan\",1681189602),send,new cljs.core.Keyword(null,\"recv-chan\",\"recv-chan\",869238850),recv,new cljs.core.Keyword(null,\"state-chan\",\"state-chan\",-1042477017),state_chan,new cljs.core.Keyword(null,\"telemetry-chan\",\"telemetry-chan\",-1991836503),t_chan,new cljs.core.Keyword(null,\"client-atom\",\"client-atom\",-1733084110),client_atom], null);\n});})(send,recv,kill,client_promise,client_atom,t_chan,state_chan))\n);\n});\n/**\n * Feed the system promise to this and it will kill it\n */\nhuginn.mqtt.kill_it = (function huginn$mqtt$kill_it(system_promise){\nreturn promesa.core.then(system_promise,huginn.mqtt.clean_up);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","huginn/mqtt.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$jsonwebtoken","~$shadow.js.shim.module$jsonwebtoken","~$mqtt","~$shadow.js.shim.module$mqtt","~$systeminformation","~$shadow.js.shim.module$systeminformation","~$clojure.core.async","~$cljs.core.async","~$raspicam","~$shadow.js.shim.module$raspicam"],"~:use-macros",["^ ","~$get-env","~$taoensso.timbre","~$log","^H","~$logf","^H","~$reportf","^H","~$fatalf","^H","~$warnf","^H","~$report","^H","~$spy","^H","~$warn","^H","~$trace","^H","~$debug","^H","~$debugf","^H","~$tracef","^H","~$infof","^H","~$fatal","^H","~$errorf","^H","~$info","^H","~$error","^H"],"~:excludes",["~#set",[]],"~:name","~$huginn.mqtt","~:op","~:ns","~:imports",null,"~:requires",["^ ","^?","^?","~$p","~$promesa.core","^16","^16","~$timbre","^H","~$a","^C","~$si","^A","~$huginn.config","^19","~$cljs.core","^1:","~$goog","^1;","^C","^C","^@","^A","~$config","^19","~$cljs.nodejs","^1=","~$huginn.jwt","^1>","~$nodejs","^1=","~$s","~$cljs.spec.alpha","^>","^?","~$jw","^1>","^H","^H","^A","^A","~$clojure.string","^1B","~$st","^1B","^1@","^1@"],"~:seen",["^[",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^H","^H","^17","^H","^1:","^1:","~$a","^C","^C","^C","~$s","^1@","^1@","^1@"],"~:form",["~#list",["~$ns","^11",["^1I",["^1E",["^16","~:as","~$p"],["^1B","^1K","^1C"],["^1>","^1K","^1A"],["^>","^1K","^>"],["^19","^1K","^1<"],["^H","^1K","^17","~:refer-macros",["^I","^Q","^R","^X","^P","^Y","^V","^N","^J","^T","^S","^U","^M","^W","^L","^K","^O","^G"]],["^C","^1K","~$a"],["^@","^1K","^18"],["^1@","^1K","~$s"],["^1=","^1K","^1?"]]]]],"~:flags",["^ ","^1E",["^[",[]]],"~:js-deps",["^ "],"~:deps",["^1;","^1:","^16","^1B","^1>","^?","^19","^H","^C","^A","^1@","^1="]],"^13","^11","~:resource-id",["~:shadow.build.classpath/resource","huginn/mqtt.cljs"],"~:compiled-at",1540147874360,"~:resource-name","huginn/mqtt.cljs","~:warnings",[],"~:source","(ns huginn.mqtt\n  (:require\n   [promesa.core :as p]\n   [clojure.string :as st]\n   [huginn.jwt :as jw]\n   [mqtt :as mqtt]\n   [huginn.config :as config]\n   [taoensso.timbre :as timbre\n    :refer-macros [log  trace  debug  info  warn  error  fatal  report\n                   logf tracef debugf infof warnf errorf fatalf reportf\n                   spy get-env]]\n   [cljs.core.async :as a]\n   [systeminformation :as si]\n   [cljs.spec.alpha :as s]\n   [cljs.nodejs :as nodejs]))\n\n\n\n(s/def ::projectId string?)\n(s/def ::registryId string?)\n(s/def ::cloudRegion string?)\n(s/def ::deviceId string?)\n(s/def ::chan (partial instance? (a/chan)))\n\n(s/def ::topic-type #{\"events\" \"state\"})\n\n\n(s/def ::client-config (s/keys :req-un\n                               [::projectId\n                                ::registryId\n                                ::cloudRegion\n                                ::deviceId]))\n\n(s/def ::payload (s/and string? #(< ( count %) 200000)))\n(s/def ::subfolder (s/and string? #(< (count %) 200)))\n(s/def ::ts float?)\n\n(s/def ::mqtt-packet\n  (s/keys :req-un [::payload\n                   ::subfolder\n                   ::ts]))\n\n(s/fdef client-id\n  :args ::client-config\n  :ret  string?)\n\n\n(defn client-id\n  \"Builds a client id used to identify the device this message is\n  comming from\"\n  [{:keys [projectId registryId cloudRegion deviceId] :as opts}]\n  (str \"projects/\" projectId\n       \"/locations/\" cloudRegion\n       \"/registries/\" registryId\n       \"/devices/\" deviceId))\n\n(s/fdef config-chan\n  :args (s/keys :req [::deviceId])\n  :ret string?)\n(defn config-chan\n  \"google give each device two channeles, a state channel (the config channel)\n  and a telemetry channel (the one that we push all our data over). The name of\n  these channels are determined by google iot core.\"\n  [{:keys [deviceId] :as opts}]\n  (str \"/devices/\" deviceId \"/config\"))\n\n(s/fdef client-handlers\n  :args (s/cat :success-fn fn?\n               :fail       fn?\n               :send       ::chan\n               :recv       ::chan))\n\n(defn client-handlers\n  \"builds a map of handels to attach to the mqtt object\"\n  [success-fn fail send recv]\n  {\"connect\" (fn [success]\n               (if success\n                 (do\n                   (success-fn))\n                 (do\n                   (debug \"client connection failure\")\n                   (fail))))\n   \"close\"   (fn [] )\n   \"reconnect\" (fn [] (log  \"reconnecting\"))\n   \"error\"   (fn [err] (error \"error: \" err))\n   \"message\" (fn [topic message packet]\n               (a/go\n                 (a/>! recv {:topic topic\n                             :message message\n                             :packet packet})))})\n\n\n(defn add-handlers\n  \"takes a map of handlers and attaches them to the mqtt object\"\n  [client handlers]\n  (doseq [[key hand] handlers]\n    (.on client key hand)))\n\n(s/fdef build-client\n  :args ::client-config)\n\n(defn build-client [opts]\n  \"builds the mqtt client using the client-config\nthe mqtt client is responsible for holding on to\nauth to talk to google iot core. The mqtt client\nis also responsible for actually pushing the data\nto google iot core.\"\n  (let [conn-args (jw/connection-args opts)\n        client    (mqtt/connect conn-args)]\n    {:client (mqtt/connect conn-args)\n     :iat-time (jw/round-now)}))\n\n;This function is referenced before it is defined so we\n;declare it\n(declare publish-async)\n\n(s/fdef init-client\n  :args (s/cat :opts ::client-config\n               :send ::chan\n               :recv ::chan)\n  :ret p/promise?)\n\n(defn init-client [opts send recv]\n  \"using client config and a channel to send and a channel to recv on,\nbuilds an mqtt client that will read from the send chan and push to google\n  and write to the recv chan when google pushes to it. This object is wrapped\nin a promise that returns when the client is ready\"\n  (p/promise\n   (fn [resolve reject]\n     (let [{:keys [time client] :as init} (build-client opts)\n           handlers (client-handlers #(resolve client) #(reject :client-fail) send recv)]\n       (.subscribe client (config-chan opts))\n       (add-handlers client handlers)))))\n\n(defn payload-root\n  \"builds the prefix of the actual values being sent\n  (str (payload-root config) sensor-name /  sensor-value)\"\n  [{:keys [registryId userId deviceId] :as opts}]\n  (str registryId \"/\" userId \"/\" deviceId \"-payload\"))\n\n(s/fdef mqtt-topic\n    :args (s/cat :opts     ::client-config\n                 :msg-type ::topic-type)\n    :ret string?)\n\n(defn mqtt-topic\n  \"msg-type can be 'state' for state updates\n   or 'events' to publish telemetry\"\n  [{:keys [deviceId] :as opts} msg-type]\n  (str \"/devices/\" deviceId \"/\" msg-type))\n\n(s/fdef prep-temps\n  :args (s/cat :opts ::client-config :data any?)\n  :ret (s/coll-of ::mqtt-packet))\n(defn prep-temps\n  \"pulls the data out of the systeminformation library and wrapping them up\n  to be sent into mqtt\"\n  [opts data]\n  (let [pr (payload-root opts)\n        cores-raw (js->clj (.-cores data))\n        cores (map-indexed\n               (fn [index value]\n                 {:payload (str pr \"-core-temp-\" index \"/\" (str value))\n                  :subfolder (str \"metrics/core-temp-\" index)\n                  :ts (jw/round-now)})\n               cores-raw)\n        main (when (.-main data)\n               {:payload (str pr \"-core-temp-main/\" (str (.-main data)))\n                :subfolder \"metrics/core-temp-main\"\n                :ts (jw/round-now)})\n        max (when (.-max data)\n              {:payload (str pr \"-core-temp-max/\" (str (.-max data)))\n               :subfolder \"metrics/core-temp-max\"\n               :ts (jw/round-now)})]\n    (concat [main] [max] cores)))\n\n(def stop (atom false))\n\n(s/fdef publish-one\n  :args (s/cat :client any? :packet ::mqtt-packet))\n(defn publish-one\n  \"Publises one mqtt packet to the client\"\n  [^MqttClient client {:keys [topic payload qos] :as p}]\n  (.publish client topic payload qos))\n\n\n(defn publisher\n  \"main loop that pushes packets added to the send-chan to google iot core\"\n  [client-atom send-chan]\n  (a/go-loop []\n    (let [to-send (a/<! send-chan)]\n      (publish-one @client-atom to-send)\n      (recur))))\n\n(defn client-refresher\n  \"loops and refreshs the client atom every token experation.\n  Mqtt requires that you refresh your token frequently (less then 20 mins)\"\n  [client-atom {:keys [tokenExpMins delayMs] :as opts} send recv]\n  ; make a mixer so that we can pause the data when switching clients\n  (let [client-send-chan (a/chan)\n        client-mixer (a/mix client-send-chan)]\n    (a/admix client-mixer send)\n   ;Loop forever waiting for the tokenExpMins, then building a new client\n    (a/go-loop []\n   ; use core.async/timeout to set up a channel that has a value every tokenExpMins\n      (let [wait (a/<! (a/timeout (* tokenExpMins 1000 60)))]\n        (info \"\\tRefreshing token after \" (* tokenExpMins 1000 60)  \"ms\")\n        (a/toggle client-mixer {send {:pause true}})\n        ;(.end @client-atom)\n        (aset @client-atom \"password\" (clj->js (jw/create-jwt opts)))\n        (a/toggle client-mixer {send {:pause false}})\n;        (let [wait-again (a/<! (a/timeout 100))]\n;          (p/then (init-client opts send recv)\n;                  (fn [new-client]\n;                    (reset! client-atom new-client)\n                    )\n          (recur))))\n\n(s/fdef tele-chan\n  :args ::client-config\n  :ret ::chan)\n(defn tele-chan\n  \"takes the client opts and builds a channel with system telementry\n  values on it (cpu tempratures specifically)\"\n  [opts]\n  (let [temp-chan (a/chan)\n        out-chan (a/chan)]\n    (a/go-loop []\n        (p/chain\n         (si/cpuTemperature)\n         #(prep-temps opts %)\n         (fn [mqtt-packets] (a/go\n                              (a/<! (a/timeout (* 1000 60 1)))\n                              (a/>! temp-chan mqtt-packets))))\n        (let [v (a/<! temp-chan)]\n          (a/>! out-chan v)\n          (recur)))\n    out-chan))\n\n\n(s/fdef sender\n  :args (s/cat :topic-name ::topic-type\n               :opts       ::client-config\n               :send       ::chan\n               :t-chan     ::chan))\n\n(defn sender\n  \"takes information for the tele-chan in the form of collections of\n  mqtt-packets and assignes a default topic if a subfolder is set,\n  adds a default qos. Then takes the resulting structures and puts\n  them on to the send channel. waits for :delayMs between collections \"\n  [topic-name opts send t-chan]\n  (a/go-loop []\n    (let [teles (a/<! t-chan)\n          topic (mqtt-topic opts topic-name)\n          qos #js {:qos 1}]\n\n      ;becuase this should rarely happen\n      (when (= \"state\" topic-name)\n        (debug \"pushing state\" topic))\n\n      (a/onto-chan\n       send\n       (map\n        (fn [{:keys [subfolder] :as mqtt-packet}]\n          (let [my-topic (if subfolder (str topic \"/\" subfolder) topic)]\n            (-> mqtt-packet\n                (assoc :topic my-topic)\n                (assoc :qos qos)))) teles)\n       false)\n      (a/<! (a/timeout (:delayMs opts)))\n      (recur))))\n\n(def state-send\n  (partial sender \"state\"))\n\n(def tele-send\n  (partial sender \"events\"))\n\n(defn clean-up\n  [{:keys [send-chan recv-chan telemetry-chan state-chan client-atom] :as system}]\n  (log \"Killing system\")\n  (doall\n   (map (fn [c] (a/close! c))\n        [send-chan recv-chan state-chan telemetry-chan]))\n  (.end @client-atom))\n\n(defn system-function\n  \"the heart of the system lies here.\n  This function takes options (config/default-options works well)\n  It returns a map\n  This map has\n  :send-chan A channel you can use to directly send messages of mqtt, must be of the\n  form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n  :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n  :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n  (google publishes these values to a differnt pubsub channel then device telemetry)\n  :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n  are sent in the same batch, the same is true for stat-chan.\n  :client-atom, contains the current version of the mqtt client. This is an atom so\n  that the client-refersher can refresh the authentication token and swap it.\n  this pattern also ensures only one client\n\n  payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you\"\n  [opts]\n  (let [send (a/chan)\n        recv (a/chan)\n        kill (atom false)\n        client-promise (init-client opts send recv)\n        client-atom (atom nil)\n        t-chan (tele-chan opts)\n        state-chan (a/chan)]\n    (p/then\n     client-promise\n     (fn [client]\n       (reset! client-atom client)\n       (client-refresher client-atom opts send recv)\n       (publisher client-atom send)\n       (tele-send opts send t-chan)\n       (state-send opts send state-chan)\n       {:send-chan send\n        :recv-chan recv\n        :state-chan state-chan\n        :telemetry-chan t-chan\n        :client-atom client-atom}))))\n\n\n;(def system-promise (system-function config/default-options))\n\n(defn kill-it\n  \"Feed the system promise to this and it will kill it\"\n  [system-promise]\n  (p/then system-promise\n          clean-up))\n\n;(kill-it system-promise)\n","~:reader-features",["^[",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["cljs.spec.alpha/def-impl","cljs.core/string?","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","cljs.core/instance?","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0","cljs.spec.alpha/map-spec-impl","G__39872","cljs.core/map?","cljs.core/contains?","cljs.spec.alpha/and-spec-impl","p1__39873#","cljs.core/count","p1__39874#","cljs.core/float?","G__39875","cljs.spec.alpha/fspec-impl","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4","p__39876","map__39877","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","huginn.mqtt/client-id","projectId","registryId","cloudRegion","deviceId","opts","G__39879","p__39880","map__39881","huginn.mqtt/config-chan","cljs.core/any?","cljs.spec.alpha/cat-impl","cljs.core/fn?","huginn.mqtt/client-handlers","success-fn","fail","send","recv","success","taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10","taoensso.timbre/*config*","cljs.core/Delay","err","topic","message","packet","c__23855__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__23856__auto__","switch__23690__auto__","state_39889","state_val_39890","inst_39883","inst_39884","inst_39885","cljs.core/PersistentHashMap","cljs.core.async.impl.ioc-helpers/put!","inst_39887","cljs.core.async.impl.ioc-helpers/return-chan","statearr-39891","state-machine__23691__auto__","ret-value__23692__auto__","result__23693__auto__","cljs.core/keyword-identical?","e39892","js/Object","ex__23694__auto__","statearr-39893","cljs.core.async.impl.ioc-helpers/process-exception","state__23857__auto__","statearr-39894","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","huginn.mqtt/add-handlers","client","handlers","seq__39895","cljs.core/seq","chunk__39896","count__39897","i__39898","vec__39899","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","temp__5457__auto__","cljs.core/chunked-seq?","c__4351__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","vec__39902","cljs.core/first","cljs.core/next","key","hand","huginn.mqtt/build-client","conn-args","huginn.jwt/connection-args","js/shadow.js.shim.module$mqtt.connect","huginn.jwt/round-now","promesa.core/promise?","huginn.mqtt/init-client","promesa.core/promise","resolve","reject","map__39905","time","init","G__39907","p__39908","map__39909","huginn.mqtt/payload-root","userId","p__39911","map__39912","huginn.mqtt/mqtt-topic","msg-type","cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4","G__39914","cljs.core/coll?","huginn.mqtt/prep-temps","data","pr","cores-raw","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","cores","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","index","value","main","max","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","huginn.mqtt/stop","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","p__39915","map__39916","huginn.mqtt/publish-one","payload","qos","p","huginn.mqtt/publisher","client-atom","send-chan","state_39927","state_val_39928","statearr-39929","cljs.core.async.impl.ioc-helpers/take!","inst_39925","inst_39920","inst_39921","cljs.core/deref","inst_39922","statearr-39930","statearr-39931","statearr-39932","e39933","statearr-39934","statearr-39935","p__39936","map__39937","huginn.mqtt/client-refresher","tokenExpMins","delayMs","client-send-chan","client-mixer","cljs.core.async/mix","cljs.core.async/admix","state_39970","state_val_39971","statearr-39972","inst_39940","inst_39941","inst_39942","inst_39968","inst_39944","inst_39945","inst_39946","inst_39947","inst_39948","inst_39949","inst_39950","inst_39951","inst_39952","inst_39953","inst_39954","inst_39955","inst_39956","inst_39957","inst_39958","inst_39959","inst_39960","inst_39961","inst_39962","inst_39963","inst_39964","inst_39965","statearr-39973","statearr-39974","statearr-39975","e39976","statearr-39977","statearr-39978","wait","cljs.core.async/timeout","cljs.core.async/toggle","cljs.core/clj->js","huginn.jwt/create-jwt","huginn.mqtt/tele-chan","temp-chan","out-chan","state_39993","state_val_39994","statearr-39995","inst_39981","inst_39982","p1__39979#","inst_39983","inst_39984","statearr-40011","inst_39991","inst_39986","inst_39988","statearr-40012","statearr-40013","statearr-40014","e40015","statearr-40016","statearr-40017","promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic","js/shadow.js.shim.module$systeminformation.cpuTemperature","mqtt-packets","state_40004","state_val_40005","inst_39996","inst_39997","inst_39998","inst_40000","statearr-40006","inst_40002","statearr-40007","e40008","statearr-40009","statearr-40010","huginn.mqtt/sender","topic-name","t-chan","state_40042","state_val_40043","statearr-40044","inst_40040","inst_40020","inst_40021","inst_40022","statearr-40045","statearr-40046","statearr-40047","inst_40024","inst_40025","inst_40026","statearr-40048","statearr-40049","inst_40029","inst_40031","inst_40032","inst_40033","inst_40034","inst_40035","statearr-40052","inst_40037","statearr-40053","statearr-40054","statearr-40055","e40056","statearr-40057","statearr-40058","teles","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3","cljs.core.map.cljs$core$IFn$_invoke$arity$2","p__40030","map__40050","subfolder","mqtt-packet","my-topic","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","huginn.mqtt/state-send","huginn.mqtt/tele-send","p__40059","map__40060","huginn.mqtt/clean-up","recv-chan","telemetry-chan","state-chan","system","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","c","cljs.core.async/close!","huginn.mqtt/system-function","kill","client-promise","promesa.core/then","cljs.core/reset!","huginn.mqtt/kill-it","system-promise"]]],"~:cache-keys",["~#cmap",[["^1Q","cljs_node_io/file.cljs"],[1537666007418,"^1;","^1:","~$goog.Uri","~$cljs-node-io.streams","~$cljs-node-io.fs","~$cljs-node-io.protocols"],["^1Q","goog/dom/tagname.js"],[1530991559994,"^1;","~$goog.dom.HtmlElement"],["^1Q","goog/async/freelist.js"],[1530991559994,"^1;"],["^1Q","cljs/core/async/impl/ioc_helpers.cljs"],[1534380136417,"^1;","^1:","~$cljs.core.async.impl.protocols"],["^1Q","goog/labs/useragent/platform.js"],[1530991559994,"^1;","~$goog.labs.userAgent.util","~$goog.string"],["~:macro","^1:"],[1534380137000],["^1Q","cljs/core/async.cljs"],[1534380136417,"^1;","^1:","^27","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers"],["^1Q","goog/timer/timer.js"],[1530991559994,"^1;","~$goog.Promise","~$goog.events.EventTarget"],["^1Q","cljs/nodejs.cljs"],[1534380137690,"^1;","^1:"],["^1Q","cljs/spec/gen/alpha.cljs"],[1534380137690,"^1;","^1:","^22"],["^1Q","cljs/tools/reader/impl/utils.cljs"],[1535586405375,"^1;","^1:","^1B","^29"],["^1Q","cljs_node_io/fs.cljs"],[1537666007418,"^1;","^1:","^C","^27"],["^1Q","cljs_node_io/core.cljs"],[1537666007418,"^1;","^1:","^C","^27","~$cljs-node-io.file","^23","^25","^22"],["^1Q","goog/math/math.js"],[1530991559994,"^1;","~$goog.array","~$goog.asserts"],["^1Q","goog/string/stringformat.js"],[1530991559994,"^1;","^29"],["^1Q","goog/events/eventtype.js"],[1530991559994,"^1;","~$goog.userAgent"],["^1Q","goog/labs/useragent/browser.js"],[1530991559994,"^1;","^2C","^28","~$goog.object","^29"],["^1Q","goog/array/array.js"],[1530991559994,"^1;","^2D"],["^1Q","huginn/mqtt.cljs"],[1540143643788,"^1;","^1:","^16","^1B","^1>","^?","^19","^H","^C","^A","^1@","^1="],["^1Q","cljs_node_io/protocols.cljs"],[1537666007418,"^1;","^1:"],["^2:","~$cljs.core.async.macros"],[1534380136000],["^1Q","cljs_node_io/streams.cljs"],[1537666007418,"^1;","^1:","^22","^C","^25"],["^1Q","huginn/config.cljs"],[1535728206166,"^1;","^1:"],["^1Q","goog/useragent/useragent.js"],[1530991559994,"^1;","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^28","~$goog.reflect","^29"],["^1Q","goog/structs/prioritypool.js"],[1530991559994,"^1;","~$goog.structs.Pool","~$goog.structs.PriorityQueue"],["^2:","~$cljs.tools.reader.reader-types"],[1535586405000],["^1Q","goog/async/run.js"],[1530991559994,"^1;","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"],["^1Q","taoensso/encore.cljs"],[1535586406568,"^1;","^1:","^1B","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","~$cljs.test","^2F","^29","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.structs","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"],["^1Q","goog/debug/error.js"],[1530991559994,"^1;"],["^1Q","goog/async/workqueue.js"],[1530991559994,"^1;","^2D","~$goog.async.FreeList"],["^1Q","huginn/jwt.cljs"],[1539537129814,"^1;","^1:","^1B","^16","~$cljs-node-io.core","^1=","^="],["^1Q","promesa/impl/scheduler.cljc"],[1535586406328,"^1;","^1:","~$promesa.protocols"],["~:shadow.build.js-support/require","mqtt"],["^?","shadow.js.shim.module$mqtt.js","^1;"],["^1Q","goog/events/events.js"],[1530991559994,"^1;","^2D","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","~$goog.events.BrowserFeature","~$goog.events.Listenable","~$goog.events.ListenerMap"],["^1Q","goog/promise/resolver.js"],[1530991559994,"^1;"],["^1Q","goog/events/browserfeature.js"],[1530991559994,"^1;","^2E"],["^1Q","cljs/tools/reader/edn.cljs"],[1535586405375,"^1;","^1:","~$cljs.tools.reader.impl.errors","^2N","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^29","^2W"],["^1Q","goog/structs/priorityqueue.js"],[1530991559994,"^1;","~$goog.structs.Heap"],["^1Q","goog/net/xhrio.js"],[1530991559994,"^1;","~$goog.Timer","^2C","^2D","^38","^2A","~$goog.json.hybrid","~$goog.log","^32","^31","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^29","^30","~$goog.structs.Map","~$goog.uri.utils","^2E"],["^1Q","goog/promise/thenable.js"],[1530991559994,"^1;"],["^1Q","promesa/impl.cljc"],[1535586406328,"^1;","^1:","^36","~$org.bluebird"],["^1Q","goog/dom/nodetype.js"],[1530991559994,"^1;"],["^2:","^H"],[1535586406000],["^1Q","cljs/tools/reader/impl/inspect.cljs"],[1535586405375,"^1;","^1:"],["^1Q","cljs/pprint.cljs"],[1534380137690,"^1;","^1:","^1B","^29","^2W"],["^2:","~$cljs.spec.gen.alpha"],[1534380137000],["^1Q","cljs/tools/reader.cljs"],[1535586405375,"^1;","^1:","^2N","^3>","^3?","^3=","^2C","^29","^2W"],["^1Q","goog/net/wrapperxmlhttpfactory.js"],[1530991559994,"^1;","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"],["^1Q","goog/events/eventtarget.js"],[1530991559994,"^1;","~$goog.Disposable","^2D","^2X","~$goog.events.Event","^3;","^3<","^2F"],["^1Q","goog/disposable/disposable.js"],[1530991559994,"^1;","~$goog.disposable.IDisposable"],["^1Q","goog/object/object.js"],[1530991559994,"^1;"],["^1Q","goog/structs/set.js"],[1530991559994,"^1;","^30","~$goog.structs.Collection","^3G"],"~:SHADOW-TIMESTAMP",[1540077702000,1534380137000],["^1Q","goog/math/long.js"],[1530991559994,"^1;","^2D","^2K"],["^1Q","goog/events/listener.js"],[1530991559994,"^1;","~$goog.events.ListenableKey"],["^1Q","cljs/core/async/impl/channels.cljs"],[1534380136417,"^1;","^1:","^27","^2>","^2<"],["^1Q","goog/events/listenermap.js"],[1530991559994,"^1;","^2C","~$goog.events.Listener","^2F"],["^1Q","goog/events/eventid.js"],[1530991559994,"^1;"],["^1Q","taoensso/truss.cljs"],[1535586406478,"^1;","^1:","~$taoensso.truss.impl"],["^1Q","shadow/test/env.cljs"],[1540077702615,"^1;","^1:"],["^1Q","goog/functions/functions.js"],[1530991559994,"^1;"],["^1Q","cljs/core/async/impl/dispatch.cljs"],[1534380136417,"^1;","^1:","^2<","^2P"],["^1Q","taoensso/truss/impl.cljs"],[1535586406478,"^1;","^1:","^2R"],["^1Q","clojure/walk.cljs"],[1534380137690,"^1;","^1:"],["^1Q","cljs/core/async/impl/protocols.cljs"],[1534380136417,"^1;","^1:"],["^1Q","goog/net/eventtype.js"],[1530991559994,"^1;"],["^1Q","goog/structs/map.js"],[1530991559994,"^1;","~$goog.iter.Iterator","~$goog.iter.StopIteration","^2F"],["^1Q","goog/net/xhriopool.js"],[1530991559994,"^1;","^2Y","~$goog.structs.PriorityPool"],["^1Q","goog/structs/queue.js"],[1530991559994,"^1;","^2C"],["^1Q","goog/labs/useragent/engine.js"],[1530991559994,"^1;","^2C","^28","^29"],["^1Q","taoensso/timbre/appenders/core.cljs"],[1535586406375,"^1;","^1:","^1B","~$taoensso.encore"],["^1Q","cljs/reader.cljs"],[1534380137690,"^1;","^1:","^2F","^3@","^2T","^2W"],["^37","bluebird"],["~$shadow.js.shim.module$bluebird","shadow.js.shim.module$bluebird.js","^1;"],["^2:","~$cljs-node-io.macros"],[1537666007000],["^2:","^1@"],[1534380137000],["^1Q","goog/asserts/asserts.js"],[1530991559994,"^1;","~$goog.debug.Error","~$goog.dom.NodeType","^29"],["^1Q","cljs/core/async/impl/buffers.cljs"],[1534380136417,"^1;","^1:","^27"],["^2:","~$cljs.pprint"],[1534380137000],["^1Q","goog/debug/logbuffer.js"],[1530991559994,"^1;","^2D","~$goog.debug.LogRecord"],["^37","jsonwebtoken"],["^=","shadow.js.shim.module$jsonwebtoken.js","^1;"],["^2:","^3X"],[1535586406000],["^1Q","goog/uri/uri.js"],[1530991559994,"^1;","^2C","^2D","^29","^30","^3G","^3H","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1Q","goog/net/errorcode.js"],[1530991559994,"^1;"],["^2:","^2U"],[1534380137000],["^2:","^C"],[1534380136000],["^1Q","goog/disposable/idisposable.js"],[1530991559994,"^1;"],["^1Q","goog/promise/promise.js"],[1530991559994,"^1;","~$goog.Thenable","^2D","^34","~$goog.async.run","^2Q","^3[","~$goog.promise.Resolver"],["^1Q","cljs/core/async/impl/timers.cljs"],[1534380136417,"^1;","^1:","^27","^2;","^2>"],["^1Q","cljs/spec/alpha.cljs"],[1534380137690,"^1;","^1:","^2F","~$clojure.walk","^3J","^1B"],["^1Q","goog/debug/logrecord.js"],[1530991559994,"^1;"],["^1Q","goog/base.js"],[1530991559994],["^1Q","promesa/core.cljc"],[1535586406328,"^1;","^1:","^36","~$promesa.impl","~$promesa.impl.scheduler"],["^1Q","goog/json/hybrid.js"],[1530991559994,"^1;","^2D","~$goog.json"],["^1Q","goog/structs/structs.js"],[1530991559994,"^1;","^2C","^2F"],["^1Q","cljs/tools/reader/impl/errors.cljs"],[1535586405375,"^1;","^1:","^2N","^1B","~$cljs.tools.reader.impl.inspect"],["^1Q","org/bluebird.cljs"],[1535669979047,"^1;","^1:","^3Y"],["^1Q","clojure/string.cljs"],[1534380137690,"^1;","^1:","^29","^2W"],["^1Q","goog/structs/pool.js"],[1530991559994,"^1;","^3M","~$goog.structs.Queue","~$goog.structs.Set"],["^1Q","goog/net/httpstatus.js"],[1530991559994,"^1;"],["^1Q","goog/structs/heap.js"],[1530991559994,"^1;","^2C","^2F","~$goog.structs.Node"],["^1Q","goog/debug/entrypointregistry.js"],[1530991559994,"^1;","^2D"],["^1Q","goog/string/string.js"],[1530991559994,"^1;"],["^1Q","goog/reflect/reflect.js"],[1530991559994,"^1;"],["^1Q","goog/labs/useragent/util.js"],[1530991559994,"^1;","^29"],["^2:","~$clojure.template"],[1534380136000],["^2:","~$cljs.core.async.impl.ioc-macros"],[1534380136000],["^1Q","goog/debug/debug.js"],[1530991559994,"^1;","^2C","~$goog.debug.errorcontext","^2E"],["^1Q","goog/string/stringbuffer.js"],[1530991559994,"^1;"],["^1Q","goog/debug/errorcontext.js"],[1530991559994,"^1;"],["^1Q","cljs/tools/reader/reader_types.cljs"],[1535586405375,"^1;","^1:","^3>","^29","^2W"],["^1Q","promesa/protocols.cljc"],[1535586406328,"^1;","^1:"],["^1Q","goog/iter/iter.js"],[1530991559994,"^1;","^2C","^2D","~$goog.functions","~$goog.math"],["^1Q","goog/async/nexttick.js"],[1530991559994,"^1;","^38","~$goog.dom.TagName","^4C","^2H","^2I"],["^1Q","goog/debug/logger.js"],[1530991559994,"^1;","^2C","^2D","~$goog.debug","~$goog.debug.LogBuffer","^42"],["^1Q","goog/events/event.js"],[1530991559994,"^1;","^3M","~$goog.events.EventId"],["^1Q","cljs/tools/reader/impl/commons.cljs"],[1535586405375,"^1;","^1:","^3=","^2N","^3>"],["^37","systeminformation"],["^A","shadow.js.shim.module$systeminformation.js","^1;"],["^1Q","goog/dom/htmlelement.js"],[1530991559994,"^1;"],["^1Q","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^29","^2F","^2C","^22","^2W"],["^1Q","goog/log/log.js"],[1530991559994,"^1;","^4F","~$goog.debug.LogManager","^42","~$goog.debug.Logger"],["^1Q","goog/structs/collection.js"],[1530991559994,"^1;"],["^1Q","goog/events/browserevent.js"],[1530991559994,"^1;","^3:","^3N","~$goog.events.EventType","^2K","^2E"],["^1Q","goog/math/integer.js"],[1530991559994,"^1;"],["^1Q","goog/structs/node.js"],[1530991559994,"^1;"],["^2:","^3T"],[1535586406000],["^1Q","clojure/set.cljs"],[1534380137690,"^1;","^1:"],["^1Q","goog/uri/utils.js"],[1530991559994,"^1;","^2C","^2D","^29"],["^1Q","taoensso/timbre.cljs"],[1535586406375,"^1;","^1:","^1B","^3X","~$taoensso.timbre.appenders.core"],["^1Q","goog/json/json.js"],[1530991559994,"^1;"],["^1Q","goog/events/listenable.js"],[1530991559994,"^1;","^4H"],["^1Q","goog/net/xmlhttpfactory.js"],[1530991559994,"^1;","^3K"],["^1Q","goog/net/xmlhttp.js"],[1530991559994,"^1;","^2D","~$goog.net.WrapperXmlHttpFactory","^3L"],["^1Q","cljs/test.cljs"],[1534380137690,"~$shadow.test.env","^1;","^1:","^1B","^41"],["^1Q","goog/net/xhrlike.js"],[1530991559994,"^1;"],["^2:","^2S"],[1534380137000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","huginn/mqtt.cljs","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H","^I","^H","^J","^H","^K","^H","^L","^H","^M","^H","^N","^H","^O","^H","^P","^H","^Q","^H","^R","^H","^S","^H","^T","^H","^U","^H","^V","^H","^W","^H","^X","^H","^Y","^H"],"^Z",["^[",[]],"~:shadow/js-access-properties",["^[",["cpuTemperature","connect"]],"^10","^11","^14",null,"^15",["^ ","^?","^?","~$p","^16","^16","^16","^17","^H","~$a","^C","^18","^A","^19","^19","^1:","^1:","^1;","^1;","^C","^C","^@","^A","^1<","^19","^1=","^1=","^1>","^1>","^1?","^1=","~$s","^1@","^>","^?","^1A","^1>","^H","^H","^A","^A","^1B","^1B","^1C","^1B","^1@","^1@"],"^1D",["^[",["^1E"]],"~:shadow/js-access-global",["^[",["Object"]],"^1F",null,"~:defs",["^ ","~$tele-send",["^ ","^10","~$huginn.mqtt/tele-send","^6","huginn/mqtt.cljs","^7",277,"^8",1,"^9",277,"^:",15,"^5",["^ ","^6","huginn/mqtt.cljs","^7",277,"^8",6,"^9",277,"^:",15],"~:tag","~$any"],"~$publish-async",["^ ","^10","~$huginn.mqtt/publish-async","^6","huginn/mqtt.cljs","^7",115,"^8",1,"^9",115,"^:",23,"~:declared",true,"^5",["^ ","^6","huginn/mqtt.cljs","^7",115,"^8",10,"^9",115,"^:",23,"^4[",true]],"~$build-client",["^ ","~:protocol-inline",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",102,"^8",7,"^9",102,"^:",19,"~:arglists",["^1I",["~$quote",["^1I",[["~$opts"]]]]]],"^10","~$huginn.mqtt/build-client","~:variadic",false,"^6","huginn/mqtt.cljs","^:",19,"~:method-params",["^1I",[["^54"]]],"~:protocol-impl",null,"~:arglists-meta",["^1I",[null,null]],"^8",1,"^7",102,"^9",102,"~:max-fixed-arity",1,"~:fn-var",true,"^52",["^1I",["^53",["^1I",[["^54"]]]]]],"~$client-id",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",48,"^8",7,"^9",48,"^:",16,"^52",["^1I",["^53",["^1I",[[["^ ","~:keys",["~$projectId","~$registryId","~$cloudRegion","~$deviceId"],"^1K","^54"]]]]]],"~:doc","Builds a client id used to identify the device this message is\n  comming from"],"^10","~$huginn.mqtt/client-id","^56",false,"^6","huginn/mqtt.cljs","^:",16,"^57",["^1I",[["~$p__39876"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",48,"^9",48,"^5:",1,"^5;",true,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5>","^5?","^5@","^5A"],"^1K","^54"]]]]]],"^5B","Builds a client id used to identify the device this message is\n  comming from"],"~$prep-temps",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",155,"^8",7,"^9",155,"^:",17,"^52",["^1I",["^53",["^1I",[["^54","~$data"]]]]],"^5B","pulls the data out of the systeminformation library and wrapping them up\n  to be sent into mqtt"],"^10","~$huginn.mqtt/prep-temps","^56",false,"^6","huginn/mqtt.cljs","^:",17,"^57",["^1I",[["^54","^5F"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",155,"^9",155,"^5:",2,"^5;",true,"^52",["^1I",["^53",["^1I",[["^54","^5F"]]]]],"^5B","pulls the data out of the systeminformation library and wrapping them up\n  to be sent into mqtt"],"~$publisher",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",187,"^8",7,"^9",187,"^:",16,"^52",["^1I",["^53",["^1I",[["~$client-atom","~$send-chan"]]]]],"^5B","main loop that pushes packets added to the send-chan to google iot core"],"^10","~$huginn.mqtt/publisher","^56",false,"^6","huginn/mqtt.cljs","^:",16,"^57",["^1I",[["^5I","^5J"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",187,"^9",187,"^5:",2,"^5;",true,"^52",["^1I",["^53",["^1I",[["^5I","^5J"]]]]],"^5B","main loop that pushes packets added to the send-chan to google iot core"],"~$init-client",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",123,"^8",7,"^9",123,"^:",18,"^52",["^1I",["^53",["^1I",[["^54","~$send","~$recv"]]]]]],"^10","~$huginn.mqtt/init-client","^56",false,"^6","huginn/mqtt.cljs","^:",18,"^57",["^1I",[["^54","^5M","^5N"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",123,"^9",123,"^5:",3,"^5;",true,"^52",["^1I",["^53",["^1I",[["^54","^5M","^5N"]]]]]],"~$payload-root",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",135,"^8",7,"^9",135,"^:",19,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5?","~$userId","^5A"],"^1K","^54"]]]]]],"^5B","builds the prefix of the actual values being sent\n  (str (payload-root config) sensor-name /  sensor-value)"],"^10","~$huginn.mqtt/payload-root","^56",false,"^6","huginn/mqtt.cljs","^:",19,"^57",["^1I",[["~$p__39908"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",135,"^9",135,"^5:",1,"^5;",true,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5?","^5Q","^5A"],"^1K","^54"]]]]]],"^5B","builds the prefix of the actual values being sent\n  (str (payload-root config) sensor-name /  sensor-value)"],"~$config-chan",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",60,"^8",7,"^9",60,"^:",18,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5A"],"^1K","^54"]]]]]],"^5B","google give each device two channeles, a state channel (the config channel)\n  and a telemetry channel (the one that we push all our data over). The name of\n  these channels are determined by google iot core."],"^10","~$huginn.mqtt/config-chan","^56",false,"^6","huginn/mqtt.cljs","^:",18,"^57",["^1I",[["~$p__39880"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",60,"^9",60,"^5:",1,"^5;",true,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5A"],"^1K","^54"]]]]]],"^5B","google give each device two channeles, a state channel (the config channel)\n  and a telemetry channel (the one that we push all our data over). The name of\n  these channels are determined by google iot core."],"~$mqtt-topic",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",146,"^8",7,"^9",146,"^:",17,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5A"],"^1K","^54"],"~$msg-type"]]]]],"^5B","msg-type can be 'state' for state updates\n   or 'events' to publish telemetry"],"^10","~$huginn.mqtt/mqtt-topic","^56",false,"^6","huginn/mqtt.cljs","^:",17,"^57",["^1I",[["~$p__39911","^5X"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",146,"^9",146,"^5:",2,"^5;",true,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5A"],"^1K","^54"],"^5X"]]]]],"^5B","msg-type can be 'state' for state updates\n   or 'events' to publish telemetry"],"~$tele-chan",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",222,"^8",7,"^9",222,"^:",16,"^52",["^1I",["^53",["^1I",[["^54"]]]]],"^5B","takes the client opts and builds a channel with system telementry\n  values on it (cpu tempratures specifically)"],"^10","~$huginn.mqtt/tele-chan","^56",false,"^6","huginn/mqtt.cljs","^:",16,"^57",["^1I",[["^54"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",222,"^9",222,"^5:",1,"^5;",true,"^52",["^1I",["^53",["^1I",[["^54"]]]]],"^5B","takes the client opts and builds a channel with system telementry\n  values on it (cpu tempratures specifically)"],"~$client-handlers",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",73,"^8",7,"^9",73,"^:",22,"^52",["^1I",["^53",["^1I",[["~$success-fn","~$fail","^5M","^5N"]]]]],"^5B","builds a map of handels to attach to the mqtt object"],"^10","~$huginn.mqtt/client-handlers","^56",false,"^6","huginn/mqtt.cljs","^:",22,"^57",["^1I",[["^62","^63","^5M","^5N"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",73,"^9",73,"^5:",4,"^5;",true,"^52",["^1I",["^53",["^1I",[["^62","^63","^5M","^5N"]]]]],"^5B","builds a map of handels to attach to the mqtt object"],"~$kill-it",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",330,"^8",7,"^9",330,"^:",14,"^52",["^1I",["^53",["^1I",[["~$system-promise"]]]]],"^5B","Feed the system promise to this and it will kill it"],"^10","~$huginn.mqtt/kill-it","^56",false,"^6","huginn/mqtt.cljs","^:",14,"^57",["^1I",[["^66"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",330,"^9",330,"^5:",1,"^5;",true,"^52",["^1I",["^53",["^1I",[["^66"]]]]],"^5B","Feed the system promise to this and it will kill it"],"~$state-send",["^ ","^10","~$huginn.mqtt/state-send","^6","huginn/mqtt.cljs","^7",274,"^8",1,"^9",274,"^:",16,"^5",["^ ","^6","huginn/mqtt.cljs","^7",274,"^8",6,"^9",274,"^:",16],"^4W","^4X"],"~$publish-one",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",181,"^8",7,"^9",181,"^:",18,"^52",["^1I",["^53",["^1I",[["~$client",["^ ","^5=",["~$topic","~$payload","~$qos"],"^1K","~$p"]]]]]],"^5B","Publises one mqtt packet to the client"],"^10","~$huginn.mqtt/publish-one","^56",false,"^6","huginn/mqtt.cljs","^:",18,"^57",["^1I",[["^6;","~$p__39915"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",181,"^9",181,"^5:",2,"^5;",true,"^52",["^1I",["^53",["^1I",[["^6;",["^ ","^5=",["^6<","^6=","^6>"],"^1K","~$p"]]]]]],"^5B","Publises one mqtt packet to the client"],"~$system-function",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",288,"^8",7,"^9",288,"^:",22,"^52",["^1I",["^53",["^1I",[["^54"]]]]],"^5B","the heart of the system lies here.\n  This function takes options (config/default-options works well)\n  It returns a map\n  This map has\n  :send-chan A channel you can use to directly send messages of mqtt, must be of the\n  form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n  :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n  :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n  (google publishes these values to a differnt pubsub channel then device telemetry)\n  :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n  are sent in the same batch, the same is true for stat-chan.\n  :client-atom, contains the current version of the mqtt client. This is an atom so\n  that the client-refersher can refresh the authentication token and swap it.\n  this pattern also ensures only one client\n\n  payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you"],"^10","~$huginn.mqtt/system-function","^56",false,"^6","huginn/mqtt.cljs","^:",22,"^57",["^1I",[["^54"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",288,"^9",288,"^5:",1,"^5;",true,"^52",["^1I",["^53",["^1I",[["^54"]]]]],"^5B","the heart of the system lies here.\n  This function takes options (config/default-options works well)\n  It returns a map\n  This map has\n  :send-chan A channel you can use to directly send messages of mqtt, must be of the\n  form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n  :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n  :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n  (google publishes these values to a differnt pubsub channel then device telemetry)\n  :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n  are sent in the same batch, the same is true for stat-chan.\n  :client-atom, contains the current version of the mqtt client. This is an atom so\n  that the client-refersher can refresh the authentication token and swap it.\n  this pattern also ensures only one client\n\n  payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you"],"~$stop",["^ ","^10","~$huginn.mqtt/stop","^6","huginn/mqtt.cljs","^7",177,"^8",1,"^9",177,"^:",10,"^5",["^ ","^6","huginn/mqtt.cljs","^7",177,"^8",6,"^9",177,"^:",10],"^4W","^4X"],"~$sender",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",247,"^8",7,"^9",247,"^:",13,"^52",["^1I",["^53",["^1I",[["~$topic-name","^54","^5M","~$t-chan"]]]]],"^5B","takes information for the tele-chan in the form of collections of\n  mqtt-packets and assignes a default topic if a subfolder is set,\n  adds a default qos. Then takes the resulting structures and puts\n  them on to the send channel. waits for :delayMs between collections "],"^10","~$huginn.mqtt/sender","^56",false,"^6","huginn/mqtt.cljs","^:",13,"^57",["^1I",[["^6F","^54","^5M","^6G"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",247,"^9",247,"^5:",4,"^5;",true,"^52",["^1I",["^53",["^1I",[["^6F","^54","^5M","^6G"]]]]],"^5B","takes information for the tele-chan in the form of collections of\n  mqtt-packets and assignes a default topic if a subfolder is set,\n  adds a default qos. Then takes the resulting structures and puts\n  them on to the send channel. waits for :delayMs between collections "],"~$client-refresher",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",195,"^8",7,"^9",195,"^:",23,"^52",["^1I",["^53",["^1I",[["^5I",["^ ","^5=",["~$tokenExpMins","~$delayMs"],"^1K","^54"],"^5M","^5N"]]]]],"^5B","loops and refreshs the client atom every token experation.\n  Mqtt requires that you refresh your token frequently (less then 20 mins)"],"^10","~$huginn.mqtt/client-refresher","^56",false,"^6","huginn/mqtt.cljs","^:",23,"^57",["^1I",[["^5I","~$p__39936","^5M","^5N"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",195,"^9",195,"^5:",4,"^5;",true,"^52",["^1I",["^53",["^1I",[["^5I",["^ ","^5=",["^6J","^6K"],"^1K","^54"],"^5M","^5N"]]]]],"^5B","loops and refreshs the client atom every token experation.\n  Mqtt requires that you refresh your token frequently (less then 20 mins)"],"~$add-handlers",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",93,"^8",7,"^9",93,"^:",19,"^52",["^1I",["^53",["^1I",[["^6;","~$handlers"]]]]],"^5B","takes a map of handlers and attaches them to the mqtt object"],"^10","~$huginn.mqtt/add-handlers","^56",false,"^6","huginn/mqtt.cljs","^:",19,"^57",["^1I",[["^6;","^6O"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",93,"^9",93,"^5:",2,"^5;",true,"^52",["^1I",["^53",["^1I",[["^6;","^6O"]]]]],"^5B","takes a map of handlers and attaches them to the mqtt object"],"~$clean-up",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",280,"^8",7,"^9",280,"^:",15,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5J","~$recv-chan","~$telemetry-chan","~$state-chan","^5I"],"^1K","~$system"]]]]]]],"^10","~$huginn.mqtt/clean-up","^56",false,"^6","huginn/mqtt.cljs","^:",15,"^57",["^1I",[["~$p__40059"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",280,"^9",280,"^5:",1,"^5;",true,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5J","^6R","^6S","^6T","^5I"],"^1K","^6U"]]]]]]]],"^1G",["^ ","^H","^H","^17","^H","^1:","^1:","~$a","^C","^C","^C","~$s","^1@","^1@","^1@"],"~:cljs.analyzer/constants",["^ ","^1D",["^[",["~:client-fail","~:args","~:req-un","~:opt-un","~$p1__39874#","~:huginn.mqtt/payload","~:qos","~$cljs.core/<","~:recv-chan","~:ret","~:gfn","~:cloudRegion","~:send-chan","~:recv","~:pred-exprs","~:keys-pred","~:huginn.mqtt/client-config","~$p1__39873#","^5O","~:payload","~:opt-keys","~$cljs.core/partial","~:huginn.mqtt/cloudRegion","~:else","~$cljs.core/count","~:state-chan","~$cljs.spec.alpha/and","~$cljs.spec.alpha/coll-of","~$cljs.spec.alpha/cat","~:cljs.spec.alpha/kind-form","~:subfolder","~:iat-time","^5C","~:delayMs","~:deviceId","~:telemetry-chan","~$cljs.core/string?","~:t-chan","~:req-specs","~:time","~:huginn.mqtt/topic-type","~:registryId","~:client","~$cljs.spec.alpha/fspec","~:recur","~:debug","~:topic","~:huginn.mqtt/ts","~$cljs.core/contains?","^55","~$cljs.core/map?","~:cljs.spec.alpha/cpred","~$%","~$cljs.core/float?","~:tokenExpMins","~$cljs.core/fn?","~:huginn.mqtt/chan","~:topic-name","~:ts","~$cljs.spec.alpha/keys","~$cljs.core.async/chan","~:huginn.mqtt/projectId","^6H","~:req","~:client-atom","~:msg-type","~:fail","~:huginn.mqtt/mqtt-packet","~$fn*","^5U","^5G","^5Y","~:opts","~:req-keys","~$cljs.core/fn","~:info","~:send","~:opt-specs","~:huginn.mqtt/registryId","~:userId","^64","~:pred-forms","~:pause","~:error","~:projectId","~:huginn.mqtt/deviceId","~$promesa.core/promise?","~:auto","~:huginn.mqtt/subfolder","~:p","~:cljs.spec.alpha/conform-all","^6?","~:success-fn","~$cljs.core/any?","^60","~:message","~$cljs.core/instance?","~:packet","~:cljs.spec.alpha/describe","~:opt","~:data"]],"~:order",["^8:","^7O","^8G","^7B","^8M","^85","^7A","^8U","^89","^7S","^7=","^88","^6[","^70","^77","^7;","^7<","^7@","^7Q","^8;","^8B","^8F","^8I","^8X","^8L","^7T","^78","^7M","^8C","~$%","^80","^7[","^72","^7F","^8@","^7>","^74","^7D","^8P","^71","^7Z","^82","^8?","^7?","^7J","^87","^5C","^7V","^6Z","^76","^5U","^64","^7H","^8R","^84","^8>","^8E","^7:","^8S","^7X","~:p","^8O","^8K","^7Y","^8T","^8V","^7W","^7C","^55","^7U","^7K","^5O","^8A","^8N","^7R","^6Y","^8H","^5Y","^8=","^5G","^8Y","^7G","^7I","^81","^8Q","^8W","^6?","^73","^83","^7L","^8D","^8J","^60","^6H","^86","^7P","^79","^75","^7N","^7E","^8<"]],"^1M",["^ ","^1E",["^[",[]]],"^1N",["^ "],"^1O",["^1;","^1:","^16","^1B","^1>","^?","^19","^H","^C","^A","^1@","^1="]],"^13","^11","~:ns-specs",["^ ","^72",["^1I",["^7F","^7O",["^1I",["^8@",["^7>"],["^1I",["^74",["^1I",["^7D","^7>"]],200000]]]]]],"^7=",["^1I",["^88","^6[",["^8:","^8G","^7B","^8M"]]],"^5O",["^1I",["^7V","^6Z",["^1I",["^7H","^8A","^7=","^8E","^85","^7:","^85"]],"^76","^8N"]],"^7B","^7O","^5C",["^1I",["^7V","^6Z","^7=","^76","^7O"]],"^7S",["^[",["events","state"]],"^7Z","^82","^55",["^1I",["^7V","^6Z","^7="]],"^85",["^1I",["^7A","^8U",["^1I",["^89"]]]],"^8:","^7O","^6H",["^1I",["^7V","^6Z",["^1I",["^7H","^86","^7S","^8A","^7=","^8E","^85","^7P","^85"]]]],"^8?",["^1I",["^88","^6[",["^72","^8P","^7Z"]]],"^5U",["^1I",["^7V","^6Z",["^1I",["^88","^8;",["^8M"]]],"^76","^7O"]],"^5G",["^1I",["^7V","^6Z",["^1I",["^7H","^8A","^7=","^8Y","^8S"]],"^76",["^1I",["^7G","^8?"]]]],"^5Y",["^1I",["^7V","^6Z",["^1I",["^7H","^8A","^7=","^8=","^7S"]],"^76","^7O"]],"^8G","^7O","^64",["^1I",["^7V","^6Z",["^1I",["^7H","^8R","^84","^8>","^84","^8E","^85","^7:","^85"]]]],"^8M","^7O","^8P",["^1I",["^7F","^7O",["^1I",["^8@",["^71"],["^1I",["^74",["^1I",["^7D","^71"]],200]]]]]],"^6?",["^1I",["^7V","^6Z",["^1I",["^7H","^7U","^8S","^8V","^8?"]]]],"^60",["^1I",["^7V","^6Z","^7=","^76","^85"]]],"~:ns-speced-vars",["^5O","^5C","^55","^6H","^5U","^5G","^5Y","^64","^6?","^60"],"~:compiler-options",["^21",[["^91","~:static-fns"],true,["^91","~:elide-asserts"],false,["^91","~:optimize-constants"],null,["^91","~:external-config"],null,["^91","~:tooling-config"],null,["^91","~:emit-constants"],null,["^91","~:infer-externs"],true,["^91","^1V"],null,["~:js-options","~:js-provider"],"^1E",["~:mode"],"~:dev",["^91","~:fn-invoke-direct"],null,["^91","~:source-map"],"/dev/null"]]]