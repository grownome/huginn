["^ ","~:output",["^ ","~:js","goog.provide('promesa.core');\ngoog.require('cljs.core');\ngoog.require('promesa.protocols');\ngoog.require('promesa.impl');\ngoog.require('promesa.impl.scheduler');\npromesa.core.Promise = promesa.impl.Promise;\n/**\n * Schedule a callable to be executed after the `ms` delay\n *   is reached.\n * \n *   In JVM it uses a scheduled executor service and in JS\n *   it uses the `setTimeout` function.\n */\npromesa.core.schedule = (function promesa$core$schedule(ms,func){\nreturn promesa.impl.scheduler.schedule(ms,func);\n});\n/**\n * Return a resolved promise with provided value.\n */\npromesa.core.resolved = (function promesa$core$resolved(v){\nreturn promesa.impl.resolved(v);\n});\n/**\n * Return a rejected promise with provided reason.\n */\npromesa.core.rejected = (function promesa$core$rejected(v){\nreturn promesa.impl.rejected(v);\n});\n/**\n * The promise constructor.\n */\npromesa.core.promise = (function promesa$core$promise(v){\nreturn promesa.protocols._promise(v);\n});\n/**\n * Return true if `v` is a promise instance.\n */\npromesa.core.promise_QMARK_ = (function promesa$core$promise_QMARK_(v){\nreturn (v instanceof promesa.core.Promise);\n});\n/**\n * Returns true if promise `p` is already fulfilled.\n */\npromesa.core.resolved_QMARK_ = (function promesa$core$resolved_QMARK_(p){\nreturn promesa.protocols._resolved_QMARK_(p);\n});\n/**\n * Returns true if promise `p` is already rejected.\n */\npromesa.core.rejected_QMARK_ = (function promesa$core$rejected_QMARK_(p){\nreturn promesa.protocols._rejected_QMARK_(p);\n});\n/**\n * Returns true if promise `p` is stil pending.\n */\npromesa.core.pending_QMARK_ = (function promesa$core$pending_QMARK_(p){\nreturn promesa.protocols._pending_QMARK_(p);\n});\n/**\n * Returns the current promise value.\n */\npromesa.core.extract = (function promesa$core$extract(p){\nreturn promesa.protocols._extract(p);\n});\n/**\n * Returns true if promise `p` is already done.\n */\npromesa.core.done_QMARK_ = cljs.core.complement(promesa.core.pending_QMARK_);\n/**\n * Apply a function to the promise value and\n *   return a new promise with the result.\n */\npromesa.core.map = (function promesa$core$map(f,p){\nreturn promesa.protocols._map(p,f);\n});\n/**\n * Same as `map` but removes one level of\n *   promise neesting. Useful when the map function\n *   returns a promise instead of value.\n * \n *   In JS environment this function is analogous\n *   to `map` because the promise abstraction overloads\n *   the `map` operator.\n */\npromesa.core.mapcat = (function promesa$core$mapcat(f,p){\nreturn promesa.protocols._bind(p,f);\n});\n/**\n * A chain helper for promises.\n */\npromesa.core.bind = (function promesa$core$bind(p,f){\nreturn promesa.protocols._bind(p,f);\n});\n/**\n * Similar to `map` but with parameters inverted\n *   for convenience and for familiarity with\n *   javascript's promises `.then` operator.\n * \n *   Unlike Clojure's `map`, will resolve any promises\n *   returned  by `f`.\n */\npromesa.core.then = (function promesa$core$then(p,f){\nreturn promesa.protocols._map(p,f);\n});\n/**\n * Like then but accepts multiple parameters.\n */\npromesa.core.chain = (function promesa$core$chain(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___4730 = arguments.length;\nvar i__4532__auto___4731 = (0);\nwhile(true){\nif((i__4532__auto___4731 < len__4531__auto___4730)){\nargs__4534__auto__.push((arguments[i__4532__auto___4731]));\n\nvar G__4732 = (i__4532__auto___4731 + (1));\ni__4532__auto___4731 = G__4732;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\npromesa.core.chain.cljs$core$IFn$_invoke$arity$variadic = (function (p,funcs){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__4725_SHARP_,p2__4726_SHARP_){\nreturn promesa.core.then(p1__4725_SHARP_,p2__4726_SHARP_);\n}),p,funcs);\n});\n\npromesa.core.chain.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\npromesa.core.chain.cljs$lang$applyTo = (function (seq4728){\nvar G__4729 = cljs.core.first(seq4728);\nvar seq4728__$1 = cljs.core.next(seq4728);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4729,seq4728__$1);\n});\n\npromesa.core.branch = (function promesa$core$branch(p,success,failure){\nreturn promesa.protocols._catch(promesa.protocols._map(p,success),failure);\n});\n/**\n * Catch all promise chain helper.\n */\npromesa.core.catch$ = (function promesa$core$catch(var_args){\nvar G__4739 = arguments.length;\nswitch (G__4739) {\ncase 2:\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.catch$.cljs$core$IFn$_invoke$arity$2 = (function (p,f){\nreturn promesa.protocols._catch(p,f);\n});\n\npromesa.core.catch$.cljs$core$IFn$_invoke$arity$3 = (function (p,pred_or_type,f){\nvar accept_QMARK_ = ((cljs.core.ifn_QMARK_(pred_or_type))?pred_or_type:(function (p1__4736_SHARP_){\nreturn (p1__4736_SHARP_ instanceof pred_or_type);\n}));\nreturn promesa.protocols._catch(p,((function (accept_QMARK_){\nreturn (function (e){\nif(cljs.core.truth_((accept_QMARK_.cljs$core$IFn$_invoke$arity$1 ? accept_QMARK_.cljs$core$IFn$_invoke$arity$1(e) : accept_QMARK_.call(null,e)))){\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(e) : f.call(null,e));\n} else {\nreturn promesa.impl.rejected(e);\n}\n});})(accept_QMARK_))\n);\n});\n\npromesa.core.catch$.cljs$lang$maxFixedArity = 3;\n\n/**\n * Same as `catch` but with parameters inverted.\n */\npromesa.core.error = (function promesa$core$error(var_args){\nvar G__4746 = arguments.length;\nswitch (G__4746) {\ncase 2:\nreturn promesa.core.error.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn promesa.core.error.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.error.cljs$core$IFn$_invoke$arity$2 = (function (f,p){\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2(p,f);\n});\n\npromesa.core.error.cljs$core$IFn$_invoke$arity$3 = (function (f,type,p){\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$3(p,type,f);\n});\n\npromesa.core.error.cljs$lang$maxFixedArity = 3;\n\n/**\n * A short alias for `error` function.\n */\npromesa.core.err = promesa.core.error;\n/**\n * Attach handler to promise that will be\n *   executed independently if promise is\n *   resolved or rejected.\n */\npromesa.core.finally$ = (function promesa$core$finally(p,callback){\nreturn p.lastly(callback);\n});\n/**\n * Given an array of promises, return a promise\n *   that is fulfilled  when all the items in the\n *   array are fulfilled.\n * \n *   Example:\n * \n *   (-> (all [(promise :first-promise)\n *          (promise :second-promise)]\n *    (then (fn [[first-result second-result]]))\n *     (println (str first-result \", \" second-result)\n * \n *   Will print out\n *   :first-promise, :second-promise.\n * \n *   If at least one of the promises is rejected, the resulting promise will be\n *   rejected.\n */\npromesa.core.all = (function promesa$core$all(promises){\nreturn promesa.core.then(promesa.core.Promise.all(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(promises)),cljs.core.vec);\n});\n/**\n * Given an array of promises, return a promise\n *   that is fulfilled when first one item in the\n *   array is fulfilled.\n */\npromesa.core.any = (function promesa$core$any(promises){\nreturn promesa.core.Promise.any(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(promises));\n});\n/**\n * Cancel the promise.\n */\npromesa.core.cancel_BANG_ = (function promesa$core$cancel_BANG_(p){\npromesa.protocols._cancel(p);\n\nreturn p;\n});\n/**\n * Return true if `v` is a cancelled promise.\n */\npromesa.core.cancelled_QMARK_ = (function promesa$core$cancelled_QMARK_(v){\nreturn promesa.protocols._cancelled_QMARK_(v);\n});\n/**\n * Given a function that accepts a callback as the last argument return other\n *   function that returns a promise. Callback is expected to take single\n *   parameter (result of a computation).\n */\npromesa.core.promisify = (function promesa$core$promisify(callable){\nreturn (function() { \nvar G__4760__delegate = function (args){\nreturn promesa.core.promise((function (resolve,reject){\nvar args__$1 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(args),resolve);\ntry{return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(callable,args__$1);\n}catch (e4759){if((e4759 instanceof Error)){\nvar e = e4759;\nreturn (reject.cljs$core$IFn$_invoke$arity$1 ? reject.cljs$core$IFn$_invoke$arity$1(e) : reject.call(null,e));\n} else {\nthrow e4759;\n\n}\n}}));\n};\nvar G__4760 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__4771__i = 0, G__4771__a = new Array(arguments.length -  0);\nwhile (G__4771__i < G__4771__a.length) {G__4771__a[G__4771__i] = arguments[G__4771__i + 0]; ++G__4771__i;}\n  args = new cljs.core.IndexedSeq(G__4771__a,0,null);\n} \nreturn G__4760__delegate.call(this,args);};\nG__4760.cljs$lang$maxFixedArity = 0;\nG__4760.cljs$lang$applyTo = (function (arglist__4774){\nvar args = cljs.core.seq(arglist__4774);\nreturn G__4760__delegate(args);\n});\nG__4760.cljs$core$IFn$_invoke$arity$variadic = G__4760__delegate;\nreturn G__4760;\n})()\n;\n});\n/**\n * Returns a cancellable promise that will be fulfilled\n *   with this promise's fulfillment value or rejection reason.\n *   However, if this promise is not fulfilled or rejected\n *   within `ms` milliseconds, the returned promise is cancelled\n *   with a TimeoutError\n */\npromesa.core.timeout = (function promesa$core$timeout(var_args){\nvar G__4780 = arguments.length;\nswitch (G__4780) {\ncase 2:\nreturn promesa.core.timeout.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn promesa.core.timeout.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.timeout.cljs$core$IFn$_invoke$arity$2 = (function (p,t){\nreturn p.timeout(t);\n});\n\npromesa.core.timeout.cljs$core$IFn$_invoke$arity$3 = (function (p,t,v){\nreturn p.timeout(t,v);\n});\n\npromesa.core.timeout.cljs$lang$maxFixedArity = 3;\n\n/**\n * Given a timeout in miliseconds and optional\n *   value, returns a promise that will fulfilled\n *   with provided value (or nil) after the\n *   time is reached.\n */\npromesa.core.delay = (function promesa$core$delay(var_args){\nvar G__4787 = arguments.length;\nswitch (G__4787) {\ncase 1:\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\npromesa.core.delay.cljs$core$IFn$_invoke$arity$1 = (function (t){\nreturn promesa.core.delay.cljs$core$IFn$_invoke$arity$2(t,null);\n});\n\npromesa.core.delay.cljs$core$IFn$_invoke$arity$2 = (function (t,v){\nreturn promesa.core.promise((function (resolve,reject){\nreturn promesa.core.schedule(t,(function (){\nreturn (resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(v) : resolve.call(null,v));\n}));\n}));\n});\n\npromesa.core.delay.cljs$lang$maxFixedArity = 2;\n\n/**\n * A helper for start promise chain without worry about\n *   synchronous or asynchronous exceptions. Returns a promise\n *   resolved with the return value of the callback.\n */\npromesa.core.attempt = (function promesa$core$attempt(callback){\nreturn promesa.core.promise((function (resolve){\nvar G__4791 = (callback.cljs$core$IFn$_invoke$arity$0 ? callback.cljs$core$IFn$_invoke$arity$0() : callback.call(null));\nreturn (resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(G__4791) : resolve.call(null,G__4791));\n}));\n});\npromesa.core.await$ = (function promesa$core$await(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___4793 = arguments.length;\nvar i__4532__auto___4794 = (0);\nwhile(true){\nif((i__4532__auto___4794 < len__4531__auto___4793)){\nargs__4534__auto__.push((arguments[i__4532__auto___4794]));\n\nvar G__4795 = (i__4532__auto___4794 + (1));\ni__4532__auto___4794 = G__4795;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((0) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((0)),(0),null)):null);\nreturn promesa.core.await$.cljs$core$IFn$_invoke$arity$variadic(argseq__4535__auto__);\n});\n\npromesa.core.await$.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Should be only used in alet macro.\",cljs.core.PersistentArrayMap.EMPTY);\n});\n\npromesa.core.await$.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\npromesa.core.await$.cljs$lang$applyTo = (function (seq4792){\nvar self__4519__auto__ = this;\nreturn self__4519__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4792));\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","promesa/core.cljc","~:line",25,"~:column",5,"~:end-line",25,"~:end-column",17],"~:ns-aliases",["^ ","~$jsonwebtoken","~$shadow.js.shim.module$jsonwebtoken","~$mqtt","~$shadow.js.shim.module$mqtt","~$clojure.core.async","~$cljs.core.async","~$systeminformation","~$shadow.js.shim.module$systeminformation","~$raspicam","~$shadow.js.shim.module$raspicam"],"~:use-macros",null,"~:excludes",["~#set",["~$map","~$delay","~$mapcat","~$await","~$spread","~$promise"]],"~:name","~$promesa.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$promesa.protocols","^U","~$pt","^U","~$promesa.impl","^W","~$impl","^W","~$promesa.impl.scheduler","^Y","~$ps","^Y","~$cljs.core","^[","~$goog","^10"],"~:seen",["^H",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^[","^["],"~:form",["~#list",["~$ns","^P",["^16",["~:refer-clojure","~:exclude",["^J","^M","^N","^L","^I","^K"]]],["^16",["^12",["^U","~:as","^V"],["^W","^1:","^X"],["^Y","^1:","^Z"]]]]],"~:flags",["^ ","^12",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^10","^[","^U","^W","^Y"]],"^R","^P","~:resource-id",["~:shadow.build.classpath/resource","promesa/core.cljc"],"~:compiled-at",1535670016922,"~:resource-name","promesa/core.cljc","~:warnings",[],"~:source",";; Copyright (c) 2015-2016 Andrey Antukh <niwi@niwi.nz>\n;; All rights reserved.\n;;\n;; Redistribution and use in source and binary forms, with or without\n;; modification, are permitted provided that the following conditions\n;; are met:\n;;\n;; 1. Redistributions of source code must retain the above copyright\n;;    notice, this list of conditions and the following disclaimer.\n;; 2. Redistributions in binary form must reproduce the above copyright\n;;    notice, this list of conditions and the following disclaimer in the\n;;    documentation and/or other materials provided with the distribution.\n;;\n;; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n;; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n;; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n;; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n;; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n;; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n;; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n;; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n;; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n;; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n(ns promesa.core\n  (:refer-clojure :exclude [delay spread promise await map mapcat])\n  (:require [promesa.protocols :as pt]\n            [promesa.impl :as impl]\n            [promesa.impl.scheduler :as ps])\n  #?(:clj\n     (:import java.util.concurrent.CompletableFuture\n              java.util.concurrent.CompletionStage)))\n\n;; --- Global Constants\n\n#?(:clj\n   (defn set-executor!\n     \"Replace the default executor instance with\n     your own instance.\"\n     [executor]\n     (alter-var-root #'impl/+executor+ (constantly executor))))\n\n#?(:cljs (def ^:const Promise impl/Promise))\n\n;; --- Scheduling helpers\n\n(defn schedule\n  \"Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function.\"\n  [ms func]\n  (ps/schedule ms func))\n\n;; --- Promise\n\n(defn resolved\n  \"Return a resolved promise with provided value.\"\n  [v]\n  (impl/resolved v))\n\n(defn rejected\n  \"Return a rejected promise with provided reason.\"\n  [v]\n  (impl/rejected v))\n\n(defn promise\n  \"The promise constructor.\"\n  [v]\n  (pt/-promise v))\n\n(defn promise?\n  \"Return true if `v` is a promise instance.\"\n  [v]\n  #?(:clj (instance? CompletionStage v)\n     :cljs (instance? Promise v)))\n\n;; Predicates\n\n(defn resolved?\n  \"Returns true if promise `p` is already fulfilled.\"\n  [p]\n  (pt/-resolved? p))\n\n(defn rejected?\n  \"Returns true if promise `p` is already rejected.\"\n  [p]\n  (pt/-rejected? p))\n\n(defn pending?\n  \"Returns true if promise `p` is stil pending.\"\n  [p]\n  (pt/-pending? p))\n\n(defn extract\n  \"Returns the current promise value.\"\n  [p]\n  (pt/-extract p))\n\n(def done?\n  \"Returns true if promise `p` is already done.\"\n  (complement pending?))\n\n;; Chaining\n\n(defn map\n  \"Apply a function to the promise value and\n  return a new promise with the result.\"\n  [f p]\n  (pt/-map p f))\n\n(defn mapcat\n  \"Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator.\"\n  [f p]\n  (pt/-bind p f))\n\n(defn bind\n  \"A chain helper for promises.\"\n  [p f]\n  (pt/-bind p f))\n\n(defn then\n  \"Similar to `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator.\n\n  Unlike Clojure's `map`, will resolve any promises\n  returned  by `f`.\"\n  [p f]\n  #?(:cljs (pt/-map p f)\n     :clj  (pt/-bind p (fn promise-wrap [in]\n                         (let [out (f in)]\n                           (if (promise? out)\n                             out\n                             (promise out)))))))\n\n(defn chain\n  \"Like then but accepts multiple parameters.\"\n  [p & funcs]\n  (reduce #(then %1 %2) p funcs))\n\n(defn branch\n  [p success failure]\n  (-> p\n      (pt/-map success)\n      (pt/-catch failure)))\n\n(defn catch\n  \"Catch all promise chain helper.\"\n  ([p f]\n   (pt/-catch p f))\n  ([p pred-or-type f]\n   (let [accept? (if (ifn? pred-or-type)\n                   pred-or-type\n                   #(instance? pred-or-type %))]\n     (pt/-catch p (fn [e]\n                    (if (accept? e)\n                      (f e)\n                      (impl/rejected e)))))))\n\n(defn error\n  \"Same as `catch` but with parameters inverted.\"\n  ([f p] (catch p f))\n  ([f type p] (catch p type f)))\n\n(def err\n  \"A short alias for `error` function.\"\n  error)\n\n(defn finally\n  \"Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected.\"\n  [p callback]\n  #?(:clj (-> p\n              (then (fn [_] (callback)))\n              (catch (fn [_] (callback))))\n     :cljs (.lastly p callback)))\n\n(defn all\n  \"Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled.\n\n  Example:\n\n  (-> (all [(promise :first-promise)\n            (promise :second-promise)]\n      (then (fn [[first-result second-result]]))\n       (println (str first-result \\\", \\\" second-result)\n\n  Will print out\n  :first-promise, :second-promise.\n\n  If at least one of the promises is rejected, the resulting promise will be\n  rejected.\"\n  [promises]\n  #?(:cljs (-> (.all Promise (into-array promises))\n               (then vec))\n     :clj (let [promises (clojure.core/map pt/-promise promises)]\n            (then (->> (into-array CompletableFuture promises)\n                       (CompletableFuture/allOf))\n                  (fn [_]\n                    (mapv pt/-extract promises))))))\n\n(defn any\n  \"Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled.\"\n  [promises]\n  #?(:cljs (.any Promise (into-array promises))\n     :clj (->> (clojure.core/map pt/-promise promises)\n               (into-array CompletableFuture)\n               (CompletableFuture/anyOf))))\n\n;; Cancellation\n\n(defn cancel!\n  \"Cancel the promise.\"\n  [p]\n  (pt/-cancel p)\n  p)\n\n(defn cancelled?\n  \"Return true if `v` is a cancelled promise.\"\n  [v]\n  (pt/-cancelled? v))\n\n;; Utils\n\n(defn promisify\n  \"Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation).\"\n  [callable]\n  (fn [& args]\n    (promise (fn [resolve reject]\n               (let [args (-> (vec args)\n                              (conj resolve))]\n                 (try\n                   (apply callable args)\n                   (catch #?(:clj Throwable :cljs js/Error) e\n                       (reject e))))))))\n\n#?(:cljs\n   (defn timeout\n     \"Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError\"\n     ([p t] (.timeout p t))\n     ([p t v] (.timeout p t v))))\n\n(defn delay\n  \"Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached.\"\n  ([t] (delay t nil))\n  ([t v]\n   #?(:cljs (promise (fn [resolve reject]\n                       (schedule t #(resolve v))))\n\n      :clj  (let [p (CompletableFuture.)]\n              (schedule t #(.complete p v))\n              p))))\n\n(defn attempt\n  \"A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback.\"\n  [callback]\n  #?(:cljs (promise (fn [resolve] (resolve (callback))))\n     :clj  (promise (fn [resolve reject]\n                      (let [result (callback)]\n                        (if (promise? result)\n                          (then result resolve)\n                          (resolve result)))))))\n\n#?(:clj\n   (defmacro do*\n     \"A sugar syntax on top of `attempt`.\"\n     [& body]\n     `(attempt #(do ~@body))))\n\n(defn await\n  [& args]\n  (throw (ex-info \"Should be only used in alet macro.\" {})))\n\n#?(:clj\n   (defmacro alet\n     \"A `let` alternative that always returns promise and allows\n     use `await` marker function in order to emulate the async/await\n     syntax and make the let expression look like synchronous where\n     async operations are performed.\"\n     [bindings & body]\n     (let [await# `await]\n       (->> (reverse (partition 2 bindings))\n            (reduce (fn [acc [l r]]\n                      (if (and (coll? r)\n                               (symbol? (first r))\n                               (not= \".\" (subs (name (first r)) 0 1)))\n                        `(if (= ~await# ~(first r))\n                           (bind ~(second r) (fn [~l] ~acc))\n                           (let [~l ~r] ~acc))\n                        `(let [~l ~r] ~acc)))\n                    `(promise (do ~@body)))))))\n","~:reader-features",["^H",["~:cljs"]],"~:source-map",["^ ","~i42",["^ ","~i9",[["^ ","~:gcol",0,"~:gline",5]],"~i22",[["^ ","^1H",0,"^1I",5,"^O","promesa.core/Promise"]],"~i30",[["^ ","^1H",23,"^1I",5,"^O","promesa.impl/Promise"]]],"~i46",["^ ","~i0",[["^ ","^1H",0,"^1I",6],["^ ","^1H",24,"^1I",13],["^ ","^1H",0,"^1I",14]],"~i6",[["^ ","^1H",0,"^1I",13,"^O","promesa.core/schedule"]]],"~i52",["^ ","~i3",[["^ ","^1H",56,"^1I",13,"^O","ms"]],"~i6",[["^ ","^1H",59,"^1I",13,"^O","func"]]],"~i53",["^ ","~i2",[["^ ","^1H",0,"^1I",14]],"~i3",[["^ ","^1H",7,"^1I",14,"^O","promesa.impl.scheduler/schedule"]],"~i15",[["^ ","^1H",39,"^1I",14,"^O","ms"]],"~i18",[["^ ","^1H",42,"^1I",14,"^O","func"]]],"~i57",["^ ","~i0",[["^ ","^1H",0,"^1I",16],["^ ","^1H",24,"^1I",19],["^ ","^1H",0,"^1I",20]],"~i6",[["^ ","^1H",0,"^1I",19,"^O","promesa.core/resolved"]]],"~i59",["^ ","~i3",[["^ ","^1H",56,"^1I",19,"^O","v"]]],"~i60",["^ ","~i2",[["^ ","^1H",0,"^1I",20]],"~i3",[["^ ","^1H",7,"^1I",20,"^O","promesa.impl/resolved"]],"~i17",[["^ ","^1H",29,"^1I",20,"^O","v"]]],"~i62",["^ ","~i0",[["^ ","^1H",0,"^1I",22],["^ ","^1H",24,"^1I",25],["^ ","^1H",0,"^1I",26]],"~i6",[["^ ","^1H",0,"^1I",25,"^O","promesa.core/rejected"]]],"~i64",["^ ","~i3",[["^ ","^1H",56,"^1I",25,"^O","v"]]],"~i65",["^ ","~i2",[["^ ","^1H",0,"^1I",26]],"~i3",[["^ ","^1H",7,"^1I",26,"^O","promesa.impl/rejected"]],"^1T",[["^ ","^1H",29,"^1I",26,"^O","v"]]],"~i67",["^ ","~i0",[["^ ","^1H",0,"^1I",28],["^ ","^1H",23,"^1I",31],["^ ","^1H",0,"^1I",32]],"~i6",[["^ ","^1H",0,"^1I",31,"^O","promesa.core/promise"]]],"~i69",["^ ","~i3",[["^ ","^1H",54,"^1I",31,"^O","v"]]],"~i70",["^ ","~i2",[["^ ","^1H",0,"^1I",32]],"~i3",[["^ ","^1H",7,"^1I",32,"^O","promesa.protocols/-promise"]],"^1O",[["^ ","^1H",34,"^1I",32,"^O","v"]]],"~i72",["^ ","~i0",[["^ ","^1H",0,"^1I",34],["^ ","^1H",30,"^1I",37],["^ ","^1H",0,"^1I",38]],"~i6",[["^ ","^1H",0,"^1I",37,"^O","promesa.core/promise?"]]],"~i74",["^ ","~i3",[["^ ","^1H",68,"^1I",37,"^O","v"]]],"~i76",["^ ","~i11",[["^ ","^1H",0,"^1I",38]],"^1J",[["^ ","^1H",21,"^1I",38,"^O","promesa.core/Promise"]],"^1K",[["^ ","^1H",8,"^1I",38,"^O","v"]]],"~i80",["^ ","~i0",[["^ ","^1H",0,"^1I",40],["^ ","^1H",31,"^1I",43],["^ ","^1H",0,"^1I",44]],"~i6",[["^ ","^1H",0,"^1I",43,"^O","promesa.core/resolved?"]]],"~i82",["^ ","~i3",[["^ ","^1H",70,"^1I",43,"^O","p"]]],"~i83",["^ ","~i2",[["^ ","^1H",0,"^1I",44]],"~i3",[["^ ","^1H",7,"^1I",44,"^O","promesa.protocols/-resolved?"]],"^1T",[["^ ","^1H",42,"^1I",44,"^O","p"]]],"~i85",["^ ","~i0",[["^ ","^1H",0,"^1I",46],["^ ","^1H",31,"^1I",49],["^ ","^1H",0,"^1I",50]],"~i6",[["^ ","^1H",0,"^1I",49,"^O","promesa.core/rejected?"]]],"~i87",["^ ","~i3",[["^ ","^1H",70,"^1I",49,"^O","p"]]],"~i88",["^ ","~i2",[["^ ","^1H",0,"^1I",50]],"~i3",[["^ ","^1H",7,"^1I",50,"^O","promesa.protocols/-rejected?"]],"^1T",[["^ ","^1H",42,"^1I",50,"^O","p"]]],"~i90",["^ ","~i0",[["^ ","^1H",0,"^1I",52],["^ ","^1H",30,"^1I",55],["^ ","^1H",0,"^1I",56]],"~i6",[["^ ","^1H",0,"^1I",55,"^O","promesa.core/pending?"]]],"~i92",["^ ","~i3",[["^ ","^1H",68,"^1I",55,"^O","p"]]],"~i93",["^ ","~i2",[["^ ","^1H",0,"^1I",56]],"~i3",[["^ ","^1H",7,"^1I",56,"^O","promesa.protocols/-pending?"]],"~i16",[["^ ","^1H",41,"^1I",56,"^O","p"]]],"~i95",["^ ","~i0",[["^ ","^1H",0,"^1I",58],["^ ","^1H",23,"^1I",61],["^ ","^1H",0,"^1I",62]],"~i6",[["^ ","^1H",0,"^1I",61,"^O","promesa.core/extract"]]],"~i97",["^ ","~i3",[["^ ","^1H",54,"^1I",61,"^O","p"]]],"~i98",["^ ","~i2",[["^ ","^1H",0,"^1I",62]],"~i3",[["^ ","^1H",7,"^1I",62,"^O","promesa.protocols/-extract"]],"^1O",[["^ ","^1H",34,"^1I",62,"^O","p"]]],"~i100",["^ ","~i0",[["^ ","^1H",0,"^1I",64]],"~i5",[["^ ","^1H",0,"^1I",67,"^O","promesa.core/done?"]]],"~i102",["^ ","~i2",[["^ ","^1H",27,"^1I",67]],"~i3",[["^ ","^1H",27,"^1I",67,"^O","cljs.core/complement"]],"~i14",[["^ ","^1H",48,"^1I",67,"^O","promesa.core/pending?"]]],"~i106",["^ ","~i0",[["^ ","^1H",0,"^1I",68],["^ ","^1H",19,"^1I",72],["^ ","^1H",0,"^1I",73]],"~i6",[["^ ","^1H",0,"^1I",72,"^O","promesa.core/map"]]],"~i109",["^ ","~i3",[["^ ","^1H",46,"^1I",72,"^O","f"]],"~i5",[["^ ","^1H",48,"^1I",72,"^O","p"]]],"~i110",["^ ","~i2",[["^ ","^1H",0,"^1I",73]],"~i3",[["^ ","^1H",7,"^1I",73,"^O","promesa.protocols/-map"]],"^22",[["^ ","^1H",30,"^1I",73,"^O","p"]],"~i13",[["^ ","^1H",32,"^1I",73,"^O","f"]]],"~i112",["^ ","~i0",[["^ ","^1H",0,"^1I",75],["^ ","^1H",22,"^1I",84],["^ ","^1H",0,"^1I",85]],"~i6",[["^ ","^1H",0,"^1I",84,"^O","promesa.core/mapcat"]]],"~i120",["^ ","~i3",[["^ ","^1H",52,"^1I",84,"^O","f"]],"~i5",[["^ ","^1H",54,"^1I",84,"^O","p"]]],"~i121",["^ ","~i2",[["^ ","^1H",0,"^1I",85]],"~i3",[["^ ","^1H",7,"^1I",85,"^O","promesa.protocols/-bind"]],"~i12",[["^ ","^1H",31,"^1I",85,"^O","p"]],"^2B",[["^ ","^1H",33,"^1I",85,"^O","f"]]],"~i123",["^ ","~i0",[["^ ","^1H",0,"^1I",87],["^ ","^1H",20,"^1I",90],["^ ","^1H",0,"^1I",91]],"~i6",[["^ ","^1H",0,"^1I",90,"^O","promesa.core/bind"]]],"~i125",["^ ","~i3",[["^ ","^1H",48,"^1I",90,"^O","p"]],"~i5",[["^ ","^1H",50,"^1I",90,"^O","f"]]],"~i126",["^ ","~i2",[["^ ","^1H",0,"^1I",91]],"~i3",[["^ ","^1H",7,"^1I",91,"^O","promesa.protocols/-bind"]],"^2J",[["^ ","^1H",31,"^1I",91,"^O","p"]],"^2B",[["^ ","^1H",33,"^1I",91,"^O","f"]]],"~i128",["^ ","~i0",[["^ ","^1H",0,"^1I",93],["^ ","^1H",20,"^1I",101],["^ ","^1H",0,"^1I",102]],"~i6",[["^ ","^1H",0,"^1I",101,"^O","promesa.core/then"]]],"~i135",["^ ","~i3",[["^ ","^1H",48,"^1I",101,"^O","p"]],"~i5",[["^ ","^1H",50,"^1I",101,"^O","f"]]],"~i136",["^ ","^22",[["^ ","^1H",0,"^1I",102]],"^2J",[["^ ","^1H",7,"^1I",102,"^O","promesa.protocols/-map"]],"~i20",[["^ ","^1H",30,"^1I",102,"^O","p"]],"^1J",[["^ ","^1H",32,"^1I",102,"^O","f"]]],"~i143",["^ ","~i0",[["^ ","^1H",0,"^1I",104],["^ ","^1H",0,"^1I",104],["^ ","^1H",21,"^1I",107],["^ ","^1H",50,"^1I",107,"^O","var_args"],["^ ","^1H",0,"^1I",108],["^ ","^1H",0,"^1I",108],["^ ","^1H",4,"^1I",108,"^O","args__4534__auto__"],["^ ","^1H",25,"^1I",108],["^ ","^1H",0,"^1I",109],["^ ","^1H",0,"^1I",109],["^ ","^1H",4,"^1I",109,"^O","len__4531__auto__"],["^ ","^1H",29,"^1I",109],["^ ","^1H",29,"^1I",109],["^ ","^1H",0,"^1I",110],["^ ","^1H",0,"^1I",110],["^ ","^1H",4,"^1I",110,"^O","i__4532__auto__"],["^ ","^1H",27,"^1I",110],["^ ","^1H",0,"^1I",112],["^ ","^1H",0,"^1I",112],["^ ","^1H",3,"^1I",112],["^ ","^1H",4,"^1I",112,"^O","i__4532__auto__"],["^ ","^1H",27,"^1I",112,"^O","len__4531__auto__"],["^ ","^1H",0,"^1I",113],["^ ","^1H",0,"^1I",113],["^ ","^1H",0,"^1I",113,"^O","args__4534__auto__"],["^ ","^1H",24,"^1I",113],["^ ","^1H",25,"^1I",113],["^ ","^1H",35,"^1I",113,"^O","i__4532__auto__"],["^ ","^1H",0,"^1I",115],["^ ","^1H",14,"^1I",115],["^ ","^1H",15,"^1I",115,"^O","i__4532__auto__"],["^ ","^1H",38,"^1I",115],["^ ","^1H",0,"^1I",119],["^ ","^1H",0,"^1I",123],["^ ","^1H",4,"^1I",123,"^O","argseq__4535__auto__"],["^ ","^1H",27,"^1I",123],["^ ","^1H",29,"^1I",123],["^ ","^1H",30,"^1I",123],["^ ","^1H",36,"^1I",123],["^ ","^1H",36,"^1I",123,"^O","args__4534__auto__"],["^ ","^1H",64,"^1I",123],["^ ","^1H",64,"^1I",123],["^ ","^1H",69,"^1I",123,"^O","cljs.core/IndexedSeq"],["^ ","^1H",90,"^1I",123],["^ ","^1H",90,"^1I",123,"^O","args__4534__auto__"],["^ ","^1H",115,"^1I",123],["^ ","^1H",120,"^1I",123],["^ ","^1H",124,"^1I",123],["^ ","^1H",131,"^1I",123],["^ ","^1H",0,"^1I",124],["^ ","^1H",0,"^1I",124],["^ ","^1H",7,"^1I",124,"^O","promesa.core/chain"],["^ ","^1H",63,"^1I",124],["^ ","^1H",64,"^1I",124],["^ ","^1H",74,"^1I",124],["^ ","^1H",80,"^1I",124,"^O","argseq__4535__auto__"],["^ ","^1H",0,"^1I",127],["^ ","^1H",0,"^1I",127],["^ ","^1H",0,"^1I",127],["^ ","^1H",0,"^1I",127,"^O","promesa.core/chain"],["^ ","^1H",58,"^1I",127],["^ ","^1H",0,"^1I",128],["^ ","^1H",0,"^1I",133],["^ ","^1H",0,"^1I",133],["^ ","^1H",0,"^1I",133,"^O","promesa.core/chain"],["^ ","^1H",45,"^1I",133],["^ ","^1H",0,"^1I",135],["^ ","^1H",0,"^1I",136],["^ ","^1H",0,"^1I",136],["^ ","^1H",0,"^1I",136,"^O","promesa.core/chain"],["^ ","^1H",39,"^1I",136],["^ ","^1H",50,"^1I",136,"^O","seq4728"],["^ ","^1H",0,"^1I",137],["^ ","^1H",0,"^1I",137],["^ ","^1H",4,"^1I",137,"^O","G__4729"],["^ ","^1H",14,"^1I",137],["^ ","^1H",14,"^1I",137,"^O","cljs.core/first"],["^ ","^1H",30,"^1I",137,"^O","seq4728"],["^ ","^1H",4,"^1I",138,"^O","seq4728"],["^ ","^1H",18,"^1I",138],["^ ","^1H",18,"^1I",138,"^O","cljs.core/next"],["^ ","^1H",33,"^1I",138,"^O","seq4728"],["^ ","^1H",0,"^1I",139],["^ ","^1H",0,"^1I",139],["^ ","^1H",4,"^1I",139,"^O","self__4518__auto__"],["^ ","^1H",25,"^1I",139],["^ ","^1H",0,"^1I",140],["^ ","^1H",0,"^1I",140],["^ ","^1H",7,"^1I",140,"^O","self__4518__auto__"],["^ ","^1H",63,"^1I",140,"^O","G__4729"],["^ ","^1H",71,"^1I",140,"^O","seq4728"],["^ ","^1H",0,"^1I",143]],"~i6",[["^ ","^1H",0,"^1I",107,"^O","promesa.core/chain"]]],"~i145",["^ ","~i3",[["^ ","^1H",69,"^1I",127,"^O","p"]],"~i7",[["^ ","^1H",71,"^1I",127,"^O","funcs"]]],"~i146",["^ ","~i2",[["^ ","^1H",0,"^1I",128],["^ ","^1H",54,"^1I",128],["^ ","^1H",65,"^1I",128,"^O","p1__4725#"],["^ ","^1H",81,"^1I",128,"^O","p2__4726#"],["^ ","^1H",0,"^1I",129]],"~i3",[["^ ","^1H",7,"^1I",128,"^O","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3"]],"^22",[["^ ","^1H",0,"^1I",129],["^ ","^1H",25,"^1I",129,"^O","p1__4725#"],["^ ","^1H",41,"^1I",129,"^O","p2__4726#"]],"^2J",[["^ ","^1H",7,"^1I",129,"^O","promesa.core/then"]],"~i24",[["^ ","^1H",3,"^1I",130,"^O","p"]],"~i26",[["^ ","^1H",5,"^1I",130,"^O","funcs"]]],"~i148",["^ ","~i0",[["^ ","^1H",0,"^1I",143],["^ ","^1H",22,"^1I",143],["^ ","^1H",0,"^1I",144]],"~i6",[["^ ","^1H",0,"^1I",143,"^O","promesa.core/branch"]]],"~i149",["^ ","~i3",[["^ ","^1H",52,"^1I",143,"^O","p"]],"~i5",[["^ ","^1H",54,"^1I",143,"^O","success"]],"^2F",[["^ ","^1H",62,"^1I",143,"^O","failure"]]],"~i150",["^ ","~i6",[["^ ","^1H",55,"^1I",144,"^O","p"]]],"~i151",["^ ","~i6",[["^ ","^1H",32,"^1I",144]],"~i7",[["^ ","^1H",32,"^1I",144,"^O","promesa.protocols/-map"]],"^1O",[["^ ","^1H",57,"^1I",144,"^O","success"]]],"~i152",["^ ","~i6",[["^ ","^1H",0,"^1I",144]],"~i7",[["^ ","^1H",7,"^1I",144,"^O","promesa.protocols/-catch"]],"^1T",[["^ ","^1H",66,"^1I",144,"^O","failure"]]],"~i154",["^ ","~i0",[["^ ","^1H",0,"^1I",146],["^ ","^1H",0,"^1I",146],["^ ","^1H",22,"^1I",149],["^ ","^1H",51,"^1I",149,"^O","var_args"],["^ ","^1H",0,"^1I",150],["^ ","^1H",0,"^1I",150],["^ ","^1H",4,"^1I",150,"^O","G__4739"],["^ ","^1H",14,"^1I",150],["^ ","^1H",14,"^1I",150],["^ ","^1H",0,"^1I",151],["^ ","^1H",0,"^1I",151],["^ ","^1H",8,"^1I",151,"^O","G__4739"],["^ ","^1H",5,"^1I",152],["^ ","^1H",0,"^1I",153],["^ ","^1H",7,"^1I",153,"^O","promesa.core/catch"],["^ ","^1H",57,"^1I",153],["^ ","^1H",58,"^1I",153],["^ ","^1H",68,"^1I",153],["^ ","^1H",74,"^1I",153],["^ ","^1H",75,"^1I",153],["^ ","^1H",85,"^1I",153],["^ ","^1H",5,"^1I",156],["^ ","^1H",0,"^1I",157],["^ ","^1H",7,"^1I",157,"^O","promesa.core/catch"],["^ ","^1H",57,"^1I",157],["^ ","^1H",58,"^1I",157],["^ ","^1H",68,"^1I",157],["^ ","^1H",74,"^1I",157],["^ ","^1H",75,"^1I",157],["^ ","^1H",85,"^1I",157],["^ ","^1H",91,"^1I",157],["^ ","^1H",92,"^1I",157],["^ ","^1H",102,"^1I",157],["^ ","^1H",0,"^1I",161],["^ ","^1H",6,"^1I",161],["^ ","^1H",11,"^1I",161,"^O","js/Error"],["^ ","^1H",17,"^1I",161],["^ ","^1H",18,"^1I",161],["^ ","^1H",80,"^1I",161],["^ ","^1H",80,"^1I",161],["^ ","^1H",0,"^1I",166],["^ ","^1H",0,"^1I",166],["^ ","^1H",52,"^1I",166],["^ ","^1H",0,"^1I",167],["^ ","^1H",0,"^1I",170],["^ ","^1H",0,"^1I",170],["^ ","^1H",52,"^1I",170],["^ ","^1H",0,"^1I",171],["^ ","^1H",0,"^1I",185],["^ ","^1H",0,"^1I",185],["^ ","^1H",46,"^1I",185],["^ ","^1H",0,"^1I",187]],"~i6",[["^ ","^1H",0,"^1I",149,"^O","promesa.core/catch"],["^ ","^1H",0,"^1I",166,"^O","promesa.core/catch"],["^ ","^1H",0,"^1I",170,"^O","promesa.core/catch"],["^ ","^1H",0,"^1I",185,"^O","promesa.core/catch"]]],"~i156",["^ ","~i4",[["^ ","^1H",63,"^1I",166,"^O","p"]],"~i6",[["^ ","^1H",65,"^1I",166,"^O","f"]]],"~i157",["^ ","~i3",[["^ ","^1H",0,"^1I",167]],"~i4",[["^ ","^1H",7,"^1I",167,"^O","promesa.protocols/-catch"]],"^2B",[["^ ","^1H",32,"^1I",167,"^O","p"]],"^2<",[["^ ","^1H",34,"^1I",167,"^O","f"]]],"~i158",["^ ","~i4",[["^ ","^1H",63,"^1I",170,"^O","p"]],"~i6",[["^ ","^1H",65,"^1I",170,"^O","pred-or-type"]],"~i19",[["^ ","^1H",78,"^1I",170,"^O","f"]]],"~i159",["^ ","~i3",[["^ ","^1H",0,"^1I",171],["^ ","^1H",0,"^1I",174]],"~i9",[["^ ","^1H",4,"^1I",171,"^O","accept?"]],"^1T",[["^ ","^1H",20,"^1I",171],["^ ","^1H",71,"^1I",171],["^ ","^1H",82,"^1I",171,"^O","p1__4736#"],["^ ","^1H",0,"^1I",172]],"~i21",[["^ ","^1H",22,"^1I",171]],"^1J",[["^ ","^1H",22,"^1I",171,"^O","cljs.core/ifn?"]],"~i27",[["^ ","^1H",43,"^1I",171,"^O","pred-or-type"]]],"~i160",["^ ","^34",[["^ ","^1H",58,"^1I",171,"^O","pred-or-type"]]],"~i161",["^ ","^2Q",[["^ ","^1H",0,"^1I",172],["^ ","^1H",8,"^1I",172,"^O","p1__4736#"]],"~i31",[["^ ","^1H",35,"^1I",172,"^O","pred-or-type"]]],"~i162",["^ ","~i5",[["^ ","^1H",0,"^1I",174]],"~i6",[["^ ","^1H",7,"^1I",174,"^O","promesa.protocols/-catch"]],"^2<",[["^ ","^1H",32,"^1I",174,"^O","p"]],"^1P",[["^ ","^1H",34,"^1I",174],["^ ","^1H",0,"^1I",176]],"~i23",[["^ ","^1H",18,"^1I",175,"^O","e"]]],"~i163",["^ ","^2Q",[["^ ","^1H",0,"^1I",176]],"^2U",[["^ ","^1H",20,"^1I",176]],"~i25",[["^ ","^1H",21,"^1I",176,"^O","accept?"],["^ ","^1H",67,"^1I",176,"^O","accept?"],["^ ","^1H",116,"^1I",176,"^O","accept?"]],"~i33",[["^ ","^1H",111,"^1I",176,"^O","e"],["^ ","^1H",140,"^1I",176,"^O","e"]]],"~i164",["^ ","^1J",[["^ ","^1H",0,"^1I",177]],"^3<",[["^ ","^1H",8,"^1I",177,"^O","f"],["^ ","^1H",42,"^1I",177,"^O","f"],["^ ","^1H",79,"^1I",177,"^O","f"]],"^3>",[["^ ","^1H",74,"^1I",177,"^O","e"],["^ ","^1H",91,"^1I",177,"^O","e"]]],"~i165",["^ ","^1J",[["^ ","^1H",0,"^1I",179]],"^3<",[["^ ","^1H",7,"^1I",179,"^O","promesa.impl/rejected"]],"~i37",[["^ ","^1H",29,"^1I",179,"^O","e"]]],"~i167",["^ ","~i0",[["^ ","^1H",0,"^1I",187],["^ ","^1H",0,"^1I",187],["^ ","^1H",21,"^1I",190],["^ ","^1H",50,"^1I",190,"^O","var_args"],["^ ","^1H",0,"^1I",191],["^ ","^1H",0,"^1I",191],["^ ","^1H",4,"^1I",191,"^O","G__4746"],["^ ","^1H",14,"^1I",191],["^ ","^1H",14,"^1I",191],["^ ","^1H",0,"^1I",192],["^ ","^1H",0,"^1I",192],["^ ","^1H",8,"^1I",192,"^O","G__4746"],["^ ","^1H",5,"^1I",193],["^ ","^1H",0,"^1I",194],["^ ","^1H",7,"^1I",194,"^O","promesa.core/error"],["^ ","^1H",56,"^1I",194],["^ ","^1H",57,"^1I",194],["^ ","^1H",67,"^1I",194],["^ ","^1H",73,"^1I",194],["^ ","^1H",74,"^1I",194],["^ ","^1H",84,"^1I",194],["^ ","^1H",5,"^1I",197],["^ ","^1H",0,"^1I",198],["^ ","^1H",7,"^1I",198,"^O","promesa.core/error"],["^ ","^1H",56,"^1I",198],["^ ","^1H",57,"^1I",198],["^ ","^1H",67,"^1I",198],["^ ","^1H",73,"^1I",198],["^ ","^1H",74,"^1I",198],["^ ","^1H",84,"^1I",198],["^ ","^1H",90,"^1I",198],["^ ","^1H",91,"^1I",198],["^ ","^1H",101,"^1I",198],["^ ","^1H",0,"^1I",202],["^ ","^1H",6,"^1I",202],["^ ","^1H",11,"^1I",202,"^O","js/Error"],["^ ","^1H",17,"^1I",202],["^ ","^1H",18,"^1I",202],["^ ","^1H",80,"^1I",202],["^ ","^1H",80,"^1I",202],["^ ","^1H",0,"^1I",207],["^ ","^1H",0,"^1I",207],["^ ","^1H",51,"^1I",207],["^ ","^1H",0,"^1I",208],["^ ","^1H",0,"^1I",211],["^ ","^1H",0,"^1I",211],["^ ","^1H",51,"^1I",211],["^ ","^1H",0,"^1I",212],["^ ","^1H",0,"^1I",215],["^ ","^1H",0,"^1I",215],["^ ","^1H",45,"^1I",215],["^ ","^1H",0,"^1I",217]],"~i6",[["^ ","^1H",0,"^1I",190,"^O","promesa.core/error"],["^ ","^1H",0,"^1I",207,"^O","promesa.core/error"],["^ ","^1H",0,"^1I",211,"^O","promesa.core/error"],["^ ","^1H",0,"^1I",215,"^O","promesa.core/error"]]],"~i169",["^ ","~i4",[["^ ","^1H",62,"^1I",207,"^O","f"]],"~i6",[["^ ","^1H",64,"^1I",207,"^O","p"]],"~i9",[["^ ","^1H",0,"^1I",208]],"~i10",[["^ ","^1H",7,"^1I",208,"^O","promesa.core.catch$.cljs$core$IFn$_invoke$arity$2"]],"^2<",[["^ ","^1H",57,"^1I",208,"^O","p"]],"^1P",[["^ ","^1H",59,"^1I",208,"^O","f"]]],"~i170",["^ ","~i4",[["^ ","^1H",62,"^1I",211,"^O","f"]],"~i6",[["^ ","^1H",64,"^1I",211,"^O","type"]],"^22",[["^ ","^1H",69,"^1I",211,"^O","p"]],"^2B",[["^ ","^1H",0,"^1I",212]],"^1O",[["^ ","^1H",7,"^1I",212,"^O","promesa.core.catch$.cljs$core$IFn$_invoke$arity$3"]],"^36",[["^ ","^1H",57,"^1I",212,"^O","p"]],"^3<",[["^ ","^1H",59,"^1I",212,"^O","type"]],"~i28",[["^ ","^1H",64,"^1I",212,"^O","f"]]],"~i172",["^ ","~i0",[["^ ","^1H",0,"^1I",217]],"~i5",[["^ ","^1H",0,"^1I",220,"^O","promesa.core/err"]]],"~i174",["^ ","~i2",[["^ ","^1H",19,"^1I",220,"^O","promesa.core/error"]]],"~i176",["^ ","~i0",[["^ ","^1H",0,"^1I",221],["^ ","^1H",24,"^1I",226],["^ ","^1H",0,"^1I",227]],"~i6",[["^ ","^1H",0,"^1I",226,"^O","promesa.core/finally"]]],"~i180",["^ ","~i3",[["^ ","^1H",55,"^1I",226,"^O","p"]],"~i5",[["^ ","^1H",57,"^1I",226,"^O","callback"]]],"~i184",["^ ","^22",[["^ ","^1H",0,"^1I",227]],"^2Q",[["^ ","^1H",7,"^1I",227,"^O","p"]],"^1J",[["^ ","^1H",16,"^1I",227,"^O","callback"]]],"~i186",["^ ","~i0",[["^ ","^1H",0,"^1I",229],["^ ","^1H",19,"^1I",247],["^ ","^1H",0,"^1I",248]],"~i6",[["^ ","^1H",0,"^1I",247,"^O","promesa.core/all"]]],"~i203",["^ ","~i3",[["^ ","^1H",46,"^1I",247,"^O","promises"]]],"~i204",["^ ","^1O",[["^ ","^1H",25,"^1I",248]],"^36",[["^ ","^1H",25,"^1I",248,"^O","promesa.core/Promise"]],"~i29",[["^ ","^1H",50,"^1I",248]],"^1K",[["^ ","^1H",50,"^1I",248,"^O","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1"]],"~i41",[["^ ","^1H",101,"^1I",248,"^O","promises"]]],"~i205",["^ ","^1O",[["^ ","^1H",0,"^1I",248]],"^2<",[["^ ","^1H",7,"^1I",248,"^O","promesa.core/then"]],"^36",[["^ ","^1H",112,"^1I",248,"^O","cljs.core/vec"]]],"~i212",["^ ","~i0",[["^ ","^1H",0,"^1I",250],["^ ","^1H",19,"^1I",255],["^ ","^1H",0,"^1I",256]],"~i6",[["^ ","^1H",0,"^1I",255,"^O","promesa.core/any"]]],"~i216",["^ ","~i3",[["^ ","^1H",46,"^1I",255,"^O","promises"]]],"~i217",["^ ","^22",[["^ ","^1H",0,"^1I",256]],"^1T",[["^ ","^1H",7,"^1I",256,"^O","promesa.core/Promise"]],"^3>",[["^ ","^1H",32,"^1I",256]],"^2V",[["^ ","^1H",32,"^1I",256,"^O","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1"]],"^3B",[["^ ","^1H",83,"^1I",256,"^O","promises"]]],"~i224",["^ ","~i0",[["^ ","^1H",0,"^1I",258],["^ ","^1H",28,"^1I",261],["^ ","^1H",0,"^1I",262]],"~i6",[["^ ","^1H",0,"^1I",261,"^O","promesa.core/cancel!"]]],"~i226",["^ ","~i3",[["^ ","^1H",64,"^1I",261,"^O","p"]]],"~i227",["^ ","~i2",[["^ ","^1H",0,"^1I",262]],"~i3",[["^ ","^1H",0,"^1I",262,"^O","promesa.protocols/-cancel"]],"^2B",[["^ ","^1H",26,"^1I",262,"^O","p"]]],"~i228",["^ ","~i2",[["^ ","^1H",0,"^1I",264,"^O","p"]]],"~i230",["^ ","~i0",[["^ ","^1H",0,"^1I",266],["^ ","^1H",32,"^1I",269],["^ ","^1H",0,"^1I",270]],"~i6",[["^ ","^1H",0,"^1I",269,"^O","promesa.core/cancelled?"]]],"~i232",["^ ","~i3",[["^ ","^1H",72,"^1I",269,"^O","v"]]],"~i233",["^ ","~i2",[["^ ","^1H",0,"^1I",270]],"~i3",[["^ ","^1H",7,"^1I",270,"^O","promesa.protocols/-cancelled?"]],"^1P",[["^ ","^1H",43,"^1I",270,"^O","v"]]],"~i237",["^ ","~i0",[["^ ","^1H",0,"^1I",272],["^ ","^1H",25,"^1I",277],["^ ","^1H",0,"^1I",278]],"~i6",[["^ ","^1H",0,"^1I",277,"^O","promesa.core/promisify"]]],"~i241",["^ ","~i3",[["^ ","^1H",58,"^1I",277,"^O","callable"]]],"~i242",["^ ","~i2",[["^ ","^1H",0,"^1I",278],["^ ","^1H",0,"^1I",280]],"~i9",[["^ ","^1H",34,"^1I",279,"^O","args"],["^ ","^1H",4,"^1I",293,"^O","args"],["^ ","^1H",2,"^1I",297,"^O","args"],["^ ","^1H",35,"^1I",299,"^O","args"],["^ ","^1H",4,"^1I",302,"^O","args"],["^ ","^1H",25,"^1I",303,"^O","args"]]],"~i243",["^ ","~i4",[["^ ","^1H",0,"^1I",280]],"~i5",[["^ ","^1H",7,"^1I",280,"^O","promesa.core/promise"]],"^2F",[["^ ","^1H",28,"^1I",280],["^ ","^1H",0,"^1I",281]],"^1P",[["^ ","^1H",39,"^1I",280,"^O","resolve"]],"^2V",[["^ ","^1H",47,"^1I",280,"^O","reject"]]],"~i244",["^ ","^1O",[["^ ","^1H",0,"^1I",281],["^ ","^1H",0,"^1I",282]],"^36",[["^ ","^1H",4,"^1I",281,"^O","args"]],"^1K",[["^ ","^1H",60,"^1I",281]],"^3:",[["^ ","^1H",60,"^1I",281,"^O","cljs.core/vec"]],"~i35",[["^ ","^1H",74,"^1I",281,"^O","args"]]],"~i245",["^ ","^1K",[["^ ","^1H",15,"^1I",281]],"^3:",[["^ ","^1H",15,"^1I",281,"^O","cljs.core.conj.cljs$core$IFn$_invoke$arity$2"]],"~i36",[["^ ","^1H",80,"^1I",281,"^O","resolve"]]],"~i246",["^ ","^1T",[["^ ","^1H",0,"^1I",282],["^ ","^1H",4,"^1I",282],["^ ","^1H",15,"^1I",283],["^ ","^1H",18,"^1I",283],["^ ","^1H",19,"^1I",283,"^O","e4759"],["^ ","^1H",0,"^1I",284],["^ ","^1H",8,"^1I",284,"^O","e4759"],["^ ","^1H",0,"^1I",285],["^ ","^1H",0,"^1I",287],["^ ","^1H",0,"^1I",287],["^ ","^1H",6,"^1I",287,"^O","e4759"]]],"~i247",["^ ","^34",[["^ ","^1H",4,"^1I",282]],"^2Q",[["^ ","^1H",11,"^1I",282,"^O","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"^2V",[["^ ","^1H",57,"^1I",282,"^O","callable"]],"^46",[["^ ","^1H",66,"^1I",282,"^O","args"]]],"~i248",["^ ","~i50",[["^ ","^1H",36,"^1I",283,"^O","js/Error"]],"^1S",[["^ ","^1H",4,"^1I",284,"^O","e"]]],"~i249",["^ ","^3<",[["^ ","^1H",0,"^1I",285]],"^2U",[["^ ","^1H",8,"^1I",285,"^O","reject"],["^ ","^1H",47,"^1I",285,"^O","reject"],["^ ","^1H",89,"^1I",285,"^O","reject"]],"^3:",[["^ ","^1H",84,"^1I",285,"^O","e"],["^ ","^1H",106,"^1I",285,"^O","e"]]],"~i252",["^ ","~i3",[["^ ","^1H",0,"^1I",310],["^ ","^1H",0,"^1I",310],["^ ","^1H",23,"^1I",317],["^ ","^1H",54,"^1I",317,"^O","var_args"],["^ ","^1H",0,"^1I",318],["^ ","^1H",0,"^1I",318],["^ ","^1H",4,"^1I",318,"^O","G__4780"],["^ ","^1H",14,"^1I",318],["^ ","^1H",14,"^1I",318],["^ ","^1H",0,"^1I",319],["^ ","^1H",0,"^1I",319],["^ ","^1H",8,"^1I",319,"^O","G__4780"],["^ ","^1H",5,"^1I",320],["^ ","^1H",0,"^1I",321],["^ ","^1H",7,"^1I",321,"^O","promesa.core/timeout"],["^ ","^1H",58,"^1I",321],["^ ","^1H",59,"^1I",321],["^ ","^1H",69,"^1I",321],["^ ","^1H",75,"^1I",321],["^ ","^1H",76,"^1I",321],["^ ","^1H",86,"^1I",321],["^ ","^1H",5,"^1I",324],["^ ","^1H",0,"^1I",325],["^ ","^1H",7,"^1I",325,"^O","promesa.core/timeout"],["^ ","^1H",58,"^1I",325],["^ ","^1H",59,"^1I",325],["^ ","^1H",69,"^1I",325],["^ ","^1H",75,"^1I",325],["^ ","^1H",76,"^1I",325],["^ ","^1H",86,"^1I",325],["^ ","^1H",92,"^1I",325],["^ ","^1H",93,"^1I",325],["^ ","^1H",103,"^1I",325],["^ ","^1H",0,"^1I",329],["^ ","^1H",6,"^1I",329],["^ ","^1H",11,"^1I",329,"^O","js/Error"],["^ ","^1H",17,"^1I",329],["^ ","^1H",18,"^1I",329],["^ ","^1H",80,"^1I",329],["^ ","^1H",80,"^1I",329],["^ ","^1H",0,"^1I",334],["^ ","^1H",0,"^1I",334],["^ ","^1H",53,"^1I",334],["^ ","^1H",0,"^1I",335],["^ ","^1H",0,"^1I",338],["^ ","^1H",0,"^1I",338],["^ ","^1H",53,"^1I",338],["^ ","^1H",0,"^1I",339],["^ ","^1H",0,"^1I",342],["^ ","^1H",0,"^1I",342],["^ ","^1H",47,"^1I",342],["^ ","^1H",0,"^1I",344]],"~i9",[["^ ","^1H",0,"^1I",317,"^O","promesa.core/timeout"],["^ ","^1H",0,"^1I",334,"^O","promesa.core/timeout"],["^ ","^1H",0,"^1I",338,"^O","promesa.core/timeout"],["^ ","^1H",0,"^1I",342,"^O","promesa.core/timeout"]]],"~i258",["^ ","~i7",[["^ ","^1H",64,"^1I",334,"^O","p"]],"~i9",[["^ ","^1H",66,"^1I",334,"^O","t"]],"^2J",[["^ ","^1H",0,"^1I",335]],"^1J",[["^ ","^1H",7,"^1I",335,"^O","p"]],"^2U",[["^ ","^1H",17,"^1I",335,"^O","t"]]],"~i259",["^ ","~i7",[["^ ","^1H",64,"^1I",338,"^O","p"]],"~i9",[["^ ","^1H",66,"^1I",338,"^O","t"]],"^22",[["^ ","^1H",68,"^1I",338,"^O","v"]],"^2B",[["^ ","^1H",0,"^1I",339]],"^2U",[["^ ","^1H",7,"^1I",339,"^O","p"]],"^2V",[["^ ","^1H",17,"^1I",339,"^O","t"]],"^3G",[["^ ","^1H",19,"^1I",339,"^O","v"]]],"~i261",["^ ","~i0",[["^ ","^1H",0,"^1I",344],["^ ","^1H",0,"^1I",344],["^ ","^1H",21,"^1I",350],["^ ","^1H",50,"^1I",350,"^O","var_args"],["^ ","^1H",0,"^1I",351],["^ ","^1H",0,"^1I",351],["^ ","^1H",4,"^1I",351,"^O","G__4787"],["^ ","^1H",14,"^1I",351],["^ ","^1H",14,"^1I",351],["^ ","^1H",0,"^1I",352],["^ ","^1H",0,"^1I",352],["^ ","^1H",8,"^1I",352,"^O","G__4787"],["^ ","^1H",5,"^1I",353],["^ ","^1H",0,"^1I",354],["^ ","^1H",7,"^1I",354,"^O","promesa.core/delay"],["^ ","^1H",56,"^1I",354],["^ ","^1H",57,"^1I",354],["^ ","^1H",67,"^1I",354],["^ ","^1H",5,"^1I",357],["^ ","^1H",0,"^1I",358],["^ ","^1H",7,"^1I",358,"^O","promesa.core/delay"],["^ ","^1H",56,"^1I",358],["^ ","^1H",57,"^1I",358],["^ ","^1H",67,"^1I",358],["^ ","^1H",73,"^1I",358],["^ ","^1H",74,"^1I",358],["^ ","^1H",84,"^1I",358],["^ ","^1H",0,"^1I",362],["^ ","^1H",6,"^1I",362],["^ ","^1H",11,"^1I",362,"^O","js/Error"],["^ ","^1H",17,"^1I",362],["^ ","^1H",18,"^1I",362],["^ ","^1H",80,"^1I",362],["^ ","^1H",80,"^1I",362],["^ ","^1H",0,"^1I",367],["^ ","^1H",0,"^1I",367],["^ ","^1H",51,"^1I",367],["^ ","^1H",0,"^1I",368],["^ ","^1H",0,"^1I",371],["^ ","^1H",0,"^1I",371],["^ ","^1H",51,"^1I",371],["^ ","^1H",0,"^1I",372],["^ ","^1H",0,"^1I",379],["^ ","^1H",0,"^1I",379],["^ ","^1H",45,"^1I",379],["^ ","^1H",0,"^1I",381]],"~i6",[["^ ","^1H",0,"^1I",350,"^O","promesa.core/delay"],["^ ","^1H",0,"^1I",367,"^O","promesa.core/delay"],["^ ","^1H",0,"^1I",371,"^O","promesa.core/delay"],["^ ","^1H",0,"^1I",379,"^O","promesa.core/delay"]]],"~i266",["^ ","~i4",[["^ ","^1H",62,"^1I",367,"^O","t"]],"~i7",[["^ ","^1H",0,"^1I",368],["^ ","^1H",58,"^1I",368]],"~i8",[["^ ","^1H",7,"^1I",368,"^O","promesa.core.delay.cljs$core$IFn$_invoke$arity$2"]],"^2B",[["^ ","^1H",56,"^1I",368,"^O","t"]]],"~i267",["^ ","~i4",[["^ ","^1H",62,"^1I",371,"^O","t"]],"~i6",[["^ ","^1H",64,"^1I",371,"^O","v"]]],"~i268",["^ ","^2J",[["^ ","^1H",0,"^1I",372]],"^2F",[["^ ","^1H",7,"^1I",372,"^O","promesa.core/promise"]],"^36",[["^ ","^1H",28,"^1I",372],["^ ","^1H",0,"^1I",373]],"^2V",[["^ ","^1H",39,"^1I",372,"^O","resolve"]],"~i34",[["^ ","^1H",47,"^1I",372,"^O","reject"]]],"~i269",["^ ","^3<",[["^ ","^1H",0,"^1I",373],["^ ","^1H",31,"^1I",373],["^ ","^1H",0,"^1I",374]],"^2U",[["^ ","^1H",7,"^1I",373,"^O","promesa.core/schedule"]],"^3?",[["^ ","^1H",29,"^1I",373,"^O","t"]],"^48",[["^ ","^1H",0,"^1I",374]],"^3B",[["^ ","^1H",8,"^1I",374,"^O","resolve"],["^ ","^1H",48,"^1I",374,"^O","resolve"],["^ ","^1H",91,"^1I",374,"^O","resolve"]],"~i45",[["^ ","^1H",86,"^1I",374,"^O","v"],["^ ","^1H",109,"^1I",374,"^O","v"]]],"~i275",["^ ","~i0",[["^ ","^1H",0,"^1I",381],["^ ","^1H",23,"^1I",386],["^ ","^1H",0,"^1I",387]],"~i6",[["^ ","^1H",0,"^1I",386,"^O","promesa.core/attempt"]]],"~i279",["^ ","~i3",[["^ ","^1H",54,"^1I",386,"^O","callback"]]],"~i280",["^ ","^22",[["^ ","^1H",0,"^1I",387]],"^2J",[["^ ","^1H",7,"^1I",387,"^O","promesa.core/promise"]],"^2Q",[["^ ","^1H",28,"^1I",387],["^ ","^1H",0,"^1I",388]],"^3>",[["^ ","^1H",39,"^1I",387,"^O","resolve"]],"^4E",[["^ ","^1H",0,"^1I",388],["^ ","^1H",4,"^1I",388,"^O","G__4791"],["^ ","^1H",0,"^1I",389],["^ ","^1H",0,"^1I",389],["^ ","^1H",86,"^1I",389,"^O","G__4791"],["^ ","^1H",115,"^1I",389,"^O","G__4791"]],"^46",[["^ ","^1H",8,"^1I",389,"^O","resolve"],["^ ","^1H",48,"^1I",389,"^O","resolve"],["^ ","^1H",97,"^1I",389,"^O","resolve"]],"~i43",[["^ ","^1H",14,"^1I",388]],"~i44",[["^ ","^1H",15,"^1I",388,"^O","callback"],["^ ","^1H",56,"^1I",388,"^O","callback"],["^ ","^1H",99,"^1I",388,"^O","callback"]]],"~i293",["^ ","~i0",[["^ ","^1H",0,"^1I",392],["^ ","^1H",0,"^1I",392],["^ ","^1H",22,"^1I",392],["^ ","^1H",51,"^1I",392,"^O","var_args"],["^ ","^1H",0,"^1I",393],["^ ","^1H",0,"^1I",393],["^ ","^1H",4,"^1I",393,"^O","args__4534__auto__"],["^ ","^1H",25,"^1I",393],["^ ","^1H",0,"^1I",394],["^ ","^1H",0,"^1I",394],["^ ","^1H",4,"^1I",394,"^O","len__4531__auto__"],["^ ","^1H",29,"^1I",394],["^ ","^1H",29,"^1I",394],["^ ","^1H",0,"^1I",395],["^ ","^1H",0,"^1I",395],["^ ","^1H",4,"^1I",395,"^O","i__4532__auto__"],["^ ","^1H",27,"^1I",395],["^ ","^1H",0,"^1I",397],["^ ","^1H",0,"^1I",397],["^ ","^1H",3,"^1I",397],["^ ","^1H",4,"^1I",397,"^O","i__4532__auto__"],["^ ","^1H",27,"^1I",397,"^O","len__4531__auto__"],["^ ","^1H",0,"^1I",398],["^ ","^1H",0,"^1I",398],["^ ","^1H",0,"^1I",398,"^O","args__4534__auto__"],["^ ","^1H",24,"^1I",398],["^ ","^1H",25,"^1I",398],["^ ","^1H",35,"^1I",398,"^O","i__4532__auto__"],["^ ","^1H",0,"^1I",400],["^ ","^1H",14,"^1I",400],["^ ","^1H",15,"^1I",400,"^O","i__4532__auto__"],["^ ","^1H",38,"^1I",400],["^ ","^1H",0,"^1I",404],["^ ","^1H",0,"^1I",408],["^ ","^1H",4,"^1I",408,"^O","argseq__4535__auto__"],["^ ","^1H",27,"^1I",408],["^ ","^1H",29,"^1I",408],["^ ","^1H",30,"^1I",408],["^ ","^1H",36,"^1I",408],["^ ","^1H",36,"^1I",408,"^O","args__4534__auto__"],["^ ","^1H",64,"^1I",408],["^ ","^1H",64,"^1I",408],["^ ","^1H",69,"^1I",408,"^O","cljs.core/IndexedSeq"],["^ ","^1H",90,"^1I",408],["^ ","^1H",90,"^1I",408,"^O","args__4534__auto__"],["^ ","^1H",115,"^1I",408],["^ ","^1H",120,"^1I",408],["^ ","^1H",124,"^1I",408],["^ ","^1H",131,"^1I",408],["^ ","^1H",0,"^1I",409],["^ ","^1H",0,"^1I",409],["^ ","^1H",7,"^1I",409,"^O","promesa.core/await"],["^ ","^1H",64,"^1I",409,"^O","argseq__4535__auto__"],["^ ","^1H",0,"^1I",412],["^ ","^1H",0,"^1I",412],["^ ","^1H",0,"^1I",412],["^ ","^1H",0,"^1I",412,"^O","promesa.core/await"],["^ ","^1H",59,"^1I",412],["^ ","^1H",0,"^1I",413],["^ ","^1H",0,"^1I",416],["^ ","^1H",0,"^1I",416],["^ ","^1H",0,"^1I",416,"^O","promesa.core/await"],["^ ","^1H",46,"^1I",416],["^ ","^1H",0,"^1I",418],["^ ","^1H",0,"^1I",419],["^ ","^1H",0,"^1I",419],["^ ","^1H",0,"^1I",419,"^O","promesa.core/await"],["^ ","^1H",40,"^1I",419],["^ ","^1H",51,"^1I",419,"^O","seq4792"],["^ ","^1H",0,"^1I",420],["^ ","^1H",0,"^1I",420],["^ ","^1H",4,"^1I",420,"^O","self__4519__auto__"],["^ ","^1H",25,"^1I",420],["^ ","^1H",0,"^1I",421],["^ ","^1H",0,"^1I",421],["^ ","^1H",7,"^1I",421,"^O","self__4519__auto__"],["^ ","^1H",63,"^1I",421],["^ ","^1H",63,"^1I",421,"^O","cljs.core/seq"],["^ ","^1H",77,"^1I",421,"^O","seq4792"],["^ ","^1H",0,"^1I",424]],"~i6",[["^ ","^1H",0,"^1I",392,"^O","promesa.core/await"]]],"~i294",["^ ","~i5",[["^ ","^1H",70,"^1I",412,"^O","args"]]],"~i295",["^ ","~i2",[["^ ","^1H",0,"^1I",413]],"~i9",[["^ ","^1H",6,"^1I",413],["^ ","^1H",54,"^1I",413],["^ ","^1H",91,"^1I",413]],"^3E",[["^ ","^1H",6,"^1I",413,"^O","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2"]]]],"~:cljc",true],"~:cache-keys",["~#cmap",[["~:macro","^["],[1534380137000],["^1?","goog/math/math.js"],[1530991559994,"^10","~$goog.array","~$goog.asserts"],["^1?","goog/array/array.js"],[1530991559994,"^10","^4U"],["^1?","goog/debug/error.js"],[1530991559994,"^10"],["^1?","promesa/impl/scheduler.cljc"],[1535586406328,"^10","^[","^U"],["^1?","promesa/impl.cljc"],[1535586406328,"^10","^[","^U","~$org.bluebird"],["^1?","goog/dom/nodetype.js"],[1530991559994,"^10"],["^1?","goog/object/object.js"],[1530991559994,"^10"],"~:SHADOW-TIMESTAMP",[1535669979000,1534380137000],["^1?","goog/math/long.js"],[1530991559994,"^10","^4U","~$goog.reflect"],["^1?","goog/functions/functions.js"],[1530991559994,"^10"],["^1?","goog/structs/map.js"],[1530991559994,"^10","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["~:shadow.build.js-support/require","bluebird"],["~$shadow.js.shim.module$bluebird","shadow.js.shim.module$bluebird.js","^10"],["^1?","goog/asserts/asserts.js"],[1530991559994,"^10","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"],["^1?","goog/uri/uri.js"],[1530991559994,"^10","^4T","^4U","^54","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1?","goog/base.js"],[1530991559994],["^1?","promesa/core.cljc"],[1535586406328,"^10","^[","^U","^W","^Y"],["^1?","goog/structs/structs.js"],[1530991559994,"^10","^4T","^4["],["^1?","org/bluebird.cljs"],[1535669979047,"^10","^[","^51"],["^1?","goog/string/string.js"],[1530991559994,"^10"],["^1?","goog/reflect/reflect.js"],[1530991559994,"^10"],["^1?","goog/string/stringbuffer.js"],[1530991559994,"^10"],["^1?","promesa/protocols.cljc"],[1535586406328,"^10","^["],["^1?","goog/iter/iter.js"],[1530991559994,"^10","^4T","^4U","~$goog.functions","~$goog.math"],["^1?","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^54","^4[","^4T","~$goog.Uri","~$goog.string.StringBuffer"],["^1?","goog/math/integer.js"],[1530991559994,"^10"],["^1?","goog/uri/utils.js"],[1530991559994,"^10","^4T","^4U","^54"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","promesa/core.cljc","^7",25,"^8",5,"^9",25,"^:",17],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",null,"^G",["^H",["^I","^J","^K","^L","^M","^N"]],"~:shadow/js-access-properties",["^H",["any"]],"^O","^P","^S",null,"^T",["^ ","^U","^U","^V","^U","^W","^W","^X","^W","^Y","^Y","^Z","^Y","^[","^[","^10","^10"],"^11",["^H",["^12"]],"~:shadow/js-access-global",["^H",["Error"]],"^13",null,"~:defs",["^ ","~$timeout",["^ ","~:protocol-inline",null,"^5",["^ ","^6","promesa/core.cljc","^7",253,"^8",10,"^9",253,"^:",17,"~:arglists",["^16",["~$quote",["^16",[["~$p","~$t"],["~$p","~$t","~$v"]]]]],"~:doc","Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError","~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",3,"~:method-params",["^16",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5F",["^16",[["~$p","~$t"],["~$p","~$t","~$v"]]],"~:arglists-meta",["^16",[null,null]]]],"^O","~$promesa.core/timeout","^5J",false,"^6","promesa/core.cljc","^:",17,"^5I",["^ ","^5J",false,"^5K",3,"^5L",["^16",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5F",["^16",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5M",["^16",[null,null]]],"^5L",["^16",[["~$p","~$t"],["~$p","~$t","~$v"]]],"~:protocol-impl",null,"^5M",["^16",[null,null]],"^8",4,"^7",253,"^9",253,"^5K",3,"~:fn-var",true,"^5F",["^16",[["~$p","~$t"],["~$p","~$t","~$v"]]],"^5H","Returns a cancellable promise that will be fulfilled\n     with this promise's fulfillment value or rejection reason.\n     However, if this promise is not fulfilled or rejected\n     within `ms` milliseconds, the returned promise is cancelled\n     with a TimeoutError"],"~$Promise",["^ ","^O","~$promesa.core/Promise","^6","promesa/core.cljc","^7",43,"^8",10,"^9",43,"^:",30,"~:const",true,"^5",["^ ","^6","promesa/core.cljc","^7",43,"^8",23,"^9",43,"^:",30,"^5S",true],"~:tag","~$js"],"~$branch",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",149,"^8",7,"^9",149,"^:",13,"^5F",["^16",["^5G",["^16",[["~$p","~$success","~$failure"]]]]]],"^O","~$promesa.core/branch","^5J",false,"^6","promesa/core.cljc","^:",13,"^5L",["^16",[["~$p","^5W","^5X"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",149,"^9",149,"^5K",3,"^5P",true,"^5F",["^16",["^5G",["^16",[["~$p","^5W","^5X"]]]]]],"~$attempt",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",276,"^8",7,"^9",276,"^:",14,"^5F",["^16",["^5G",["^16",[["~$callback"]]]]],"^5H","A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback."],"^O","~$promesa.core/attempt","^5J",false,"^6","promesa/core.cljc","^:",14,"^5L",["^16",[["^5["]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",276,"^9",276,"^5K",1,"^5P",true,"^5F",["^16",["^5G",["^16",[["^5["]]]]],"^5H","A helper for start promise chain without worry about\n  synchronous or asynchronous exceptions. Returns a promise\n  resolved with the return value of the callback."],"^I",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",107,"^8",7,"^9",107,"^:",10,"^5F",["^16",["^5G",["^16",[["~$f","~$p"]]]]],"^5H","Apply a function to the promise value and\n  return a new promise with the result."],"^O","~$promesa.core/map","^5J",false,"^6","promesa/core.cljc","^:",10,"^5L",["^16",[["~$f","~$p"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",107,"^9",107,"^5K",2,"^5P",true,"^5F",["^16",["^5G",["^16",[["~$f","~$p"]]]]],"^5H","Apply a function to the promise value and\n  return a new promise with the result."],"^J",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",262,"^8",7,"^9",262,"^:",12,"^5F",["^16",["^5G",["^16",[["~$t"],["~$t","~$v"]]]]],"^5H","Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached.","^5I",["^ ","^5J",false,"^5K",2,"^5L",["^16",[["~$t"],["~$t","~$v"]]],"^5F",["^16",[["~$t"],["~$t","~$v"]]],"^5M",["^16",[null,null]]]],"^O","~$promesa.core/delay","^5J",false,"^6","promesa/core.cljc","^:",12,"^5I",["^ ","^5J",false,"^5K",2,"^5L",["^16",[["~$t"],["~$t","~$v"]]],"^5F",["^16",[["~$t"],["~$t","~$v"]]],"^5M",["^16",[null,null]]],"^5L",["^16",[["~$t"],["~$t","~$v"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",262,"^9",262,"^5K",2,"^5P",true,"^5F",["^16",[["~$t"],["~$t","~$v"]]],"^5H","Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached."],"~$resolved?",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",81,"^8",7,"^9",81,"^:",16,"^5F",["^16",["^5G",["^16",[["~$p"]]]]],"^5H","Returns true if promise `p` is already fulfilled."],"^O","~$promesa.core/resolved?","^5J",false,"^6","promesa/core.cljc","^:",16,"^5L",["^16",[["~$p"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",81,"^9",81,"^5K",1,"^5P",true,"^5F",["^16",["^5G",["^16",[["~$p"]]]]],"^5H","Returns true if promise `p` is already fulfilled."],"^K",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",113,"^8",7,"^9",113,"^:",13,"^5F",["^16",["^5G",["^16",[["~$f","~$p"]]]]],"^5H","Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator."],"^O","~$promesa.core/mapcat","^5J",false,"^6","promesa/core.cljc","^:",13,"^5L",["^16",[["~$f","~$p"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",113,"^9",113,"^5K",2,"^5P",true,"^5F",["^16",["^5G",["^16",[["~$f","~$p"]]]]],"^5H","Same as `map` but removes one level of\n  promise neesting. Useful when the map function\n  returns a promise instead of value.\n\n  In JS environment this function is analogous\n  to `map` because the promise abstraction overloads\n  the `map` operator."],"~$cancelled?",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",231,"^8",7,"^9",231,"^:",17,"^5F",["^16",["^5G",["^16",[["~$v"]]]]],"^5H","Return true if `v` is a cancelled promise."],"^O","~$promesa.core/cancelled?","^5J",false,"^6","promesa/core.cljc","^:",17,"^5L",["^16",[["~$v"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",231,"^9",231,"^5K",1,"^5P",true,"^5F",["^16",["^5G",["^16",[["~$v"]]]]],"^5H","Return true if `v` is a cancelled promise."],"^L",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",294,"^8",7,"^9",294,"^:",12,"^5F",["^16",["^5G",["^16",[["~$&","~$args"]]]]],"^5I",["^ ","^5J",true,"^5K",0,"^5L",[["^16",["^68"]]],"^5F",["^16",[["~$&","^68"]]],"^5M",["^16",[null]]]],"^O","~$promesa.core/await","^5J",true,"^6","promesa/core.cljc","^:",12,"^5I",["^ ","^5J",true,"^5K",0,"^5L",[["^16",["^68"]]],"^5F",["^16",[["~$&","^68"]]],"^5M",["^16",[null]]],"^5L",[["^16",["^68"]]],"^5O",null,"^5M",["^16",[null]],"^8",1,"^7",294,"^9",294,"^5K",0,"^5P",true,"^5F",["^16",[["~$&","^68"]]]],"~$bind",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",124,"^8",7,"^9",124,"^:",11,"^5F",["^16",["^5G",["^16",[["~$p","~$f"]]]]],"^5H","A chain helper for promises."],"^O","~$promesa.core/bind","^5J",false,"^6","promesa/core.cljc","^:",11,"^5L",["^16",[["~$p","~$f"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",124,"^9",124,"^5K",2,"^5P",true,"^5F",["^16",["^5G",["^16",[["~$p","~$f"]]]]],"^5H","A chain helper for promises."],"~$any",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",213,"^8",7,"^9",213,"^:",10,"^5F",["^16",["^5G",["^16",[["~$promises"]]]]],"^5H","Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled."],"^O","~$promesa.core/any","^5J",false,"^6","promesa/core.cljc","^:",10,"^5L",["^16",[["^6="]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",213,"^9",213,"^5K",1,"^5P",true,"^5F",["^16",["^5G",["^16",[["^6="]]]]],"^5H","Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled."],"~$finally",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",177,"^8",7,"^9",177,"^:",14,"^5F",["^16",["^5G",["^16",[["~$p","^5["]]]]],"^5H","Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected."],"^O","~$promesa.core/finally","^5J",false,"^6","promesa/core.cljc","^:",14,"^5L",["^16",[["~$p","^5["]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",177,"^9",177,"^5K",2,"^5P",true,"^5F",["^16",["^5G",["^16",[["~$p","^5["]]]]],"^5H","Attach handler to promise that will be\n  executed independently if promise is\n  resolved or rejected."],"~$schedule",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",47,"^8",7,"^9",47,"^:",15,"^5F",["^16",["^5G",["^16",[["~$ms","~$func"]]]]],"^5H","Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function."],"^O","~$promesa.core/schedule","^5J",false,"^6","promesa/core.cljc","^:",15,"^5L",["^16",[["^6B","^6C"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",47,"^9",47,"^5K",2,"^5P",true,"^5F",["^16",["^5G",["^16",[["^6B","^6C"]]]]],"^5H","Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function."],"~$promisify",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",238,"^8",7,"^9",238,"^:",16,"^5F",["^16",["^5G",["^16",[["~$callable"]]]]],"^5H","Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation)."],"^O","~$promesa.core/promisify","^5J",false,"^6","promesa/core.cljc","^:",16,"^5L",["^16",[["^6F"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",238,"^9",238,"^5K",1,"^5P",true,"^5F",["^16",["^5G",["^16",[["^6F"]]]]],"^5H","Given a function that accepts a callback as the last argument return other\n  function that returns a promise. Callback is expected to take single\n  parameter (result of a computation)."],"~$rejected",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",63,"^8",7,"^9",63,"^:",15,"^5F",["^16",["^5G",["^16",[["~$v"]]]]],"^5H","Return a rejected promise with provided reason."],"^O","~$promesa.core/rejected","^5J",false,"^6","promesa/core.cljc","^:",15,"^5L",["^16",[["~$v"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",63,"^9",63,"^5K",1,"^5P",true,"^5F",["^16",["^5G",["^16",[["~$v"]]]]],"^5H","Return a rejected promise with provided reason."],"^N",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",68,"^8",7,"^9",68,"^:",14,"^5F",["^16",["^5G",["^16",[["~$v"]]]]],"^5H","The promise constructor."],"^O","~$promesa.core/promise","^5J",false,"^6","promesa/core.cljc","^:",14,"^5L",["^16",[["~$v"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",68,"^9",68,"^5K",1,"^5P",true,"^5F",["^16",["^5G",["^16",[["~$v"]]]]],"^5H","The promise constructor."],"~$cancel!",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",225,"^8",7,"^9",225,"^:",14,"^5F",["^16",["^5G",["^16",[["~$p"]]]]],"^5H","Cancel the promise."],"^O","~$promesa.core/cancel!","^5J",false,"^6","promesa/core.cljc","^:",14,"^5L",["^16",[["~$p"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",225,"^9",225,"^5K",1,"^5P",true,"^5F",["^16",["^5G",["^16",[["~$p"]]]]],"^5H","Cancel the promise."],"~$done?",["^ ","^O","~$promesa.core/done?","^6","promesa/core.cljc","^7",101,"^8",1,"^9",101,"^:",11,"^5",["^ ","^6","promesa/core.cljc","^7",101,"^8",6,"^9",101,"^:",11],"^5H","Returns true if promise `p` is already done.","^5T","^6<"],"~$err",["^ ","^O","~$promesa.core/err","^6","promesa/core.cljc","^7",173,"^8",1,"^9",173,"^:",9,"^5",["^ ","^6","promesa/core.cljc","^7",173,"^8",6,"^9",173,"^:",9],"^5H","A short alias for `error` function."],"~$all",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",187,"^8",7,"^9",187,"^:",10,"^5F",["^16",["^5G",["^16",[["^6="]]]]],"^5H","Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled.\n\n  Example:\n\n  (-> (all [(promise :first-promise)\n            (promise :second-promise)]\n      (then (fn [[first-result second-result]]))\n       (println (str first-result \", \" second-result)\n\n  Will print out\n  :first-promise, :second-promise.\n\n  If at least one of the promises is rejected, the resulting promise will be\n  rejected."],"^O","~$promesa.core/all","^5J",false,"^6","promesa/core.cljc","^:",10,"^5L",["^16",[["^6="]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",187,"^9",187,"^5K",1,"^5P",true,"^5F",["^16",["^5G",["^16",[["^6="]]]]],"^5H","Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled.\n\n  Example:\n\n  (-> (all [(promise :first-promise)\n            (promise :second-promise)]\n      (then (fn [[first-result second-result]]))\n       (println (str first-result \", \" second-result)\n\n  Will print out\n  :first-promise, :second-promise.\n\n  If at least one of the promises is rejected, the resulting promise will be\n  rejected."],"~$promise?",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",73,"^8",7,"^9",73,"^:",15,"^5F",["^16",["^5G",["^16",[["~$v"]]]]],"^5H","Return true if `v` is a promise instance."],"^O","~$promesa.core/promise?","^5J",false,"^6","promesa/core.cljc","^:",15,"^5L",["^16",[["~$v"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",73,"^9",73,"^5K",1,"^5P",true,"^5F",["^16",["^5G",["^16",[["~$v"]]]]],"^5H","Return true if `v` is a promise instance."],"~$resolved",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",58,"^8",7,"^9",58,"^:",15,"^5F",["^16",["^5G",["^16",[["~$v"]]]]],"^5H","Return a resolved promise with provided value."],"^O","~$promesa.core/resolved","^5J",false,"^6","promesa/core.cljc","^:",15,"^5L",["^16",[["~$v"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",58,"^9",58,"^5K",1,"^5P",true,"^5F",["^16",["^5G",["^16",[["~$v"]]]]],"^5H","Return a resolved promise with provided value."],"~$catch",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",155,"^8",7,"^9",155,"^:",12,"^5F",["^16",["^5G",["^16",[["~$p","~$f"],["~$p","~$pred-or-type","~$f"]]]]],"^5H","Catch all promise chain helper.","^5I",["^ ","^5J",false,"^5K",3,"^5L",["^16",[["~$p","~$f"],["~$p","^6X","~$f"]]],"^5F",["^16",[["~$p","~$f"],["~$p","^6X","~$f"]]],"^5M",["^16",[null,null]]]],"^O","~$promesa.core/catch","^5J",false,"^6","promesa/core.cljc","^:",12,"^5I",["^ ","^5J",false,"^5K",3,"^5L",["^16",[["~$p","~$f"],["~$p","^6X","~$f"]]],"^5F",["^16",[["~$p","~$f"],["~$p","^6X","~$f"]]],"^5M",["^16",[null,null]]],"^5L",["^16",[["~$p","~$f"],["~$p","^6X","~$f"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",155,"^9",155,"^5K",3,"^5P",true,"^5F",["^16",[["~$p","~$f"],["~$p","^6X","~$f"]]],"^5H","Catch all promise chain helper."],"~$chain",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",144,"^8",7,"^9",144,"^:",12,"^5F",["^16",["^5G",["^16",[["~$p","~$&","~$funcs"]]]]],"^5H","Like then but accepts multiple parameters.","^5I",["^ ","^5J",true,"^5K",1,"^5L",[["^16",["~$p","^6["]]],"^5F",["^16",[["~$p","~$&","^6["]]],"^5M",["^16",[null]]]],"^O","~$promesa.core/chain","^5J",true,"^6","promesa/core.cljc","^:",12,"^5I",["^ ","^5J",true,"^5K",1,"^5L",[["^16",["~$p","^6["]]],"^5F",["^16",[["~$p","~$&","^6["]]],"^5M",["^16",[null]]],"^5L",[["^16",["~$p","^6["]]],"^5O",null,"^5M",["^16",[null]],"^8",1,"^7",144,"^9",144,"^5K",1,"^5P",true,"^5F",["^16",[["~$p","~$&","^6["]]],"^5H","Like then but accepts multiple parameters."],"~$rejected?",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",86,"^8",7,"^9",86,"^:",16,"^5F",["^16",["^5G",["^16",[["~$p"]]]]],"^5H","Returns true if promise `p` is already rejected."],"^O","~$promesa.core/rejected?","^5J",false,"^6","promesa/core.cljc","^:",16,"^5L",["^16",[["~$p"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",86,"^9",86,"^5K",1,"^5P",true,"^5F",["^16",["^5G",["^16",[["~$p"]]]]],"^5H","Returns true if promise `p` is already rejected."],"~$then",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",129,"^8",7,"^9",129,"^:",11,"^5F",["^16",["^5G",["^16",[["~$p","~$f"]]]]],"^5H","Similar to `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator.\n\n  Unlike Clojure's `map`, will resolve any promises\n  returned  by `f`."],"^O","~$promesa.core/then","^5J",false,"^6","promesa/core.cljc","^:",11,"^5L",["^16",[["~$p","~$f"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",129,"^9",129,"^5K",2,"^5P",true,"^5F",["^16",["^5G",["^16",[["~$p","~$f"]]]]],"^5H","Similar to `map` but with parameters inverted\n  for convenience and for familiarity with\n  javascript's promises `.then` operator.\n\n  Unlike Clojure's `map`, will resolve any promises\n  returned  by `f`."],"~$extract",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",96,"^8",7,"^9",96,"^:",14,"^5F",["^16",["^5G",["^16",[["~$p"]]]]],"^5H","Returns the current promise value."],"^O","~$promesa.core/extract","^5J",false,"^6","promesa/core.cljc","^:",14,"^5L",["^16",[["~$p"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",96,"^9",96,"^5K",1,"^5P",true,"^5F",["^16",["^5G",["^16",[["~$p"]]]]],"^5H","Returns the current promise value."],"~$error",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",168,"^8",7,"^9",168,"^:",12,"^5F",["^16",["^5G",["^16",[["~$f","~$p"],["~$f","~$type","~$p"]]]]],"^5H","Same as `catch` but with parameters inverted.","^5I",["^ ","^5J",false,"^5K",3,"^5L",["^16",[["~$f","~$p"],["~$f","^78","~$p"]]],"^5F",["^16",[["~$f","~$p"],["~$f","^78","~$p"]]],"^5M",["^16",[null,null]]]],"^O","~$promesa.core/error","^5J",false,"^6","promesa/core.cljc","^:",12,"^5I",["^ ","^5J",false,"^5K",3,"^5L",["^16",[["~$f","~$p"],["~$f","^78","~$p"]]],"^5F",["^16",[["~$f","~$p"],["~$f","^78","~$p"]]],"^5M",["^16",[null,null]]],"^5L",["^16",[["~$f","~$p"],["~$f","^78","~$p"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",168,"^9",168,"^5K",3,"^5P",true,"^5F",["^16",[["~$f","~$p"],["~$f","^78","~$p"]]],"^5H","Same as `catch` but with parameters inverted."],"~$pending?",["^ ","^5E",null,"^5",["^ ","^6","promesa/core.cljc","^7",91,"^8",7,"^9",91,"^:",15,"^5F",["^16",["^5G",["^16",[["~$p"]]]]],"^5H","Returns true if promise `p` is stil pending."],"^O","~$promesa.core/pending?","^5J",false,"^6","promesa/core.cljc","^:",15,"^5L",["^16",[["~$p"]]],"^5O",null,"^5M",["^16",[null,null]],"^8",1,"^7",91,"^9",91,"^5K",1,"^5P",true,"^5F",["^16",["^5G",["^16",[["~$p"]]]]],"^5H","Returns true if promise `p` is stil pending."]],"^14",["^ ","^[","^["],"~:cljs.analyzer/constants",["^ ","^11",["^H",["~:else"]],"~:order",["^7="]],"^1;",["^ ","^12",["^H",[]]],"^1<",["^ "],"^1=",["^10","^[","^U","^W","^Y"]],"^R","^P","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^4R",[["^7A","~:static-fns"],true,["^7A","~:elide-asserts"],false,["^7A","~:optimize-constants"],null,["^7A","~:external-config"],null,["^7A","~:tooling-config"],null,["^7A","~:emit-constants"],null,["^7A","~:infer-externs"],true,["^7A","^1D"],null,["~:js-options","~:js-provider"],"^12",["~:mode"],"~:dev",["^7A","~:fn-invoke-direct"],null,["^7A","^1F"],"/dev/null"]]]