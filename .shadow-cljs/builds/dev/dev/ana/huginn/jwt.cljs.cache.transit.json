["^ ","~:output",["^ ","~:js","goog.provide('huginn.jwt');\ngoog.require('cljs.core');\ngoog.require('clojure.string');\ngoog.require('promesa.core');\ngoog.require('cljs_node_io.core');\ngoog.require('cljs.nodejs');\ngoog.require('shadow.js.shim.module$jsonwebtoken');\nhuginn.jwt.round_now = (function huginn$jwt$round_now(){\nreturn ((Date.now() / (1000)) | (0));\n});\n/**\n * becuase env vars don't get assinged with newlines in resin\n */\nhuginn.jwt.clean_env_key = (function huginn$jwt$clean_env_key(private_key){\nif(cljs.core.truth_(private_key)){\nvar split = clojure.string.split.cljs$core$IFn$_invoke$arity$2(private_key,/ /);\nvar header = clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",cljs.core.take.cljs$core$IFn$_invoke$arity$2((3),split));\nvar footer = clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",cljs.core.take_last((3),split));\nvar body = cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2((3),cljs.core.drop.cljs$core$IFn$_invoke$arity$2((3),split));\nvar joined_body = clojure.string.join.cljs$core$IFn$_invoke$arity$2(\"\\n\",body);\nvar joined_text = clojure.string.join.cljs$core$IFn$_invoke$arity$2(\"\\n\",new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [header,joined_body,footer], null));\nreturn joined_text;\n} else {\nreturn null;\n}\n});\n/**\n * Builds a jwt with an experation\n */\nhuginn.jwt.create_jwt = (function huginn$jwt$create_jwt(p__2040){\nvar map__2041 = p__2040;\nvar map__2041__$1 = ((((!((map__2041 == null)))?(((((map__2041.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__2041.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__2041):map__2041);\nvar opts = map__2041__$1;\nvar projectId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2041__$1,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096));\nvar tokenExpMins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2041__$1,new cljs.core.Keyword(null,\"tokenExpMins\",\"tokenExpMins\",-1638711857));\nvar privateKey = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2041__$1,new cljs.core.Keyword(null,\"privateKey\",\"privateKey\",1845961641));\nvar privateKeyFile = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2041__$1,new cljs.core.Keyword(null,\"privateKeyFile\",\"privateKeyFile\",2040006267));\nvar algorithm = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2041__$1,new cljs.core.Keyword(null,\"algorithm\",\"algorithm\",739262820));\nvar token = ({\"iat\": huginn.jwt.round_now(), \"exp\": ((tokenExpMins * (60)) + huginn.jwt.round_now()), \"aud\": projectId});\nvar privKey = (function (){var or__3949__auto__ = huginn.jwt.clean_env_key(privateKey);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn cljs_node_io.core.slurp(privateKeyFile);\n}\n})();\nvar G__2043 = token;\nvar G__2044 = privKey;\nvar G__2045 = ({\"algorithm\": algorithm});\nreturn shadow.js.shim.module$jsonwebtoken.sign(G__2043,G__2044,G__2045);\n});\nhuginn.jwt.client_id = (function huginn$jwt$client_id(p__2049){\nvar map__2050 = p__2049;\nvar map__2050__$1 = ((((!((map__2050 == null)))?(((((map__2050.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__2050.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__2050):map__2050);\nvar opts = map__2050__$1;\nvar projectId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2050__$1,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096));\nvar registryId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2050__$1,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\nvar cloudRegion = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2050__$1,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214));\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2050__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"projects/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(projectId),\"/locations/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cloudRegion),\"/registries/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(registryId),\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId)].join('');\n});\n/**\n * builds connection args for connecting to mqtt\n *   The same args are used no matter what topic you\n *   are connecting too\n */\nhuginn.jwt.connection_args = (function huginn$jwt$connection_args(p__2053){\nvar map__2054 = p__2053;\nvar map__2054__$1 = ((((!((map__2054 == null)))?(((((map__2054.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__2054.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__2054):map__2054);\nvar opts = map__2054__$1;\nvar mqttBridgeHostname = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2054__$1,new cljs.core.Keyword(null,\"mqttBridgeHostname\",\"mqttBridgeHostname\",1814277029));\nvar mqttBridgePort = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2054__$1,new cljs.core.Keyword(null,\"mqttBridgePort\",\"mqttBridgePort\",1181584124));\nvar projectId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2054__$1,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096));\nvar privateKeyFile = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2054__$1,new cljs.core.Keyword(null,\"privateKeyFile\",\"privateKeyFile\",2040006267));\nvar algorithm = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2054__$1,new cljs.core.Keyword(null,\"algorithm\",\"algorithm\",739262820));\nreturn ({\"host\": mqttBridgeHostname, \"port\": mqttBridgePort, \"clean\": true, \"clientId\": huginn.jwt.client_id(opts), \"username\": \"unused\", \"password\": huginn.jwt.create_jwt(opts), \"protocol\": \"mqtts\", \"secureProtocol\": \"TLSv1_2_method\"});\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","huginn/jwt.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",15],"~:ns-aliases",["^ ","~$jsonwebtoken","~$shadow.js.shim.module$jsonwebtoken","~$mqtt","~$shadow.js.shim.module$mqtt","~$systeminformation","~$shadow.js.shim.module$systeminformation","~$clojure.core.async","~$cljs.core.async","~$raspicam","~$shadow.js.shim.module$raspicam"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$huginn.jwt","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$p","~$promesa.core","^O","^O","^<","^=","~$cljs.core","^P","~$io","~$cljs-node-io.core","~$goog","^S","~$cljs.nodejs","^T","^=","^=","~$nodejs","^T","^R","^R","~$jwt","^=","~$clojure.string","^W","~$st","^W"],"~:seen",["^H",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^P","^P"],"~:form",["~#list",["~$ns","^J",["^12",["^Z",["^W","~:as","^X"],["^O","^14","~$p"],["^R","^14","^Q"],["^T","^14","^U"],["^<","^14","^V"]]]]],"~:flags",["^ ","^Z",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^S","^P","^W","^O","^R","^T","^="]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","huginn/jwt.cljs"],"~:compiled-at",1539546666500,"~:resource-name","huginn/jwt.cljs","~:warnings",[],"~:source","(ns huginn.jwt\n  (:require\n   [clojure.string :as st]\n   [promesa.core :as p]\n   [cljs-node-io.core :as io]\n   [cljs.nodejs :as nodejs]\n   [jsonwebtoken :as jwt]))\n\n(defn round-now []\n  (int (/ (js/Date.now) 1000)))\n\n(defn clean-env-key\n  \"becuase env vars don't get assinged with newlines in resin\"\n  [private-key]\n  (when private-key\n    (let [split  (st/split private-key  #\" \")\n          header (st/join \" \" (take 3 split))\n          footer (st/join \" \" (take-last 3 split))\n          body   (drop-last 3 (drop 3 split))\n          joined-body (st/join \"\\n\" body)\n          joined-text (st/join \"\\n\" [header joined-body footer])]\n      joined-text)))\n\n(defn create-jwt\n  \"Builds a jwt with an experation\"\n  [{:keys [projectId tokenExpMins privateKey privateKeyFile algorithm] :as opts}]\n  (let [token\n        #js {:iat (round-now)\n             :exp (+ (* tokenExpMins 60) (round-now)) ;now + 20 min\n             :aud projectId}\n        privKey (or (clean-env-key privateKey) (io/slurp privateKeyFile))]\n    (jwt/sign token privKey #js {:algorithm algorithm })))\n\n(defn client-id\n  [{:keys [projectId registryId cloudRegion deviceId] :as opts}]\n  (str \"projects/\" projectId\n       \"/locations/\" cloudRegion\n       \"/registries/\" registryId\n       \"/devices/\" deviceId))\n\n\n(defn connection-args\n  \"builds connection args for connecting to mqtt\n  The same args are used no matter what topic you\n  are connecting too\"\n  [{:keys [mqttBridgeHostname mqttBridgePort projectId privateKeyFile algorithm] :as opts}]\n  #js {:host mqttBridgeHostname\n       :port mqttBridgePort\n       :clean true\n       :clientId (client-id opts)\n       :username \"unused\"\n       :password (create-jwt opts)\n       :protocol \"mqtts\"\n       :secureProtocol \"TLSv1_2_method\"})\n\n","~:reader-features",["^H",["~:cljs"]],"~:source-map",["^ ","~i8",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",7],["^ ","^1A",23,"^1B",7],["^ ","^1A",0,"^1B",8]],"~i6",[["^ ","^1A",0,"^1B",7,"^I","huginn.jwt/round-now"]]],"~i9",["^ ","~i2",[["^ ","^1A",0,"^1B",8],["^ ","^1A",32,"^1B",8]],"~i7",[["^ ","^1A",8,"^1B",8],["^ ","^1A",22,"^1B",8]],"~i10",[["^ ","^1A",9,"^1B",8]],"~i11",[["^ ","^1A",9,"^1B",8,"^I","js/Date.now"]]],"^1D",["^ ","~i0",[["^ ","^1A",0,"^1B",10],["^ ","^1A",27,"^1B",13],["^ ","^1A",0,"^1B",14]],"~i6",[["^ ","^1A",0,"^1B",13,"^I","huginn.jwt/clean-env-key"]]],"~i13",["^ ","~i3",[["^ ","^1A",62,"^1B",13,"^I","private-key"]]],"~i14",["^ ","~i2",[["^ ","^1A",0,"^1B",14],["^ ","^1A",0,"^1B",15],["^ ","^1A",0,"^1B",23]],"~i8",[["^ ","^1A",20,"^1B",14,"^I","private-key"]]],"~i15",["^ ","~i4",[["^ ","^1A",0,"^1B",15],["^ ","^1A",0,"^1B",21]],"^1C",[["^ ","^1A",4,"^1B",15,"^I","split"]],"~i17",[["^ ","^1A",12,"^1B",15],["^ ","^1A",75,"^1B",15]],"~i18",[["^ ","^1A",12,"^1B",15,"^I","clojure.string.split.cljs$core$IFn$_invoke$arity$2"]],"~i27",[["^ ","^1A",63,"^1B",15,"^I","private-key"]]],"~i16",["^ ","^1C",[["^ ","^1A",4,"^1B",16,"^I","header"]],"^1H",[["^ ","^1A",13,"^1B",16],["^ ","^1A",63,"^1B",16]],"^1I",[["^ ","^1A",13,"^1B",16,"^I","clojure.string.join.cljs$core$IFn$_invoke$arity$2"]],"~i30",[["^ ","^1A",67,"^1B",16],["^ ","^1A",112,"^1B",16]],"~i31",[["^ ","^1A",67,"^1B",16,"^I","cljs.core.take.cljs$core$IFn$_invoke$arity$2"]],"~i38",[["^ ","^1A",116,"^1B",16,"^I","split"]]],"^1H",["^ ","^1C",[["^ ","^1A",4,"^1B",17,"^I","footer"]],"^1H",[["^ ","^1A",13,"^1B",17],["^ ","^1A",63,"^1B",17]],"^1I",[["^ ","^1A",13,"^1B",17,"^I","clojure.string.join.cljs$core$IFn$_invoke$arity$2"]],"^1L",[["^ ","^1A",67,"^1B",17],["^ ","^1A",87,"^1B",17]],"^1M",[["^ ","^1A",67,"^1B",17,"^I","cljs.core/take-last"]],"~i43",[["^ ","^1A",91,"^1B",17,"^I","split"]]],"^1I",["^ ","^1C",[["^ ","^1A",4,"^1B",18,"^I","body"]],"^1H",[["^ ","^1A",11,"^1B",18],["^ ","^1A",61,"^1B",18]],"^1I",[["^ ","^1A",11,"^1B",18,"^I","cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2"]],"^1L",[["^ ","^1A",65,"^1B",18],["^ ","^1A",110,"^1B",18]],"^1M",[["^ ","^1A",65,"^1B",18,"^I","cljs.core.drop.cljs$core$IFn$_invoke$arity$2"]],"^1N",[["^ ","^1A",114,"^1B",18,"^I","split"]]],"~i19",["^ ","^1C",[["^ ","^1A",4,"^1B",19,"^I","joined-body"]],"~i22",[["^ ","^1A",18,"^1B",19],["^ ","^1A",68,"^1B",19]],"~i23",[["^ ","^1A",18,"^1B",19,"^I","clojure.string.join.cljs$core$IFn$_invoke$arity$2"]],"~i36",[["^ ","^1A",73,"^1B",19,"^I","body"]]],"~i20",["^ ","^1C",[["^ ","^1A",4,"^1B",20,"^I","joined-text"]],"^1Q",[["^ ","^1A",18,"^1B",20],["^ ","^1A",68,"^1B",20],["^ ","^1A",73,"^1B",20]],"^1R",[["^ ","^1A",18,"^1B",20,"^I","clojure.string.join.cljs$core$IFn$_invoke$arity$2"]],"~i37",[["^ ","^1A",156,"^1B",20,"^I","header"]],"~i44",[["^ ","^1A",163,"^1B",20,"^I","joined-body"]],"~i56",[["^ ","^1A",175,"^1B",20,"^I","footer"]]],"~i21",["^ ","~i6",[["^ ","^1A",0,"^1B",21,"^I","joined-text"]]],"^1R",["^ ","~i0",[["^ ","^1A",0,"^1B",26],["^ ","^1A",24,"^1B",29],["^ ","^1A",56,"^1B",29,"^I","p__2040"],["^ ","^1A",0,"^1B",30],["^ ","^1A",0,"^1B",30],["^ ","^1A",4,"^1B",30,"^I","map__2041"],["^ ","^1A",16,"^1B",30,"^I","p__2040"],["^ ","^1A",4,"^1B",31,"^I","map__2041"],["^ ","^1A",20,"^1B",31],["^ ","^1A",22,"^1B",31],["^ ","^1A",24,"^1B",31],["^ ","^1A",26,"^1B",31],["^ ","^1A",27,"^1B",31,"^I","map__2041"],["^ ","^1A",40,"^1B",31],["^ ","^1A",48,"^1B",31],["^ ","^1A",50,"^1B",31],["^ ","^1A",52,"^1B",31],["^ ","^1A",53,"^1B",31],["^ ","^1A",53,"^1B",31,"^I","map__2041"],["^ ","^1A",101,"^1B",31],["^ ","^1A",112,"^1B",31],["^ ","^1A",113,"^1B",31,"^I","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1A",145,"^1B",31],["^ ","^1A",145,"^1B",31,"^I","map__2041"],["^ ","^1A",175,"^1B",31],["^ ","^1A",180,"^1B",31],["^ ","^1A",187,"^1B",31],["^ ","^1A",195,"^1B",31],["^ ","^1A",195,"^1B",31,"^I","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",241,"^1B",31,"^I","cljs.core/hash-map"],["^ ","^1A",260,"^1B",31,"^I","map__2041"],["^ ","^1A",271,"^1B",31,"^I","map__2041"],["^ ","^1A",11,"^1B",32,"^I","map__2041"],["^ ","^1A",16,"^1B",33],["^ ","^1A",16,"^1B",33,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",60,"^1B",33,"^I","map__2041"],["^ ","^1A",74,"^1B",33],["^ ","^1A",19,"^1B",34],["^ ","^1A",19,"^1B",34,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",63,"^1B",34,"^I","map__2041"],["^ ","^1A",77,"^1B",34],["^ ","^1A",17,"^1B",35],["^ ","^1A",17,"^1B",35,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",61,"^1B",35,"^I","map__2041"],["^ ","^1A",75,"^1B",35],["^ ","^1A",21,"^1B",36],["^ ","^1A",21,"^1B",36,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",65,"^1B",36,"^I","map__2041"],["^ ","^1A",79,"^1B",36],["^ ","^1A",16,"^1B",37],["^ ","^1A",16,"^1B",37,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",60,"^1B",37,"^I","map__2041"],["^ ","^1A",74,"^1B",37],["^ ","^1A",0,"^1B",38]],"~i6",[["^ ","^1A",0,"^1B",29,"^I","huginn.jwt/create-jwt"]]],"~i25",["^ ","^1D",[["^ ","^1A",4,"^1B",33,"^I","projectId"]],"^1X",[["^ ","^1A",4,"^1B",34,"^I","tokenExpMins"]],"~i34",[["^ ","^1A",4,"^1B",35,"^I","privateKey"]],"~i45",[["^ ","^1A",4,"^1B",36,"^I","privateKeyFile"]],"~i60",[["^ ","^1A",4,"^1B",37,"^I","algorithm"]],"~i75",[["^ ","^1A",4,"^1B",32,"^I","opts"]]],"~i26",["^ ","~i2",[["^ ","^1A",0,"^1B",38],["^ ","^1A",12,"^1B",38],["^ ","^1A",0,"^1B",46]],"~i8",[["^ ","^1A",4,"^1B",38,"^I","token"]]],"^1J",["^ ","^1I",[["^ ","^1A",21,"^1B",38]],"^1P",[["^ ","^1A",21,"^1B",38,"^I","huginn.jwt/round-now"]]],"~i28",["^ ","^1I",[["^ ","^1A",52,"^1B",38]],"^1X",[["^ ","^1A",53,"^1B",38],["^ ","^1A",69,"^1B",38]],"~i24",[["^ ","^1A",54,"^1B",38,"^I","tokenExpMins"]],"~i41",[["^ ","^1A",77,"^1B",38]],"~i42",[["^ ","^1A",77,"^1B",38,"^I","huginn.jwt/round-now"]]],"~i29",["^ ","^1I",[["^ ","^1A",109,"^1B",38,"^I","projectId"]]],"^1L",["^ ","~i8",[["^ ","^1A",4,"^1B",39,"^I","privKey"]],"^1K",[["^ ","^1A",14,"^1B",39],["^ ","^1A",31,"^1B",39,"^I","or__3949__auto__"],["^ ","^1A",0,"^1B",40],["^ ","^1A",0,"^1B",40],["^ ","^1A",20,"^1B",40,"^I","or__3949__auto__"],["^ ","^1A",0,"^1B",41,"^I","or__3949__auto__"]],"^1T",[["^ ","^1A",50,"^1B",39]],"^1X",[["^ ","^1A",50,"^1B",39,"^I","huginn.jwt/clean-env-key"]],"~i35",[["^ ","^1A",75,"^1B",39,"^I","privateKey"]],"~i47",[["^ ","^1A",0,"^1B",43]],"~i48",[["^ ","^1A",7,"^1B",43,"^I","cljs-node-io.core/slurp"]],"~i57",[["^ ","^1A",31,"^1B",43,"^I","privateKeyFile"]]],"^1M",["^ ","~i4",[["^ ","^1A",0,"^1B",46],["^ ","^1A",4,"^1B",46,"^I","G__2043"],["^ ","^1A",4,"^1B",47,"^I","G__2044"],["^ ","^1A",4,"^1B",48,"^I","G__2045"],["^ ","^1A",14,"^1B",48],["^ ","^1A",0,"^1B",49],["^ ","^1A",0,"^1B",49],["^ ","^1A",47,"^1B",49,"^I","G__2043"],["^ ","^1A",55,"^1B",49,"^I","G__2044"],["^ ","^1A",63,"^1B",49,"^I","G__2045"]],"~i5",[["^ ","^1A",7,"^1B",49,"^I","js/shadow.js.shim.module$jsonwebtoken.sign"]],"^1F",[["^ ","^1A",14,"^1B",46,"^I","token"]],"^1T",[["^ ","^1A",14,"^1B",47,"^I","privKey"]],"^1V",[["^ ","^1A",29,"^1B",48,"^I","algorithm"]]],"~i33",["^ ","~i0",[["^ ","^1A",0,"^1B",51],["^ ","^1A",23,"^1B",51],["^ ","^1A",54,"^1B",51,"^I","p__2049"],["^ ","^1A",0,"^1B",52],["^ ","^1A",0,"^1B",52],["^ ","^1A",4,"^1B",52,"^I","map__2050"],["^ ","^1A",16,"^1B",52,"^I","p__2049"],["^ ","^1A",4,"^1B",53,"^I","map__2050"],["^ ","^1A",20,"^1B",53],["^ ","^1A",22,"^1B",53],["^ ","^1A",24,"^1B",53],["^ ","^1A",26,"^1B",53],["^ ","^1A",27,"^1B",53,"^I","map__2050"],["^ ","^1A",40,"^1B",53],["^ ","^1A",48,"^1B",53],["^ ","^1A",50,"^1B",53],["^ ","^1A",52,"^1B",53],["^ ","^1A",53,"^1B",53],["^ ","^1A",53,"^1B",53,"^I","map__2050"],["^ ","^1A",101,"^1B",53],["^ ","^1A",112,"^1B",53],["^ ","^1A",113,"^1B",53,"^I","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1A",145,"^1B",53],["^ ","^1A",145,"^1B",53,"^I","map__2050"],["^ ","^1A",175,"^1B",53],["^ ","^1A",180,"^1B",53],["^ ","^1A",187,"^1B",53],["^ ","^1A",195,"^1B",53],["^ ","^1A",195,"^1B",53,"^I","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",241,"^1B",53,"^I","cljs.core/hash-map"],["^ ","^1A",260,"^1B",53,"^I","map__2050"],["^ ","^1A",271,"^1B",53,"^I","map__2050"],["^ ","^1A",11,"^1B",54,"^I","map__2050"],["^ ","^1A",16,"^1B",55],["^ ","^1A",16,"^1B",55,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",60,"^1B",55,"^I","map__2050"],["^ ","^1A",74,"^1B",55],["^ ","^1A",17,"^1B",56],["^ ","^1A",17,"^1B",56,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",61,"^1B",56,"^I","map__2050"],["^ ","^1A",75,"^1B",56],["^ ","^1A",18,"^1B",57],["^ ","^1A",18,"^1B",57,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",62,"^1B",57,"^I","map__2050"],["^ ","^1A",76,"^1B",57],["^ ","^1A",15,"^1B",58],["^ ","^1A",15,"^1B",58,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",59,"^1B",58,"^I","map__2050"],["^ ","^1A",73,"^1B",58],["^ ","^1A",0,"^1B",59]],"~i6",[["^ ","^1A",0,"^1B",51,"^I","huginn.jwt/client-id"]]],"^1Z",["^ ","^1D",[["^ ","^1A",4,"^1B",55,"^I","projectId"]],"^1X",[["^ ","^1A",4,"^1B",56,"^I","registryId"]],"~i32",[["^ ","^1A",4,"^1B",57,"^I","cloudRegion"]],"^1V",[["^ ","^1A",4,"^1B",58,"^I","deviceId"]],"~i58",[["^ ","^1A",4,"^1B",54,"^I","opts"]]],"^28",["^ ","~i2",[["^ ","^1A",0,"^1B",59],["^ ","^1A",8,"^1B",59],["^ ","^1A",75,"^1B",59],["^ ","^1A",146,"^1B",59],["^ ","^1A",217,"^1B",59]],"^1P",[["^ ","^1A",64,"^1B",59,"^I","projectId"]]],"^1S",["^ ","^1X",[["^ ","^1A",133,"^1B",59,"^I","cloudRegion"]]],"^1U",["^ ","^1Q",[["^ ","^1A",205,"^1B",59,"^I","registryId"]]],"^1N",["^ ","^1P",[["^ ","^1A",273,"^1B",59,"^I","deviceId"]]],"^25",["^ ","~i0",[["^ ","^1A",0,"^1B",61],["^ ","^1A",29,"^1B",66],["^ ","^1A",66,"^1B",66,"^I","p__2053"],["^ ","^1A",0,"^1B",67],["^ ","^1A",0,"^1B",67],["^ ","^1A",4,"^1B",67,"^I","map__2054"],["^ ","^1A",16,"^1B",67,"^I","p__2053"],["^ ","^1A",4,"^1B",68,"^I","map__2054"],["^ ","^1A",20,"^1B",68],["^ ","^1A",22,"^1B",68],["^ ","^1A",24,"^1B",68],["^ ","^1A",26,"^1B",68],["^ ","^1A",27,"^1B",68,"^I","map__2054"],["^ ","^1A",40,"^1B",68],["^ ","^1A",48,"^1B",68],["^ ","^1A",50,"^1B",68],["^ ","^1A",52,"^1B",68],["^ ","^1A",53,"^1B",68],["^ ","^1A",53,"^1B",68,"^I","map__2054"],["^ ","^1A",101,"^1B",68],["^ ","^1A",112,"^1B",68],["^ ","^1A",113,"^1B",68,"^I","cljs.core/PROTOCOL_SENTINEL"],["^ ","^1A",145,"^1B",68],["^ ","^1A",145,"^1B",68,"^I","map__2054"],["^ ","^1A",175,"^1B",68],["^ ","^1A",180,"^1B",68],["^ ","^1A",187,"^1B",68],["^ ","^1A",195,"^1B",68],["^ ","^1A",195,"^1B",68,"^I","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",241,"^1B",68,"^I","cljs.core/hash-map"],["^ ","^1A",260,"^1B",68,"^I","map__2054"],["^ ","^1A",271,"^1B",68,"^I","map__2054"],["^ ","^1A",11,"^1B",69,"^I","map__2054"],["^ ","^1A",25,"^1B",70],["^ ","^1A",25,"^1B",70,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",69,"^1B",70,"^I","map__2054"],["^ ","^1A",83,"^1B",70],["^ ","^1A",21,"^1B",71],["^ ","^1A",21,"^1B",71,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",65,"^1B",71,"^I","map__2054"],["^ ","^1A",79,"^1B",71],["^ ","^1A",16,"^1B",72],["^ ","^1A",16,"^1B",72,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",60,"^1B",72,"^I","map__2054"],["^ ","^1A",74,"^1B",72],["^ ","^1A",21,"^1B",73],["^ ","^1A",21,"^1B",73,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",65,"^1B",73,"^I","map__2054"],["^ ","^1A",79,"^1B",73],["^ ","^1A",16,"^1B",74],["^ ","^1A",16,"^1B",74,"^I","cljs.core.get.cljs$core$IFn$_invoke$arity$2"],["^ ","^1A",60,"^1B",74,"^I","map__2054"],["^ ","^1A",74,"^1B",74],["^ ","^1A",0,"^1B",75],["^ ","^1A",0,"^1B",75],["^ ","^1A",70,"^1B",75],["^ ","^1A",128,"^1B",75],["^ ","^1A",191,"^1B",75],["^ ","^1A",218,"^1B",75]],"~i6",[["^ ","^1A",0,"^1B",66,"^I","huginn.jwt/connection-args"]]],"^1[",["^ ","^1D",[["^ ","^1A",4,"^1B",70,"^I","mqttBridgeHostname"]],"^1L",[["^ ","^1A",4,"^1B",71,"^I","mqttBridgePort"]],"^1[",[["^ ","^1A",4,"^1B",72,"^I","projectId"]],"~i55",[["^ ","^1A",4,"^1B",73,"^I","privateKeyFile"]],"~i70",[["^ ","^1A",4,"^1B",74,"^I","algorithm"]],"~i85",[["^ ","^1A",4,"^1B",69,"^I","opts"]]],"~i46",["^ ","^1E",[["^ ","^1A",17,"^1B",75,"^I","mqttBridgeHostname"]]],"^29",["^ ","^1E",[["^ ","^1A",45,"^1B",75,"^I","mqttBridgePort"]]],"~i49",["^ ","^1H",[["^ ","^1A",88,"^1B",75]],"^1I",[["^ ","^1A",88,"^1B",75,"^I","huginn.jwt/client-id"]],"^23",[["^ ","^1A",109,"^1B",75,"^I","opts"]]],"~i51",["^ ","^1H",[["^ ","^1A",150,"^1B",75]],"^1I",[["^ ","^1A",150,"^1B",75,"^I","huginn.jwt/create-jwt"]],"^27",[["^ ","^1A",172,"^1B",75,"^I","opts"]]]],"~:cljc",false],"~:cache-keys",["~#cmap",[["^19","cljs_node_io/file.cljs"],[1537666007418,"^S","^P","~$goog.Uri","~$cljs-node-io.streams","~$cljs-node-io.fs","~$cljs-node-io.protocols"],["^19","goog/dom/tagname.js"],[1530991559994,"^S","~$goog.dom.HtmlElement"],["^19","cljs/core/async/impl/ioc_helpers.cljs"],[1534380136417,"^S","^P","~$cljs.core.async.impl.protocols"],["~:macro","^P"],[1534380137000],["^19","cljs/core/async.cljs"],[1534380136417,"^S","^P","^2M","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers"],["^19","cljs/nodejs.cljs"],[1534380137690,"^S","^P"],["^19","cljs_node_io/fs.cljs"],[1537666007418,"^S","^P","^C","^2M"],["^19","cljs_node_io/core.cljs"],[1537666007418,"^S","^P","^C","^2M","~$cljs-node-io.file","^2I","^2K","^2H"],["^19","goog/math/math.js"],[1530991559994,"^S","~$goog.array","~$goog.asserts"],["^19","goog/labs/useragent/browser.js"],[1530991559994,"^S","^2U","~$goog.labs.userAgent.util","~$goog.object","~$goog.string"],["^19","goog/array/array.js"],[1530991559994,"^S","^2V"],["^19","cljs_node_io/protocols.cljs"],[1537666007418,"^S","^P"],["^2N","~$cljs.core.async.macros"],[1534380136000],["^19","cljs_node_io/streams.cljs"],[1537666007418,"^S","^P","^2H","^C","^2K"],["^19","goog/debug/error.js"],[1530991559994,"^S"],["^19","huginn/jwt.cljs"],[1539537129814,"^S","^P","^W","^O","^R","^T","^="],["^19","promesa/impl/scheduler.cljc"],[1535586406328,"^S","^P","~$promesa.protocols"],["^19","promesa/impl.cljc"],[1535586406328,"^S","^P","^2[","~$org.bluebird"],["^19","goog/dom/nodetype.js"],[1530991559994,"^S"],["^19","goog/object/object.js"],[1530991559994,"^S"],"~:SHADOW-TIMESTAMP",[1535989513000,1534380137000],["^19","goog/math/long.js"],[1530991559994,"^S","^2V","~$goog.reflect"],["^19","cljs/core/async/impl/channels.cljs"],[1534380136417,"^S","^P","^2M","^2R","^2P"],["^19","goog/functions/functions.js"],[1530991559994,"^S"],["^19","cljs/core/async/impl/dispatch.cljs"],[1534380136417,"^S","^P","^2P","~$goog.async.nextTick"],["^19","cljs/core/async/impl/protocols.cljs"],[1534380136417,"^S","^P"],["^19","goog/structs/map.js"],[1530991559994,"^S","~$goog.iter.Iterator","~$goog.iter.StopIteration","^2X"],["^19","goog/labs/useragent/engine.js"],[1530991559994,"^S","^2U","^2W","^2Y"],["~:shadow.build.js-support/require","bluebird"],["~$shadow.js.shim.module$bluebird","shadow.js.shim.module$bluebird.js","^S"],["^2N","~$cljs-node-io.macros"],[1537666007000],["^19","goog/asserts/asserts.js"],[1530991559994,"^S","~$goog.debug.Error","~$goog.dom.NodeType","^2Y"],["^19","cljs/core/async/impl/buffers.cljs"],[1534380136417,"^S","^P","^2M"],["^36","jsonwebtoken"],["^=","shadow.js.shim.module$jsonwebtoken.js","^S"],["^19","goog/uri/uri.js"],[1530991559994,"^S","^2U","^2V","^2Y","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^2N","^C"],[1534380136000],["^19","cljs/core/async/impl/timers.cljs"],[1534380136417,"^S","^P","^2M","^2O","^2R"],["^19","goog/base.js"],[1530991559994],["^19","promesa/core.cljc"],[1535586406328,"^S","^P","^2[","~$promesa.impl","~$promesa.impl.scheduler"],["^19","goog/structs/structs.js"],[1530991559994,"^S","^2U","^2X"],["^19","org/bluebird.cljs"],[1535669979047,"^S","^P","^37"],["^19","clojure/string.cljs"],[1534380137690,"^S","^P","^2Y","~$goog.string.StringBuffer"],["^19","goog/debug/entrypointregistry.js"],[1530991559994,"^S","^2V"],["^19","goog/string/string.js"],[1530991559994,"^S"],["^19","goog/reflect/reflect.js"],[1530991559994,"^S"],["^19","goog/labs/useragent/util.js"],[1530991559994,"^S","^2Y"],["^2N","~$cljs.core.async.impl.ioc-macros"],[1534380136000],["^19","goog/string/stringbuffer.js"],[1530991559994,"^S"],["^19","promesa/protocols.cljc"],[1535586406328,"^S","^P"],["^19","goog/iter/iter.js"],[1530991559994,"^S","^2U","^2V","~$goog.functions","~$goog.math"],["^19","goog/async/nexttick.js"],[1530991559994,"^S","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^3D","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"],["^19","goog/dom/htmlelement.js"],[1530991559994,"^S"],["^19","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^2Y","^2X","^2U","^2H","^3B"],["^19","goog/math/integer.js"],[1530991559994,"^S"],["^19","goog/uri/utils.js"],[1530991559994,"^S","^2U","^2V","^2Y"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","huginn/jwt.cljs","^7",1,"^8",5,"^9",1,"^:",15],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",null,"^G",["^H",[]],"~:shadow/js-access-properties",["^H",["now","sign"]],"^I","^J","^M",null,"^N",["^ ","~$p","^O","^O","^O","^<","^=","^P","^P","^Q","^R","^S","^S","^T","^T","^=","^=","^U","^T","^R","^R","^V","^=","^W","^W","^X","^W"],"^Y",["^H",["^Z"]],"~:shadow/js-access-global",["^H",["Date"]],"^[",null,"~:defs",["^ ","~$round-now",["^ ","~:protocol-inline",null,"^5",["^ ","^6","huginn/jwt.cljs","^7",9,"^8",7,"^9",9,"^:",16,"~:arglists",["^12",["~$quote",["^12",[[]]]]]],"^I","~$huginn.jwt/round-now","~:variadic",false,"^6","huginn/jwt.cljs","^:",16,"~:method-params",["^12",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^12",[null,null]],"^8",1,"^7",9,"^9",9,"~:max-fixed-arity",0,"~:fn-var",true,"^3R",["^12",["^3S",["^12",[[]]]]]],"~$clean-env-key",["^ ","^3Q",null,"^5",["^ ","^6","huginn/jwt.cljs","^7",12,"^8",7,"^9",12,"^:",20,"^3R",["^12",["^3S",["^12",[["~$private-key"]]]]],"~:doc","becuase env vars don't get assinged with newlines in resin"],"^I","~$huginn.jwt/clean-env-key","^3U",false,"^6","huginn/jwt.cljs","^:",20,"^3V",["^12",[["^40"]]],"^3W",null,"^3X",["^12",[null,null]],"^8",1,"^7",12,"^9",12,"^3Y",1,"^3Z",true,"^3R",["^12",["^3S",["^12",[["^40"]]]]],"^41","becuase env vars don't get assinged with newlines in resin"],"~$create-jwt",["^ ","^3Q",null,"^5",["^ ","^6","huginn/jwt.cljs","^7",24,"^8",7,"^9",24,"^:",17,"^3R",["^12",["^3S",["^12",[[["^ ","~:keys",["~$projectId","~$tokenExpMins","~$privateKey","~$privateKeyFile","~$algorithm"],"^14","~$opts"]]]]]],"^41","Builds a jwt with an experation"],"^I","~$huginn.jwt/create-jwt","^3U",false,"^6","huginn/jwt.cljs","^:",17,"^3V",["^12",[["~$p__2040"]]],"^3W",null,"^3X",["^12",[null,null]],"^8",1,"^7",24,"^9",24,"^3Y",1,"^3Z",true,"^3R",["^12",["^3S",["^12",[[["^ ","^44",["^45","^46","^47","^48","^49"],"^14","^4:"]]]]]],"^41","Builds a jwt with an experation"],"~$client-id",["^ ","^3Q",null,"^5",["^ ","^6","huginn/jwt.cljs","^7",34,"^8",7,"^9",34,"^:",16,"^3R",["^12",["^3S",["^12",[[["^ ","^44",["^45","~$registryId","~$cloudRegion","~$deviceId"],"^14","^4:"]]]]]]],"^I","~$huginn.jwt/client-id","^3U",false,"^6","huginn/jwt.cljs","^:",16,"^3V",["^12",[["~$p__2049"]]],"^3W",null,"^3X",["^12",[null,null]],"^8",1,"^7",34,"^9",34,"^3Y",1,"^3Z",true,"^3R",["^12",["^3S",["^12",[[["^ ","^44",["^45","^4>","^4?","^4@"],"^14","^4:"]]]]]]],"~$connection-args",["^ ","^3Q",null,"^5",["^ ","^6","huginn/jwt.cljs","^7",42,"^8",7,"^9",42,"^:",22,"^3R",["^12",["^3S",["^12",[[["^ ","^44",["~$mqttBridgeHostname","~$mqttBridgePort","^45","^48","^49"],"^14","^4:"]]]]]],"^41","builds connection args for connecting to mqtt\n  The same args are used no matter what topic you\n  are connecting too"],"^I","~$huginn.jwt/connection-args","^3U",false,"^6","huginn/jwt.cljs","^:",22,"^3V",["^12",[["~$p__2053"]]],"^3W",null,"^3X",["^12",[null,null]],"^8",1,"^7",42,"^9",42,"^3Y",1,"^3Z",true,"^3R",["^12",["^3S",["^12",[[["^ ","^44",["^4D","^4E","^45","^48","^49"],"^14","^4:"]]]]]],"^41","builds connection args for connecting to mqtt\n  The same args are used no matter what topic you\n  are connecting too"]],"^10",["^ ","^P","^P"],"~:cljs.analyzer/constants",["^ ","^Y",["^H",["~:cloudRegion","~:algorithm","~:mqttBridgeHostname","~:deviceId","~:privateKey","~:registryId","~:tokenExpMins","~:projectId","~:privateKeyFile","~:mqttBridgePort"]],"~:order",["^4P","^4O","^4M","^4Q","^4J","^4N","^4I","^4L","^4K","^4R"]],"^15",["^ ","^Z",["^H",[]]],"^16",["^ "],"^17",["^S","^P","^W","^O","^R","^T","^="]],"^L","^J","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^2G",[["^4V","~:static-fns"],true,["^4V","~:elide-asserts"],false,["^4V","~:optimize-constants"],null,["^4V","~:external-config"],null,["^4V","~:tooling-config"],null,["^4V","~:emit-constants"],null,["^4V","~:infer-externs"],true,["^4V","^1>"],null,["~:js-options","~:js-provider"],"^Z",["~:mode"],"~:dev",["^4V","~:fn-invoke-direct"],null,["^4V","^1@"],"/dev/null"]]]