["^ ","~:output",["^ ","~:js","goog.provide('huginn.mqtt');\ngoog.require('cljs.core');\ngoog.require('promesa.core');\ngoog.require('clojure.string');\ngoog.require('huginn.jwt');\ngoog.require('shadow.js.shim.module$gcic_mqtt_client');\ngoog.require('huginn.config');\ngoog.require('taoensso.timbre');\ngoog.require('cljs.core.async');\ngoog.require('shadow.js.shim.module$systeminformation');\ngoog.require('cljs.spec.alpha');\ngoog.require('cljs.nodejs');\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"partial\",\"cljs.core/partial\",1483172485,null),new cljs.core.Symbol(\"cljs.core\",\"instance?\",\"cljs.core/instance?\",2044751870,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core.async\",\"chan\",\"cljs.core.async/chan\",589627473,null))),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.instance_QMARK_,cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0()));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"events\",null,\"state\",null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"events\",null,\"state\",null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),null,null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__43798){\nreturn cljs.core.map_QMARK_(G__43798);\n}),(function (G__43798){\nreturn cljs.core.contains_QMARK_(G__43798,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096));\n}),(function (G__43798){\nreturn cljs.core.contains_QMARK_(G__43798,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\n}),(function (G__43798){\nreturn cljs.core.contains_QMARK_(G__43798,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214));\n}),(function (G__43798){\nreturn cljs.core.contains_QMARK_(G__43798,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\n})], null),(function (G__43798){\nreturn ((cljs.core.map_QMARK_(G__43798)) && (cljs.core.contains_QMARK_(G__43798,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096))) && (cljs.core.contains_QMARK_(G__43798,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006))) && (cljs.core.contains_QMARK_(G__43798,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214))) && (cljs.core.contains_QMARK_(G__43798,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096),new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006),new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214),new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208)))], null),null])));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__43799#\",\"p1__43799#\",376630145,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"p1__43799#\",\"p1__43799#\",376630145,null)),(200000)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)),(200000)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_,(function (p1__43799_SHARP_){\nreturn (cljs.core.count(p1__43799_SHARP_) < (200000));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__43800#\",\"p1__43800#\",-1761424044,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"p1__43800#\",\"p1__43800#\",-1761424044,null)),(200)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)),(200)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_,(function (p1__43800_SHARP_){\nreturn (cljs.core.count(p1__43800_SHARP_) < (200));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"ts\",\"huginn.mqtt/ts\",2127118637),new cljs.core.Symbol(\"cljs.core\",\"float?\",\"cljs.core/float?\",-941017745,null),cljs.core.float_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),new cljs.core.Keyword(\"huginn.mqtt\",\"ts\",\"huginn.mqtt/ts\",2127118637)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),new cljs.core.Keyword(\"huginn.mqtt\",\"ts\",\"huginn.mqtt/ts\",2127118637)], null),null,null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__43801){\nreturn cljs.core.map_QMARK_(G__43801);\n}),(function (G__43801){\nreturn cljs.core.contains_QMARK_(G__43801,new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092));\n}),(function (G__43801){\nreturn cljs.core.contains_QMARK_(G__43801,new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439));\n}),(function (G__43801){\nreturn cljs.core.contains_QMARK_(G__43801,new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904));\n})], null),(function (G__43801){\nreturn ((cljs.core.map_QMARK_(G__43801)) && (cljs.core.contains_QMARK_(G__43801,new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092))) && (cljs.core.contains_QMARK_(G__43801,new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439))) && (cljs.core.contains_QMARK_(G__43801,new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),new cljs.core.Keyword(\"huginn.mqtt\",\"ts\",\"huginn.mqtt/ts\",2127118637)], null),null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904)))], null),null])));\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"client-id\",\"huginn.mqtt/client-id\",1699900680,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),null,null),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),null,null,null));\n/**\n * Builds a client id used to identify the device this message is\n *   comming from\n */\nhuginn.mqtt.client_id = (function huginn$mqtt$client_id(p__43802){\nvar map__43803 = p__43802;\nvar map__43803__$1 = ((((!((map__43803 == null)))?(((((map__43803.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43803.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43803):map__43803);\nvar opts = map__43803__$1;\nvar projectId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43803__$1,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096));\nvar registryId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43803__$1,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\nvar cloudRegion = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43803__$1,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214));\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43803__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"projects/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(projectId),\"/locations/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cloudRegion),\"/registries/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(registryId),\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId)].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"config-chan\",\"huginn.mqtt/config-chan\",-1665797133,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__43805){\nreturn cljs.core.map_QMARK_(G__43805);\n}),(function (G__43805){\nreturn cljs.core.contains_QMARK_(G__43805,new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099));\n})], null),(function (G__43805){\nreturn ((cljs.core.map_QMARK_(G__43805)) && (cljs.core.contains_QMARK_(G__43805,new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)))], null),null])),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),null,null,null));\n/**\n * google give each device two channeles, a state channel (the config channel)\n *   and a telemetry channel (the one that we push all our data over). The name of\n *   these channels are determined by google iot core.\n */\nhuginn.mqtt.config_chan = (function huginn$mqtt$config_chan(p__43806){\nvar map__43807 = p__43806;\nvar map__43807__$1 = ((((!((map__43807 == null)))?(((((map__43807.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43807.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43807):map__43807);\nvar opts = map__43807__$1;\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43807__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId),\"/config\"].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"client-handlers\",\"huginn.mqtt/client-handlers\",1114981143,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.fn_QMARK_,cljs.core.fn_QMARK_,new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\n/**\n * builds a map of handels to attach to the mqtt object\n */\nhuginn.mqtt.client_handlers = (function huginn$mqtt$client_handlers(success_fn,fail,send,recv){\nreturn new cljs.core.PersistentArrayMap(null, 5, [\"connect\",(function (success){\nif(cljs.core.truth_(success)){\nreturn (success_fn.cljs$core$IFn$_invoke$arity$0 ? success_fn.cljs$core$IFn$_invoke$arity$0() : success_fn.call(null));\n} else {\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"huginn.mqtt\",null,81,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"client connection failure\"], null);\n}),null)),null,-1999812550);\n\nreturn (fail.cljs$core$IFn$_invoke$arity$0 ? fail.cljs$core$IFn$_invoke$arity$0() : fail.call(null));\n}\n}),\"close\",(function (){\nreturn null;\n}),\"reconnect\",(function (){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"huginn.mqtt\",null,84,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"reconnecting\"], null);\n}),null)),null,1785704999);\n}),\"error\",(function (err){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"huginn.mqtt\",null,85,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"error: \",err], null);\n}),null)),null,717740289);\n}),\"message\",(function (topic,message,packet){\nvar c__23855__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto__){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto__){\nreturn (function (state_43815){\nvar state_val_43816 = (state_43815[(1)]);\nif((state_val_43816 === (1))){\nvar inst_43809 = [new cljs.core.Keyword(null,\"topic\",\"topic\",-1960480691),new cljs.core.Keyword(null,\"message\",\"message\",-406056002),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081)];\nvar inst_43810 = [topic,message,packet];\nvar inst_43811 = cljs.core.PersistentHashMap.fromArrays(inst_43809,inst_43810);\nvar state_43815__$1 = state_43815;\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_43815__$1,(2),recv,inst_43811);\n} else {\nif((state_val_43816 === (2))){\nvar inst_43813 = (state_43815[(2)]);\nvar state_43815__$1 = state_43815;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_43815__$1,inst_43813);\n} else {\nreturn null;\n}\n}\n});})(c__23855__auto__))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto__){\nreturn (function() {\nvar huginn$mqtt$client_handlers_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$client_handlers_$_state_machine__23691__auto____0 = (function (){\nvar statearr_43817 = [null,null,null,null,null,null,null];\n(statearr_43817[(0)] = huginn$mqtt$client_handlers_$_state_machine__23691__auto__);\n\n(statearr_43817[(1)] = (1));\n\nreturn statearr_43817;\n});\nvar huginn$mqtt$client_handlers_$_state_machine__23691__auto____1 = (function (state_43815){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_43815);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e43818){if((e43818 instanceof Object)){\nvar ex__23694__auto__ = e43818;\nvar statearr_43819_44004 = state_43815;\n(statearr_43819_44004[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_43815);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e43818;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__44006 = state_43815;\nstate_43815 = G__44006;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$client_handlers_$_state_machine__23691__auto__ = function(state_43815){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$client_handlers_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$client_handlers_$_state_machine__23691__auto____1.call(this,state_43815);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$client_handlers_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$client_handlers_$_state_machine__23691__auto____0;\nhuginn$mqtt$client_handlers_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$client_handlers_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$client_handlers_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto__))\n})();\nvar state__23857__auto__ = (function (){var statearr_43820 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_43820[(6)] = c__23855__auto__);\n\nreturn statearr_43820;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto__))\n);\n\nreturn c__23855__auto__;\n})], null);\n});\n/**\n * takes a map of handlers and attaches them to the mqtt object\n */\nhuginn.mqtt.add_handlers = (function huginn$mqtt$add_handlers(client,handlers){\nvar seq__43821 = cljs.core.seq(handlers);\nvar chunk__43822 = null;\nvar count__43823 = (0);\nvar i__43824 = (0);\nwhile(true){\nif((i__43824 < count__43823)){\nvar vec__43825 = chunk__43822.cljs$core$IIndexed$_nth$arity$2(null,i__43824);\nvar key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43825,(0),null);\nvar hand = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43825,(1),null);\nclient.on(key,hand);\n\n\nvar G__44007 = seq__43821;\nvar G__44008 = chunk__43822;\nvar G__44009 = count__43823;\nvar G__44010 = (i__43824 + (1));\nseq__43821 = G__44007;\nchunk__43822 = G__44008;\ncount__43823 = G__44009;\ni__43824 = G__44010;\ncontinue;\n} else {\nvar temp__5457__auto__ = cljs.core.seq(seq__43821);\nif(temp__5457__auto__){\nvar seq__43821__$1 = temp__5457__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__43821__$1)){\nvar c__4351__auto__ = cljs.core.chunk_first(seq__43821__$1);\nvar G__44014 = cljs.core.chunk_rest(seq__43821__$1);\nvar G__44015 = c__4351__auto__;\nvar G__44016 = cljs.core.count(c__4351__auto__);\nvar G__44017 = (0);\nseq__43821 = G__44014;\nchunk__43822 = G__44015;\ncount__43823 = G__44016;\ni__43824 = G__44017;\ncontinue;\n} else {\nvar vec__43828 = cljs.core.first(seq__43821__$1);\nvar key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43828,(0),null);\nvar hand = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43828,(1),null);\nclient.on(key,hand);\n\n\nvar G__44031 = cljs.core.next(seq__43821__$1);\nvar G__44032 = null;\nvar G__44033 = (0);\nvar G__44034 = (0);\nseq__43821 = G__44031;\nchunk__43822 = G__44032;\ncount__43823 = G__44033;\ni__43824 = G__44034;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"build-client\",\"huginn.mqtt/build-client\",-620852627,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),null,null),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\nhuginn.mqtt.build_client = (function huginn$mqtt$build_client(opts){\n\nvar conn_args = huginn.jwt.google_iot_conn_args(opts);\nvar client = (new shadow.js.shim.module$gcic_mqtt_client(conn_args));\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),client], null);\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"init-client\",\"huginn.mqtt/init-client\",-283765885,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"promesa.core\",\"promise?\",\"promesa.core/promise?\",-1893544292,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"promesa.core\",\"promise?\",\"promesa.core/promise?\",-1893544292,null),promesa.core.promise_QMARK_,null,null),new cljs.core.Symbol(\"promesa.core\",\"promise?\",\"promesa.core/promise?\",-1893544292,null),null,null,null));\nhuginn.mqtt.init_client = (function huginn$mqtt$init_client(opts,send,recv){\n\nreturn promesa.core.promise((function (resolve,reject){\nvar map__43831 = huginn.mqtt.build_client(opts);\nvar map__43831__$1 = ((((!((map__43831 == null)))?(((((map__43831.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43831.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43831):map__43831);\nvar init = map__43831__$1;\nvar client = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43831__$1,new cljs.core.Keyword(null,\"client\",\"client\",-1323448117));\nvar handlers = huginn.mqtt.client_handlers(((function (map__43831,map__43831__$1,init,client){\nreturn (function (){\nreturn (resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(client) : resolve.call(null,client));\n});})(map__43831,map__43831__$1,init,client))\n,((function (map__43831,map__43831__$1,init,client){\nreturn (function (){\nvar G__43833 = new cljs.core.Keyword(null,\"client-fail\",\"client-fail\",1564298304);\nreturn (reject.cljs$core$IFn$_invoke$arity$1 ? reject.cljs$core$IFn$_invoke$arity$1(G__43833) : reject.call(null,G__43833));\n});})(map__43831,map__43831__$1,init,client))\n,send,recv);\nclient.subscribe(huginn.mqtt.config_chan(opts));\n\nreturn huginn.mqtt.add_handlers(client,handlers);\n}));\n});\n/**\n * builds the prefix of the actual values being sent\n *   (str (payload-root config) sensor-name /  sensor-value)\n */\nhuginn.mqtt.payload_root = (function huginn$mqtt$payload_root(p__43834){\nvar map__43835 = p__43834;\nvar map__43835__$1 = ((((!((map__43835 == null)))?(((((map__43835.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43835.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43835):map__43835);\nvar opts = map__43835__$1;\nvar registryId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43835__$1,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\nvar userId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43835__$1,new cljs.core.Keyword(null,\"userId\",\"userId\",575594135));\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43835__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(registryId),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(userId),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId),\"-payload\"].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"mqtt-topic\",\"huginn.mqtt/mqtt-topic\",-2087820524,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),null,null,null));\n/**\n * msg-type can be 'state' for state updates\n * or 'events' to publish telemetry\n */\nhuginn.mqtt.mqtt_topic = (function huginn$mqtt$mqtt_topic(p__43837,msg_type){\nvar map__43838 = p__43837;\nvar map__43838__$1 = ((((!((map__43838 == null)))?(((((map__43838.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43838.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43838):map__43838);\nvar opts = map__43838__$1;\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43838__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg_type)].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"prep-temps\",\"huginn.mqtt/prep-temps\",-1223395116,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"data\",\"data\",-232669377)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.core.any_QMARK_], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),null,new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__43840){\nreturn cljs.core.coll_QMARK_(G__43840);\n}),new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))], null),null),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)),null,null,null));\n/**\n * pulls the data out of the systeminformation library and wrapping them up\n *   to be sent into mqtt\n */\nhuginn.mqtt.prep_temps = (function huginn$mqtt$prep_temps(opts,data){\nvar pr = huginn.mqtt.payload_root(opts);\nvar cores_raw = cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(data.cores);\nvar cores = cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(((function (pr,cores_raw){\nreturn (function (index,value){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(pr),\"-core-temp-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(index),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(value)].join(''))].join(''),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),[\"metrics/core-temp-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(index)].join(''),new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904),huginn.jwt.round_now()], null);\n});})(pr,cores_raw))\n,cores_raw);\nvar main = (cljs.core.truth_(data.main)?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(pr),\"-core-temp-main/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(data.main)].join(''))].join(''),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),\"metrics/core-temp-main\",new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904),huginn.jwt.round_now()], null):null);\nvar max = (cljs.core.truth_(data.max)?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(pr),\"-core-temp-max/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(data.max)].join(''))].join(''),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),\"metrics/core-temp-max\",new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904),huginn.jwt.round_now()], null):null);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [main], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [max], null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cores], 0));\n});\nhuginn.mqtt.stop = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"publish-one\",\"huginn.mqtt/publish-one\",1981166109,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.any_QMARK_,new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\n/**\n * Publises one mqtt packet to the client\n */\nhuginn.mqtt.publish_one = (function huginn$mqtt$publish_one(client,p__43841){\nvar map__43842 = p__43841;\nvar map__43842__$1 = ((((!((map__43842 == null)))?(((((map__43842.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43842.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43842):map__43842);\nvar p = map__43842__$1;\nvar topic = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43842__$1,new cljs.core.Keyword(null,\"topic\",\"topic\",-1960480691));\nvar payload = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43842__$1,new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092));\nvar qos = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43842__$1,new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319));\nreturn client.publishEvent(payload,qos,topic);\n});\n/**\n * main loop that pushes packets added to the send-chan to google iot core\n */\nhuginn.mqtt.publisher = (function huginn$mqtt$publisher(client_atom,send_chan){\nvar c__23855__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto__){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto__){\nreturn (function (state_43853){\nvar state_val_43854 = (state_43853[(1)]);\nif((state_val_43854 === (1))){\nvar state_43853__$1 = state_43853;\nvar statearr_43855_44049 = state_43853__$1;\n(statearr_43855_44049[(2)] = null);\n\n(statearr_43855_44049[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43854 === (2))){\nvar state_43853__$1 = state_43853;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_43853__$1,(4),send_chan);\n} else {\nif((state_val_43854 === (3))){\nvar inst_43851 = (state_43853[(2)]);\nvar state_43853__$1 = state_43853;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_43853__$1,inst_43851);\n} else {\nif((state_val_43854 === (4))){\nvar inst_43846 = (state_43853[(2)]);\nvar inst_43847 = cljs.core.deref(client_atom);\nvar inst_43848 = huginn.mqtt.publish_one(inst_43847,inst_43846);\nvar state_43853__$1 = (function (){var statearr_43856 = state_43853;\n(statearr_43856[(7)] = inst_43848);\n\nreturn statearr_43856;\n})();\nvar statearr_43857_44052 = state_43853__$1;\n(statearr_43857_44052[(2)] = null);\n\n(statearr_43857_44052[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n});})(c__23855__auto__))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto__){\nreturn (function() {\nvar huginn$mqtt$publisher_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$publisher_$_state_machine__23691__auto____0 = (function (){\nvar statearr_43858 = [null,null,null,null,null,null,null,null];\n(statearr_43858[(0)] = huginn$mqtt$publisher_$_state_machine__23691__auto__);\n\n(statearr_43858[(1)] = (1));\n\nreturn statearr_43858;\n});\nvar huginn$mqtt$publisher_$_state_machine__23691__auto____1 = (function (state_43853){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_43853);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e43859){if((e43859 instanceof Object)){\nvar ex__23694__auto__ = e43859;\nvar statearr_43860_44056 = state_43853;\n(statearr_43860_44056[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_43853);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e43859;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__44058 = state_43853;\nstate_43853 = G__44058;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$publisher_$_state_machine__23691__auto__ = function(state_43853){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$publisher_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$publisher_$_state_machine__23691__auto____1.call(this,state_43853);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$publisher_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$publisher_$_state_machine__23691__auto____0;\nhuginn$mqtt$publisher_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$publisher_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$publisher_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto__))\n})();\nvar state__23857__auto__ = (function (){var statearr_43861 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_43861[(6)] = c__23855__auto__);\n\nreturn statearr_43861;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto__))\n);\n\nreturn c__23855__auto__;\n});\n/**\n * loops and refreshs the client atom every token experation.\n *   Mqtt requires that you refresh your token frequently (less then 20 mins)\n */\nhuginn.mqtt.client_refresher = (function huginn$mqtt$client_refresher(client_atom,p__43862,send,recv){\nvar map__43863 = p__43862;\nvar map__43863__$1 = ((((!((map__43863 == null)))?(((((map__43863.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43863.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43863):map__43863);\nvar opts = map__43863__$1;\nvar tokenExpMins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43863__$1,new cljs.core.Keyword(null,\"tokenExpMins\",\"tokenExpMins\",-1638711857));\nvar delayMs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43863__$1,new cljs.core.Keyword(null,\"delayMs\",\"delayMs\",-1017330168));\nvar client_send_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar client_mixer = cljs.core.async.mix(client_send_chan);\ncljs.core.async.admix(client_mixer,send);\n\nvar c__23855__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto__,client_send_chan,client_mixer,map__43863,map__43863__$1,opts,tokenExpMins,delayMs){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto__,client_send_chan,client_mixer,map__43863,map__43863__$1,opts,tokenExpMins,delayMs){\nreturn (function (state_43888){\nvar state_val_43889 = (state_43888[(1)]);\nif((state_val_43889 === (1))){\nvar state_43888__$1 = state_43888;\nvar statearr_43890_44061 = state_43888__$1;\n(statearr_43890_44061[(2)] = null);\n\n(statearr_43890_44061[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43889 === (2))){\nvar inst_43866 = (tokenExpMins * (1000));\nvar inst_43867 = (inst_43866 * (60));\nvar inst_43868 = cljs.core.async.timeout(inst_43867);\nvar state_43888__$1 = state_43888;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_43888__$1,(4),inst_43868);\n} else {\nif((state_val_43889 === (3))){\nvar inst_43886 = (state_43888[(2)]);\nvar state_43888__$1 = state_43888;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_43888__$1,inst_43886);\n} else {\nif((state_val_43889 === (4))){\nvar inst_43870 = (state_43888[(2)]);\nvar inst_43871 = (function (){var wait = inst_43870;\nreturn ((function (wait,inst_43870,state_val_43889,c__23855__auto__,client_send_chan,client_mixer,map__43863,map__43863__$1,opts,tokenExpMins,delayMs){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"\\tRefreshing token after \",((tokenExpMins * (1000)) * (60)),\"ms\"], null);\n});\n;})(wait,inst_43870,state_val_43889,c__23855__auto__,client_send_chan,client_mixer,map__43863,map__43863__$1,opts,tokenExpMins,delayMs))\n})();\nvar inst_43872 = (new cljs.core.Delay(inst_43871,null));\nvar inst_43873 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"huginn.mqtt\",null,206,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),inst_43872,null,-699916392);\nvar inst_43874 = [send];\nvar inst_43875 = [new cljs.core.Keyword(null,\"pause\",\"pause\",-2095325672)];\nvar inst_43876 = [true];\nvar inst_43877 = cljs.core.PersistentHashMap.fromArrays(inst_43875,inst_43876);\nvar inst_43878 = [inst_43877];\nvar inst_43879 = cljs.core.PersistentHashMap.fromArrays(inst_43874,inst_43878);\nvar inst_43880 = cljs.core.async.toggle(client_mixer,inst_43879);\nvar inst_43881 = cljs.core.deref(client_atom);\nvar inst_43882 = (function (){var wait = inst_43870;\nreturn ((function (wait,inst_43870,inst_43871,inst_43872,inst_43873,inst_43874,inst_43875,inst_43876,inst_43877,inst_43878,inst_43879,inst_43880,inst_43881,state_val_43889,c__23855__auto__,client_send_chan,client_mixer,map__43863,map__43863__$1,opts,tokenExpMins,delayMs){\nreturn (function (){\n(cljs.core.deref(client_atom)[\"password\"] = cljs.core.clj__GT_js(huginn.jwt.create_jwt(opts)));\n\nreturn cljs.core.deref(client_atom).reconnect(((function (wait,inst_43870,inst_43871,inst_43872,inst_43873,inst_43874,inst_43875,inst_43876,inst_43877,inst_43878,inst_43879,inst_43880,inst_43881,state_val_43889,c__23855__auto__,client_send_chan,client_mixer,map__43863,map__43863__$1,opts,tokenExpMins,delayMs){\nreturn (function (){\nreturn cljs.core.async.toggle(client_mixer,cljs.core.PersistentArrayMap.createAsIfByAssoc([send,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"pause\",\"pause\",-2095325672),false], null)]));\n});})(wait,inst_43870,inst_43871,inst_43872,inst_43873,inst_43874,inst_43875,inst_43876,inst_43877,inst_43878,inst_43879,inst_43880,inst_43881,state_val_43889,c__23855__auto__,client_send_chan,client_mixer,map__43863,map__43863__$1,opts,tokenExpMins,delayMs))\n);\n});\n;})(wait,inst_43870,inst_43871,inst_43872,inst_43873,inst_43874,inst_43875,inst_43876,inst_43877,inst_43878,inst_43879,inst_43880,inst_43881,state_val_43889,c__23855__auto__,client_send_chan,client_mixer,map__43863,map__43863__$1,opts,tokenExpMins,delayMs))\n})();\nvar inst_43883 = inst_43881.end(inst_43882);\nvar state_43888__$1 = (function (){var statearr_43891 = state_43888;\n(statearr_43891[(7)] = inst_43880);\n\n(statearr_43891[(8)] = inst_43873);\n\n(statearr_43891[(9)] = inst_43883);\n\nreturn statearr_43891;\n})();\nvar statearr_43892_44066 = state_43888__$1;\n(statearr_43892_44066[(2)] = null);\n\n(statearr_43892_44066[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n});})(c__23855__auto__,client_send_chan,client_mixer,map__43863,map__43863__$1,opts,tokenExpMins,delayMs))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto__,client_send_chan,client_mixer,map__43863,map__43863__$1,opts,tokenExpMins,delayMs){\nreturn (function() {\nvar huginn$mqtt$client_refresher_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$client_refresher_$_state_machine__23691__auto____0 = (function (){\nvar statearr_43893 = [null,null,null,null,null,null,null,null,null,null];\n(statearr_43893[(0)] = huginn$mqtt$client_refresher_$_state_machine__23691__auto__);\n\n(statearr_43893[(1)] = (1));\n\nreturn statearr_43893;\n});\nvar huginn$mqtt$client_refresher_$_state_machine__23691__auto____1 = (function (state_43888){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_43888);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e43894){if((e43894 instanceof Object)){\nvar ex__23694__auto__ = e43894;\nvar statearr_43895_44069 = state_43888;\n(statearr_43895_44069[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_43888);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e43894;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__44071 = state_43888;\nstate_43888 = G__44071;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$client_refresher_$_state_machine__23691__auto__ = function(state_43888){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$client_refresher_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$client_refresher_$_state_machine__23691__auto____1.call(this,state_43888);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$client_refresher_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$client_refresher_$_state_machine__23691__auto____0;\nhuginn$mqtt$client_refresher_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$client_refresher_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$client_refresher_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto__,client_send_chan,client_mixer,map__43863,map__43863__$1,opts,tokenExpMins,delayMs))\n})();\nvar state__23857__auto__ = (function (){var statearr_43896 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_43896[(6)] = c__23855__auto__);\n\nreturn statearr_43896;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto__,client_send_chan,client_mixer,map__43863,map__43863__$1,opts,tokenExpMins,delayMs))\n);\n\nreturn c__23855__auto__;\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"tele-chan\",\"huginn.mqtt/tele-chan\",1912072830,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),null,null),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),null,null),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),null,null,null));\n/**\n * takes the client opts and builds a channel with system telementry\n *   values on it (cpu tempratures specifically)\n */\nhuginn.mqtt.tele_chan = (function huginn$mqtt$tele_chan(opts){\nvar temp_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar out_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar c__23855__auto___44072 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto___44072,temp_chan,out_chan){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto___44072,temp_chan,out_chan){\nreturn (function (state_43911){\nvar state_val_43912 = (state_43911[(1)]);\nif((state_val_43912 === (1))){\nvar state_43911__$1 = state_43911;\nvar statearr_43913_44073 = state_43911__$1;\n(statearr_43913_44073[(2)] = null);\n\n(statearr_43913_44073[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43912 === (2))){\nvar inst_43899 = shadow.js.shim.module$systeminformation.cpuTemperature();\nvar inst_43900 = (function (){return ((function (inst_43899,state_val_43912,c__23855__auto___44072,temp_chan,out_chan){\nreturn (function (p1__43897_SHARP_){\nreturn huginn.mqtt.prep_temps(opts,p1__43897_SHARP_);\n});\n;})(inst_43899,state_val_43912,c__23855__auto___44072,temp_chan,out_chan))\n})();\nvar inst_43901 = (function (){return ((function (inst_43899,inst_43900,state_val_43912,c__23855__auto___44072,temp_chan,out_chan){\nreturn (function (mqtt_packets){\nvar c__23855__auto____$1 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto____$1,inst_43899,inst_43900,state_val_43912,c__23855__auto___44072,temp_chan,out_chan){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto____$1,inst_43899,inst_43900,state_val_43912,c__23855__auto___44072,temp_chan,out_chan){\nreturn (function (state_43922){\nvar state_val_43923 = (state_43922[(1)]);\nif((state_val_43923 === (1))){\nvar inst_43914 = ((1000) * (60));\nvar inst_43915 = (inst_43914 * (1));\nvar inst_43916 = cljs.core.async.timeout(inst_43915);\nvar state_43922__$1 = state_43922;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_43922__$1,(2),inst_43916);\n} else {\nif((state_val_43923 === (2))){\nvar inst_43918 = (state_43922[(2)]);\nvar state_43922__$1 = (function (){var statearr_43924 = state_43922;\n(statearr_43924[(7)] = inst_43918);\n\nreturn statearr_43924;\n})();\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_43922__$1,(3),temp_chan,mqtt_packets);\n} else {\nif((state_val_43923 === (3))){\nvar inst_43920 = (state_43922[(2)]);\nvar state_43922__$1 = state_43922;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_43922__$1,inst_43920);\n} else {\nreturn null;\n}\n}\n}\n});})(c__23855__auto____$1,inst_43899,inst_43900,state_val_43912,c__23855__auto___44072,temp_chan,out_chan))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto____$1,inst_43899,inst_43900,state_val_43912,c__23855__auto___44072,temp_chan,out_chan){\nreturn (function() {\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto____0 = (function (){\nvar statearr_43925 = [null,null,null,null,null,null,null,null];\n(statearr_43925[(0)] = huginn$mqtt$tele_chan_$_state_machine__23691__auto__);\n\n(statearr_43925[(1)] = (1));\n\nreturn statearr_43925;\n});\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto____1 = (function (state_43922){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_43922);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e43926){if((e43926 instanceof Object)){\nvar ex__23694__auto__ = e43926;\nvar statearr_43927_44077 = state_43922;\n(statearr_43927_44077[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_43922);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e43926;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__44078 = state_43922;\nstate_43922 = G__44078;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__ = function(state_43922){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto____1.call(this,state_43922);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$tele_chan_$_state_machine__23691__auto____0;\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$tele_chan_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto____$1,inst_43899,inst_43900,state_val_43912,c__23855__auto___44072,temp_chan,out_chan))\n})();\nvar state__23857__auto__ = (function (){var statearr_43928 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_43928[(6)] = c__23855__auto____$1);\n\nreturn statearr_43928;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto____$1,inst_43899,inst_43900,state_val_43912,c__23855__auto___44072,temp_chan,out_chan))\n);\n\nreturn c__23855__auto____$1;\n});\n;})(inst_43899,inst_43900,state_val_43912,c__23855__auto___44072,temp_chan,out_chan))\n})();\nvar inst_43902 = promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic(inst_43899,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([inst_43900,inst_43901], 0));\nvar state_43911__$1 = (function (){var statearr_43929 = state_43911;\n(statearr_43929[(7)] = inst_43902);\n\nreturn statearr_43929;\n})();\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_43911__$1,(4),temp_chan);\n} else {\nif((state_val_43912 === (3))){\nvar inst_43909 = (state_43911[(2)]);\nvar state_43911__$1 = state_43911;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_43911__$1,inst_43909);\n} else {\nif((state_val_43912 === (4))){\nvar inst_43904 = (state_43911[(2)]);\nvar state_43911__$1 = state_43911;\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_43911__$1,(5),out_chan,inst_43904);\n} else {\nif((state_val_43912 === (5))){\nvar inst_43906 = (state_43911[(2)]);\nvar state_43911__$1 = (function (){var statearr_43930 = state_43911;\n(statearr_43930[(8)] = inst_43906);\n\nreturn statearr_43930;\n})();\nvar statearr_43931_44079 = state_43911__$1;\n(statearr_43931_44079[(2)] = null);\n\n(statearr_43931_44079[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n});})(c__23855__auto___44072,temp_chan,out_chan))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto___44072,temp_chan,out_chan){\nreturn (function() {\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto____0 = (function (){\nvar statearr_43932 = [null,null,null,null,null,null,null,null,null];\n(statearr_43932[(0)] = huginn$mqtt$tele_chan_$_state_machine__23691__auto__);\n\n(statearr_43932[(1)] = (1));\n\nreturn statearr_43932;\n});\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto____1 = (function (state_43911){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_43911);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e43933){if((e43933 instanceof Object)){\nvar ex__23694__auto__ = e43933;\nvar statearr_43934_44080 = state_43911;\n(statearr_43934_44080[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_43911);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e43933;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__44081 = state_43911;\nstate_43911 = G__44081;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__ = function(state_43911){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto____1.call(this,state_43911);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$tele_chan_$_state_machine__23691__auto____0;\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$tele_chan_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto___44072,temp_chan,out_chan))\n})();\nvar state__23857__auto__ = (function (){var statearr_43935 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_43935[(6)] = c__23855__auto___44072);\n\nreturn statearr_43935;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto___44072,temp_chan,out_chan))\n);\n\n\nreturn out_chan;\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"sender\",\"huginn.mqtt/sender\",-581128399,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\n/**\n * takes information for the tele-chan in the form of collections of\n *   mqtt-packets and assignes a default topic if a subfolder is set,\n *   adds a default qos. Then takes the resulting structures and puts\n *   them on to the send channel. waits for :delayMs between collections \n */\nhuginn.mqtt.sender = (function huginn$mqtt$sender(topic_name,opts,send,t_chan){\nvar c__23855__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto__){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto__){\nreturn (function (state_43960){\nvar state_val_43961 = (state_43960[(1)]);\nif((state_val_43961 === (1))){\nvar state_43960__$1 = state_43960;\nvar statearr_43962_44082 = state_43960__$1;\n(statearr_43962_44082[(2)] = null);\n\n(statearr_43962_44082[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43961 === (2))){\nvar state_43960__$1 = state_43960;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_43960__$1,(4),t_chan);\n} else {\nif((state_val_43961 === (3))){\nvar inst_43958 = (state_43960[(2)]);\nvar state_43960__$1 = state_43960;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_43960__$1,inst_43958);\n} else {\nif((state_val_43961 === (4))){\nvar inst_43938 = (state_43960[(2)]);\nvar inst_43939 = huginn.mqtt.mqtt_topic(opts,topic_name);\nvar inst_43940 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"state\",topic_name);\nvar state_43960__$1 = (function (){var statearr_43963 = state_43960;\n(statearr_43963[(7)] = inst_43938);\n\n(statearr_43963[(8)] = inst_43939);\n\nreturn statearr_43963;\n})();\nif(inst_43940){\nvar statearr_43964_44083 = state_43960__$1;\n(statearr_43964_44083[(1)] = (5));\n\n} else {\nvar statearr_43965_44084 = state_43960__$1;\n(statearr_43965_44084[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43961 === (5))){\nvar inst_43938 = (state_43960[(7)]);\nvar inst_43939 = (state_43960[(8)]);\nvar inst_43942 = (function (){var teles = inst_43938;\nvar topic = inst_43939;\nvar qos = ({\"qos\": (1)});\nreturn ((function (teles,topic,qos,inst_43938,inst_43939,state_val_43961,c__23855__auto__){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"pushing state\",topic], null);\n});\n;})(teles,topic,qos,inst_43938,inst_43939,state_val_43961,c__23855__auto__))\n})();\nvar inst_43943 = (new cljs.core.Delay(inst_43942,null));\nvar inst_43944 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"huginn.mqtt\",null,261,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),inst_43943,null,-396292316);\nvar state_43960__$1 = state_43960;\nvar statearr_43966_44085 = state_43960__$1;\n(statearr_43966_44085[(2)] = inst_43944);\n\n(statearr_43966_44085[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43961 === (6))){\nvar state_43960__$1 = state_43960;\nvar statearr_43967_44086 = state_43960__$1;\n(statearr_43967_44086[(2)] = null);\n\n(statearr_43967_44086[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_43961 === (7))){\nvar inst_43938 = (state_43960[(7)]);\nvar inst_43939 = (state_43960[(8)]);\nvar inst_43947 = (state_43960[(2)]);\nvar inst_43949 = (function (){var teles = inst_43938;\nvar topic = inst_43939;\nvar qos = ({\"qos\": (1)});\nreturn ((function (teles,topic,qos,inst_43938,inst_43939,inst_43947,state_val_43961,c__23855__auto__){\nreturn (function (p__43948){\nvar map__43968 = p__43948;\nvar map__43968__$1 = ((((!((map__43968 == null)))?(((((map__43968.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43968.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43968):map__43968);\nvar mqtt_packet = map__43968__$1;\nvar subfolder = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43968__$1,new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439));\nvar my_topic = (cljs.core.truth_(subfolder)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(topic),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(subfolder)].join(''):topic);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(mqtt_packet,new cljs.core.Keyword(null,\"topic\",\"topic\",-1960480691),my_topic),new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319),qos);\n});\n;})(teles,topic,qos,inst_43938,inst_43939,inst_43947,state_val_43961,c__23855__auto__))\n})();\nvar inst_43950 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(inst_43949,inst_43938);\nvar inst_43951 = cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(send,inst_43950,false);\nvar inst_43952 = new cljs.core.Keyword(null,\"delayMs\",\"delayMs\",-1017330168).cljs$core$IFn$_invoke$arity$1(opts);\nvar inst_43953 = cljs.core.async.timeout(inst_43952);\nvar state_43960__$1 = (function (){var statearr_43970 = state_43960;\n(statearr_43970[(9)] = inst_43947);\n\n(statearr_43970[(10)] = inst_43951);\n\nreturn statearr_43970;\n})();\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_43960__$1,(8),inst_43953);\n} else {\nif((state_val_43961 === (8))){\nvar inst_43955 = (state_43960[(2)]);\nvar state_43960__$1 = (function (){var statearr_43971 = state_43960;\n(statearr_43971[(11)] = inst_43955);\n\nreturn statearr_43971;\n})();\nvar statearr_43972_44087 = state_43960__$1;\n(statearr_43972_44087[(2)] = null);\n\n(statearr_43972_44087[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__23855__auto__))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto__){\nreturn (function() {\nvar huginn$mqtt$sender_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$sender_$_state_machine__23691__auto____0 = (function (){\nvar statearr_43973 = [null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_43973[(0)] = huginn$mqtt$sender_$_state_machine__23691__auto__);\n\n(statearr_43973[(1)] = (1));\n\nreturn statearr_43973;\n});\nvar huginn$mqtt$sender_$_state_machine__23691__auto____1 = (function (state_43960){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_43960);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e43974){if((e43974 instanceof Object)){\nvar ex__23694__auto__ = e43974;\nvar statearr_43975_44088 = state_43960;\n(statearr_43975_44088[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_43960);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e43974;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__44089 = state_43960;\nstate_43960 = G__44089;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$sender_$_state_machine__23691__auto__ = function(state_43960){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$sender_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$sender_$_state_machine__23691__auto____1.call(this,state_43960);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$sender_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$sender_$_state_machine__23691__auto____0;\nhuginn$mqtt$sender_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$sender_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$sender_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto__))\n})();\nvar state__23857__auto__ = (function (){var statearr_43976 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_43976[(6)] = c__23855__auto__);\n\nreturn statearr_43976;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto__))\n);\n\nreturn c__23855__auto__;\n});\nhuginn.mqtt.state_send = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(huginn.mqtt.sender,\"state\");\nhuginn.mqtt.tele_send = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(huginn.mqtt.sender,\"events\");\nhuginn.mqtt.clean_up = (function huginn$mqtt$clean_up(p__43977){\nvar map__43978 = p__43977;\nvar map__43978__$1 = ((((!((map__43978 == null)))?(((((map__43978.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__43978.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__43978):map__43978);\nvar system = map__43978__$1;\nvar send_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43978__$1,new cljs.core.Keyword(null,\"send-chan\",\"send-chan\",1681189602));\nvar recv_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43978__$1,new cljs.core.Keyword(null,\"recv-chan\",\"recv-chan\",869238850));\nvar telemetry_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43978__$1,new cljs.core.Keyword(null,\"telemetry-chan\",\"telemetry-chan\",-1991836503));\nvar state_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43978__$1,new cljs.core.Keyword(null,\"state-chan\",\"state-chan\",-1042477017));\nvar client_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__43978__$1,new cljs.core.Keyword(null,\"client-atom\",\"client-atom\",-1733084110));\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,\"Killing system\",\"huginn.mqtt\",null,282,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (map__43978,map__43978__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom){\nreturn (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n});})(map__43978,map__43978__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom))\n,null)),null,1246326258);\n\ncljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (map__43978,map__43978__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom){\nreturn (function (c){\nreturn cljs.core.async.close_BANG_(c);\n});})(map__43978,map__43978__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom))\n,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [send_chan,recv_chan,state_chan,telemetry_chan], null)));\n\nreturn cljs.core.deref(client_atom).end();\n});\n/**\n * the heart of the system lies here.\n *   This function takes options (config/default-options works well)\n *   It returns a map\n *   This map has\n *   :send-chan A channel you can use to directly send messages of mqtt, must be of the\n *   form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n *   :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n *   :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n *   (google publishes these values to a differnt pubsub channel then device telemetry)\n *   :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n *   are sent in the same batch, the same is true for stat-chan.\n *   :client-atom, contains the current version of the mqtt client. This is an atom so\n *   that the client-refersher can refresh the authentication token and swap it.\n *   this pattern also ensures only one client\n * \n *   payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you\n */\nhuginn.mqtt.system_function = (function huginn$mqtt$system_function(opts){\nvar send = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar recv = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar kill = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\nvar client_promise = huginn.mqtt.init_client(opts,send,recv);\nvar client_atom = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\nvar t_chan = huginn.mqtt.tele_chan(opts);\nvar state_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nreturn promesa.core.then(client_promise,((function (send,recv,kill,client_promise,client_atom,t_chan,state_chan){\nreturn (function (client){\ncljs.core.reset_BANG_(client_atom,client);\n\nhuginn.mqtt.publisher(client_atom,send);\n\n(huginn.mqtt.tele_send.cljs$core$IFn$_invoke$arity$3 ? huginn.mqtt.tele_send.cljs$core$IFn$_invoke$arity$3(opts,send,t_chan) : huginn.mqtt.tele_send.call(null,opts,send,t_chan));\n\n(huginn.mqtt.state_send.cljs$core$IFn$_invoke$arity$3 ? huginn.mqtt.state_send.cljs$core$IFn$_invoke$arity$3(opts,send,state_chan) : huginn.mqtt.state_send.call(null,opts,send,state_chan));\n\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"send-chan\",\"send-chan\",1681189602),send,new cljs.core.Keyword(null,\"recv-chan\",\"recv-chan\",869238850),recv,new cljs.core.Keyword(null,\"state-chan\",\"state-chan\",-1042477017),state_chan,new cljs.core.Keyword(null,\"telemetry-chan\",\"telemetry-chan\",-1991836503),t_chan,new cljs.core.Keyword(null,\"client-atom\",\"client-atom\",-1733084110),client_atom], null);\n});})(send,recv,kill,client_promise,client_atom,t_chan,state_chan))\n);\n});\n/**\n * Feed the system promise to this and it will kill it\n */\nhuginn.mqtt.kill_it = (function huginn$mqtt$kill_it(system_promise){\nreturn promesa.core.then(system_promise,huginn.mqtt.clean_up);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","huginn/mqtt.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$jsonwebtoken","~$shadow.js.shim.module$jsonwebtoken","~$systeminformation","~$shadow.js.shim.module$systeminformation","~$clojure.core.async","~$cljs.core.async","~$raspicam","~$shadow.js.shim.module$raspicam"],"~:use-macros",["^ ","~$get-env","~$taoensso.timbre","~$log","^F","~$logf","^F","~$reportf","^F","~$fatalf","^F","~$warnf","^F","~$report","^F","~$spy","^F","~$warn","^F","~$trace","^F","~$debug","^F","~$debugf","^F","~$tracef","^F","~$infof","^F","~$fatal","^F","~$errorf","^F","~$info","^F","~$error","^F"],"~:excludes",["~#set",[]],"~:name","~$huginn.mqtt","~:js-aliases",["^ ","gcic-mqtt-client","~$shadow.js.shim.module$gcic_mqtt_client"],"~:op","~:ns","~:imports",null,"~:requires",["^ ","^12","^12","~$p","~$promesa.core","^17","^17","~$timbre","^F","~$a","^A","~$si","^?","~$huginn.config","^1:","~$cljs.core","^1;","~$goog","^1<","^A","^A","^>","^?","~$config","^1:","~$cljs.nodejs","^1>","~$huginn.jwt","^1?","~$nodejs","^1>","~$s","~$cljs.spec.alpha","~$mqtt","^12","~$jw","^1?","^F","^F","^?","^?","~$clojure.string","^1D","~$st","^1D","^1A","^1A"],"~:seen",["^Y",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^F","^F","^18","^F","^1;","^1;","~$a","^A","^A","^A","~$s","^1A","^1A","^1A"],"~:form",["~#list",["~$ns","^[",["^1K",["^1G",["^17","~:as","~$p"],["^1D","^1M","^1E"],["^1?","^1M","^1C"],["gcic-mqtt-client","^1M","^1B"],["^1:","^1M","^1="],["^F","^1M","^18","~:refer-macros",["^G","^O","^P","^V","^N","^W","^T","^L","^H","^R","^Q","^S","^K","^U","^J","^I","^M","^E"]],["^A","^1M","~$a"],["^>","^1M","^19"],["^1A","^1M","~$s"],["^1>","^1M","^1@"]]]]],"~:flags",["^ ","^1G",["^Y",[]]],"~:js-deps",["^ ","^11",["^ ","^1M","^1B"]],"~:deps",["^1<","^1;","^17","^1D","^1?","^12","^1:","^F","^A","^?","^1A","^1>"]],"^14","^[","~:resource-id",["~:shadow.build.classpath/resource","huginn/mqtt.cljs"],"~:compiled-at",1540155426255,"~:resource-name","huginn/mqtt.cljs","~:warnings",[],"~:source","(ns huginn.mqtt\n  (:require\n   [promesa.core :as p]\n   [clojure.string :as st]\n   [huginn.jwt :as jw]\n   [\"gcic-mqtt-client\" :as mqtt]\n   [huginn.config :as config]\n   [taoensso.timbre :as timbre\n    :refer-macros [log  trace  debug  info  warn  error  fatal  report\n                   logf tracef debugf infof warnf errorf fatalf reportf\n                   spy get-env]]\n   [cljs.core.async :as a]\n   [systeminformation :as si]\n   [cljs.spec.alpha :as s]\n   [cljs.nodejs :as nodejs]))\n\n\n\n(s/def ::projectId string?)\n(s/def ::registryId string?)\n(s/def ::cloudRegion string?)\n(s/def ::deviceId string?)\n(s/def ::chan (partial instance? (a/chan)))\n\n(s/def ::topic-type #{\"events\" \"state\"})\n\n\n(s/def ::client-config (s/keys :req-un\n                               [::projectId\n                                ::registryId\n                                ::cloudRegion\n                                ::deviceId]))\n\n(s/def ::payload (s/and string? #(< ( count %) 200000)))\n(s/def ::subfolder (s/and string? #(< (count %) 200)))\n(s/def ::ts float?)\n\n(s/def ::mqtt-packet\n  (s/keys :req-un [::payload\n                   ::subfolder\n                   ::ts]))\n\n(s/fdef client-id\n  :args ::client-config\n  :ret  string?)\n\n\n(defn client-id\n  \"Builds a client id used to identify the device this message is\n  comming from\"\n  [{:keys [projectId registryId cloudRegion deviceId] :as opts}]\n  (str \"projects/\" projectId\n       \"/locations/\" cloudRegion\n       \"/registries/\" registryId\n       \"/devices/\" deviceId))\n\n(s/fdef config-chan\n  :args (s/keys :req [::deviceId])\n  :ret string?)\n(defn config-chan\n  \"google give each device two channeles, a state channel (the config channel)\n  and a telemetry channel (the one that we push all our data over). The name of\n  these channels are determined by google iot core.\"\n  [{:keys [deviceId] :as opts}]\n  (str \"/devices/\" deviceId \"/config\"))\n\n(s/fdef client-handlers\n  :args (s/cat :success-fn fn?\n               :fail       fn?\n               :send       ::chan\n               :recv       ::chan))\n\n(defn client-handlers\n  \"builds a map of handels to attach to the mqtt object\"\n  [success-fn fail send recv]\n  {\"connect\" (fn [success]\n               (if success\n                 (do\n                   (success-fn))\n                 (do\n                   (debug \"client connection failure\")\n                   (fail))))\n   \"close\"   (fn [] )\n   \"reconnect\" (fn [] (info \"reconnecting\"))\n   \"error\"   (fn [err] (error \"error: \" err))\n   \"message\" (fn [topic message packet]\n               (a/go\n                 (a/>! recv {:topic topic\n                             :message message\n                             :packet packet})))})\n\n\n(defn add-handlers\n  \"takes a map of handlers and attaches them to the mqtt object\"\n  [client handlers]\n  (doseq [[key hand] handlers]\n    (.on client key hand)))\n\n(s/fdef build-client\n  :args ::client-config)\n\n(defn build-client [opts]\n  \"builds the mqtt client using the client-config\nthe mqtt client is responsible for holding on to\nauth to talk to google iot core. The mqtt client\nis also responsible for actually pushing the data\nto google iot core.\"\n  (let [conn-args (jw/google-iot-conn-args opts)\n        client    (mqtt. conn-args)]\n    {:client client}))\n\n;This function is referenced before it is defined so we\n;declare it\n(declare publish-async)\n\n(s/fdef init-client\n  :args (s/cat :opts ::client-config\n               :send ::chan\n               :recv ::chan)\n  :ret p/promise?)\n\n(defn init-client [opts send recv]\n  \"using client config and a channel to send and a channel to recv on,\nbuilds an mqtt client that will read from the send chan and push to google\n  and write to the recv chan when google pushes to it. This object is wrapped\nin a promise that returns when the client is ready\"\n  (p/promise\n   (fn [resolve reject]\n     (let [{:keys [client] :as init} (build-client opts)\n           handlers (client-handlers #(resolve client) #(reject :client-fail) send recv)]\n       (.subscribe client (config-chan opts))\n       (add-handlers client handlers)))))\n\n(defn payload-root\n  \"builds the prefix of the actual values being sent\n  (str (payload-root config) sensor-name /  sensor-value)\"\n  [{:keys [registryId userId deviceId] :as opts}]\n  (str registryId \"/\" userId \"/\" deviceId \"-payload\"))\n\n(s/fdef mqtt-topic\n    :args (s/cat :opts     ::client-config\n                 :msg-type ::topic-type)\n    :ret string?)\n\n(defn mqtt-topic\n  \"msg-type can be 'state' for state updates\n   or 'events' to publish telemetry\"\n  [{:keys [deviceId] :as opts} msg-type]\n  (str \"/devices/\" deviceId \"/\" msg-type))\n\n(s/fdef prep-temps\n  :args (s/cat :opts ::client-config :data any?)\n  :ret (s/coll-of ::mqtt-packet))\n(defn prep-temps\n  \"pulls the data out of the systeminformation library and wrapping them up\n  to be sent into mqtt\"\n  [opts data]\n  (let [pr (payload-root opts)\n        cores-raw (js->clj (.-cores data))\n        cores (map-indexed\n               (fn [index value]\n                 {:payload (str pr \"-core-temp-\" index \"/\" (str value))\n                  :subfolder (str \"metrics/core-temp-\" index)\n                  :ts (jw/round-now)})\n               cores-raw)\n        main (when (.-main data)\n               {:payload (str pr \"-core-temp-main/\" (str (.-main data)))\n                :subfolder \"metrics/core-temp-main\"\n                :ts (jw/round-now)})\n        max (when (.-max data)\n              {:payload (str pr \"-core-temp-max/\" (str (.-max data)))\n               :subfolder \"metrics/core-temp-max\"\n               :ts (jw/round-now)})]\n    (concat [main] [max] cores)))\n\n(def stop (atom false))\n\n(s/fdef publish-one\n  :args (s/cat :client any? :packet ::mqtt-packet))\n(defn publish-one\n  \"Publises one mqtt packet to the client\"\n  [client {:keys [topic payload qos] :as p}]\n  (.publishEvent client payload  qos topic))\n\n\n(defn publisher\n  \"main loop that pushes packets added to the send-chan to google iot core\"\n  [client-atom send-chan]\n  (a/go-loop []\n    (let [to-send (a/<! send-chan)]\n      (publish-one @client-atom to-send)\n      (recur))))\n\n(defn client-refresher\n  \"loops and refreshs the client atom every token experation.\n  Mqtt requires that you refresh your token frequently (less then 20 mins)\"\n  [client-atom {:keys [tokenExpMins delayMs] :as opts} send recv]\n  ; make a mixer so that we can pause the data when switching clients\n  (let [client-send-chan (a/chan)\n        client-mixer (a/mix client-send-chan)]\n    (a/admix client-mixer send)\n   ;Loop forever waiting for the tokenExpMins, then building a new client\n    (a/go-loop []\n   ; use core.async/timeout to set up a channel that has a value every tokenExpMins\n      (let [wait (a/<! (a/timeout (* tokenExpMins 1000 60)))]\n        (info \"\\tRefreshing token after \" (* tokenExpMins 1000 60)  \"ms\")\n        (a/toggle client-mixer {send {:pause true}})\n        (.end @client-atom\n              (fn []\n                (aset @client-atom \"password\" (clj->js (jw/create-jwt opts)))\n                (.reconnect @client-atom\n                            (fn []\n                              (a/toggle client-mixer {send {:pause false}})))))\n;        (let [wait-again (a/<! (a/timeout 100))]\n;          (p/then (init-client opts send recv)\n;                  (fn [new-client]\n;                    (reset! client-atom new-client)\n        (recur)))))\n\n(s/fdef tele-chan\n  :args ::client-config\n  :ret ::chan)\n(defn tele-chan\n  \"takes the client opts and builds a channel with system telementry\n  values on it (cpu tempratures specifically)\"\n  [opts]\n  (let [temp-chan (a/chan)\n        out-chan (a/chan)]\n    (a/go-loop []\n        (p/chain\n         (si/cpuTemperature)\n         #(prep-temps opts %)\n         (fn [mqtt-packets] (a/go\n                              (a/<! (a/timeout (* 1000 60 1)))\n                              (a/>! temp-chan mqtt-packets))))\n        (let [v (a/<! temp-chan)]\n          (a/>! out-chan v)\n          (recur)))\n    out-chan))\n\n\n(s/fdef sender\n  :args (s/cat :topic-name ::topic-type\n               :opts       ::client-config\n               :send       ::chan\n               :t-chan     ::chan))\n\n(defn sender\n  \"takes information for the tele-chan in the form of collections of\n  mqtt-packets and assignes a default topic if a subfolder is set,\n  adds a default qos. Then takes the resulting structures and puts\n  them on to the send channel. waits for :delayMs between collections \"\n  [topic-name opts send t-chan]\n  (a/go-loop []\n    (let [teles (a/<! t-chan)\n          topic (mqtt-topic opts topic-name)\n          qos #js {:qos 1}]\n\n      ;becuase this should rarely happen\n      (when (= \"state\" topic-name)\n        (debug \"pushing state\" topic))\n      (a/onto-chan\n       send\n       (map\n        (fn [{:keys [subfolder] :as mqtt-packet}]\n          (let [my-topic (if subfolder (str topic \"/\" subfolder) topic)]\n            (-> mqtt-packet\n                (assoc :topic my-topic)\n                (assoc :qos qos)))) teles)\n       false)\n      (a/<! (a/timeout (:delayMs opts)))\n      (recur))))\n\n(def state-send\n  (partial sender \"state\"))\n\n(def tele-send\n  (partial sender \"events\"))\n\n(defn clean-up\n  [{:keys [send-chan recv-chan telemetry-chan state-chan client-atom] :as system}]\n  (log \"Killing system\")\n  (doall\n   (map (fn [c] (a/close! c))\n        [send-chan recv-chan state-chan telemetry-chan]))\n  (.end @client-atom))\n\n(defn system-function\n  \"the heart of the system lies here.\n  This function takes options (config/default-options works well)\n  It returns a map\n  This map has\n  :send-chan A channel you can use to directly send messages of mqtt, must be of the\n  form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n  :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n  :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n  (google publishes these values to a differnt pubsub channel then device telemetry)\n  :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n  are sent in the same batch, the same is true for stat-chan.\n  :client-atom, contains the current version of the mqtt client. This is an atom so\n  that the client-refersher can refresh the authentication token and swap it.\n  this pattern also ensures only one client\n\n  payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you\"\n  [opts]\n  (let [send (a/chan)\n        recv (a/chan)\n        kill (atom false)\n        client-promise (init-client opts send recv)\n        client-atom (atom nil)\n        t-chan (tele-chan opts)\n        state-chan (a/chan)]\n    (p/then\n     client-promise\n     (fn [client]\n       (reset! client-atom client)\n;       (client-refresher client-atom opts send recv)\n       (publisher client-atom send)\n       (tele-send opts send t-chan)\n       (state-send opts send state-chan)\n       {:send-chan send\n        :recv-chan recv\n        :state-chan state-chan\n        :telemetry-chan t-chan\n        :client-atom client-atom}))))\n\n\n;(def system-promise (system-function config/default-options))\n\n(defn kill-it\n  \"Feed the system promise to this and it will kill it\"\n  [system-promise]\n  (p/then system-promise\n          clean-up))\n\n;(kill-it system-promise)\n","~:reader-features",["^Y",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["cljs.spec.alpha/def-impl","cljs.core/string?","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","cljs.core/instance?","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0","cljs.spec.alpha/map-spec-impl","G__43798","cljs.core/map?","cljs.core/contains?","cljs.spec.alpha/and-spec-impl","p1__43799#","cljs.core/count","p1__43800#","cljs.core/float?","G__43801","cljs.spec.alpha/fspec-impl","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4","p__43802","map__43803","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","huginn.mqtt/client-id","projectId","registryId","cloudRegion","deviceId","opts","G__43805","p__43806","map__43807","huginn.mqtt/config-chan","cljs.core/any?","cljs.spec.alpha/cat-impl","cljs.core/fn?","huginn.mqtt/client-handlers","success-fn","fail","send","recv","success","taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10","taoensso.timbre/*config*","cljs.core/Delay","err","topic","message","packet","c__23855__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__23856__auto__","switch__23690__auto__","state_43815","state_val_43816","inst_43809","inst_43810","inst_43811","cljs.core/PersistentHashMap","cljs.core.async.impl.ioc-helpers/put!","inst_43813","cljs.core.async.impl.ioc-helpers/return-chan","statearr-43817","state-machine__23691__auto__","ret-value__23692__auto__","result__23693__auto__","cljs.core/keyword-identical?","e43818","js/Object","ex__23694__auto__","statearr-43819","cljs.core.async.impl.ioc-helpers/process-exception","state__23857__auto__","statearr-43820","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","huginn.mqtt/add-handlers","client","handlers","seq__43821","cljs.core/seq","chunk__43822","count__43823","i__43824","vec__43825","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","temp__5457__auto__","cljs.core/chunked-seq?","c__4351__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","vec__43828","cljs.core/first","cljs.core/next","key","hand","huginn.mqtt/build-client","conn-args","huginn.jwt/google-iot-conn-args","js/shadow.js.shim.module$gcic_mqtt_client","promesa.core/promise?","huginn.mqtt/init-client","promesa.core/promise","resolve","reject","map__43831","init","G__43833","p__43834","map__43835","huginn.mqtt/payload-root","userId","p__43837","map__43838","huginn.mqtt/mqtt-topic","msg-type","cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4","G__43840","cljs.core/coll?","huginn.mqtt/prep-temps","data","pr","cores-raw","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","cores","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","index","value","huginn.jwt/round-now","main","max","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","huginn.mqtt/stop","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","p__43841","map__43842","huginn.mqtt/publish-one","payload","qos","p","huginn.mqtt/publisher","client-atom","send-chan","state_43853","state_val_43854","statearr-43855","cljs.core.async.impl.ioc-helpers/take!","inst_43851","inst_43846","inst_43847","cljs.core/deref","inst_43848","statearr-43856","statearr-43857","statearr-43858","e43859","statearr-43860","statearr-43861","p__43862","map__43863","huginn.mqtt/client-refresher","tokenExpMins","delayMs","client-send-chan","client-mixer","cljs.core.async/mix","cljs.core.async/admix","state_43888","state_val_43889","statearr-43890","inst_43866","inst_43867","inst_43868","inst_43886","inst_43870","inst_43871","inst_43872","inst_43873","inst_43874","inst_43875","inst_43876","inst_43877","inst_43878","inst_43879","inst_43880","inst_43881","inst_43882","inst_43883","statearr-43891","statearr-43892","statearr-43893","e43894","statearr-43895","statearr-43896","wait","cljs.core.async/timeout","cljs.core.async/toggle","cljs.core/clj->js","huginn.jwt/create-jwt","huginn.mqtt/tele-chan","temp-chan","out-chan","state_43911","state_val_43912","statearr-43913","inst_43899","inst_43900","p1__43897#","inst_43901","inst_43902","statearr-43929","inst_43909","inst_43904","inst_43906","statearr-43930","statearr-43931","statearr-43932","e43933","statearr-43934","statearr-43935","promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic","js/shadow.js.shim.module$systeminformation.cpuTemperature","mqtt-packets","state_43922","state_val_43923","inst_43914","inst_43915","inst_43916","inst_43918","statearr-43924","inst_43920","statearr-43925","e43926","statearr-43927","statearr-43928","huginn.mqtt/sender","topic-name","t-chan","state_43960","state_val_43961","statearr-43962","inst_43958","inst_43938","inst_43939","inst_43940","statearr-43963","statearr-43964","statearr-43965","inst_43942","inst_43943","inst_43944","statearr-43966","statearr-43967","inst_43947","inst_43949","inst_43950","inst_43951","inst_43952","inst_43953","statearr-43970","inst_43955","statearr-43971","statearr-43972","statearr-43973","e43974","statearr-43975","statearr-43976","teles","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3","cljs.core.map.cljs$core$IFn$_invoke$arity$2","p__43948","map__43968","subfolder","mqtt-packet","my-topic","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","huginn.mqtt/state-send","huginn.mqtt/tele-send","p__43977","map__43978","huginn.mqtt/clean-up","recv-chan","telemetry-chan","state-chan","system","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","c","cljs.core.async/close!","huginn.mqtt/system-function","kill","client-promise","promesa.core/then","cljs.core/reset!","huginn.mqtt/kill-it","system-promise"]]],"~:cache-keys",["~#cmap",[["^1S","cljs_node_io/file.cljs"],[1537666007418,"^1<","^1;","~$goog.Uri","~$cljs-node-io.streams","~$cljs-node-io.fs","~$cljs-node-io.protocols"],["^1S","goog/dom/tagname.js"],[1530991559994,"^1<","~$goog.dom.HtmlElement"],["^1S","goog/async/freelist.js"],[1530991559994,"^1<"],["^1S","cljs/core/async/impl/ioc_helpers.cljs"],[1534380136417,"^1<","^1;","~$cljs.core.async.impl.protocols"],["^1S","goog/labs/useragent/platform.js"],[1530991559994,"^1<","~$goog.labs.userAgent.util","~$goog.string"],["~:macro","^1;"],[1534380137000],["^1S","cljs/core/async.cljs"],[1534380136417,"^1<","^1;","^29","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers"],["^1S","goog/timer/timer.js"],[1530991559994,"^1<","~$goog.Promise","~$goog.events.EventTarget"],["^1S","cljs/nodejs.cljs"],[1534380137690,"^1<","^1;"],["^1S","cljs/spec/gen/alpha.cljs"],[1534380137690,"^1<","^1;","^24"],["^1S","cljs/tools/reader/impl/utils.cljs"],[1535586405375,"^1<","^1;","^1D","^2;"],["^1S","cljs_node_io/fs.cljs"],[1537666007418,"^1<","^1;","^A","^29"],["^1S","cljs_node_io/core.cljs"],[1537666007418,"^1<","^1;","^A","^29","~$cljs-node-io.file","^25","^27","^24"],["^1S","goog/math/math.js"],[1530991559994,"^1<","~$goog.array","~$goog.asserts"],["^1S","goog/string/stringformat.js"],[1530991559994,"^1<","^2;"],["^1S","goog/events/eventtype.js"],[1530991559994,"^1<","~$goog.userAgent"],["^1S","goog/labs/useragent/browser.js"],[1530991559994,"^1<","^2E","^2:","~$goog.object","^2;"],["^1S","goog/array/array.js"],[1530991559994,"^1<","^2F"],["^1S","huginn/mqtt.cljs"],[1540155390454,"^1<","^1;","^17","^1D","^1?","^12","^1:","^F","^A","^?","^1A","^1>"],["^1S","cljs_node_io/protocols.cljs"],[1537666007418,"^1<","^1;"],["^2<","~$cljs.core.async.macros"],[1534380136000],["^1S","cljs_node_io/streams.cljs"],[1537666007418,"^1<","^1;","^24","^A","^27"],["^1S","huginn/config.cljs"],[1540154895584,"^1<","^1;"],["^1S","goog/useragent/useragent.js"],[1530991559994,"^1<","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2:","~$goog.reflect","^2;"],["^1S","goog/structs/prioritypool.js"],[1530991559994,"^1<","~$goog.structs.Pool","~$goog.structs.PriorityQueue"],["^2<","~$cljs.tools.reader.reader-types"],[1535586405000],["^1S","goog/async/run.js"],[1530991559994,"^1<","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"],["^1S","taoensso/encore.cljs"],[1535586406568,"^1<","^1;","^1D","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","~$cljs.test","^2H","^2;","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.structs","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"],["^1S","goog/debug/error.js"],[1530991559994,"^1<"],["^1S","goog/async/workqueue.js"],[1530991559994,"^1<","^2F","~$goog.async.FreeList"],["^1S","huginn/jwt.cljs"],[1540154806767,"^1<","^1;","^1D","^17","~$cljs-node-io.core","^1>","^="],["^1S","promesa/impl/scheduler.cljc"],[1535586406328,"^1<","^1;","~$promesa.protocols"],["^1S","goog/events/events.js"],[1530991559994,"^1<","^2F","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","~$goog.events.BrowserFeature","~$goog.events.Listenable","~$goog.events.ListenerMap"],["^1S","goog/promise/resolver.js"],[1530991559994,"^1<"],["^1S","goog/events/browserfeature.js"],[1530991559994,"^1<","^2G"],["^1S","cljs/tools/reader/edn.cljs"],[1535586405375,"^1<","^1;","~$cljs.tools.reader.impl.errors","^2P","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^2;","^2Y"],["^1S","goog/structs/priorityqueue.js"],[1530991559994,"^1<","~$goog.structs.Heap"],["^1S","goog/net/xhrio.js"],[1530991559994,"^1<","~$goog.Timer","^2E","^2F","^39","^2C","~$goog.json.hybrid","~$goog.log","^34","^33","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^2;","^32","~$goog.structs.Map","~$goog.uri.utils","^2G"],["^1S","goog/promise/thenable.js"],[1530991559994,"^1<"],["^1S","promesa/impl.cljc"],[1535586406328,"^1<","^1;","^38","~$org.bluebird"],["^1S","goog/dom/nodetype.js"],[1530991559994,"^1<"],["^2<","^F"],[1535586406000],["^1S","cljs/tools/reader/impl/inspect.cljs"],[1535586405375,"^1<","^1;"],["^1S","cljs/pprint.cljs"],[1534380137690,"^1<","^1;","^1D","^2;","^2Y"],["^2<","~$cljs.spec.gen.alpha"],[1534380137000],["^1S","cljs/tools/reader.cljs"],[1535586405375,"^1<","^1;","^2P","^3?","^3@","^3>","^2E","^2;","^2Y"],["^1S","goog/net/wrapperxmlhttpfactory.js"],[1530991559994,"^1<","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"],["^1S","goog/events/eventtarget.js"],[1530991559994,"^1<","~$goog.Disposable","^2F","^2Z","~$goog.events.Event","^3<","^3=","^2H"],["^1S","goog/disposable/disposable.js"],[1530991559994,"^1<","~$goog.disposable.IDisposable"],["^1S","goog/object/object.js"],[1530991559994,"^1<"],["^1S","goog/structs/set.js"],[1530991559994,"^1<","^32","~$goog.structs.Collection","^3H"],"~:SHADOW-TIMESTAMP",[1540077702000,1534380137000],["^1S","goog/math/long.js"],[1530991559994,"^1<","^2F","^2M"],["^1S","goog/events/listener.js"],[1530991559994,"^1<","~$goog.events.ListenableKey"],["^1S","cljs/core/async/impl/channels.cljs"],[1534380136417,"^1<","^1;","^29","^2@","^2>"],["^1S","goog/events/listenermap.js"],[1530991559994,"^1<","^2E","~$goog.events.Listener","^2H"],["^1S","goog/events/eventid.js"],[1530991559994,"^1<"],["^1S","taoensso/truss.cljs"],[1535586406478,"^1<","^1;","~$taoensso.truss.impl"],["^1S","shadow/test/env.cljs"],[1540077702615,"^1<","^1;"],["^1S","goog/functions/functions.js"],[1530991559994,"^1<"],["^1S","cljs/core/async/impl/dispatch.cljs"],[1534380136417,"^1<","^1;","^2>","^2R"],["^1S","taoensso/truss/impl.cljs"],[1535586406478,"^1<","^1;","^2T"],["^1S","clojure/walk.cljs"],[1534380137690,"^1<","^1;"],["^1S","cljs/core/async/impl/protocols.cljs"],[1534380136417,"^1<","^1;"],["^1S","goog/net/eventtype.js"],[1530991559994,"^1<"],["^1S","goog/structs/map.js"],[1530991559994,"^1<","~$goog.iter.Iterator","~$goog.iter.StopIteration","^2H"],["^1S","goog/net/xhriopool.js"],[1530991559994,"^1<","^2[","~$goog.structs.PriorityPool"],["^1S","goog/structs/queue.js"],[1530991559994,"^1<","^2E"],["^1S","goog/labs/useragent/engine.js"],[1530991559994,"^1<","^2E","^2:","^2;"],["^1S","taoensso/timbre/appenders/core.cljs"],[1535586406375,"^1<","^1;","^1D","~$taoensso.encore"],["^1S","cljs/reader.cljs"],[1534380137690,"^1<","^1;","^2H","^3A","^2V","^2Y"],["~:shadow.build.js-support/require","bluebird"],["~$shadow.js.shim.module$bluebird","shadow.js.shim.module$bluebird.js","^1<"],["^2<","~$cljs-node-io.macros"],[1537666007000],["^2<","^1A"],[1534380137000],["^1S","goog/asserts/asserts.js"],[1530991559994,"^1<","~$goog.debug.Error","~$goog.dom.NodeType","^2;"],["^1S","cljs/core/async/impl/buffers.cljs"],[1534380136417,"^1<","^1;","^29"],["^2<","~$cljs.pprint"],[1534380137000],["^1S","goog/debug/logbuffer.js"],[1530991559994,"^1<","^2F","~$goog.debug.LogRecord"],["^3Z","jsonwebtoken"],["^=","shadow.js.shim.module$jsonwebtoken.js","^1<"],["^2<","^3Y"],[1535586406000],["^1S","goog/uri/uri.js"],[1530991559994,"^1<","^2E","^2F","^2;","^32","^3H","^3I","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1S","goog/net/errorcode.js"],[1530991559994,"^1<"],["^2<","^2W"],[1534380137000],["^2<","^A"],[1534380136000],["^1S","goog/disposable/idisposable.js"],[1530991559994,"^1<"],["^1S","goog/promise/promise.js"],[1530991559994,"^1<","~$goog.Thenable","^2F","^36","~$goog.async.run","^2S","^41","~$goog.promise.Resolver"],["^1S","cljs/core/async/impl/timers.cljs"],[1534380136417,"^1<","^1;","^29","^2=","^2@"],["^1S","cljs/spec/alpha.cljs"],[1534380137690,"^1<","^1;","^2H","~$clojure.walk","^3K","^1D"],["^1S","goog/debug/logrecord.js"],[1530991559994,"^1<"],["^1S","goog/base.js"],[1530991559994],["^1S","promesa/core.cljc"],[1535586406328,"^1<","^1;","^38","~$promesa.impl","~$promesa.impl.scheduler"],["^1S","goog/json/hybrid.js"],[1530991559994,"^1<","^2F","~$goog.json"],["^1S","goog/structs/structs.js"],[1530991559994,"^1<","^2E","^2H"],["^1S","cljs/tools/reader/impl/errors.cljs"],[1535586405375,"^1<","^1;","^2P","^1D","~$cljs.tools.reader.impl.inspect"],["^1S","org/bluebird.cljs"],[1535669979047,"^1<","^1;","^3["],["^1S","clojure/string.cljs"],[1534380137690,"^1<","^1;","^2;","^2Y"],["^1S","goog/structs/pool.js"],[1530991559994,"^1<","^3N","~$goog.structs.Queue","~$goog.structs.Set"],["^1S","goog/net/httpstatus.js"],[1530991559994,"^1<"],["^1S","goog/structs/heap.js"],[1530991559994,"^1<","^2E","^2H","~$goog.structs.Node"],["^1S","goog/debug/entrypointregistry.js"],[1530991559994,"^1<","^2F"],["^1S","goog/string/string.js"],[1530991559994,"^1<"],["^1S","goog/reflect/reflect.js"],[1530991559994,"^1<"],["^1S","goog/labs/useragent/util.js"],[1530991559994,"^1<","^2;"],["^2<","~$clojure.template"],[1534380136000],["^2<","~$cljs.core.async.impl.ioc-macros"],[1534380136000],["^3Z","gcic-mqtt-client"],["^12","shadow.js.shim.module$gcic_mqtt_client.js","^1<"],["^1S","goog/debug/debug.js"],[1530991559994,"^1<","^2E","~$goog.debug.errorcontext","^2G"],["^1S","goog/string/stringbuffer.js"],[1530991559994,"^1<"],["^1S","goog/debug/errorcontext.js"],[1530991559994,"^1<"],["^1S","cljs/tools/reader/reader_types.cljs"],[1535586405375,"^1<","^1;","^3?","^2;","^2Y"],["^1S","promesa/protocols.cljc"],[1535586406328,"^1<","^1;"],["^1S","goog/iter/iter.js"],[1530991559994,"^1<","^2E","^2F","~$goog.functions","~$goog.math"],["^1S","goog/async/nexttick.js"],[1530991559994,"^1<","^39","~$goog.dom.TagName","^4E","^2J","^2K"],["^1S","goog/debug/logger.js"],[1530991559994,"^1<","^2E","^2F","~$goog.debug","~$goog.debug.LogBuffer","^44"],["^1S","goog/events/event.js"],[1530991559994,"^1<","^3N","~$goog.events.EventId"],["^1S","cljs/tools/reader/impl/commons.cljs"],[1535586405375,"^1<","^1;","^3>","^2P","^3?"],["^3Z","systeminformation"],["^?","shadow.js.shim.module$systeminformation.js","^1<"],["^1S","goog/dom/htmlelement.js"],[1530991559994,"^1<"],["^1S","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^2;","^2H","^2E","^24","^2Y"],["^1S","goog/log/log.js"],[1530991559994,"^1<","^4H","~$goog.debug.LogManager","^44","~$goog.debug.Logger"],["^1S","goog/structs/collection.js"],[1530991559994,"^1<"],["^1S","goog/events/browserevent.js"],[1530991559994,"^1<","^3;","^3O","~$goog.events.EventType","^2M","^2G"],["^1S","goog/math/integer.js"],[1530991559994,"^1<"],["^1S","goog/structs/node.js"],[1530991559994,"^1<"],["^2<","^3U"],[1535586406000],["^1S","clojure/set.cljs"],[1534380137690,"^1<","^1;"],["^1S","goog/uri/utils.js"],[1530991559994,"^1<","^2E","^2F","^2;"],["^1S","taoensso/timbre.cljs"],[1535586406375,"^1<","^1;","^1D","^3Y","~$taoensso.timbre.appenders.core"],["^1S","goog/json/json.js"],[1530991559994,"^1<"],["^1S","goog/events/listenable.js"],[1530991559994,"^1<","^4J"],["^1S","goog/net/xmlhttpfactory.js"],[1530991559994,"^1<","^3L"],["^1S","goog/net/xmlhttp.js"],[1530991559994,"^1<","^2F","~$goog.net.WrapperXmlHttpFactory","^3M"],["^1S","cljs/test.cljs"],[1534380137690,"~$shadow.test.env","^1<","^1;","^1D","^43"],["^1S","goog/net/xhrlike.js"],[1530991559994,"^1<"],["^2<","^2U"],[1534380137000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","huginn/mqtt.cljs","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",["^ ","^E","^F","^G","^F","^H","^F","^I","^F","^J","^F","^K","^F","^L","^F","^M","^F","^N","^F","^O","^F","^P","^F","^Q","^F","^R","^F","^S","^F","^T","^F","^U","^F","^V","^F","^W","^F"],"^X",["^Y",[]],"~:shadow/js-access-properties",["^Y",["cpuTemperature"]],"^Z","^[","^10",["^ ","^11","^12"],"^15",null,"^16",["^ ","^12","^12","~$p","^17","^17","^17","^18","^F","~$a","^A","^19","^?","^1:","^1:","^1;","^1;","^1<","^1<","^A","^A","^>","^?","^1=","^1:","^1>","^1>","^1?","^1?","^1@","^1>","~$s","^1A","^1B","^12","^1C","^1?","^F","^F","^?","^?","^1D","^1D","^1E","^1D","^1A","^1A"],"^1F",["^Y",["^1G"]],"~:shadow/js-access-global",["^Y",["Object"]],"^1H",null,"~:defs",["^ ","~$tele-send",["^ ","^Z","~$huginn.mqtt/tele-send","^6","huginn/mqtt.cljs","^7",277,"^8",1,"^9",277,"^:",15,"^5",["^ ","^6","huginn/mqtt.cljs","^7",277,"^8",6,"^9",277,"^:",15],"~:tag","~$any"],"~$publish-async",["^ ","^Z","~$huginn.mqtt/publish-async","^6","huginn/mqtt.cljs","^7",114,"^8",1,"^9",114,"^:",23,"~:declared",true,"^5",["^ ","^6","huginn/mqtt.cljs","^7",114,"^8",10,"^9",114,"^:",23,"^51",true]],"~$build-client",["^ ","~:protocol-inline",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",102,"^8",7,"^9",102,"^:",19,"~:arglists",["^1K",["~$quote",["^1K",[["~$opts"]]]]]],"^Z","~$huginn.mqtt/build-client","~:variadic",false,"^6","huginn/mqtt.cljs","^:",19,"~:method-params",["^1K",[["^56"]]],"~:protocol-impl",null,"~:arglists-meta",["^1K",[null,null]],"^8",1,"^7",102,"^9",102,"~:max-fixed-arity",1,"~:fn-var",true,"^54",["^1K",["^55",["^1K",[["^56"]]]]]],"~$client-id",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",48,"^8",7,"^9",48,"^:",16,"^54",["^1K",["^55",["^1K",[[["^ ","~:keys",["~$projectId","~$registryId","~$cloudRegion","~$deviceId"],"^1M","^56"]]]]]],"~:doc","Builds a client id used to identify the device this message is\n  comming from"],"^Z","~$huginn.mqtt/client-id","^58",false,"^6","huginn/mqtt.cljs","^:",16,"^59",["^1K",[["~$p__43802"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",48,"^9",48,"^5<",1,"^5=",true,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5@","^5A","^5B","^5C"],"^1M","^56"]]]]]],"^5D","Builds a client id used to identify the device this message is\n  comming from"],"~$prep-temps",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",154,"^8",7,"^9",154,"^:",17,"^54",["^1K",["^55",["^1K",[["^56","~$data"]]]]],"^5D","pulls the data out of the systeminformation library and wrapping them up\n  to be sent into mqtt"],"^Z","~$huginn.mqtt/prep-temps","^58",false,"^6","huginn/mqtt.cljs","^:",17,"^59",["^1K",[["^56","^5H"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",154,"^9",154,"^5<",2,"^5=",true,"^54",["^1K",["^55",["^1K",[["^56","^5H"]]]]],"^5D","pulls the data out of the systeminformation library and wrapping them up\n  to be sent into mqtt"],"~$publisher",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",186,"^8",7,"^9",186,"^:",16,"^54",["^1K",["^55",["^1K",[["~$client-atom","~$send-chan"]]]]],"^5D","main loop that pushes packets added to the send-chan to google iot core"],"^Z","~$huginn.mqtt/publisher","^58",false,"^6","huginn/mqtt.cljs","^:",16,"^59",["^1K",[["^5K","^5L"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",186,"^9",186,"^5<",2,"^5=",true,"^54",["^1K",["^55",["^1K",[["^5K","^5L"]]]]],"^5D","main loop that pushes packets added to the send-chan to google iot core"],"~$init-client",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",122,"^8",7,"^9",122,"^:",18,"^54",["^1K",["^55",["^1K",[["^56","~$send","~$recv"]]]]]],"^Z","~$huginn.mqtt/init-client","^58",false,"^6","huginn/mqtt.cljs","^:",18,"^59",["^1K",[["^56","^5O","^5P"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",122,"^9",122,"^5<",3,"^5=",true,"^54",["^1K",["^55",["^1K",[["^56","^5O","^5P"]]]]]],"~$payload-root",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",134,"^8",7,"^9",134,"^:",19,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5A","~$userId","^5C"],"^1M","^56"]]]]]],"^5D","builds the prefix of the actual values being sent\n  (str (payload-root config) sensor-name /  sensor-value)"],"^Z","~$huginn.mqtt/payload-root","^58",false,"^6","huginn/mqtt.cljs","^:",19,"^59",["^1K",[["~$p__43834"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",134,"^9",134,"^5<",1,"^5=",true,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5A","^5S","^5C"],"^1M","^56"]]]]]],"^5D","builds the prefix of the actual values being sent\n  (str (payload-root config) sensor-name /  sensor-value)"],"~$config-chan",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",60,"^8",7,"^9",60,"^:",18,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5C"],"^1M","^56"]]]]]],"^5D","google give each device two channeles, a state channel (the config channel)\n  and a telemetry channel (the one that we push all our data over). The name of\n  these channels are determined by google iot core."],"^Z","~$huginn.mqtt/config-chan","^58",false,"^6","huginn/mqtt.cljs","^:",18,"^59",["^1K",[["~$p__43806"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",60,"^9",60,"^5<",1,"^5=",true,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5C"],"^1M","^56"]]]]]],"^5D","google give each device two channeles, a state channel (the config channel)\n  and a telemetry channel (the one that we push all our data over). The name of\n  these channels are determined by google iot core."],"~$mqtt-topic",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",145,"^8",7,"^9",145,"^:",17,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5C"],"^1M","^56"],"~$msg-type"]]]]],"^5D","msg-type can be 'state' for state updates\n   or 'events' to publish telemetry"],"^Z","~$huginn.mqtt/mqtt-topic","^58",false,"^6","huginn/mqtt.cljs","^:",17,"^59",["^1K",[["~$p__43837","^5Z"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",145,"^9",145,"^5<",2,"^5=",true,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5C"],"^1M","^56"],"^5Z"]]]]],"^5D","msg-type can be 'state' for state updates\n   or 'events' to publish telemetry"],"~$tele-chan",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",223,"^8",7,"^9",223,"^:",16,"^54",["^1K",["^55",["^1K",[["^56"]]]]],"^5D","takes the client opts and builds a channel with system telementry\n  values on it (cpu tempratures specifically)"],"^Z","~$huginn.mqtt/tele-chan","^58",false,"^6","huginn/mqtt.cljs","^:",16,"^59",["^1K",[["^56"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",223,"^9",223,"^5<",1,"^5=",true,"^54",["^1K",["^55",["^1K",[["^56"]]]]],"^5D","takes the client opts and builds a channel with system telementry\n  values on it (cpu tempratures specifically)"],"~$client-handlers",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",73,"^8",7,"^9",73,"^:",22,"^54",["^1K",["^55",["^1K",[["~$success-fn","~$fail","^5O","^5P"]]]]],"^5D","builds a map of handels to attach to the mqtt object"],"^Z","~$huginn.mqtt/client-handlers","^58",false,"^6","huginn/mqtt.cljs","^:",22,"^59",["^1K",[["^64","^65","^5O","^5P"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",73,"^9",73,"^5<",4,"^5=",true,"^54",["^1K",["^55",["^1K",[["^64","^65","^5O","^5P"]]]]],"^5D","builds a map of handels to attach to the mqtt object"],"~$kill-it",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",330,"^8",7,"^9",330,"^:",14,"^54",["^1K",["^55",["^1K",[["~$system-promise"]]]]],"^5D","Feed the system promise to this and it will kill it"],"^Z","~$huginn.mqtt/kill-it","^58",false,"^6","huginn/mqtt.cljs","^:",14,"^59",["^1K",[["^68"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",330,"^9",330,"^5<",1,"^5=",true,"^54",["^1K",["^55",["^1K",[["^68"]]]]],"^5D","Feed the system promise to this and it will kill it"],"~$state-send",["^ ","^Z","~$huginn.mqtt/state-send","^6","huginn/mqtt.cljs","^7",274,"^8",1,"^9",274,"^:",16,"^5",["^ ","^6","huginn/mqtt.cljs","^7",274,"^8",6,"^9",274,"^:",16],"^4Y","^4Z"],"~$publish-one",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",180,"^8",7,"^9",180,"^:",18,"^54",["^1K",["^55",["^1K",[["~$client",["^ ","^5?",["~$topic","~$payload","~$qos"],"^1M","~$p"]]]]]],"^5D","Publises one mqtt packet to the client"],"^Z","~$huginn.mqtt/publish-one","^58",false,"^6","huginn/mqtt.cljs","^:",18,"^59",["^1K",[["^6=","~$p__43841"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",180,"^9",180,"^5<",2,"^5=",true,"^54",["^1K",["^55",["^1K",[["^6=",["^ ","^5?",["^6>","^6?","^6@"],"^1M","~$p"]]]]]],"^5D","Publises one mqtt packet to the client"],"~$system-function",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",288,"^8",7,"^9",288,"^:",22,"^54",["^1K",["^55",["^1K",[["^56"]]]]],"^5D","the heart of the system lies here.\n  This function takes options (config/default-options works well)\n  It returns a map\n  This map has\n  :send-chan A channel you can use to directly send messages of mqtt, must be of the\n  form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n  :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n  :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n  (google publishes these values to a differnt pubsub channel then device telemetry)\n  :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n  are sent in the same batch, the same is true for stat-chan.\n  :client-atom, contains the current version of the mqtt client. This is an atom so\n  that the client-refersher can refresh the authentication token and swap it.\n  this pattern also ensures only one client\n\n  payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you"],"^Z","~$huginn.mqtt/system-function","^58",false,"^6","huginn/mqtt.cljs","^:",22,"^59",["^1K",[["^56"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",288,"^9",288,"^5<",1,"^5=",true,"^54",["^1K",["^55",["^1K",[["^56"]]]]],"^5D","the heart of the system lies here.\n  This function takes options (config/default-options works well)\n  It returns a map\n  This map has\n  :send-chan A channel you can use to directly send messages of mqtt, must be of the\n  form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n  :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n  :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n  (google publishes these values to a differnt pubsub channel then device telemetry)\n  :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n  are sent in the same batch, the same is true for stat-chan.\n  :client-atom, contains the current version of the mqtt client. This is an atom so\n  that the client-refersher can refresh the authentication token and swap it.\n  this pattern also ensures only one client\n\n  payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you"],"~$stop",["^ ","^Z","~$huginn.mqtt/stop","^6","huginn/mqtt.cljs","^7",176,"^8",1,"^9",176,"^:",10,"^5",["^ ","^6","huginn/mqtt.cljs","^7",176,"^8",6,"^9",176,"^:",10],"^4Y","^4Z"],"~$sender",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",248,"^8",7,"^9",248,"^:",13,"^54",["^1K",["^55",["^1K",[["~$topic-name","^56","^5O","~$t-chan"]]]]],"^5D","takes information for the tele-chan in the form of collections of\n  mqtt-packets and assignes a default topic if a subfolder is set,\n  adds a default qos. Then takes the resulting structures and puts\n  them on to the send channel. waits for :delayMs between collections "],"^Z","~$huginn.mqtt/sender","^58",false,"^6","huginn/mqtt.cljs","^:",13,"^59",["^1K",[["^6H","^56","^5O","^6I"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",248,"^9",248,"^5<",4,"^5=",true,"^54",["^1K",["^55",["^1K",[["^6H","^56","^5O","^6I"]]]]],"^5D","takes information for the tele-chan in the form of collections of\n  mqtt-packets and assignes a default topic if a subfolder is set,\n  adds a default qos. Then takes the resulting structures and puts\n  them on to the send channel. waits for :delayMs between collections "],"~$client-refresher",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",194,"^8",7,"^9",194,"^:",23,"^54",["^1K",["^55",["^1K",[["^5K",["^ ","^5?",["~$tokenExpMins","~$delayMs"],"^1M","^56"],"^5O","^5P"]]]]],"^5D","loops and refreshs the client atom every token experation.\n  Mqtt requires that you refresh your token frequently (less then 20 mins)"],"^Z","~$huginn.mqtt/client-refresher","^58",false,"^6","huginn/mqtt.cljs","^:",23,"^59",["^1K",[["^5K","~$p__43862","^5O","^5P"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",194,"^9",194,"^5<",4,"^5=",true,"^54",["^1K",["^55",["^1K",[["^5K",["^ ","^5?",["^6L","^6M"],"^1M","^56"],"^5O","^5P"]]]]],"^5D","loops and refreshs the client atom every token experation.\n  Mqtt requires that you refresh your token frequently (less then 20 mins)"],"~$add-handlers",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",93,"^8",7,"^9",93,"^:",19,"^54",["^1K",["^55",["^1K",[["^6=","~$handlers"]]]]],"^5D","takes a map of handlers and attaches them to the mqtt object"],"^Z","~$huginn.mqtt/add-handlers","^58",false,"^6","huginn/mqtt.cljs","^:",19,"^59",["^1K",[["^6=","^6Q"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",93,"^9",93,"^5<",2,"^5=",true,"^54",["^1K",["^55",["^1K",[["^6=","^6Q"]]]]],"^5D","takes a map of handlers and attaches them to the mqtt object"],"~$clean-up",["^ ","^53",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",280,"^8",7,"^9",280,"^:",15,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5L","~$recv-chan","~$telemetry-chan","~$state-chan","^5K"],"^1M","~$system"]]]]]]],"^Z","~$huginn.mqtt/clean-up","^58",false,"^6","huginn/mqtt.cljs","^:",15,"^59",["^1K",[["~$p__43977"]]],"^5:",null,"^5;",["^1K",[null,null]],"^8",1,"^7",280,"^9",280,"^5<",1,"^5=",true,"^54",["^1K",["^55",["^1K",[[["^ ","^5?",["^5L","^6T","^6U","^6V","^5K"],"^1M","^6W"]]]]]]]],"^1I",["^ ","^F","^F","^18","^F","^1;","^1;","~$a","^A","^A","^A","~$s","^1A","^1A","^1A"],"~:cljs.analyzer/constants",["^ ","^1F",["^Y",["~:client-fail","~:args","~:req-un","~:opt-un","~:huginn.mqtt/payload","~:qos","~$cljs.core/<","~$p1__43799#","~:recv-chan","~:ret","~:gfn","~:cloudRegion","~:send-chan","~:recv","~:pred-exprs","~:keys-pred","~:huginn.mqtt/client-config","^5Q","~:payload","~:opt-keys","~$cljs.core/partial","~:huginn.mqtt/cloudRegion","~:else","~$cljs.core/count","~:state-chan","~$cljs.spec.alpha/and","~$cljs.spec.alpha/coll-of","~$cljs.spec.alpha/cat","~:cljs.spec.alpha/kind-form","~:subfolder","^5E","~:delayMs","~:deviceId","~:telemetry-chan","~$cljs.core/string?","~:t-chan","~:req-specs","~:huginn.mqtt/topic-type","~:registryId","~:client","~$cljs.spec.alpha/fspec","~:recur","~:debug","~:topic","~:huginn.mqtt/ts","~$cljs.core/contains?","^57","~$cljs.core/map?","~:cljs.spec.alpha/cpred","~$%","~$cljs.core/float?","~:tokenExpMins","~$cljs.core/fn?","~:huginn.mqtt/chan","~:topic-name","~:ts","~$cljs.spec.alpha/keys","~$cljs.core.async/chan","~:huginn.mqtt/projectId","^6J","~:req","~:client-atom","~:msg-type","~:fail","~:huginn.mqtt/mqtt-packet","~$fn*","^5W","^5I","~$p1__43800#","^5[","~:opts","~:req-keys","~$cljs.core/fn","~:info","~:send","~:opt-specs","~:huginn.mqtt/registryId","~:userId","^66","~:pred-forms","~:pause","~:error","~:projectId","~:huginn.mqtt/deviceId","~$promesa.core/promise?","~:auto","~:huginn.mqtt/subfolder","~:p","~:cljs.spec.alpha/conform-all","^6A","~:success-fn","~$cljs.core/any?","^62","~:message","~$cljs.core/instance?","~:packet","~:cljs.spec.alpha/describe","~:opt","~:data"]],"~:order",["^89","^7O","^8G","^7C","^8M","^84","^7B","^8U","^88","^7R","^7?","^87","^71","^72","^79","^7=","^7>","^7A","^7Q","^8:","^8B","^8F","^8I","^8X","^8L","^7S","^7:","^7M","^8C","~$%","^7[","^7Z","^73","^7G","^8?","^76","^75","^7E","^8P","^8@","^7Y","^81","^8>","^7@","^7K","^86","^5E","^7U","^70","^78","^5W","^66","^7I","^8R","^83","^8=","^8E","^7<","^8S","^7W","~:p","^8O","^8D","^8K","^7X","^8T","^8V","^7V","^7D","^57","^7T","^5Q","^8A","^8N","^6[","^8H","^5[","^8<","^5I","^8Y","^7H","^7J","^80","^8Q","^8W","^6A","^74","^82","^7L","^8J","^62","^6J","^85","^7P","^7;","^77","^7N","^7F","^8;"]],"^1O",["^ ","^1G",["^Y",[]]],"^1P",["^ ","^11",["^ ","^1M","^1B"]],"^1Q",["^1<","^1;","^17","^1D","^1?","^12","^1:","^F","^A","^?","^1A","^1>"]],"^14","^[","~:ns-specs",["^ ","^73",["^1K",["^7G","^7O",["^1K",["^8?",["^76"],["^1K",["^75",["^1K",["^7E","^76"]],200000]]]]]],"^7?",["^1K",["^87","^71",["^89","^8G","^7C","^8M"]]],"^5Q",["^1K",["^7U","^70",["^1K",["^7I","^8A","^7?","^8E","^84","^7<","^84"]],"^78","^8N"]],"^7C","^7O","^5E",["^1K",["^7U","^70","^7?","^78","^7O"]],"^7R",["^Y",["events","state"]],"^7Y","^81","^57",["^1K",["^7U","^70","^7?"]],"^84",["^1K",["^7B","^8U",["^1K",["^88"]]]],"^89","^7O","^6J",["^1K",["^7U","^70",["^1K",["^7I","^85","^7R","^8A","^7?","^8E","^84","^7P","^84"]]]],"^8>",["^1K",["^87","^71",["^73","^8P","^7Y"]]],"^5W",["^1K",["^7U","^70",["^1K",["^87","^8:",["^8M"]]],"^78","^7O"]],"^5I",["^1K",["^7U","^70",["^1K",["^7I","^8A","^7?","^8Y","^8S"]],"^78",["^1K",["^7H","^8>"]]]],"^5[",["^1K",["^7U","^70",["^1K",["^7I","^8A","^7?","^8<","^7R"]],"^78","^7O"]],"^8G","^7O","^66",["^1K",["^7U","^70",["^1K",["^7I","^8R","^83","^8=","^83","^8E","^84","^7<","^84"]]]],"^8M","^7O","^8P",["^1K",["^7G","^7O",["^1K",["^8?",["^8@"],["^1K",["^75",["^1K",["^7E","^8@"]],200]]]]]],"^6A",["^1K",["^7U","^70",["^1K",["^7I","^7T","^8S","^8V","^8>"]]]],"^62",["^1K",["^7U","^70","^7?","^78","^84"]]],"~:ns-speced-vars",["^5Q","^5E","^57","^6J","^5W","^5I","^5[","^66","^6A","^62"],"~:compiler-options",["^23",[["^91","~:static-fns"],true,["^91","~:elide-asserts"],false,["^91","~:optimize-constants"],null,["^91","~:external-config"],null,["^91","~:tooling-config"],null,["^91","~:emit-constants"],null,["^91","~:infer-externs"],true,["^91","^1X"],null,["~:js-options","~:js-provider"],"^1G",["~:mode"],"~:dev",["^91","~:fn-invoke-direct"],null,["^91","~:source-map"],"/dev/null"]]]