["^ ","~:output",["^ ","~:js","goog.provide('huginn.mqtt');\ngoog.require('cljs.core');\ngoog.require('promesa.core');\ngoog.require('clojure.string');\ngoog.require('huginn.jwt');\ngoog.require('shadow.js.shim.module$gcic_mqtt_client');\ngoog.require('orchestra_cljs.spec.test');\ngoog.require('huginn.config');\ngoog.require('taoensso.timbre');\ngoog.require('cljs.core.async');\ngoog.require('shadow.js.shim.module$systeminformation');\ngoog.require('cljs.spec.alpha');\ngoog.require('cljs.nodejs');\nvar opts4844_4999 = null;\ncljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (opts4844_4999){\nreturn (function (ret__1923__auto__,p__4845){\nvar vec__4846 = p__4845;\nvar ___1924__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4846,(0),null);\nvar f__1925__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4846,(1),null);\nvar sym__1926__auto__ = (f__1925__auto__.cljs$core$IFn$_invoke$arity$0 ? f__1925__auto__.cljs$core$IFn$_invoke$arity$0() : f__1925__auto__.call(null));\nvar G__4849 = ret__1923__auto__;\nif(cljs.core.truth_(sym__1926__auto__)){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__4849,sym__1926__auto__);\n} else {\nreturn G__4849;\n}\n});})(opts4844_4999))\n,cljs.core.PersistentVector.EMPTY,orchestra_cljs.spec.test.distinct_by(cljs.core.first,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(((function (opts4844_4999){\nreturn (function (p1__1922__1927__auto__){\nvar G__4851 = cljs.core.first(p1__1922__1927__auto__);\nvar fexpr__4850 = orchestra_cljs.spec.test.instrumentable_syms.cljs$core$IFn$_invoke$arity$1(opts4844_4999);\nreturn (fexpr__4850.cljs$core$IFn$_invoke$arity$1 ? fexpr__4850.cljs$core$IFn$_invoke$arity$1(G__4851) : fexpr__4850.call(null,G__4851));\n});})(opts4844_4999))\n,cljs.core.zipmap(cljs.core.PersistentVector.EMPTY,cljs.core.PersistentVector.EMPTY))));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"events\",null,\"state\",null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"events\",null,\"state\",null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),null,null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__4852){\nreturn cljs.core.map_QMARK_(G__4852);\n}),(function (G__4852){\nreturn cljs.core.contains_QMARK_(G__4852,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096));\n}),(function (G__4852){\nreturn cljs.core.contains_QMARK_(G__4852,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\n}),(function (G__4852){\nreturn cljs.core.contains_QMARK_(G__4852,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214));\n}),(function (G__4852){\nreturn cljs.core.contains_QMARK_(G__4852,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\n})], null),(function (G__4852){\nreturn ((cljs.core.map_QMARK_(G__4852)) && (cljs.core.contains_QMARK_(G__4852,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096))) && (cljs.core.contains_QMARK_(G__4852,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006))) && (cljs.core.contains_QMARK_(G__4852,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214))) && (cljs.core.contains_QMARK_(G__4852,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096),new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006),new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214),new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208)))], null),null])));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__4853#\",\"p1__4853#\",712175953,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"p1__4853#\",\"p1__4853#\",712175953,null)),(200000)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)),(200000)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_,(function (p1__4853_SHARP_){\nreturn (cljs.core.count(p1__4853_SHARP_) < (200000));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__4854#\",\"p1__4854#\",1100307555,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"p1__4854#\",\"p1__4854#\",1100307555,null)),(200)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)),(200)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_,(function (p1__4854_SHARP_){\nreturn (cljs.core.count(p1__4854_SHARP_) < (200));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"qos\",\"huginn.mqtt/qos\",-601553370),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(0),null,(1),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(0),null,(1),null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),new cljs.core.Keyword(\"huginn.mqtt\",\"qos\",\"huginn.mqtt/qos\",-601553370)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),new cljs.core.Keyword(\"huginn.mqtt\",\"qos\",\"huginn.mqtt/qos\",-601553370)], null),null,null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__4855){\nreturn cljs.core.map_QMARK_(G__4855);\n}),(function (G__4855){\nreturn cljs.core.contains_QMARK_(G__4855,new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092));\n}),(function (G__4855){\nreturn cljs.core.contains_QMARK_(G__4855,new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439));\n}),(function (G__4855){\nreturn cljs.core.contains_QMARK_(G__4855,new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319));\n})], null),(function (G__4855){\nreturn ((cljs.core.map_QMARK_(G__4855)) && (cljs.core.contains_QMARK_(G__4855,new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092))) && (cljs.core.contains_QMARK_(G__4855,new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439))) && (cljs.core.contains_QMARK_(G__4855,new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),new cljs.core.Keyword(\"huginn.mqtt\",\"qos\",\"huginn.mqtt/qos\",-601553370)], null),null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319)))], null),null])));\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"client-id\",\"huginn.mqtt/client-id\",1699900680,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),null,null),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),null,null,null));\n/**\n * Builds a client id used to identify the device this message is\n *   comming from\n */\nhuginn.mqtt.client_id = (function huginn$mqtt$client_id(p__4856){\nvar map__4857 = p__4856;\nvar map__4857__$1 = ((((!((map__4857 == null)))?(((((map__4857.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__4857.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__4857):map__4857);\nvar opts = map__4857__$1;\nvar projectId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4857__$1,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096));\nvar registryId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4857__$1,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\nvar cloudRegion = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4857__$1,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214));\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4857__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"projects/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(projectId),\"/locations/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cloudRegion),\"/registries/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(registryId),\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId)].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"config-chan\",\"huginn.mqtt/config-chan\",-1665797133,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null))),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__4859){\nreturn cljs.core.map_QMARK_(G__4859);\n}),(function (G__4859){\nreturn cljs.core.contains_QMARK_(G__4859,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\n})], null),(function (G__4859){\nreturn ((cljs.core.map_QMARK_(G__4859)) && (cljs.core.contains_QMARK_(G__4859,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208)))], null),null]))], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null))], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),null,null,null));\n/**\n * google give each device two channeles, a state channel (the config channel)\n *   and a telemetry channel (the one that we push all our data over). The name of\n *   these channels are determined by google iot core.\n */\nhuginn.mqtt.config_chan = (function huginn$mqtt$config_chan(p__4860){\nvar map__4861 = p__4860;\nvar map__4861__$1 = ((((!((map__4861 == null)))?(((((map__4861.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__4861.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__4861):map__4861);\nvar opts = map__4861__$1;\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4861__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId),\"/config\"].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"client-handlers\",\"huginn.mqtt/client-handlers\",1114981143,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.fn_QMARK_,cljs.core.fn_QMARK_,new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\n/**\n * builds a map of handels to attach to the mqtt object\n */\nhuginn.mqtt.client_handlers = (function huginn$mqtt$client_handlers(success_fn,fail,send,recv){\nreturn new cljs.core.PersistentArrayMap(null, 5, [\"connect\",(function (success){\nif(cljs.core.truth_(success)){\nreturn (success_fn.cljs$core$IFn$_invoke$arity$0 ? success_fn.cljs$core$IFn$_invoke$arity$0() : success_fn.call(null));\n} else {\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"huginn.mqtt\",null,82,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"client connection failure\"], null);\n}),null)),null,1773963242);\n\nreturn (fail.cljs$core$IFn$_invoke$arity$0 ? fail.cljs$core$IFn$_invoke$arity$0() : fail.call(null));\n}\n}),\"close\",(function (){\nreturn null;\n}),\"reconnect\",(function (){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"huginn.mqtt\",null,85,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"reconnecting\"], null);\n}),null)),null,1499067059);\n}),\"error\",(function (err){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"huginn.mqtt\",null,86,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"error: \",err], null);\n}),null)),null,1331641442);\n}),\"message\",(function (topic,message,packet){\nvar c__1665__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__1665__auto__){\nreturn (function (){\nvar f__1666__auto__ = (function (){var switch__1642__auto__ = ((function (c__1665__auto__){\nreturn (function (state_4869){\nvar state_val_4870 = (state_4869[(1)]);\nif((state_val_4870 === (1))){\nvar inst_4863 = [new cljs.core.Keyword(null,\"topic\",\"topic\",-1960480691),new cljs.core.Keyword(null,\"message\",\"message\",-406056002),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081)];\nvar inst_4864 = [topic,message,packet];\nvar inst_4865 = cljs.core.PersistentHashMap.fromArrays(inst_4863,inst_4864);\nvar state_4869__$1 = state_4869;\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_4869__$1,(2),recv,inst_4865);\n} else {\nif((state_val_4870 === (2))){\nvar inst_4867 = (state_4869[(2)]);\nvar state_4869__$1 = state_4869;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_4869__$1,inst_4867);\n} else {\nreturn null;\n}\n}\n});})(c__1665__auto__))\n;\nreturn ((function (switch__1642__auto__,c__1665__auto__){\nreturn (function() {\nvar huginn$mqtt$client_handlers_$_state_machine__1643__auto__ = null;\nvar huginn$mqtt$client_handlers_$_state_machine__1643__auto____0 = (function (){\nvar statearr_4871 = [null,null,null,null,null,null,null];\n(statearr_4871[(0)] = huginn$mqtt$client_handlers_$_state_machine__1643__auto__);\n\n(statearr_4871[(1)] = (1));\n\nreturn statearr_4871;\n});\nvar huginn$mqtt$client_handlers_$_state_machine__1643__auto____1 = (function (state_4869){\nwhile(true){\nvar ret_value__1644__auto__ = (function (){try{while(true){\nvar result__1645__auto__ = switch__1642__auto__(state_4869);\nif(cljs.core.keyword_identical_QMARK_(result__1645__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__1645__auto__;\n}\nbreak;\n}\n}catch (e4872){if((e4872 instanceof Object)){\nvar ex__1646__auto__ = e4872;\nvar statearr_4873_5021 = state_4869;\n(statearr_4873_5021[(5)] = ex__1646__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_4869);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e4872;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__1644__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__5022 = state_4869;\nstate_4869 = G__5022;\ncontinue;\n} else {\nreturn ret_value__1644__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$client_handlers_$_state_machine__1643__auto__ = function(state_4869){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$client_handlers_$_state_machine__1643__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$client_handlers_$_state_machine__1643__auto____1.call(this,state_4869);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$client_handlers_$_state_machine__1643__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$client_handlers_$_state_machine__1643__auto____0;\nhuginn$mqtt$client_handlers_$_state_machine__1643__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$client_handlers_$_state_machine__1643__auto____1;\nreturn huginn$mqtt$client_handlers_$_state_machine__1643__auto__;\n})()\n;})(switch__1642__auto__,c__1665__auto__))\n})();\nvar state__1667__auto__ = (function (){var statearr_4874 = (f__1666__auto__.cljs$core$IFn$_invoke$arity$0 ? f__1666__auto__.cljs$core$IFn$_invoke$arity$0() : f__1666__auto__.call(null));\n(statearr_4874[(6)] = c__1665__auto__);\n\nreturn statearr_4874;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__1667__auto__);\n});})(c__1665__auto__))\n);\n\nreturn c__1665__auto__;\n})], null);\n});\n/**\n * takes a map of handlers and attaches them to the mqtt object\n */\nhuginn.mqtt.add_handlers = (function huginn$mqtt$add_handlers(client,handlers){\nvar seq__4875 = cljs.core.seq(handlers);\nvar chunk__4876 = null;\nvar count__4877 = (0);\nvar i__4878 = (0);\nwhile(true){\nif((i__4878 < count__4877)){\nvar vec__4879 = chunk__4876.cljs$core$IIndexed$_nth$arity$2(null,i__4878);\nvar key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4879,(0),null);\nvar hand = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4879,(1),null);\nclient.on(key,hand);\n\n\nvar G__5023 = seq__4875;\nvar G__5024 = chunk__4876;\nvar G__5025 = count__4877;\nvar G__5026 = (i__4878 + (1));\nseq__4875 = G__5023;\nchunk__4876 = G__5024;\ncount__4877 = G__5025;\ni__4878 = G__5026;\ncontinue;\n} else {\nvar temp__5457__auto__ = cljs.core.seq(seq__4875);\nif(temp__5457__auto__){\nvar seq__4875__$1 = temp__5457__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__4875__$1)){\nvar c__4351__auto__ = cljs.core.chunk_first(seq__4875__$1);\nvar G__5027 = cljs.core.chunk_rest(seq__4875__$1);\nvar G__5028 = c__4351__auto__;\nvar G__5029 = cljs.core.count(c__4351__auto__);\nvar G__5030 = (0);\nseq__4875 = G__5027;\nchunk__4876 = G__5028;\ncount__4877 = G__5029;\ni__4878 = G__5030;\ncontinue;\n} else {\nvar vec__4882 = cljs.core.first(seq__4875__$1);\nvar key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4882,(0),null);\nvar hand = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4882,(1),null);\nclient.on(key,hand);\n\n\nvar G__5031 = cljs.core.next(seq__4875__$1);\nvar G__5032 = null;\nvar G__5033 = (0);\nvar G__5034 = (0);\nseq__4875 = G__5031;\nchunk__4876 = G__5032;\ncount__4877 = G__5033;\ni__4878 = G__5034;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"build-client\",\"huginn.mqtt/build-client\",-620852627,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\nhuginn.mqtt.build_client = (function huginn$mqtt$build_client(opts){\n\nvar conn_args = huginn.jwt.google_iot_conn_args(opts);\nvar client = (new shadow.js.shim.module$gcic_mqtt_client(conn_args));\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),client], null);\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"init-client\",\"huginn.mqtt/init-client\",-283765885,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"promesa.core\",\"promise?\",\"promesa.core/promise?\",-1893544292,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"promesa.core\",\"promise?\",\"promesa.core/promise?\",-1893544292,null),promesa.core.promise_QMARK_,null,null),new cljs.core.Symbol(\"promesa.core\",\"promise?\",\"promesa.core/promise?\",-1893544292,null),null,null,null));\nhuginn.mqtt.init_client = (function huginn$mqtt$init_client(opts,send,recv){\n\nreturn promesa.core.promise((function (resolve,reject){\nvar map__4885 = huginn.mqtt.build_client(opts);\nvar map__4885__$1 = ((((!((map__4885 == null)))?(((((map__4885.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__4885.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__4885):map__4885);\nvar init = map__4885__$1;\nvar client = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4885__$1,new cljs.core.Keyword(null,\"client\",\"client\",-1323448117));\nvar handlers = huginn.mqtt.client_handlers(((function (map__4885,map__4885__$1,init,client){\nreturn (function (){\nreturn (resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(client) : resolve.call(null,client));\n});})(map__4885,map__4885__$1,init,client))\n,((function (map__4885,map__4885__$1,init,client){\nreturn (function (){\nvar G__4887 = new cljs.core.Keyword(null,\"client-fail\",\"client-fail\",1564298304);\nreturn (reject.cljs$core$IFn$_invoke$arity$1 ? reject.cljs$core$IFn$_invoke$arity$1(G__4887) : reject.call(null,G__4887));\n});})(map__4885,map__4885__$1,init,client))\n,send,recv);\nclient.subscribe(huginn.mqtt.config_chan(opts));\n\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"huginn.mqtt\",null,133,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (map__4885,map__4885__$1,init,client,handlers){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"subscribe\"], null);\n});})(map__4885,map__4885__$1,init,client,handlers))\n,null)),null,567814813);\n\nreturn huginn.mqtt.add_handlers(client,handlers);\n}));\n});\n/**\n * builds the prefix of the actual values being sent\n *   (str (payload-root config) sensor-name /  sensor-value)\n */\nhuginn.mqtt.payload_root = (function huginn$mqtt$payload_root(p__4888){\nvar map__4889 = p__4888;\nvar map__4889__$1 = ((((!((map__4889 == null)))?(((((map__4889.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__4889.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__4889):map__4889);\nvar opts = map__4889__$1;\nvar registryId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4889__$1,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\nvar userId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4889__$1,new cljs.core.Keyword(null,\"userId\",\"userId\",575594135));\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4889__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(registryId),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(userId),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId),\"-payload\"].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"mqtt-topic\",\"huginn.mqtt/mqtt-topic\",-2087820524,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),null,null,null));\n/**\n * msg-type can be 'state' for state updates\n * or 'events' to publish telemetry\n */\nhuginn.mqtt.mqtt_topic = (function huginn$mqtt$mqtt_topic(p__4891,msg_type){\nvar map__4892 = p__4891;\nvar map__4892__$1 = ((((!((map__4892 == null)))?(((((map__4892.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__4892.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__4892):map__4892);\nvar opts = map__4892__$1;\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4892__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg_type)].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"prep-temps\",\"huginn.mqtt/prep-temps\",-1223395116,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"data\",\"data\",-232669377)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.core.any_QMARK_], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),null,new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__4894){\nreturn cljs.core.coll_QMARK_(G__4894);\n}),new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))], null),null),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)),null,null,null));\n/**\n * pulls the data out of the systeminformation library and wrapping them up\n *   to be sent into mqtt\n */\nhuginn.mqtt.prep_temps = (function huginn$mqtt$prep_temps(opts,data){\nvar pr = huginn.mqtt.payload_root(opts);\nvar cores_raw = cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(data.cores);\nvar cores = cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(((function (pr,cores_raw){\nreturn (function (index,value){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(pr),\"-core-temp-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(index),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(value)].join(''))].join(''),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),[\"metrics/core-temp-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(index)].join('')], null);\n});})(pr,cores_raw))\n,cores_raw);\nvar main = (cljs.core.truth_(data.main)?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(pr),\"-core-temp-main/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(data.main)].join(''))].join(''),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),\"metrics/core-temp-main\"], null):null);\nvar max = (cljs.core.truth_(data.max)?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(pr),\"-core-temp-max/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(data.max)].join(''))].join(''),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),\"metrics/core-temp-max\"], null):null);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [main], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [max], null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cores], 0));\n});\nhuginn.mqtt.stop = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"publish-one\",\"huginn.mqtt/publish-one\",1981166109,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.any_QMARK_,cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Keyword(null,\"value\",\"value\",305978217)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nil_QMARK_,new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)], null),null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"or\",\"cljs.spec.alpha/or\",-831679639,null),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Keyword(null,\"value\",\"value\",305978217),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\n/**\n * Publises one mqtt packet to the client\n */\nhuginn.mqtt.publish_one = (function huginn$mqtt$publish_one(client,p__4895){\nvar map__4896 = p__4895;\nvar map__4896__$1 = ((((!((map__4896 == null)))?(((((map__4896.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__4896.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__4896):map__4896);\nvar p = map__4896__$1;\nvar payload = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4896__$1,new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092));\nvar qos = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4896__$1,new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319));\nvar subfolder = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4896__$1,new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439));\nif(cljs.core.truth_(p)){\nreturn client.publishEvent(payload,(function (){var or__3949__auto__ = qos;\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn (0);\n}\n})(),subfolder);\n} else {\nreturn null;\n}\n});\n/**\n * main loop that pushes packets added to the send-chan to google iot core\n */\nhuginn.mqtt.publisher = (function huginn$mqtt$publisher(client_atom,send_chan){\nvar c__1665__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__1665__auto__){\nreturn (function (){\nvar f__1666__auto__ = (function (){var switch__1642__auto__ = ((function (c__1665__auto__){\nreturn (function (state_4907){\nvar state_val_4908 = (state_4907[(1)]);\nif((state_val_4908 === (1))){\nvar state_4907__$1 = state_4907;\nvar statearr_4909_5065 = state_4907__$1;\n(statearr_4909_5065[(2)] = null);\n\n(statearr_4909_5065[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_4908 === (2))){\nvar state_4907__$1 = state_4907;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_4907__$1,(4),send_chan);\n} else {\nif((state_val_4908 === (3))){\nvar inst_4905 = (state_4907[(2)]);\nvar state_4907__$1 = state_4907;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_4907__$1,inst_4905);\n} else {\nif((state_val_4908 === (4))){\nvar inst_4900 = (state_4907[(2)]);\nvar inst_4901 = cljs.core.deref(client_atom);\nvar inst_4902 = huginn.mqtt.publish_one(inst_4901,inst_4900);\nvar state_4907__$1 = (function (){var statearr_4910 = state_4907;\n(statearr_4910[(7)] = inst_4902);\n\nreturn statearr_4910;\n})();\nvar statearr_4911_5066 = state_4907__$1;\n(statearr_4911_5066[(2)] = null);\n\n(statearr_4911_5066[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n});})(c__1665__auto__))\n;\nreturn ((function (switch__1642__auto__,c__1665__auto__){\nreturn (function() {\nvar huginn$mqtt$publisher_$_state_machine__1643__auto__ = null;\nvar huginn$mqtt$publisher_$_state_machine__1643__auto____0 = (function (){\nvar statearr_4912 = [null,null,null,null,null,null,null,null];\n(statearr_4912[(0)] = huginn$mqtt$publisher_$_state_machine__1643__auto__);\n\n(statearr_4912[(1)] = (1));\n\nreturn statearr_4912;\n});\nvar huginn$mqtt$publisher_$_state_machine__1643__auto____1 = (function (state_4907){\nwhile(true){\nvar ret_value__1644__auto__ = (function (){try{while(true){\nvar result__1645__auto__ = switch__1642__auto__(state_4907);\nif(cljs.core.keyword_identical_QMARK_(result__1645__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__1645__auto__;\n}\nbreak;\n}\n}catch (e4913){if((e4913 instanceof Object)){\nvar ex__1646__auto__ = e4913;\nvar statearr_4914_5069 = state_4907;\n(statearr_4914_5069[(5)] = ex__1646__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_4907);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e4913;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__1644__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__5071 = state_4907;\nstate_4907 = G__5071;\ncontinue;\n} else {\nreturn ret_value__1644__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$publisher_$_state_machine__1643__auto__ = function(state_4907){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$publisher_$_state_machine__1643__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$publisher_$_state_machine__1643__auto____1.call(this,state_4907);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$publisher_$_state_machine__1643__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$publisher_$_state_machine__1643__auto____0;\nhuginn$mqtt$publisher_$_state_machine__1643__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$publisher_$_state_machine__1643__auto____1;\nreturn huginn$mqtt$publisher_$_state_machine__1643__auto__;\n})()\n;})(switch__1642__auto__,c__1665__auto__))\n})();\nvar state__1667__auto__ = (function (){var statearr_4915 = (f__1666__auto__.cljs$core$IFn$_invoke$arity$0 ? f__1666__auto__.cljs$core$IFn$_invoke$arity$0() : f__1666__auto__.call(null));\n(statearr_4915[(6)] = c__1665__auto__);\n\nreturn statearr_4915;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__1667__auto__);\n});})(c__1665__auto__))\n);\n\nreturn c__1665__auto__;\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"tele-chan\",\"huginn.mqtt/tele-chan\",1912072830,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),null,null),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),null,null,null));\n/**\n * takes the client opts and builds a channel with system telementry\n *   values on it (cpu tempratures specifically)\n */\nhuginn.mqtt.tele_chan = (function huginn$mqtt$tele_chan(opts){\nvar temp_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar out_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar c__1665__auto___5072 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__1665__auto___5072,temp_chan,out_chan){\nreturn (function (){\nvar f__1666__auto__ = (function (){var switch__1642__auto__ = ((function (c__1665__auto___5072,temp_chan,out_chan){\nreturn (function (state_4930){\nvar state_val_4931 = (state_4930[(1)]);\nif((state_val_4931 === (1))){\nvar state_4930__$1 = state_4930;\nvar statearr_4932_5074 = state_4930__$1;\n(statearr_4932_5074[(2)] = null);\n\n(statearr_4932_5074[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_4931 === (2))){\nvar inst_4918 = shadow.js.shim.module$systeminformation.cpuTemperature();\nvar inst_4919 = (function (){return ((function (inst_4918,state_val_4931,c__1665__auto___5072,temp_chan,out_chan){\nreturn (function (p1__4916_SHARP_){\nreturn huginn.mqtt.prep_temps(opts,p1__4916_SHARP_);\n});\n;})(inst_4918,state_val_4931,c__1665__auto___5072,temp_chan,out_chan))\n})();\nvar inst_4920 = (function (){return ((function (inst_4918,inst_4919,state_val_4931,c__1665__auto___5072,temp_chan,out_chan){\nreturn (function (mqtt_packets){\nvar c__1665__auto____$1 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__1665__auto____$1,inst_4918,inst_4919,state_val_4931,c__1665__auto___5072,temp_chan,out_chan){\nreturn (function (){\nvar f__1666__auto__ = (function (){var switch__1642__auto__ = ((function (c__1665__auto____$1,inst_4918,inst_4919,state_val_4931,c__1665__auto___5072,temp_chan,out_chan){\nreturn (function (state_4941){\nvar state_val_4942 = (state_4941[(1)]);\nif((state_val_4942 === (1))){\nvar inst_4933 = ((1000) * (60));\nvar inst_4934 = (inst_4933 * (1));\nvar inst_4935 = cljs.core.async.timeout(inst_4934);\nvar state_4941__$1 = state_4941;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_4941__$1,(2),inst_4935);\n} else {\nif((state_val_4942 === (2))){\nvar inst_4937 = (state_4941[(2)]);\nvar state_4941__$1 = (function (){var statearr_4943 = state_4941;\n(statearr_4943[(7)] = inst_4937);\n\nreturn statearr_4943;\n})();\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_4941__$1,(3),temp_chan,mqtt_packets);\n} else {\nif((state_val_4942 === (3))){\nvar inst_4939 = (state_4941[(2)]);\nvar state_4941__$1 = state_4941;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_4941__$1,inst_4939);\n} else {\nreturn null;\n}\n}\n}\n});})(c__1665__auto____$1,inst_4918,inst_4919,state_val_4931,c__1665__auto___5072,temp_chan,out_chan))\n;\nreturn ((function (switch__1642__auto__,c__1665__auto____$1,inst_4918,inst_4919,state_val_4931,c__1665__auto___5072,temp_chan,out_chan){\nreturn (function() {\nvar huginn$mqtt$tele_chan_$_state_machine__1643__auto__ = null;\nvar huginn$mqtt$tele_chan_$_state_machine__1643__auto____0 = (function (){\nvar statearr_4944 = [null,null,null,null,null,null,null,null];\n(statearr_4944[(0)] = huginn$mqtt$tele_chan_$_state_machine__1643__auto__);\n\n(statearr_4944[(1)] = (1));\n\nreturn statearr_4944;\n});\nvar huginn$mqtt$tele_chan_$_state_machine__1643__auto____1 = (function (state_4941){\nwhile(true){\nvar ret_value__1644__auto__ = (function (){try{while(true){\nvar result__1645__auto__ = switch__1642__auto__(state_4941);\nif(cljs.core.keyword_identical_QMARK_(result__1645__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__1645__auto__;\n}\nbreak;\n}\n}catch (e4945){if((e4945 instanceof Object)){\nvar ex__1646__auto__ = e4945;\nvar statearr_4946_5075 = state_4941;\n(statearr_4946_5075[(5)] = ex__1646__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_4941);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e4945;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__1644__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__5076 = state_4941;\nstate_4941 = G__5076;\ncontinue;\n} else {\nreturn ret_value__1644__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$tele_chan_$_state_machine__1643__auto__ = function(state_4941){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$tele_chan_$_state_machine__1643__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$tele_chan_$_state_machine__1643__auto____1.call(this,state_4941);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$tele_chan_$_state_machine__1643__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$tele_chan_$_state_machine__1643__auto____0;\nhuginn$mqtt$tele_chan_$_state_machine__1643__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$tele_chan_$_state_machine__1643__auto____1;\nreturn huginn$mqtt$tele_chan_$_state_machine__1643__auto__;\n})()\n;})(switch__1642__auto__,c__1665__auto____$1,inst_4918,inst_4919,state_val_4931,c__1665__auto___5072,temp_chan,out_chan))\n})();\nvar state__1667__auto__ = (function (){var statearr_4947 = (f__1666__auto__.cljs$core$IFn$_invoke$arity$0 ? f__1666__auto__.cljs$core$IFn$_invoke$arity$0() : f__1666__auto__.call(null));\n(statearr_4947[(6)] = c__1665__auto____$1);\n\nreturn statearr_4947;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__1667__auto__);\n});})(c__1665__auto____$1,inst_4918,inst_4919,state_val_4931,c__1665__auto___5072,temp_chan,out_chan))\n);\n\nreturn c__1665__auto____$1;\n});\n;})(inst_4918,inst_4919,state_val_4931,c__1665__auto___5072,temp_chan,out_chan))\n})();\nvar inst_4921 = promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic(inst_4918,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([inst_4919,inst_4920], 0));\nvar state_4930__$1 = (function (){var statearr_4948 = state_4930;\n(statearr_4948[(7)] = inst_4921);\n\nreturn statearr_4948;\n})();\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_4930__$1,(4),temp_chan);\n} else {\nif((state_val_4931 === (3))){\nvar inst_4928 = (state_4930[(2)]);\nvar state_4930__$1 = state_4930;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_4930__$1,inst_4928);\n} else {\nif((state_val_4931 === (4))){\nvar inst_4923 = (state_4930[(2)]);\nvar state_4930__$1 = state_4930;\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_4930__$1,(5),out_chan,inst_4923);\n} else {\nif((state_val_4931 === (5))){\nvar inst_4925 = (state_4930[(2)]);\nvar state_4930__$1 = (function (){var statearr_4949 = state_4930;\n(statearr_4949[(8)] = inst_4925);\n\nreturn statearr_4949;\n})();\nvar statearr_4950_5077 = state_4930__$1;\n(statearr_4950_5077[(2)] = null);\n\n(statearr_4950_5077[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n});})(c__1665__auto___5072,temp_chan,out_chan))\n;\nreturn ((function (switch__1642__auto__,c__1665__auto___5072,temp_chan,out_chan){\nreturn (function() {\nvar huginn$mqtt$tele_chan_$_state_machine__1643__auto__ = null;\nvar huginn$mqtt$tele_chan_$_state_machine__1643__auto____0 = (function (){\nvar statearr_4951 = [null,null,null,null,null,null,null,null,null];\n(statearr_4951[(0)] = huginn$mqtt$tele_chan_$_state_machine__1643__auto__);\n\n(statearr_4951[(1)] = (1));\n\nreturn statearr_4951;\n});\nvar huginn$mqtt$tele_chan_$_state_machine__1643__auto____1 = (function (state_4930){\nwhile(true){\nvar ret_value__1644__auto__ = (function (){try{while(true){\nvar result__1645__auto__ = switch__1642__auto__(state_4930);\nif(cljs.core.keyword_identical_QMARK_(result__1645__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__1645__auto__;\n}\nbreak;\n}\n}catch (e4952){if((e4952 instanceof Object)){\nvar ex__1646__auto__ = e4952;\nvar statearr_4953_5078 = state_4930;\n(statearr_4953_5078[(5)] = ex__1646__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_4930);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e4952;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__1644__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__5079 = state_4930;\nstate_4930 = G__5079;\ncontinue;\n} else {\nreturn ret_value__1644__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$tele_chan_$_state_machine__1643__auto__ = function(state_4930){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$tele_chan_$_state_machine__1643__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$tele_chan_$_state_machine__1643__auto____1.call(this,state_4930);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$tele_chan_$_state_machine__1643__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$tele_chan_$_state_machine__1643__auto____0;\nhuginn$mqtt$tele_chan_$_state_machine__1643__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$tele_chan_$_state_machine__1643__auto____1;\nreturn huginn$mqtt$tele_chan_$_state_machine__1643__auto__;\n})()\n;})(switch__1642__auto__,c__1665__auto___5072,temp_chan,out_chan))\n})();\nvar state__1667__auto__ = (function (){var statearr_4954 = (f__1666__auto__.cljs$core$IFn$_invoke$arity$0 ? f__1666__auto__.cljs$core$IFn$_invoke$arity$0() : f__1666__auto__.call(null));\n(statearr_4954[(6)] = c__1665__auto___5072);\n\nreturn statearr_4954;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__1667__auto__);\n});})(c__1665__auto___5072,temp_chan,out_chan))\n);\n\n\nreturn out_chan;\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"sender\",\"huginn.mqtt/sender\",-581128399,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\n/**\n * takes information for the tele-chan in the form of collections of\n *   mqtt-packets and assignes a default topic if a subfolder is set,\n *   adds a default qos. Then takes the resulting structures and puts\n *   them on to the send channel. waits for :delayMs between collections \n */\nhuginn.mqtt.sender = (function huginn$mqtt$sender(topic_name,opts,send,t_chan){\nvar c__1665__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__1665__auto__){\nreturn (function (){\nvar f__1666__auto__ = (function (){var switch__1642__auto__ = ((function (c__1665__auto__){\nreturn (function (state_4979){\nvar state_val_4980 = (state_4979[(1)]);\nif((state_val_4980 === (1))){\nvar state_4979__$1 = state_4979;\nvar statearr_4981_5080 = state_4979__$1;\n(statearr_4981_5080[(2)] = null);\n\n(statearr_4981_5080[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_4980 === (2))){\nvar state_4979__$1 = state_4979;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_4979__$1,(4),t_chan);\n} else {\nif((state_val_4980 === (3))){\nvar inst_4977 = (state_4979[(2)]);\nvar state_4979__$1 = state_4979;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_4979__$1,inst_4977);\n} else {\nif((state_val_4980 === (4))){\nvar inst_4957 = (state_4979[(2)]);\nvar inst_4958 = huginn.mqtt.mqtt_topic(opts,topic_name);\nvar inst_4959 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"state\",topic_name);\nvar state_4979__$1 = (function (){var statearr_4982 = state_4979;\n(statearr_4982[(7)] = inst_4958);\n\n(statearr_4982[(8)] = inst_4957);\n\nreturn statearr_4982;\n})();\nif(inst_4959){\nvar statearr_4983_5083 = state_4979__$1;\n(statearr_4983_5083[(1)] = (5));\n\n} else {\nvar statearr_4984_5084 = state_4979__$1;\n(statearr_4984_5084[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_4980 === (5))){\nvar inst_4958 = (state_4979[(7)]);\nvar inst_4957 = (state_4979[(8)]);\nvar inst_4961 = (function (){var teles = inst_4957;\nvar topic = inst_4958;\nvar qos = ({\"qos\": (0)});\nreturn ((function (teles,topic,qos,inst_4958,inst_4957,state_val_4980,c__1665__auto__){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"pushing state\",topic], null);\n});\n;})(teles,topic,qos,inst_4958,inst_4957,state_val_4980,c__1665__auto__))\n})();\nvar inst_4962 = (new cljs.core.Delay(inst_4961,null));\nvar inst_4963 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"huginn.mqtt\",null,236,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),inst_4962,null,662066817);\nvar state_4979__$1 = state_4979;\nvar statearr_4985_5085 = state_4979__$1;\n(statearr_4985_5085[(2)] = inst_4963);\n\n(statearr_4985_5085[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_4980 === (6))){\nvar state_4979__$1 = state_4979;\nvar statearr_4986_5086 = state_4979__$1;\n(statearr_4986_5086[(2)] = null);\n\n(statearr_4986_5086[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_4980 === (7))){\nvar inst_4958 = (state_4979[(7)]);\nvar inst_4957 = (state_4979[(8)]);\nvar inst_4966 = (state_4979[(2)]);\nvar inst_4968 = (function (){var teles = inst_4957;\nvar topic = inst_4958;\nvar qos = ({\"qos\": (0)});\nreturn ((function (teles,topic,qos,inst_4958,inst_4957,inst_4966,state_val_4980,c__1665__auto__){\nreturn (function (p__4967){\nvar map__4987 = p__4967;\nvar map__4987__$1 = ((((!((map__4987 == null)))?(((((map__4987.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__4987.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__4987):map__4987);\nvar mqtt_packet = map__4987__$1;\nvar subfolder = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4987__$1,new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439));\nvar my_topic = (cljs.core.truth_(subfolder)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(topic),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(subfolder)].join(''):topic);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(mqtt_packet,new cljs.core.Keyword(null,\"topic\",\"topic\",-1960480691),my_topic);\n});\n;})(teles,topic,qos,inst_4958,inst_4957,inst_4966,state_val_4980,c__1665__auto__))\n})();\nvar inst_4969 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(inst_4968,inst_4957);\nvar inst_4970 = cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(send,inst_4969,false);\nvar inst_4971 = new cljs.core.Keyword(null,\"delayMs\",\"delayMs\",-1017330168).cljs$core$IFn$_invoke$arity$1(opts);\nvar inst_4972 = cljs.core.async.timeout(inst_4971);\nvar state_4979__$1 = (function (){var statearr_4989 = state_4979;\n(statearr_4989[(9)] = inst_4966);\n\n(statearr_4989[(10)] = inst_4970);\n\nreturn statearr_4989;\n})();\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_4979__$1,(8),inst_4972);\n} else {\nif((state_val_4980 === (8))){\nvar inst_4974 = (state_4979[(2)]);\nvar state_4979__$1 = (function (){var statearr_4990 = state_4979;\n(statearr_4990[(11)] = inst_4974);\n\nreturn statearr_4990;\n})();\nvar statearr_4991_5092 = state_4979__$1;\n(statearr_4991_5092[(2)] = null);\n\n(statearr_4991_5092[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__1665__auto__))\n;\nreturn ((function (switch__1642__auto__,c__1665__auto__){\nreturn (function() {\nvar huginn$mqtt$sender_$_state_machine__1643__auto__ = null;\nvar huginn$mqtt$sender_$_state_machine__1643__auto____0 = (function (){\nvar statearr_4992 = [null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_4992[(0)] = huginn$mqtt$sender_$_state_machine__1643__auto__);\n\n(statearr_4992[(1)] = (1));\n\nreturn statearr_4992;\n});\nvar huginn$mqtt$sender_$_state_machine__1643__auto____1 = (function (state_4979){\nwhile(true){\nvar ret_value__1644__auto__ = (function (){try{while(true){\nvar result__1645__auto__ = switch__1642__auto__(state_4979);\nif(cljs.core.keyword_identical_QMARK_(result__1645__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__1645__auto__;\n}\nbreak;\n}\n}catch (e4993){if((e4993 instanceof Object)){\nvar ex__1646__auto__ = e4993;\nvar statearr_4994_5093 = state_4979;\n(statearr_4994_5093[(5)] = ex__1646__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_4979);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e4993;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__1644__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__5095 = state_4979;\nstate_4979 = G__5095;\ncontinue;\n} else {\nreturn ret_value__1644__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$sender_$_state_machine__1643__auto__ = function(state_4979){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$sender_$_state_machine__1643__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$sender_$_state_machine__1643__auto____1.call(this,state_4979);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$sender_$_state_machine__1643__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$sender_$_state_machine__1643__auto____0;\nhuginn$mqtt$sender_$_state_machine__1643__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$sender_$_state_machine__1643__auto____1;\nreturn huginn$mqtt$sender_$_state_machine__1643__auto__;\n})()\n;})(switch__1642__auto__,c__1665__auto__))\n})();\nvar state__1667__auto__ = (function (){var statearr_4995 = (f__1666__auto__.cljs$core$IFn$_invoke$arity$0 ? f__1666__auto__.cljs$core$IFn$_invoke$arity$0() : f__1666__auto__.call(null));\n(statearr_4995[(6)] = c__1665__auto__);\n\nreturn statearr_4995;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__1667__auto__);\n});})(c__1665__auto__))\n);\n\nreturn c__1665__auto__;\n});\nhuginn.mqtt.state_send = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(huginn.mqtt.sender,\"state\");\nhuginn.mqtt.tele_send = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(huginn.mqtt.sender,\"events\");\nhuginn.mqtt.clean_up = (function huginn$mqtt$clean_up(p__4996){\nvar map__4997 = p__4996;\nvar map__4997__$1 = ((((!((map__4997 == null)))?(((((map__4997.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__4997.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__4997):map__4997);\nvar system = map__4997__$1;\nvar send_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4997__$1,new cljs.core.Keyword(null,\"send-chan\",\"send-chan\",1681189602));\nvar recv_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4997__$1,new cljs.core.Keyword(null,\"recv-chan\",\"recv-chan\",869238850));\nvar telemetry_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4997__$1,new cljs.core.Keyword(null,\"telemetry-chan\",\"telemetry-chan\",-1991836503));\nvar state_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4997__$1,new cljs.core.Keyword(null,\"state-chan\",\"state-chan\",-1042477017));\nvar client_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4997__$1,new cljs.core.Keyword(null,\"client-atom\",\"client-atom\",-1733084110));\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"huginn.mqtt\",null,256,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (map__4997,map__4997__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Killing system\"], null);\n});})(map__4997,map__4997__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom))\n,null)),null,-1646282031);\n\ncljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (map__4997,map__4997__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom){\nreturn (function (c){\nreturn cljs.core.async.close_BANG_(c);\n});})(map__4997,map__4997__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom))\n,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [send_chan,recv_chan,state_chan,telemetry_chan], null)));\n\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"huginn.mqtt\",null,260,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (map__4997,map__4997__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"killing client\"], null);\n});})(map__4997,map__4997__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom))\n,null)),null,136393610);\n\nreturn cljs.core.deref(client_atom).end();\n});\n/**\n * the heart of the system lies here.\n *   This function takes options (config/default-options works well)\n *   It returns a map\n *   This map has\n *   :send-chan A channel you can use to directly send messages of mqtt, must be of the\n *   form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n *   :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n *   :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n *   (google publishes these values to a differnt pubsub channel then device telemetry)\n *   :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n *   are sent in the same batch, the same is true for stat-chan.\n *   :client-atom, contains the current version of the mqtt client. This is an atom so\n *   that the client-refersher can refresh the authentication token and swap it.\n *   this pattern also ensures only one client\n * \n *   payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you\n */\nhuginn.mqtt.system_function = (function huginn$mqtt$system_function(opts){\nvar send = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar recv = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar kill = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\nvar client_promise = huginn.mqtt.init_client(opts,send,recv);\nvar client_atom = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\nvar t_chan = huginn.mqtt.tele_chan(opts);\nvar state_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nreturn promesa.core.then(client_promise,((function (send,recv,kill,client_promise,client_atom,t_chan,state_chan){\nreturn (function (client){\ncljs.core.reset_BANG_(client_atom,client);\n\nhuginn.mqtt.publisher(client_atom,send);\n\n(huginn.mqtt.tele_send.cljs$core$IFn$_invoke$arity$3 ? huginn.mqtt.tele_send.cljs$core$IFn$_invoke$arity$3(opts,send,t_chan) : huginn.mqtt.tele_send.call(null,opts,send,t_chan));\n\n(huginn.mqtt.state_send.cljs$core$IFn$_invoke$arity$3 ? huginn.mqtt.state_send.cljs$core$IFn$_invoke$arity$3(opts,send,state_chan) : huginn.mqtt.state_send.call(null,opts,send,state_chan));\n\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"send-chan\",\"send-chan\",1681189602),send,new cljs.core.Keyword(null,\"recv-chan\",\"recv-chan\",869238850),recv,new cljs.core.Keyword(null,\"state-chan\",\"state-chan\",-1042477017),state_chan,new cljs.core.Keyword(null,\"telemetry-chan\",\"telemetry-chan\",-1991836503),t_chan,new cljs.core.Keyword(null,\"client-atom\",\"client-atom\",-1733084110),client_atom], null);\n});})(send,recv,kill,client_promise,client_atom,t_chan,state_chan))\n);\n});\n/**\n * Feed the system promise to this and it will kill it\n */\nhuginn.mqtt.kill_it = (function huginn$mqtt$kill_it(system_promise){\nreturn promesa.core.then(system_promise,huginn.mqtt.clean_up);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","huginn/mqtt.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$jsonwebtoken","~$shadow.js.shim.module$jsonwebtoken","~$systeminformation","~$shadow.js.shim.module$systeminformation","~$clojure.core.async","~$cljs.core.async","~$raspicam","~$shadow.js.shim.module$raspicam"],"~:use-macros",["^ ","~$get-env","~$taoensso.timbre","~$log","^F","~$logf","^F","~$reportf","^F","~$fatalf","^F","~$warnf","^F","~$report","^F","~$spy","^F","~$warn","^F","~$trace","^F","~$debug","^F","~$debugf","^F","~$tracef","^F","~$infof","^F","~$fatal","^F","~$errorf","^F","~$info","^F","~$error","^F"],"~:excludes",["~#set",[]],"~:name","~$huginn.mqtt","~:js-aliases",["^ ","gcic-mqtt-client","~$shadow.js.shim.module$gcic_mqtt_client"],"~:op","~:ns","~:imports",null,"~:requires",["^ ","^12","^12","~$p","~$promesa.core","^17","^17","~$timbre","^F","~$a","^A","~$si","^?","~$huginn.config","^1:","~$orchestra-cljs.spec.test","^1;","~$cljs.core","^1<","~$goog","^1=","^A","^A","^>","^?","~$config","^1:","~$cljs.nodejs","^1?","~$huginn.jwt","^1@","~$nodejs","^1?","~$s","~$cljs.spec.alpha","~$mqtt","^12","~$jw","^1@","^F","^F","^?","^?","~$clojure.string","^1E","~$st","^1E","^1B","^1B","~$spec-test","^1;"],"~:seen",["^Y",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^F","^F","^18","^F","^1<","^1<","~$a","^A","^1;","^1;","^A","^A","~$s","^1B","^1B","^1B","^1G","^1;"],"~:form",["~#list",["~$ns","^[",["^1M",["^1I",["^17","~:as","~$p"],["^1E","^1O","^1F"],["^1@","^1O","^1D"],["gcic-mqtt-client","^1O","^1C"],["^1;","^1O","^1G"],["^1:","^1O","^1>"],["^F","^1O","^18","~:refer-macros",["^G","^O","^P","^V","^N","^W","^T","^L","^H","^R","^Q","^S","^K","^U","^J","^I","^M","^E"]],["^A","^1O","~$a"],["^>","^1O","^19"],["^1B","^1O","~$s"],["^1?","^1O","^1A"]]]]],"~:flags",["^ ","^1I",["^Y",[]]],"~:js-deps",["^ ","^11",["^ ","^1O","^1C"]],"~:deps",["^1=","^1<","^17","^1E","^1@","^12","^1;","^1:","^F","^A","^?","^1B","^1?"]],"^14","^[","~:resource-id",["~:shadow.build.classpath/resource","huginn/mqtt.cljs"],"~:compiled-at",1540261871068,"~:resource-name","huginn/mqtt.cljs","~:warnings",[],"~:source","(ns huginn.mqtt\n  (:require\n   [promesa.core :as p]\n   [clojure.string :as st]\n   [huginn.jwt :as jw]\n   [\"gcic-mqtt-client\" :as mqtt]\n   [orchestra-cljs.spec.test :as spec-test]\n   [huginn.config :as config]\n   [taoensso.timbre :as timbre\n    :refer-macros [log  trace  debug  info  warn  error  fatal  report\n                   logf tracef debugf infof warnf errorf fatalf reportf\n                   spy get-env]]\n   [cljs.core.async :as a]\n   [systeminformation :as si]\n   [cljs.spec.alpha :as s]\n   [cljs.nodejs :as nodejs]))\n\n\n(spec-test/instrument)\n\n(s/def ::projectId string?)\n(s/def ::registryId string?)\n(s/def ::cloudRegion string?)\n(s/def ::deviceId string?)\n(s/def ::chan any?)\n\n(s/def ::topic-type #{\"events\" \"state\"})\n\n\n(s/def ::client-config (s/keys :req-un\n                               [::projectId\n                                ::registryId\n                                ::cloudRegion\n                                ::deviceId]))\n\n(s/def ::payload (s/and string? #(< ( count %) 200000)))\n(s/def ::subfolder (s/and string? #(< (count %) 200)))\n(s/def ::qos #{0 1})\n(s/def ::mqtt-packet\n  (s/keys :req-un [::payload\n                   ::subfolder\n                   ::qos]))\n\n(s/fdef client-id\n  :args ::client-config\n  :ret  string?)\n\n\n(defn client-id\n  \"Builds a client id used to identify the device this message is\n  comming from\"\n  [{:keys [projectId registryId cloudRegion deviceId] :as opts}]\n  (str \"projects/\" projectId\n       \"/locations/\" cloudRegion\n       \"/registries/\" registryId\n       \"/devices/\" deviceId))\n\n(s/fdef config-chan\n  :args (s/cat :opts (s/keys :req-un [::deviceId]))\n  :ret string?)\n(defn config-chan\n  \"google give each device two channeles, a state channel (the config channel)\n  and a telemetry channel (the one that we push all our data over). The name of\n  these channels are determined by google iot core.\"\n  [{:keys [deviceId] :as opts}]\n  (str \"/devices/\" deviceId \"/config\"))\n\n(s/fdef client-handlers\n  :args (s/cat :success-fn fn?\n               :fail       fn?\n               :send       ::chan\n               :recv       ::chan))\n\n(defn client-handlers\n  \"builds a map of handels to attach to the mqtt object\"\n  [success-fn fail send recv]\n  {\"connect\" (fn [success]\n               (if success\n                 (do\n                   (success-fn))\n                 (do\n                   (debug \"client connection failure\")\n                   (fail))))\n   \"close\"   (fn [] )\n   \"reconnect\" (fn [] (info \"reconnecting\"))\n   \"error\"   (fn [err] (error \"error: \" err))\n   \"message\" (fn [topic message packet]\n               (a/go\n                 (a/>! recv {:topic topic\n                             :message message\n                             :packet packet})))})\n\n\n(defn add-handlers\n  \"takes a map of handlers and attaches them to the mqtt object\"\n  [client handlers]\n  (doseq [[key hand] handlers]\n    (.on client key hand)))\n\n(s/fdef build-client\n  :args (s/cat :opts ::client-config))\n\n(defn build-client [opts]\n  \"builds the mqtt client using the client-config\nthe mqtt client is responsible for holding on to\nauth to talk to google iot core. The mqtt client\nis also responsible for actually pushing the data\nto google iot core.\"\n  (let [conn-args (jw/google-iot-conn-args opts)\n        client    (mqtt. conn-args)]\n    {:client client}))\n\n;This function is referenced before it is defined so we\n;declare it\n(declare publish-async)\n\n(s/fdef init-client\n  :args (s/cat :opts ::client-config\n               :send ::chan\n               :recv ::chan)\n  :ret p/promise?)\n\n(defn init-client [opts send recv]\n  \"using client config and a channel to send and a channel to recv on,\nbuilds an mqtt client that will read from the send chan and push to google\n  and write to the recv chan when google pushes to it. This object is wrapped\nin a promise that returns when the client is ready\"\n  (p/promise\n   (fn [resolve reject]\n     (let [{:keys [client] :as init} (build-client opts)\n           handlers (client-handlers #(resolve client) #(reject :client-fail) send recv)]\n       (.subscribe client (config-chan opts))\n       (debug \"subscribe\")\n       (add-handlers client handlers)))))\n\n(defn payload-root\n  \"builds the prefix of the actual values being sent\n  (str (payload-root config) sensor-name /  sensor-value)\"\n  [{:keys [registryId userId deviceId] :as opts}]\n  (str registryId \"/\" userId \"/\" deviceId \"-payload\"))\n\n(s/fdef mqtt-topic\n    :args (s/cat :opts     ::client-config\n                 :msg-type ::topic-type)\n    :ret string?)\n\n(defn mqtt-topic\n  \"msg-type can be 'state' for state updates\n   or 'events' to publish telemetry\"\n  [{:keys [deviceId] :as opts} msg-type]\n  (str \"/devices/\" deviceId \"/\" msg-type))\n\n(s/fdef prep-temps\n  :args (s/cat :opts ::client-config :data any?)\n  :ret (s/coll-of ::mqtt-packet))\n(defn prep-temps\n  \"pulls the data out of the systeminformation library and wrapping them up\n  to be sent into mqtt\"\n  [opts data]\n  (let [pr (payload-root opts)\n        cores-raw (js->clj (.-cores data))\n        cores (map-indexed\n               (fn [index value]\n                 {:payload (str pr \"-core-temp-\" index \"/\" (str value))\n                  :subfolder (str \"metrics/core-temp-\" index)})\n               cores-raw)\n        main (when (.-main data)\n               {:payload (str pr \"-core-temp-main/\" (str (.-main data)))\n                :subfolder \"metrics/core-temp-main\"})\n        max (when (.-max data)\n              {:payload (str pr \"-core-temp-max/\" (str (.-max data)))\n               :subfolder \"metrics/core-temp-max\"})]\n    (concat [main] [max] cores)))\n\n(def stop (atom false))\n\n(s/fdef publish-one\n  :args (s/cat :client any? :packet (s/or :nil nil? :value ::mqtt-packet)))\n(defn publish-one\n  \"Publises one mqtt packet to the client\"\n  [client {:keys [payload qos subfolder] :as p}]\n  (when p\n    (.publishEvent client payload  (or qos 0) subfolder)))\n\n\n(defn publisher\n  \"main loop that pushes packets added to the send-chan to google iot core\"\n  [client-atom send-chan]\n  (a/go-loop []\n    (let [to-send (a/<! send-chan)]\n      (publish-one @client-atom to-send)\n      (recur))))\n\n\n(s/fdef tele-chan\n  :args (s/cat :opts  ::client-config)\n  :ret ::chan)\n(defn tele-chan\n  \"takes the client opts and builds a channel with system telementry\n  values on it (cpu tempratures specifically)\"\n  [opts]\n  (let [temp-chan (a/chan)\n        out-chan (a/chan)]\n    (a/go-loop []\n        (p/chain\n         (si/cpuTemperature)\n         #(prep-temps opts %)\n         (fn [mqtt-packets] (a/go\n                              (a/<! (a/timeout (* 1000 60 1)))\n                              (a/>! temp-chan mqtt-packets))))\n        (let [v (a/<! temp-chan)]\n          (a/>! out-chan v)\n          (recur)))\n    out-chan))\n\n\n(s/fdef sender\n  :args (s/cat :topic-name ::topic-type\n               :opts       ::client-config\n               :send       ::chan\n               :t-chan     ::chan))\n\n(defn sender\n  \"takes information for the tele-chan in the form of collections of\n  mqtt-packets and assignes a default topic if a subfolder is set,\n  adds a default qos. Then takes the resulting structures and puts\n  them on to the send channel. waits for :delayMs between collections \"\n  [topic-name opts send t-chan]\n  (a/go-loop []\n    (let [teles (a/<! t-chan)\n          topic (mqtt-topic opts topic-name)\n          qos #js {:qos 0}]\n\n      ;becuase this should rarely happen\n      (when (= \"state\" topic-name)\n        (debug \"pushing state\" topic))\n      (a/onto-chan\n       send\n       (map\n        (fn [{:keys [subfolder] :as mqtt-packet}]\n          (let [my-topic (if subfolder (str topic \"/\" subfolder) topic)]\n            (-> mqtt-packet\n                (assoc :topic my-topic)))) teles)\n       false)\n      (a/<! (a/timeout (:delayMs opts)))\n      (recur))))\n\n(def state-send\n  (partial sender \"state\"))\n\n(def tele-send\n  (partial sender \"events\"))\n\n(defn clean-up\n  [{:keys [send-chan recv-chan telemetry-chan state-chan client-atom] :as system}]\n  (debug \"Killing system\")\n     (doall\n      (map (fn [c] (a/close! c))\n           [send-chan recv-chan state-chan telemetry-chan]))\n     (debug \"killing client\")\n     (.end @client-atom  ))\n\n(defn system-function\n  \"the heart of the system lies here.\n  This function takes options (config/default-options works well)\n  It returns a map\n  This map has\n  :send-chan A channel you can use to directly send messages of mqtt, must be of the\n  form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n  :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n  :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n  (google publishes these values to a differnt pubsub channel then device telemetry)\n  :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n  are sent in the same batch, the same is true for stat-chan.\n  :client-atom, contains the current version of the mqtt client. This is an atom so\n  that the client-refersher can refresh the authentication token and swap it.\n  this pattern also ensures only one client\n\n  payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you\"\n  [opts]\n  (let [send (a/chan)\n        recv (a/chan)\n        kill (atom false)\n        client-promise (init-client opts send recv)\n        client-atom (atom nil)\n        t-chan (tele-chan opts)\n        state-chan (a/chan)]\n    (p/then\n     client-promise\n     (fn [client]\n       (reset! client-atom client)\n;       (client-refresher client-atom opts send recv)\n       (publisher client-atom send)\n       (tele-send opts send t-chan)\n       (state-send opts send state-chan)\n       {:send-chan send\n        :recv-chan recv\n        :state-chan state-chan\n        :telemetry-chan t-chan\n        :client-atom client-atom}))))\n\n\n;(def system-promise (system-function config/default-options))\n\n(defn kill-it\n  \"Feed the system promise to this and it will kill it\"\n  [system-promise]\n  (p/then system-promise\n          clean-up))\n\n;(kill-it system-promise)\n","~:reader-features",["^Y",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["opts4844","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","ret__1923__auto__","p__4845","vec__4846","___1924__auto__","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","f__1925__auto__","sym__1926__auto__","G__4849","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","orchestra-cljs.spec.test/distinct-by","cljs.core/first","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","p1__1922__1927__auto__","G__4851","fexpr__4850","orchestra_cljs.spec.test.instrumentable_syms.cljs$core$IFn$_invoke$arity$1","cljs.core/zipmap","cljs.spec.alpha/def-impl","cljs.core/string?","cljs.core/any?","cljs.spec.alpha/map-spec-impl","G__4852","cljs.core/map?","cljs.core/contains?","cljs.spec.alpha/and-spec-impl","p1__4853#","cljs.core/count","p1__4854#","G__4855","cljs.spec.alpha/fspec-impl","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4","p__4856","map__4857","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","huginn.mqtt/client-id","projectId","registryId","cloudRegion","deviceId","opts","cljs.spec.alpha/cat-impl","G__4859","p__4860","map__4861","huginn.mqtt/config-chan","cljs.core/fn?","huginn.mqtt/client-handlers","success-fn","fail","send","recv","success","taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10","taoensso.timbre/*config*","cljs.core/Delay","err","topic","message","packet","c__1665__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__1666__auto__","switch__1642__auto__","state_4869","state_val_4870","inst_4863","inst_4864","inst_4865","cljs.core/PersistentHashMap","cljs.core.async.impl.ioc-helpers/put!","inst_4867","cljs.core.async.impl.ioc-helpers/return-chan","statearr-4871","state-machine__1643__auto__","ret-value__1644__auto__","result__1645__auto__","cljs.core/keyword-identical?","e4872","js/Object","ex__1646__auto__","statearr-4873","cljs.core.async.impl.ioc-helpers/process-exception","state__1667__auto__","statearr-4874","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","huginn.mqtt/add-handlers","client","handlers","seq__4875","cljs.core/seq","chunk__4876","count__4877","i__4878","vec__4879","temp__5457__auto__","cljs.core/chunked-seq?","c__4351__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","vec__4882","cljs.core/next","key","hand","huginn.mqtt/build-client","conn-args","huginn.jwt/google-iot-conn-args","js/shadow.js.shim.module$gcic_mqtt_client","promesa.core/promise?","huginn.mqtt/init-client","promesa.core/promise","resolve","reject","map__4885","init","G__4887","p__4888","map__4889","huginn.mqtt/payload-root","userId","p__4891","map__4892","huginn.mqtt/mqtt-topic","msg-type","cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4","G__4894","cljs.core/coll?","huginn.mqtt/prep-temps","data","pr","cores-raw","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","cores","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","index","value","main","max","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","huginn.mqtt/stop","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","cljs.spec.alpha/or-spec-impl","cljs.core/nil?","p__4895","map__4896","huginn.mqtt/publish-one","payload","qos","subfolder","p","or__3949__auto__","huginn.mqtt/publisher","client-atom","send-chan","state_4907","state_val_4908","statearr-4909","cljs.core.async.impl.ioc-helpers/take!","inst_4905","inst_4900","inst_4901","cljs.core/deref","inst_4902","statearr-4910","statearr-4911","statearr-4912","e4913","statearr-4914","statearr-4915","huginn.mqtt/tele-chan","temp-chan","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0","out-chan","state_4930","state_val_4931","statearr-4932","inst_4918","inst_4919","p1__4916#","inst_4920","inst_4921","statearr-4948","inst_4928","inst_4923","inst_4925","statearr-4949","statearr-4950","statearr-4951","e4952","statearr-4953","statearr-4954","promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic","js/shadow.js.shim.module$systeminformation.cpuTemperature","mqtt-packets","state_4941","state_val_4942","inst_4933","inst_4934","inst_4935","inst_4937","statearr-4943","inst_4939","statearr-4944","e4945","statearr-4946","statearr-4947","cljs.core.async/timeout","huginn.mqtt/sender","topic-name","t-chan","state_4979","state_val_4980","statearr-4981","inst_4977","inst_4957","inst_4958","inst_4959","statearr-4982","statearr-4983","statearr-4984","inst_4961","inst_4962","inst_4963","statearr-4985","statearr-4986","inst_4966","inst_4968","inst_4969","inst_4970","inst_4971","inst_4972","statearr-4989","inst_4974","statearr-4990","statearr-4991","statearr-4992","e4993","statearr-4994","statearr-4995","teles","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3","cljs.core.map.cljs$core$IFn$_invoke$arity$2","p__4967","map__4987","mqtt-packet","my-topic","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","huginn.mqtt/state-send","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","huginn.mqtt/tele-send","p__4996","map__4997","huginn.mqtt/clean-up","recv-chan","telemetry-chan","state-chan","system","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","c","cljs.core.async/close!","huginn.mqtt/system-function","kill","client-promise","promesa.core/then","cljs.core/reset!","huginn.mqtt/kill-it","system-promise"]]],"~:cache-keys",["~#cmap",[["^1U","cljs_node_io/file.cljs"],[1537666007418,"^1=","^1<","~$goog.Uri","~$cljs-node-io.streams","~$cljs-node-io.fs","~$cljs-node-io.protocols"],["^1U","goog/dom/tagname.js"],[1530991559994,"^1=","~$goog.dom.HtmlElement"],["^1U","goog/async/freelist.js"],[1530991559994,"^1="],["^1U","cljs/core/async/impl/ioc_helpers.cljs"],[1534380136417,"^1=","^1<","~$cljs.core.async.impl.protocols"],["^1U","goog/labs/useragent/platform.js"],[1530991559994,"^1=","~$goog.labs.userAgent.util","~$goog.string"],["~:macro","^1<"],[1534380137000],["^1U","cljs/core/async.cljs"],[1534380136417,"^1=","^1<","^2;","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers"],["^1U","goog/timer/timer.js"],[1530991559994,"^1=","~$goog.Promise","~$goog.events.EventTarget"],["^1U","orchestra_cljs/spec/test.cljs"],[1538695969819,"^1=","^1<","~$goog.object","~$goog.userAgent.product","^1E","~$cljs.stacktrace","~$cljs.pprint","^1B","~$cljs.spec.gen.alpha"],["^1U","cljs/nodejs.cljs"],[1534380137690,"^1=","^1<"],["^1U","cljs/spec/gen/alpha.cljs"],[1534380137690,"^1=","^1<","^26"],["^1U","cljs/tools/reader/impl/utils.cljs"],[1535586405375,"^1=","^1<","^1E","^2="],["^1U","cljs_node_io/fs.cljs"],[1537666007418,"^1=","^1<","^A","^2;"],["^1U","cljs_node_io/core.cljs"],[1537666007418,"^1=","^1<","^A","^2;","~$cljs-node-io.file","^27","^29","^26"],["^1U","goog/math/math.js"],[1530991559994,"^1=","~$goog.array","~$goog.asserts"],["^1U","goog/string/stringformat.js"],[1530991559994,"^1=","^2="],["^1U","goog/events/eventtype.js"],[1530991559994,"^1=","~$goog.userAgent"],["^1U","goog/labs/useragent/browser.js"],[1530991559994,"^1=","^2L","^2<","^2F","^2="],["^1U","goog/array/array.js"],[1530991559994,"^1=","^2M"],["^1U","huginn/mqtt.cljs"],[1540261857330,"^1=","^1<","^17","^1E","^1@","^12","^1;","^1:","^F","^A","^?","^1B","^1?"],["^1U","cljs_node_io/protocols.cljs"],[1537666007418,"^1=","^1<"],["^2>","~$cljs.core.async.macros"],[1534380136000],["^1U","cljs_node_io/streams.cljs"],[1537666007418,"^1=","^1<","^26","^A","^29"],["^1U","huginn/config.cljs"],[1540261844564,"^1=","^1<"],["^1U","goog/useragent/useragent.js"],[1530991559994,"^1=","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2<","~$goog.reflect","^2="],["^1U","goog/structs/prioritypool.js"],[1530991559994,"^1=","~$goog.structs.Pool","~$goog.structs.PriorityQueue"],["^2>","~$cljs.tools.reader.reader-types"],[1535586405000],["^1U","goog/async/run.js"],[1530991559994,"^1=","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"],["^1U","taoensso/encore.cljs"],[1535586406568,"^1=","^1<","^1E","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","~$cljs.test","^2F","^2=","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.structs","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"],["^1U","goog/debug/error.js"],[1530991559994,"^1="],["^1U","goog/async/workqueue.js"],[1530991559994,"^1=","^2M","~$goog.async.FreeList"],["^1U","huginn/jwt.cljs"],[1540261685950,"^1=","^1<","^1E","^17","~$cljs-node-io.core","^1?","^1:","^="],["^1U","promesa/impl/scheduler.cljc"],[1535586406328,"^1=","^1<","~$promesa.protocols"],["^1U","goog/events/events.js"],[1530991559994,"^1=","^2M","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","~$goog.events.BrowserFeature","~$goog.events.Listenable","~$goog.events.ListenerMap"],["^1U","goog/promise/resolver.js"],[1530991559994,"^1="],["^1U","goog/events/browserfeature.js"],[1530991559994,"^1=","^2N"],["^1U","cljs/tools/reader/edn.cljs"],[1535586405375,"^1=","^1<","~$cljs.tools.reader.impl.errors","^2V","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^2=","^33"],["^1U","goog/structs/priorityqueue.js"],[1530991559994,"^1=","~$goog.structs.Heap"],["^1U","goog/net/xhrio.js"],[1530991559994,"^1=","~$goog.Timer","^2L","^2M","^3?","^2E","~$goog.json.hybrid","~$goog.log","^3:","^39","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^2=","^38","~$goog.structs.Map","~$goog.uri.utils","^2N"],["^1U","goog/promise/thenable.js"],[1530991559994,"^1="],["^1U","promesa/impl.cljc"],[1535586406328,"^1=","^1<","^3>","~$org.bluebird"],["^1U","goog/dom/nodetype.js"],[1530991559994,"^1="],["^2>","^F"],[1535586406000],["^1U","cljs/tools/reader/impl/inspect.cljs"],[1535586405375,"^1=","^1<"],["^1U","cljs/pprint.cljs"],[1534380137690,"^1=","^1<","^1E","^2=","^33"],["^2>","^2J"],[1534380137000],["^1U","cljs/tools/reader.cljs"],[1535586405375,"^1=","^1<","^2V","^3E","^3F","^3D","^2L","^2=","^33"],["^1U","goog/net/wrapperxmlhttpfactory.js"],[1530991559994,"^1=","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"],["^1U","goog/events/eventtarget.js"],[1530991559994,"^1=","~$goog.Disposable","^2M","^34","~$goog.events.Event","^3B","^3C","^2F"],["^1U","goog/disposable/disposable.js"],[1530991559994,"^1=","~$goog.disposable.IDisposable"],["^2>","^1;"],[1538695969000],["^1U","goog/object/object.js"],[1530991559994,"^1="],["^1U","goog/structs/set.js"],[1530991559994,"^1=","^38","~$goog.structs.Collection","^3N"],"~:SHADOW-TIMESTAMP",[1540077702000,1534380137000],["^1U","cljs/stacktrace.cljc"],[1534380137690,"^1=","^1<","^2=","^1E"],["^1U","goog/math/long.js"],[1530991559994,"^1=","^2M","^2S"],["^1U","goog/events/listener.js"],[1530991559994,"^1=","~$goog.events.ListenableKey"],["^1U","cljs/core/async/impl/channels.cljs"],[1534380136417,"^1=","^1<","^2;","^2B","^2@"],["^1U","goog/events/listenermap.js"],[1530991559994,"^1=","^2L","~$goog.events.Listener","^2F"],["^1U","goog/events/eventid.js"],[1530991559994,"^1="],["^1U","taoensso/truss.cljs"],[1535586406478,"^1=","^1<","~$taoensso.truss.impl"],["^1U","shadow/test/env.cljs"],[1540077702615,"^1=","^1<"],["^1U","goog/functions/functions.js"],[1530991559994,"^1="],["^1U","cljs/core/async/impl/dispatch.cljs"],[1534380136417,"^1=","^1<","^2@","^2X"],["^1U","taoensso/truss/impl.cljs"],[1535586406478,"^1=","^1<","^2Z"],["^1U","clojure/walk.cljs"],[1534380137690,"^1=","^1<"],["^1U","goog/useragent/product.js"],[1530991559994,"^1=","^2P","^2R","^2N"],["^1U","cljs/core/async/impl/protocols.cljs"],[1534380136417,"^1=","^1<"],["^1U","goog/net/eventtype.js"],[1530991559994,"^1="],["^1U","goog/structs/map.js"],[1530991559994,"^1=","~$goog.iter.Iterator","~$goog.iter.StopIteration","^2F"],["^1U","goog/net/xhriopool.js"],[1530991559994,"^1=","^35","~$goog.structs.PriorityPool"],["^1U","goog/structs/queue.js"],[1530991559994,"^1=","^2L"],["^1U","goog/labs/useragent/engine.js"],[1530991559994,"^1=","^2L","^2<","^2="],["^1U","taoensso/timbre/appenders/core.cljs"],[1535586406375,"^1=","^1<","^1E","~$taoensso.encore"],["^1U","cljs/reader.cljs"],[1534380137690,"^1=","^1<","^2F","^3G","^30","^33"],["~:shadow.build.js-support/require","bluebird"],["~$shadow.js.shim.module$bluebird","shadow.js.shim.module$bluebird.js","^1="],["^2>","~$cljs-node-io.macros"],[1537666007000],["^2>","^1B"],[1534380137000],["^1U","goog/asserts/asserts.js"],[1530991559994,"^1=","~$goog.debug.Error","~$goog.dom.NodeType","^2="],["^1U","cljs/core/async/impl/buffers.cljs"],[1534380136417,"^1=","^1<","^2;"],["^2>","^2I"],[1534380137000],["^1U","goog/debug/logbuffer.js"],[1530991559994,"^1=","^2M","~$goog.debug.LogRecord"],["^43","jsonwebtoken"],["^=","shadow.js.shim.module$jsonwebtoken.js","^1="],["^2>","^42"],[1535586406000],["^1U","goog/uri/uri.js"],[1530991559994,"^1=","^2L","^2M","^2=","^38","^3N","^3O","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1U","goog/net/errorcode.js"],[1530991559994,"^1="],["^2>","^31"],[1534380137000],["^2>","^A"],[1534380136000],["^1U","goog/disposable/idisposable.js"],[1530991559994,"^1="],["^1U","goog/promise/promise.js"],[1530991559994,"^1=","~$goog.Thenable","^2M","^3<","~$goog.async.run","^2Y","^46","~$goog.promise.Resolver"],["^1U","cljs/core/async/impl/timers.cljs"],[1534380136417,"^1=","^1<","^2;","^2?","^2B"],["^1U","cljs/spec/alpha.cljs"],[1534380137690,"^1=","^1<","^2F","~$clojure.walk","^2J","^1E"],["^1U","goog/debug/logrecord.js"],[1530991559994,"^1="],["^1U","goog/base.js"],[1530991559994],["^1U","promesa/core.cljc"],[1535586406328,"^1=","^1<","^3>","~$promesa.impl","~$promesa.impl.scheduler"],["^1U","goog/json/hybrid.js"],[1530991559994,"^1=","^2M","~$goog.json"],["^1U","goog/structs/structs.js"],[1530991559994,"^1=","^2L","^2F"],["^1U","cljs/tools/reader/impl/errors.cljs"],[1535586405375,"^1=","^1<","^2V","^1E","~$cljs.tools.reader.impl.inspect"],["^1U","org/bluebird.cljs"],[1535669979047,"^1=","^1<","^44"],["^1U","clojure/string.cljs"],[1534380137690,"^1=","^1<","^2=","^33"],["^1U","goog/structs/pool.js"],[1530991559994,"^1=","^3S","~$goog.structs.Queue","~$goog.structs.Set"],["^1U","goog/net/httpstatus.js"],[1530991559994,"^1="],["^1U","goog/structs/heap.js"],[1530991559994,"^1=","^2L","^2F","~$goog.structs.Node"],["^1U","goog/debug/entrypointregistry.js"],[1530991559994,"^1=","^2M"],["^1U","goog/string/string.js"],[1530991559994,"^1="],["^1U","goog/reflect/reflect.js"],[1530991559994,"^1="],["^1U","goog/labs/useragent/util.js"],[1530991559994,"^1=","^2="],["^2>","~$clojure.template"],[1534380136000],["^2>","~$cljs.core.async.impl.ioc-macros"],[1534380136000],["^43","gcic-mqtt-client"],["^12","shadow.js.shim.module$gcic_mqtt_client.js","^1="],["^1U","goog/debug/debug.js"],[1530991559994,"^1=","^2L","~$goog.debug.errorcontext","^2N"],["^1U","goog/string/stringbuffer.js"],[1530991559994,"^1="],["^1U","goog/debug/errorcontext.js"],[1530991559994,"^1="],["^1U","cljs/tools/reader/reader_types.cljs"],[1535586405375,"^1=","^1<","^3E","^2=","^33"],["^1U","promesa/protocols.cljc"],[1535586406328,"^1=","^1<"],["^1U","goog/iter/iter.js"],[1530991559994,"^1=","^2L","^2M","~$goog.functions","~$goog.math"],["^1U","goog/async/nexttick.js"],[1530991559994,"^1=","^3?","~$goog.dom.TagName","^4I","^2P","^2Q"],["^1U","goog/debug/logger.js"],[1530991559994,"^1=","^2L","^2M","~$goog.debug","~$goog.debug.LogBuffer","^48"],["^1U","goog/events/event.js"],[1530991559994,"^1=","^3S","~$goog.events.EventId"],["^1U","cljs/tools/reader/impl/commons.cljs"],[1535586405375,"^1=","^1<","^3D","^2V","^3E"],["^43","systeminformation"],["^?","shadow.js.shim.module$systeminformation.js","^1="],["^1U","goog/dom/htmlelement.js"],[1530991559994,"^1="],["^1U","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^2=","^2F","^2L","^26","^33"],["^1U","goog/log/log.js"],[1530991559994,"^1=","^4L","~$goog.debug.LogManager","^48","~$goog.debug.Logger"],["^1U","goog/structs/collection.js"],[1530991559994,"^1="],["^1U","goog/events/browserevent.js"],[1530991559994,"^1=","^3A","^3T","~$goog.events.EventType","^2S","^2N"],["^1U","goog/math/integer.js"],[1530991559994,"^1="],["^1U","goog/structs/node.js"],[1530991559994,"^1="],["^2>","^3Z"],[1535586406000],["^1U","clojure/set.cljs"],[1534380137690,"^1=","^1<"],["^1U","goog/uri/utils.js"],[1530991559994,"^1=","^2L","^2M","^2="],["^1U","taoensso/timbre.cljs"],[1535586406375,"^1=","^1<","^1E","^42","~$taoensso.timbre.appenders.core"],["^1U","goog/json/json.js"],[1530991559994,"^1="],["^1U","goog/events/listenable.js"],[1530991559994,"^1=","^4N"],["^1U","goog/net/xmlhttpfactory.js"],[1530991559994,"^1=","^3Q"],["^1U","goog/net/xmlhttp.js"],[1530991559994,"^1=","^2M","~$goog.net.WrapperXmlHttpFactory","^3R"],["^1U","cljs/test.cljs"],[1534380137690,"~$shadow.test.env","^1=","^1<","^1E","^2I"],["^1U","goog/net/xhrlike.js"],[1530991559994,"^1="],["^2>","^2["],[1534380137000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","huginn/mqtt.cljs","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",["^ ","^E","^F","^G","^F","^H","^F","^I","^F","^J","^F","^K","^F","^L","^F","^M","^F","^N","^F","^O","^F","^P","^F","^Q","^F","^R","^F","^S","^F","^T","^F","^U","^F","^V","^F","^W","^F"],"^X",["^Y",[]],"~:shadow/js-access-properties",["^Y",["cpuTemperature"]],"^Z","^[","^10",["^ ","^11","^12"],"^15",null,"^16",["^ ","^12","^12","~$p","^17","^17","^17","^18","^F","~$a","^A","^19","^?","^1:","^1:","^1;","^1;","^1<","^1<","^1=","^1=","^A","^A","^>","^?","^1>","^1:","^1?","^1?","^1@","^1@","^1A","^1?","~$s","^1B","^1C","^12","^1D","^1@","^F","^F","^?","^?","^1E","^1E","^1F","^1E","^1B","^1B","^1G","^1;"],"^1H",["^Y",["^1I"]],"~:shadow/js-access-global",["^Y",["Object"]],"^1J",null,"~:defs",["^ ","~$tele-send",["^ ","^Z","~$huginn.mqtt/tele-send","^6","huginn/mqtt.cljs","^7",251,"^8",1,"^9",251,"^:",15,"^5",["^ ","^6","huginn/mqtt.cljs","^7",251,"^8",6,"^9",251,"^:",15],"~:tag","~$any"],"~$publish-async",["^ ","^Z","~$huginn.mqtt/publish-async","^6","huginn/mqtt.cljs","^7",115,"^8",1,"^9",115,"^:",23,"~:declared",true,"^5",["^ ","^6","huginn/mqtt.cljs","^7",115,"^8",10,"^9",115,"^:",23,"^55",true]],"~$build-client",["^ ","~:protocol-inline",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",103,"^8",7,"^9",103,"^:",19,"~:arglists",["^1M",["~$quote",["^1M",[["~$opts"]]]]]],"^Z","~$huginn.mqtt/build-client","~:variadic",false,"^6","huginn/mqtt.cljs","^:",19,"~:method-params",["^1M",[["^5:"]]],"~:protocol-impl",null,"~:arglists-meta",["^1M",[null,null]],"^8",1,"^7",103,"^9",103,"~:max-fixed-arity",1,"~:fn-var",true,"^58",["^1M",["^59",["^1M",[["^5:"]]]]]],"~$client-id",["^ ","^57",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",49,"^8",7,"^9",49,"^:",16,"^58",["^1M",["^59",["^1M",[[["^ ","~:keys",["~$projectId","~$registryId","~$cloudRegion","~$deviceId"],"^1O","^5:"]]]]]],"~:doc","Builds a client id used to identify the device this message is\n  comming from"],"^Z","~$huginn.mqtt/client-id","^5<",false,"^6","huginn/mqtt.cljs","^:",16,"^5=",["^1M",[["~$p__4856"]]],"^5>",null,"^5?",["^1M",[null,null]],"^8",1,"^7",49,"^9",49,"^5@",1,"^5A",true,"^58",["^1M",["^59",["^1M",[[["^ ","^5C",["^5D","^5E","^5F","^5G"],"^1O","^5:"]]]]]],"^5H","Builds a client id used to identify the device this message is\n  comming from"],"~$prep-temps",["^ ","^57",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",156,"^8",7,"^9",156,"^:",17,"^58",["^1M",["^59",["^1M",[["^5:","~$data"]]]]],"^5H","pulls the data out of the systeminformation library and wrapping them up\n  to be sent into mqtt"],"^Z","~$huginn.mqtt/prep-temps","^5<",false,"^6","huginn/mqtt.cljs","^:",17,"^5=",["^1M",[["^5:","^5L"]]],"^5>",null,"^5?",["^1M",[null,null]],"^8",1,"^7",156,"^9",156,"^5@",2,"^5A",true,"^58",["^1M",["^59",["^1M",[["^5:","^5L"]]]]],"^5H","pulls the data out of the systeminformation library and wrapping them up\n  to be sent into mqtt"],"~$publisher",["^ ","^57",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",186,"^8",7,"^9",186,"^:",16,"^58",["^1M",["^59",["^1M",[["~$client-atom","~$send-chan"]]]]],"^5H","main loop that pushes packets added to the send-chan to google iot core"],"^Z","~$huginn.mqtt/publisher","^5<",false,"^6","huginn/mqtt.cljs","^:",16,"^5=",["^1M",[["^5O","^5P"]]],"^5>",null,"^5?",["^1M",[null,null]],"^8",1,"^7",186,"^9",186,"^5@",2,"^5A",true,"^58",["^1M",["^59",["^1M",[["^5O","^5P"]]]]],"^5H","main loop that pushes packets added to the send-chan to google iot core"],"~$init-client",["^ ","^57",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",123,"^8",7,"^9",123,"^:",18,"^58",["^1M",["^59",["^1M",[["^5:","~$send","~$recv"]]]]]],"^Z","~$huginn.mqtt/init-client","^5<",false,"^6","huginn/mqtt.cljs","^:",18,"^5=",["^1M",[["^5:","^5S","^5T"]]],"^5>",null,"^5?",["^1M",[null,null]],"^8",1,"^7",123,"^9",123,"^5@",3,"^5A",true,"^58",["^1M",["^59",["^1M",[["^5:","^5S","^5T"]]]]]],"~$payload-root",["^ ","^57",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",136,"^8",7,"^9",136,"^:",19,"^58",["^1M",["^59",["^1M",[[["^ ","^5C",["^5E","~$userId","^5G"],"^1O","^5:"]]]]]],"^5H","builds the prefix of the actual values being sent\n  (str (payload-root config) sensor-name /  sensor-value)"],"^Z","~$huginn.mqtt/payload-root","^5<",false,"^6","huginn/mqtt.cljs","^:",19,"^5=",["^1M",[["~$p__4888"]]],"^5>",null,"^5?",["^1M",[null,null]],"^8",1,"^7",136,"^9",136,"^5@",1,"^5A",true,"^58",["^1M",["^59",["^1M",[[["^ ","^5C",["^5E","^5W","^5G"],"^1O","^5:"]]]]]],"^5H","builds the prefix of the actual values being sent\n  (str (payload-root config) sensor-name /  sensor-value)"],"~$config-chan",["^ ","^57",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",61,"^8",7,"^9",61,"^:",18,"^58",["^1M",["^59",["^1M",[[["^ ","^5C",["^5G"],"^1O","^5:"]]]]]],"^5H","google give each device two channeles, a state channel (the config channel)\n  and a telemetry channel (the one that we push all our data over). The name of\n  these channels are determined by google iot core."],"^Z","~$huginn.mqtt/config-chan","^5<",false,"^6","huginn/mqtt.cljs","^:",18,"^5=",["^1M",[["~$p__4860"]]],"^5>",null,"^5?",["^1M",[null,null]],"^8",1,"^7",61,"^9",61,"^5@",1,"^5A",true,"^58",["^1M",["^59",["^1M",[[["^ ","^5C",["^5G"],"^1O","^5:"]]]]]],"^5H","google give each device two channeles, a state channel (the config channel)\n  and a telemetry channel (the one that we push all our data over). The name of\n  these channels are determined by google iot core."],"~$mqtt-topic",["^ ","^57",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",147,"^8",7,"^9",147,"^:",17,"^58",["^1M",["^59",["^1M",[[["^ ","^5C",["^5G"],"^1O","^5:"],"~$msg-type"]]]]],"^5H","msg-type can be 'state' for state updates\n   or 'events' to publish telemetry"],"^Z","~$huginn.mqtt/mqtt-topic","^5<",false,"^6","huginn/mqtt.cljs","^:",17,"^5=",["^1M",[["~$p__4891","^62"]]],"^5>",null,"^5?",["^1M",[null,null]],"^8",1,"^7",147,"^9",147,"^5@",2,"^5A",true,"^58",["^1M",["^59",["^1M",[[["^ ","^5C",["^5G"],"^1O","^5:"],"^62"]]]]],"^5H","msg-type can be 'state' for state updates\n   or 'events' to publish telemetry"],"~$tele-chan",["^ ","^57",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",198,"^8",7,"^9",198,"^:",16,"^58",["^1M",["^59",["^1M",[["^5:"]]]]],"^5H","takes the client opts and builds a channel with system telementry\n  values on it (cpu tempratures specifically)"],"^Z","~$huginn.mqtt/tele-chan","^5<",false,"^6","huginn/mqtt.cljs","^:",16,"^5=",["^1M",[["^5:"]]],"^5>",null,"^5?",["^1M",[null,null]],"^8",1,"^7",198,"^9",198,"^5@",1,"^5A",true,"^58",["^1M",["^59",["^1M",[["^5:"]]]]],"^5H","takes the client opts and builds a channel with system telementry\n  values on it (cpu tempratures specifically)"],"~$client-handlers",["^ ","^57",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",74,"^8",7,"^9",74,"^:",22,"^58",["^1M",["^59",["^1M",[["~$success-fn","~$fail","^5S","^5T"]]]]],"^5H","builds a map of handels to attach to the mqtt object"],"^Z","~$huginn.mqtt/client-handlers","^5<",false,"^6","huginn/mqtt.cljs","^:",22,"^5=",["^1M",[["^68","^69","^5S","^5T"]]],"^5>",null,"^5?",["^1M",[null,null]],"^8",1,"^7",74,"^9",74,"^5@",4,"^5A",true,"^58",["^1M",["^59",["^1M",[["^68","^69","^5S","^5T"]]]]],"^5H","builds a map of handels to attach to the mqtt object"],"~$kill-it",["^ ","^57",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",305,"^8",7,"^9",305,"^:",14,"^58",["^1M",["^59",["^1M",[["~$system-promise"]]]]],"^5H","Feed the system promise to this and it will kill it"],"^Z","~$huginn.mqtt/kill-it","^5<",false,"^6","huginn/mqtt.cljs","^:",14,"^5=",["^1M",[["^6<"]]],"^5>",null,"^5?",["^1M",[null,null]],"^8",1,"^7",305,"^9",305,"^5@",1,"^5A",true,"^58",["^1M",["^59",["^1M",[["^6<"]]]]],"^5H","Feed the system promise to this and it will kill it"],"~$state-send",["^ ","^Z","~$huginn.mqtt/state-send","^6","huginn/mqtt.cljs","^7",248,"^8",1,"^9",248,"^:",16,"^5",["^ ","^6","huginn/mqtt.cljs","^7",248,"^8",6,"^9",248,"^:",16],"^51","^52"],"~$publish-one",["^ ","^57",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",179,"^8",7,"^9",179,"^:",18,"^58",["^1M",["^59",["^1M",[["~$client",["^ ","^5C",["~$payload","~$qos","~$subfolder"],"^1O","~$p"]]]]]],"^5H","Publises one mqtt packet to the client"],"^Z","~$huginn.mqtt/publish-one","^5<",false,"^6","huginn/mqtt.cljs","^:",18,"^5=",["^1M",[["^6A","~$p__4895"]]],"^5>",null,"^5?",["^1M",[null,null]],"^8",1,"^7",179,"^9",179,"^5@",2,"^5A",true,"^58",["^1M",["^59",["^1M",[["^6A",["^ ","^5C",["^6B","^6C","^6D"],"^1O","~$p"]]]]]],"^5H","Publises one mqtt packet to the client"],"~$system-function",["^ ","^57",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",263,"^8",7,"^9",263,"^:",22,"^58",["^1M",["^59",["^1M",[["^5:"]]]]],"^5H","the heart of the system lies here.\n  This function takes options (config/default-options works well)\n  It returns a map\n  This map has\n  :send-chan A channel you can use to directly send messages of mqtt, must be of the\n  form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n  :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n  :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n  (google publishes these values to a differnt pubsub channel then device telemetry)\n  :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n  are sent in the same batch, the same is true for stat-chan.\n  :client-atom, contains the current version of the mqtt client. This is an atom so\n  that the client-refersher can refresh the authentication token and swap it.\n  this pattern also ensures only one client\n\n  payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you"],"^Z","~$huginn.mqtt/system-function","^5<",false,"^6","huginn/mqtt.cljs","^:",22,"^5=",["^1M",[["^5:"]]],"^5>",null,"^5?",["^1M",[null,null]],"^8",1,"^7",263,"^9",263,"^5@",1,"^5A",true,"^58",["^1M",["^59",["^1M",[["^5:"]]]]],"^5H","the heart of the system lies here.\n  This function takes options (config/default-options works well)\n  It returns a map\n  This map has\n  :send-chan A channel you can use to directly send messages of mqtt, must be of the\n  form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n  :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n  :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n  (google publishes these values to a differnt pubsub channel then device telemetry)\n  :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n  are sent in the same batch, the same is true for stat-chan.\n  :client-atom, contains the current version of the mqtt client. This is an atom so\n  that the client-refersher can refresh the authentication token and swap it.\n  this pattern also ensures only one client\n\n  payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you"],"~$stop",["^ ","^Z","~$huginn.mqtt/stop","^6","huginn/mqtt.cljs","^7",175,"^8",1,"^9",175,"^:",10,"^5",["^ ","^6","huginn/mqtt.cljs","^7",175,"^8",6,"^9",175,"^:",10],"^51","^52"],"~$sender",["^ ","^57",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",223,"^8",7,"^9",223,"^:",13,"^58",["^1M",["^59",["^1M",[["~$topic-name","^5:","^5S","~$t-chan"]]]]],"^5H","takes information for the tele-chan in the form of collections of\n  mqtt-packets and assignes a default topic if a subfolder is set,\n  adds a default qos. Then takes the resulting structures and puts\n  them on to the send channel. waits for :delayMs between collections "],"^Z","~$huginn.mqtt/sender","^5<",false,"^6","huginn/mqtt.cljs","^:",13,"^5=",["^1M",[["^6L","^5:","^5S","^6M"]]],"^5>",null,"^5?",["^1M",[null,null]],"^8",1,"^7",223,"^9",223,"^5@",4,"^5A",true,"^58",["^1M",["^59",["^1M",[["^6L","^5:","^5S","^6M"]]]]],"^5H","takes information for the tele-chan in the form of collections of\n  mqtt-packets and assignes a default topic if a subfolder is set,\n  adds a default qos. Then takes the resulting structures and puts\n  them on to the send channel. waits for :delayMs between collections "],"~$add-handlers",["^ ","^57",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",94,"^8",7,"^9",94,"^:",19,"^58",["^1M",["^59",["^1M",[["^6A","~$handlers"]]]]],"^5H","takes a map of handlers and attaches them to the mqtt object"],"^Z","~$huginn.mqtt/add-handlers","^5<",false,"^6","huginn/mqtt.cljs","^:",19,"^5=",["^1M",[["^6A","^6P"]]],"^5>",null,"^5?",["^1M",[null,null]],"^8",1,"^7",94,"^9",94,"^5@",2,"^5A",true,"^58",["^1M",["^59",["^1M",[["^6A","^6P"]]]]],"^5H","takes a map of handlers and attaches them to the mqtt object"],"~$clean-up",["^ ","^57",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",254,"^8",7,"^9",254,"^:",15,"^58",["^1M",["^59",["^1M",[[["^ ","^5C",["^5P","~$recv-chan","~$telemetry-chan","~$state-chan","^5O"],"^1O","~$system"]]]]]]],"^Z","~$huginn.mqtt/clean-up","^5<",false,"^6","huginn/mqtt.cljs","^:",15,"^5=",["^1M",[["~$p__4996"]]],"^5>",null,"^5?",["^1M",[null,null]],"^8",1,"^7",254,"^9",254,"^5@",1,"^5A",true,"^58",["^1M",["^59",["^1M",[[["^ ","^5C",["^5P","^6S","^6T","^6U","^5O"],"^1O","^6V"]]]]]]]],"^1K",["^ ","^F","^F","^18","^F","^1<","^1<","~$a","^A","^1;","^1;","^A","^A","~$s","^1B","^1B","^1B","^1G","^1;"],"~:cljs.analyzer/constants",["^ ","^1H",["^Y",["~:client-fail","~:args","~:req-un","~:opt-un","~:huginn.mqtt/payload","~:qos","~$cljs.core/<","~:recv-chan","~:ret","~:gfn","~:cloudRegion","~:send-chan","~:recv","~:pred-exprs","~$p1__4854#","~:keys-pred","~:huginn.mqtt/client-config","^5U","~:payload","~:opt-keys","~:huginn.mqtt/cloudRegion","~:else","~:huginn.mqtt/qos","~$cljs.core/count","~:state-chan","~$cljs.spec.alpha/and","~$cljs.spec.alpha/coll-of","~$cljs.spec.alpha/cat","~:cljs.spec.alpha/kind-form","~:subfolder","^5I","~:delayMs","~:deviceId","~:telemetry-chan","~$cljs.core/string?","~:t-chan","~:req-specs","~$cljs.spec.alpha/or","~:value","~:huginn.mqtt/topic-type","~:registryId","~:client","~$cljs.spec.alpha/fspec","~:recur","~:debug","~:topic","~$cljs.core/contains?","^5;","~$cljs.core/map?","~:cljs.spec.alpha/cpred","~$%","~$cljs.core/fn?","~:huginn.mqtt/chan","~:topic-name","~$cljs.spec.alpha/keys","~$p1__4853#","~:huginn.mqtt/projectId","^6N","~:req","~:client-atom","~:msg-type","~:fail","~:huginn.mqtt/mqtt-packet","~$fn*","^5[","^5M","^63","~:opts","~:nil","~$cljs.core/nil?","~:req-keys","~$cljs.core/fn","~:info","~:send","~:opt-specs","~:huginn.mqtt/registryId","~:userId","^6:","~:pred-forms","~:error","~:projectId","~:huginn.mqtt/deviceId","~$promesa.core/promise?","~:auto","~:huginn.mqtt/subfolder","~:p","~:cljs.spec.alpha/conform-all","^6E","~:success-fn","~$cljs.core/any?","^66","~:message","~:packet","~:cljs.spec.alpha/describe","~:opt","~:data"]],"~:order",["^86","^7N","^8E","^7A","^8J","^82","^8P","^7S","^7>","^84","^70","^71","^77","^7;","^7=","^7@","^7P","^87","^8@","^8D","^8G","^8T","^8I","^7T","^78","^7L","^8A","~$%","^7[","^7Z","^72","^7F","^8<","^85","^74","^7D","^8M","^7<","^7C","^8;","^7?","^7J","^73","^5I","^7V","^6[","^76","^5[","^7H","^8=","^6:","^8O","^81","^8:","^8C","^7:","^7X","~:p","^8L","^8B","^8H","^7Y","^8Q","^8R","^7W","^7B","^5;","^7U","^5U","^8K","^6Z","^8F","^63","^89","^5M","^8U","^7G","^7I","^80","^8N","^8S","^6E","^7Q","^8>","^8?","^7R","^66","^6N","^83","^7O","^7K","^79","^75","^7M","^7E","^88"]],"^1Q",["^ ","^1I",["^Y",[]]],"^1R",["^ ","^11",["^ ","^1O","^1C"]],"^1S",["^1=","^1<","^17","^1E","^1@","^12","^1;","^1:","^F","^A","^?","^1B","^1?"]],"^14","^[","~:ns-specs",["^ ","^72",["^1M",["^7F","^7N",["^1M",["^8<",["^85"],["^1M",["^74",["^1M",["^7D","^85"]],200000]]]]]],"^7>",["^1M",["^84","^70",["^86","^8E","^7A","^8J"]]],"^5U",["^1M",["^7V","^6[",["^1M",["^7H","^8=","^7>","^8C","^82","^7:","^82"]],"^76","^8K"]],"^7A","^7N","^7C",["^Y",[0,1]],"^5I",["^1M",["^7V","^6[","^7>","^76","^7N"]],"^7S",["^Y",["events","state"]],"^5;",["^1M",["^7V","^6[",["^1M",["^7H","^8=","^7>"]]]],"^82","^8P","^86","^7N","^6N",["^1M",["^7V","^6[",["^1M",["^7H","^83","^7S","^8=","^7>","^8C","^82","^7O","^82"]]]],"^8;",["^1M",["^84","^70",["^72","^8M","^7C"]]],"^5[",["^1M",["^7V","^6[",["^1M",["^7H","^8=",["^1M",["^84","^70",["^8J"]]]]],"^76","^7N"]],"^5M",["^1M",["^7V","^6[",["^1M",["^7H","^8=","^7>","^8U","^8P"]],"^76",["^1M",["^7G","^8;"]]]],"^63",["^1M",["^7V","^6[",["^1M",["^7H","^8=","^7>","^89","^7S"]],"^76","^7N"]],"^8E","^7N","^6:",["^1M",["^7V","^6[",["^1M",["^7H","^8O","^81","^8:","^81","^8C","^82","^7:","^82"]]]],"^8J","^7N","^8M",["^1M",["^7F","^7N",["^1M",["^8<",["^7<"],["^1M",["^74",["^1M",["^7D","^7<"]],200]]]]]],"^6E",["^1M",["^7V","^6[",["^1M",["^7H","^7U","^8P","^8R",["^1M",["^7Q","^8>","^8?","^7R","^8;"]]]]]],"^66",["^1M",["^7V","^6[",["^1M",["^7H","^8=","^7>"]],"^76","^82"]]],"~:ns-speced-vars",["^5U","^5I","^5;","^6N","^5[","^5M","^63","^6:","^6E","^66"],"~:compiler-options",["^25",[["^8Y","~:static-fns"],true,["^8Y","~:elide-asserts"],false,["^8Y","~:optimize-constants"],null,["^8Y","~:external-config"],null,["^8Y","~:tooling-config"],null,["^8Y","~:emit-constants"],null,["^8Y","~:infer-externs"],true,["^8Y","^1Z"],null,["~:js-options","~:js-provider"],"^1I",["~:mode"],"~:dev",["^8Y","~:fn-invoke-direct"],null,["^8Y","~:source-map"],"/dev/null"]]]