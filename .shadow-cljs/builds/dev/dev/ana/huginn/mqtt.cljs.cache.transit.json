["^ ","~:output",["^ ","~:js","goog.provide('huginn.mqtt');\ngoog.require('cljs.core');\ngoog.require('promesa.core');\ngoog.require('clojure.string');\ngoog.require('huginn.jwt');\ngoog.require('shadow.js.shim.module$mqtt');\ngoog.require('huginn.config');\ngoog.require('taoensso.timbre');\ngoog.require('cljs.core.async');\ngoog.require('shadow.js.shim.module$systeminformation');\ngoog.require('cljs.spec.alpha');\ngoog.require('cljs.nodejs');\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"partial\",\"cljs.core/partial\",1483172485,null),new cljs.core.Symbol(\"cljs.core\",\"instance?\",\"cljs.core/instance?\",2044751870,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core.async\",\"chan\",\"cljs.core.async/chan\",589627473,null))),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.instance_QMARK_,cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0()));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"events\",null,\"state\",null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"events\",null,\"state\",null], null), null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),null,null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__40987){\nreturn cljs.core.map_QMARK_(G__40987);\n}),(function (G__40987){\nreturn cljs.core.contains_QMARK_(G__40987,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096));\n}),(function (G__40987){\nreturn cljs.core.contains_QMARK_(G__40987,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\n}),(function (G__40987){\nreturn cljs.core.contains_QMARK_(G__40987,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214));\n}),(function (G__40987){\nreturn cljs.core.contains_QMARK_(G__40987,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\n})], null),(function (G__40987){\nreturn ((cljs.core.map_QMARK_(G__40987)) && (cljs.core.contains_QMARK_(G__40987,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096))) && (cljs.core.contains_QMARK_(G__40987,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006))) && (cljs.core.contains_QMARK_(G__40987,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214))) && (cljs.core.contains_QMARK_(G__40987,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"projectId\",\"huginn.mqtt/projectId\",-2109218287),new cljs.core.Keyword(\"huginn.mqtt\",\"registryId\",\"huginn.mqtt/registryId\",970901079),new cljs.core.Keyword(\"huginn.mqtt\",\"cloudRegion\",\"huginn.mqtt/cloudRegion\",-1432542491),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096),new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006),new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214),new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208)))], null),null])));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__40988#\",\"p1__40988#\",-2012968511,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"p1__40988#\",\"p1__40988#\",-2012968511,null)),(200000)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)),(200000)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_,(function (p1__40988_SHARP_){\nreturn (cljs.core.count(p1__40988_SHARP_) < (200000));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"and\",\"cljs.spec.alpha/and\",-2060279705,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"p1__40989#\",\"p1__40989#\",-990223840,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"p1__40989#\",\"p1__40989#\",-990223840,null)),(200)))),cljs.spec.alpha.and_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"<\",\"cljs.core/<\",1677496129,null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"count\",\"cljs.core/count\",-921270233,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)),(200)))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_,(function (p1__40989_SHARP_){\nreturn (cljs.core.count(p1__40989_SHARP_) < (200));\n})], null),null));\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"ts\",\"huginn.mqtt/ts\",2127118637),new cljs.core.Symbol(\"cljs.core\",\"float?\",\"cljs.core/float?\",-941017745,null),cljs.core.float_QMARK_);\ncljs.spec.alpha.def_impl(new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),new cljs.core.Keyword(\"huginn.mqtt\",\"ts\",\"huginn.mqtt/ts\",2127118637)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),new cljs.core.Keyword(\"huginn.mqtt\",\"ts\",\"huginn.mqtt/ts\",2127118637)], null),null,null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__40990){\nreturn cljs.core.map_QMARK_(G__40990);\n}),(function (G__40990){\nreturn cljs.core.contains_QMARK_(G__40990,new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092));\n}),(function (G__40990){\nreturn cljs.core.contains_QMARK_(G__40990,new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439));\n}),(function (G__40990){\nreturn cljs.core.contains_QMARK_(G__40990,new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904));\n})], null),(function (G__40990){\nreturn ((cljs.core.map_QMARK_(G__40990)) && (cljs.core.contains_QMARK_(G__40990,new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092))) && (cljs.core.contains_QMARK_(G__40990,new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439))) && (cljs.core.contains_QMARK_(G__40990,new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"payload\",\"huginn.mqtt/payload\",-916460991),new cljs.core.Keyword(\"huginn.mqtt\",\"subfolder\",\"huginn.mqtt/subfolder\",754461404),new cljs.core.Keyword(\"huginn.mqtt\",\"ts\",\"huginn.mqtt/ts\",2127118637)], null),null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904)))], null),null])));\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"client-id\",\"huginn.mqtt/client-id\",1699900680,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),null,null),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),null,null,null));\n/**\n * Builds a client id used to identify the device this message is\n *   comming from\n */\nhuginn.mqtt.client_id = (function huginn$mqtt$client_id(p__40991){\nvar map__40992 = p__40991;\nvar map__40992__$1 = ((((!((map__40992 == null)))?(((((map__40992.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40992.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40992):map__40992);\nvar opts = map__40992__$1;\nvar projectId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40992__$1,new cljs.core.Keyword(null,\"projectId\",\"projectId\",-1551013096));\nvar registryId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40992__$1,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\nvar cloudRegion = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40992__$1,new cljs.core.Keyword(null,\"cloudRegion\",\"cloudRegion\",-857757214));\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40992__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"projects/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(projectId),\"/locations/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cloudRegion),\"/registries/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(registryId),\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId)].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"config-chan\",\"huginn.mqtt/config-chan\",-1665797133,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"req-un\",\"req-un\",1074571008),new cljs.core.Keyword(null,\"opt-un\",\"opt-un\",883442496),new cljs.core.Keyword(null,\"gfn\",\"gfn\",791517474),new cljs.core.Keyword(null,\"pred-exprs\",\"pred-exprs\",1792271395),new cljs.core.Keyword(null,\"keys-pred\",\"keys-pred\",858984739),new cljs.core.Keyword(null,\"opt-keys\",\"opt-keys\",1262688261),new cljs.core.Keyword(null,\"req-specs\",\"req-specs\",553962313),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.Keyword(null,\"req-keys\",\"req-keys\",514319221),new cljs.core.Keyword(null,\"opt-specs\",\"opt-specs\",-384905450),new cljs.core.Keyword(null,\"pred-forms\",\"pred-forms\",172611832),new cljs.core.Keyword(null,\"opt\",\"opt\",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__40994){\nreturn cljs.core.map_QMARK_(G__40994);\n}),(function (G__40994){\nreturn cljs.core.contains_QMARK_(G__40994,new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099));\n})], null),(function (G__40994){\nreturn ((cljs.core.map_QMARK_(G__40994)) && (cljs.core.contains_QMARK_(G__40994,new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099))));\n}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"map?\",\"cljs.core/map?\",-1390345523,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null))),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol(\"cljs.core\",\"contains?\",\"cljs.core/contains?\",-976526835,null),new cljs.core.Symbol(null,\"%\",\"%\",-950237169,null),new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)))], null),null])),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"keys\",\"cljs.spec.alpha/keys\",1109346032,null),new cljs.core.Keyword(null,\"req\",\"req\",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"deviceId\",\"huginn.mqtt/deviceId\",1335615099)], null)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),null,null,null));\n/**\n * google give each device two channeles, a state channel (the config channel)\n *   and a telemetry channel (the one that we push all our data over). The name of\n *   these channels are determined by google iot core.\n */\nhuginn.mqtt.config_chan = (function huginn$mqtt$config_chan(p__40995){\nvar map__40996 = p__40995;\nvar map__40996__$1 = ((((!((map__40996 == null)))?(((((map__40996.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40996.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40996):map__40996);\nvar opts = map__40996__$1;\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40996__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId),\"/config\"].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"client-handlers\",\"huginn.mqtt/client-handlers\",1114981143,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.fn_QMARK_,cljs.core.fn_QMARK_,new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"success-fn\",\"success-fn\",-506864067),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"fail\",\"fail\",1706214930),new cljs.core.Symbol(\"cljs.core\",\"fn?\",\"cljs.core/fn?\",71876239,null),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\n/**\n * builds a map of handels to attach to the mqtt object\n */\nhuginn.mqtt.client_handlers = (function huginn$mqtt$client_handlers(success_fn,fail,send,recv){\nreturn new cljs.core.PersistentArrayMap(null, 5, [\"connect\",(function (success){\nif(cljs.core.truth_(success)){\nreturn (success_fn.cljs$core$IFn$_invoke$arity$0 ? success_fn.cljs$core$IFn$_invoke$arity$0() : success_fn.call(null));\n} else {\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"huginn.mqtt\",null,81,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"client connection failure\"], null);\n}),null)),null,-1997954775);\n\nreturn (fail.cljs$core$IFn$_invoke$arity$0 ? fail.cljs$core$IFn$_invoke$arity$0() : fail.call(null));\n}\n}),\"close\",(function (){\nreturn null;\n}),\"reconnect\",(function (){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,\"reconnecting\",\"huginn.mqtt\",null,84,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}),null)),null,-327287565);\n}),\"error\",(function (err){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"huginn.mqtt\",null,85,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"error: \",err], null);\n}),null)),null,-1371897724);\n}),\"message\",(function (topic,message,packet){\nvar c__23855__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto__){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto__){\nreturn (function (state_41004){\nvar state_val_41005 = (state_41004[(1)]);\nif((state_val_41005 === (1))){\nvar inst_40998 = [new cljs.core.Keyword(null,\"topic\",\"topic\",-1960480691),new cljs.core.Keyword(null,\"message\",\"message\",-406056002),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081)];\nvar inst_40999 = [topic,message,packet];\nvar inst_41000 = cljs.core.PersistentHashMap.fromArrays(inst_40998,inst_40999);\nvar state_41004__$1 = state_41004;\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_41004__$1,(2),recv,inst_41000);\n} else {\nif((state_val_41005 === (2))){\nvar inst_41002 = (state_41004[(2)]);\nvar state_41004__$1 = state_41004;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_41004__$1,inst_41002);\n} else {\nreturn null;\n}\n}\n});})(c__23855__auto__))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto__){\nreturn (function() {\nvar huginn$mqtt$client_handlers_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$client_handlers_$_state_machine__23691__auto____0 = (function (){\nvar statearr_41006 = [null,null,null,null,null,null,null];\n(statearr_41006[(0)] = huginn$mqtt$client_handlers_$_state_machine__23691__auto__);\n\n(statearr_41006[(1)] = (1));\n\nreturn statearr_41006;\n});\nvar huginn$mqtt$client_handlers_$_state_machine__23691__auto____1 = (function (state_41004){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_41004);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e41007){if((e41007 instanceof Object)){\nvar ex__23694__auto__ = e41007;\nvar statearr_41008_41170 = state_41004;\n(statearr_41008_41170[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_41004);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e41007;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__41171 = state_41004;\nstate_41004 = G__41171;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$client_handlers_$_state_machine__23691__auto__ = function(state_41004){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$client_handlers_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$client_handlers_$_state_machine__23691__auto____1.call(this,state_41004);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$client_handlers_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$client_handlers_$_state_machine__23691__auto____0;\nhuginn$mqtt$client_handlers_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$client_handlers_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$client_handlers_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto__))\n})();\nvar state__23857__auto__ = (function (){var statearr_41009 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_41009[(6)] = c__23855__auto__);\n\nreturn statearr_41009;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto__))\n);\n\nreturn c__23855__auto__;\n})], null);\n});\n/**\n * takes a map of handlers and attaches them to the mqtt object\n */\nhuginn.mqtt.add_handlers = (function huginn$mqtt$add_handlers(client,handlers){\nvar seq__41010 = cljs.core.seq(handlers);\nvar chunk__41011 = null;\nvar count__41012 = (0);\nvar i__41013 = (0);\nwhile(true){\nif((i__41013 < count__41012)){\nvar vec__41014 = chunk__41011.cljs$core$IIndexed$_nth$arity$2(null,i__41013);\nvar key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41014,(0),null);\nvar hand = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41014,(1),null);\nclient.on(key,hand);\n\n\nvar G__41172 = seq__41010;\nvar G__41173 = chunk__41011;\nvar G__41174 = count__41012;\nvar G__41175 = (i__41013 + (1));\nseq__41010 = G__41172;\nchunk__41011 = G__41173;\ncount__41012 = G__41174;\ni__41013 = G__41175;\ncontinue;\n} else {\nvar temp__5457__auto__ = cljs.core.seq(seq__41010);\nif(temp__5457__auto__){\nvar seq__41010__$1 = temp__5457__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__41010__$1)){\nvar c__4351__auto__ = cljs.core.chunk_first(seq__41010__$1);\nvar G__41185 = cljs.core.chunk_rest(seq__41010__$1);\nvar G__41186 = c__4351__auto__;\nvar G__41187 = cljs.core.count(c__4351__auto__);\nvar G__41188 = (0);\nseq__41010 = G__41185;\nchunk__41011 = G__41186;\ncount__41012 = G__41187;\ni__41013 = G__41188;\ncontinue;\n} else {\nvar vec__41017 = cljs.core.first(seq__41010__$1);\nvar key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41017,(0),null);\nvar hand = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41017,(1),null);\nclient.on(key,hand);\n\n\nvar G__41200 = cljs.core.next(seq__41010__$1);\nvar G__41201 = null;\nvar G__41202 = (0);\nvar G__41203 = (0);\nseq__41010 = G__41200;\nchunk__41011 = G__41201;\ncount__41012 = G__41202;\ni__41013 = G__41203;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"build-client\",\"huginn.mqtt/build-client\",-620852627,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),null,null),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\nhuginn.mqtt.build_client = (function huginn$mqtt$build_client(opts){\n\nvar conn_args = huginn.jwt.connection_args(opts);\nvar client = shadow.js.shim.module$mqtt.connect(conn_args);\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),shadow.js.shim.module$mqtt.connect(conn_args),new cljs.core.Keyword(null,\"iat-time\",\"iat-time\",111865064),huginn.jwt.round_now()], null);\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"init-client\",\"huginn.mqtt/init-client\",-283765885,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"promesa.core\",\"promise?\",\"promesa.core/promise?\",-1893544292,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"recv\",\"recv\",558628610),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"promesa.core\",\"promise?\",\"promesa.core/promise?\",-1893544292,null),promesa.core.promise_QMARK_,null,null),new cljs.core.Symbol(\"promesa.core\",\"promise?\",\"promesa.core/promise?\",-1893544292,null),null,null,null));\nhuginn.mqtt.init_client = (function huginn$mqtt$init_client(opts,send,recv){\n\nreturn promesa.core.promise((function (resolve,reject){\nvar map__41020 = huginn.mqtt.build_client(opts);\nvar map__41020__$1 = ((((!((map__41020 == null)))?(((((map__41020.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41020.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41020):map__41020);\nvar init = map__41020__$1;\nvar time = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41020__$1,new cljs.core.Keyword(null,\"time\",\"time\",1385887882));\nvar client = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41020__$1,new cljs.core.Keyword(null,\"client\",\"client\",-1323448117));\nvar handlers = huginn.mqtt.client_handlers(((function (map__41020,map__41020__$1,init,time,client){\nreturn (function (){\nreturn (resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(client) : resolve.call(null,client));\n});})(map__41020,map__41020__$1,init,time,client))\n,((function (map__41020,map__41020__$1,init,time,client){\nreturn (function (){\nvar G__41022 = new cljs.core.Keyword(null,\"client-fail\",\"client-fail\",1564298304);\nreturn (reject.cljs$core$IFn$_invoke$arity$1 ? reject.cljs$core$IFn$_invoke$arity$1(G__41022) : reject.call(null,G__41022));\n});})(map__41020,map__41020__$1,init,time,client))\n,send,recv);\nclient.subscribe(huginn.mqtt.config_chan(opts));\n\nreturn huginn.mqtt.add_handlers(client,handlers);\n}));\n});\n/**\n * builds the prefix of the actual values being sent\n *   (str (payload-root config) sensor-name /  sensor-value)\n */\nhuginn.mqtt.payload_root = (function huginn$mqtt$payload_root(p__41023){\nvar map__41024 = p__41023;\nvar map__41024__$1 = ((((!((map__41024 == null)))?(((((map__41024.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41024.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41024):map__41024);\nvar opts = map__41024__$1;\nvar registryId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41024__$1,new cljs.core.Keyword(null,\"registryId\",\"registryId\",-1767694006));\nvar userId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41024__$1,new cljs.core.Keyword(null,\"userId\",\"userId\",575594135));\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41024__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(registryId),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(userId),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId),\"-payload\"].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"mqtt-topic\",\"huginn.mqtt/mqtt-topic\",-2087820524,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"msg-type\",\"msg-type\",-2132567822),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),cljs.core.string_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),null,null,null));\n/**\n * msg-type can be 'state' for state updates\n * or 'events' to publish telemetry\n */\nhuginn.mqtt.mqtt_topic = (function huginn$mqtt$mqtt_topic(p__41026,msg_type){\nvar map__41027 = p__41026;\nvar map__41027__$1 = ((((!((map__41027 == null)))?(((((map__41027.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41027.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41027):map__41027);\nvar opts = map__41027__$1;\nvar deviceId = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41027__$1,new cljs.core.Keyword(null,\"deviceId\",\"deviceId\",1909987208));\nreturn [\"/devices/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(deviceId),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg_type)].join('');\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"prep-temps\",\"huginn.mqtt/prep-temps\",-1223395116,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"data\",\"data\",-232669377)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.core.any_QMARK_], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(\"cljs.spec.alpha\",\"kind-form\",\"cljs.spec.alpha/kind-form\",-1047104697),null,new cljs.core.Keyword(\"cljs.spec.alpha\",\"cpred\",\"cljs.spec.alpha/cpred\",-693471218),(function (G__41029){\nreturn cljs.core.coll_QMARK_(G__41029);\n}),new cljs.core.Keyword(\"cljs.spec.alpha\",\"conform-all\",\"cljs.spec.alpha/conform-all\",45201917),true,new cljs.core.Keyword(\"cljs.spec.alpha\",\"describe\",\"cljs.spec.alpha/describe\",1883026911),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))], null),null),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"coll-of\",\"cljs.spec.alpha/coll-of\",1019430407,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)),null,null,null));\n/**\n * pulls the data out of the systeminformation library and wrapping them up\n *   to be sent into mqtt\n */\nhuginn.mqtt.prep_temps = (function huginn$mqtt$prep_temps(opts,data){\nvar pr = huginn.mqtt.payload_root(opts);\nvar cores_raw = cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(data.cores);\nvar cores = cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(((function (pr,cores_raw){\nreturn (function (index,value){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(pr),\"-core-temp-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(index),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(value)].join(''))].join(''),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),[\"metrics/core-temp-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(index)].join(''),new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904),huginn.jwt.round_now()], null);\n});})(pr,cores_raw))\n,cores_raw);\nvar main = (cljs.core.truth_(data.main)?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(pr),\"-core-temp-main/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(data.main)].join(''))].join(''),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),\"metrics/core-temp-main\",new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904),huginn.jwt.round_now()], null):null);\nvar max = (cljs.core.truth_(data.max)?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(pr),\"-core-temp-max/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(data.max)].join(''))].join(''),new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439),\"metrics/core-temp-max\",new cljs.core.Keyword(null,\"ts\",\"ts\",1617209904),huginn.jwt.round_now()], null):null);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [main], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [max], null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cores], 0));\n});\nhuginn.mqtt.stop = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"publish-one\",\"huginn.mqtt/publish-one\",1981166109,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.any_QMARK_,new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"client\",\"client\",-1323448117),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),new cljs.core.Keyword(null,\"packet\",\"packet\",-533558081),new cljs.core.Keyword(\"huginn.mqtt\",\"mqtt-packet\",\"huginn.mqtt/mqtt-packet\",1651733234)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\n/**\n * Publises one mqtt packet to the client\n */\nhuginn.mqtt.publish_one = (function huginn$mqtt$publish_one(client,p__41030){\nvar map__41031 = p__41030;\nvar map__41031__$1 = ((((!((map__41031 == null)))?(((((map__41031.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41031.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41031):map__41031);\nvar p = map__41031__$1;\nvar topic = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41031__$1,new cljs.core.Keyword(null,\"topic\",\"topic\",-1960480691));\nvar payload = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41031__$1,new cljs.core.Keyword(null,\"payload\",\"payload\",-383036092));\nvar qos = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41031__$1,new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319));\nreturn client.publish(topic,payload,qos);\n});\n/**\n * main loop that pushes packets added to the send-chan to google iot core\n */\nhuginn.mqtt.publisher = (function huginn$mqtt$publisher(client_atom,send_chan){\nvar c__23855__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto__){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto__){\nreturn (function (state_41042){\nvar state_val_41043 = (state_41042[(1)]);\nif((state_val_41043 === (1))){\nvar state_41042__$1 = state_41042;\nvar statearr_41044_41238 = state_41042__$1;\n(statearr_41044_41238[(2)] = null);\n\n(statearr_41044_41238[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_41043 === (2))){\nvar state_41042__$1 = state_41042;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_41042__$1,(4),send_chan);\n} else {\nif((state_val_41043 === (3))){\nvar inst_41040 = (state_41042[(2)]);\nvar state_41042__$1 = state_41042;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_41042__$1,inst_41040);\n} else {\nif((state_val_41043 === (4))){\nvar inst_41035 = (state_41042[(2)]);\nvar inst_41036 = cljs.core.deref(client_atom);\nvar inst_41037 = huginn.mqtt.publish_one(inst_41036,inst_41035);\nvar state_41042__$1 = (function (){var statearr_41045 = state_41042;\n(statearr_41045[(7)] = inst_41037);\n\nreturn statearr_41045;\n})();\nvar statearr_41046_41239 = state_41042__$1;\n(statearr_41046_41239[(2)] = null);\n\n(statearr_41046_41239[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n});})(c__23855__auto__))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto__){\nreturn (function() {\nvar huginn$mqtt$publisher_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$publisher_$_state_machine__23691__auto____0 = (function (){\nvar statearr_41047 = [null,null,null,null,null,null,null,null];\n(statearr_41047[(0)] = huginn$mqtt$publisher_$_state_machine__23691__auto__);\n\n(statearr_41047[(1)] = (1));\n\nreturn statearr_41047;\n});\nvar huginn$mqtt$publisher_$_state_machine__23691__auto____1 = (function (state_41042){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_41042);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e41048){if((e41048 instanceof Object)){\nvar ex__23694__auto__ = e41048;\nvar statearr_41049_41240 = state_41042;\n(statearr_41049_41240[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_41042);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e41048;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__41241 = state_41042;\nstate_41042 = G__41241;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$publisher_$_state_machine__23691__auto__ = function(state_41042){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$publisher_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$publisher_$_state_machine__23691__auto____1.call(this,state_41042);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$publisher_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$publisher_$_state_machine__23691__auto____0;\nhuginn$mqtt$publisher_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$publisher_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$publisher_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto__))\n})();\nvar state__23857__auto__ = (function (){var statearr_41050 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_41050[(6)] = c__23855__auto__);\n\nreturn statearr_41050;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto__))\n);\n\nreturn c__23855__auto__;\n});\n/**\n * loops and refreshs the client atom every token experation.\n *   Mqtt requires that you refresh your token frequently (less then 20 mins)\n */\nhuginn.mqtt.client_refresher = (function huginn$mqtt$client_refresher(client_atom,p__41051,send,recv){\nvar map__41052 = p__41051;\nvar map__41052__$1 = ((((!((map__41052 == null)))?(((((map__41052.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41052.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41052):map__41052);\nvar opts = map__41052__$1;\nvar tokenExpMins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41052__$1,new cljs.core.Keyword(null,\"tokenExpMins\",\"tokenExpMins\",-1638711857));\nvar delayMs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41052__$1,new cljs.core.Keyword(null,\"delayMs\",\"delayMs\",-1017330168));\nvar client_send_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar client_mixer = cljs.core.async.mix(client_send_chan);\ncljs.core.async.admix(client_mixer,send);\n\nvar c__23855__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto__,client_send_chan,client_mixer,map__41052,map__41052__$1,opts,tokenExpMins,delayMs){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto__,client_send_chan,client_mixer,map__41052,map__41052__$1,opts,tokenExpMins,delayMs){\nreturn (function (state_41077){\nvar state_val_41078 = (state_41077[(1)]);\nif((state_val_41078 === (1))){\nvar state_41077__$1 = state_41077;\nvar statearr_41079_41242 = state_41077__$1;\n(statearr_41079_41242[(2)] = null);\n\n(statearr_41079_41242[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_41078 === (2))){\nvar inst_41055 = (tokenExpMins * (1000));\nvar inst_41056 = (inst_41055 * (60));\nvar inst_41057 = cljs.core.async.timeout(inst_41056);\nvar state_41077__$1 = state_41077;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_41077__$1,(4),inst_41057);\n} else {\nif((state_val_41078 === (3))){\nvar inst_41075 = (state_41077[(2)]);\nvar state_41077__$1 = state_41077;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_41077__$1,inst_41075);\n} else {\nif((state_val_41078 === (4))){\nvar inst_41059 = (state_41077[(2)]);\nvar inst_41060 = (function (){var wait = inst_41059;\nreturn ((function (wait,inst_41059,state_val_41078,c__23855__auto__,client_send_chan,client_mixer,map__41052,map__41052__$1,opts,tokenExpMins,delayMs){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"\\tRefreshing token after \",((tokenExpMins * (1000)) * (60)),\"ms\"], null);\n});\n;})(wait,inst_41059,state_val_41078,c__23855__auto__,client_send_chan,client_mixer,map__41052,map__41052__$1,opts,tokenExpMins,delayMs))\n})();\nvar inst_41061 = (new cljs.core.Delay(inst_41060,null));\nvar inst_41062 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"huginn.mqtt\",null,207,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),inst_41061,null,975827602);\nvar inst_41063 = [send];\nvar inst_41064 = [new cljs.core.Keyword(null,\"pause\",\"pause\",-2095325672)];\nvar inst_41065 = [true];\nvar inst_41066 = cljs.core.PersistentHashMap.fromArrays(inst_41064,inst_41065);\nvar inst_41067 = [inst_41066];\nvar inst_41068 = cljs.core.PersistentHashMap.fromArrays(inst_41063,inst_41067);\nvar inst_41069 = cljs.core.async.toggle(client_mixer,inst_41068);\nvar inst_41070 = cljs.core.deref(client_atom);\nvar inst_41071 = (function (){var wait = inst_41059;\nreturn ((function (wait,inst_41059,inst_41060,inst_41061,inst_41062,inst_41063,inst_41064,inst_41065,inst_41066,inst_41067,inst_41068,inst_41069,inst_41070,state_val_41078,c__23855__auto__,client_send_chan,client_mixer,map__41052,map__41052__$1,opts,tokenExpMins,delayMs){\nreturn (function (){\n(cljs.core.deref(client_atom)[\"password\"] = cljs.core.clj__GT_js(huginn.jwt.create_jwt(opts)));\n\nreturn cljs.core.deref(client_atom).reconnect(((function (wait,inst_41059,inst_41060,inst_41061,inst_41062,inst_41063,inst_41064,inst_41065,inst_41066,inst_41067,inst_41068,inst_41069,inst_41070,state_val_41078,c__23855__auto__,client_send_chan,client_mixer,map__41052,map__41052__$1,opts,tokenExpMins,delayMs){\nreturn (function (){\nreturn cljs.core.async.toggle(client_mixer,cljs.core.PersistentArrayMap.createAsIfByAssoc([send,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"pause\",\"pause\",-2095325672),false], null)]));\n});})(wait,inst_41059,inst_41060,inst_41061,inst_41062,inst_41063,inst_41064,inst_41065,inst_41066,inst_41067,inst_41068,inst_41069,inst_41070,state_val_41078,c__23855__auto__,client_send_chan,client_mixer,map__41052,map__41052__$1,opts,tokenExpMins,delayMs))\n);\n});\n;})(wait,inst_41059,inst_41060,inst_41061,inst_41062,inst_41063,inst_41064,inst_41065,inst_41066,inst_41067,inst_41068,inst_41069,inst_41070,state_val_41078,c__23855__auto__,client_send_chan,client_mixer,map__41052,map__41052__$1,opts,tokenExpMins,delayMs))\n})();\nvar inst_41072 = inst_41070.end(inst_41071);\nvar state_41077__$1 = (function (){var statearr_41080 = state_41077;\n(statearr_41080[(7)] = inst_41072);\n\n(statearr_41080[(8)] = inst_41062);\n\n(statearr_41080[(9)] = inst_41069);\n\nreturn statearr_41080;\n})();\nvar statearr_41081_41253 = state_41077__$1;\n(statearr_41081_41253[(2)] = null);\n\n(statearr_41081_41253[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n});})(c__23855__auto__,client_send_chan,client_mixer,map__41052,map__41052__$1,opts,tokenExpMins,delayMs))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto__,client_send_chan,client_mixer,map__41052,map__41052__$1,opts,tokenExpMins,delayMs){\nreturn (function() {\nvar huginn$mqtt$client_refresher_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$client_refresher_$_state_machine__23691__auto____0 = (function (){\nvar statearr_41082 = [null,null,null,null,null,null,null,null,null,null];\n(statearr_41082[(0)] = huginn$mqtt$client_refresher_$_state_machine__23691__auto__);\n\n(statearr_41082[(1)] = (1));\n\nreturn statearr_41082;\n});\nvar huginn$mqtt$client_refresher_$_state_machine__23691__auto____1 = (function (state_41077){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_41077);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e41083){if((e41083 instanceof Object)){\nvar ex__23694__auto__ = e41083;\nvar statearr_41084_41254 = state_41077;\n(statearr_41084_41254[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_41077);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e41083;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__41255 = state_41077;\nstate_41077 = G__41255;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$client_refresher_$_state_machine__23691__auto__ = function(state_41077){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$client_refresher_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$client_refresher_$_state_machine__23691__auto____1.call(this,state_41077);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$client_refresher_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$client_refresher_$_state_machine__23691__auto____0;\nhuginn$mqtt$client_refresher_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$client_refresher_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$client_refresher_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto__,client_send_chan,client_mixer,map__41052,map__41052__$1,opts,tokenExpMins,delayMs))\n})();\nvar state__23857__auto__ = (function (){var statearr_41085 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_41085[(6)] = c__23855__auto__);\n\nreturn statearr_41085;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto__,client_send_chan,client_mixer,map__41052,map__41052__$1,opts,tokenExpMins,delayMs))\n);\n\nreturn c__23855__auto__;\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"tele-chan\",\"huginn.mqtt/tele-chan\",1912072830,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),null,null),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),null,null),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),null,null,null));\n/**\n * takes the client opts and builds a channel with system telementry\n *   values on it (cpu tempratures specifically)\n */\nhuginn.mqtt.tele_chan = (function huginn$mqtt$tele_chan(opts){\nvar temp_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar out_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar c__23855__auto___41256 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto___41256,temp_chan,out_chan){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto___41256,temp_chan,out_chan){\nreturn (function (state_41100){\nvar state_val_41101 = (state_41100[(1)]);\nif((state_val_41101 === (1))){\nvar state_41100__$1 = state_41100;\nvar statearr_41102_41257 = state_41100__$1;\n(statearr_41102_41257[(2)] = null);\n\n(statearr_41102_41257[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_41101 === (2))){\nvar inst_41088 = shadow.js.shim.module$systeminformation.cpuTemperature();\nvar inst_41089 = (function (){return ((function (inst_41088,state_val_41101,c__23855__auto___41256,temp_chan,out_chan){\nreturn (function (p1__41086_SHARP_){\nreturn huginn.mqtt.prep_temps(opts,p1__41086_SHARP_);\n});\n;})(inst_41088,state_val_41101,c__23855__auto___41256,temp_chan,out_chan))\n})();\nvar inst_41090 = (function (){return ((function (inst_41088,inst_41089,state_val_41101,c__23855__auto___41256,temp_chan,out_chan){\nreturn (function (mqtt_packets){\nvar c__23855__auto____$1 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto____$1,inst_41088,inst_41089,state_val_41101,c__23855__auto___41256,temp_chan,out_chan){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto____$1,inst_41088,inst_41089,state_val_41101,c__23855__auto___41256,temp_chan,out_chan){\nreturn (function (state_41111){\nvar state_val_41112 = (state_41111[(1)]);\nif((state_val_41112 === (1))){\nvar inst_41103 = ((1000) * (60));\nvar inst_41104 = (inst_41103 * (1));\nvar inst_41105 = cljs.core.async.timeout(inst_41104);\nvar state_41111__$1 = state_41111;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_41111__$1,(2),inst_41105);\n} else {\nif((state_val_41112 === (2))){\nvar inst_41107 = (state_41111[(2)]);\nvar state_41111__$1 = (function (){var statearr_41113 = state_41111;\n(statearr_41113[(7)] = inst_41107);\n\nreturn statearr_41113;\n})();\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_41111__$1,(3),temp_chan,mqtt_packets);\n} else {\nif((state_val_41112 === (3))){\nvar inst_41109 = (state_41111[(2)]);\nvar state_41111__$1 = state_41111;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_41111__$1,inst_41109);\n} else {\nreturn null;\n}\n}\n}\n});})(c__23855__auto____$1,inst_41088,inst_41089,state_val_41101,c__23855__auto___41256,temp_chan,out_chan))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto____$1,inst_41088,inst_41089,state_val_41101,c__23855__auto___41256,temp_chan,out_chan){\nreturn (function() {\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto____0 = (function (){\nvar statearr_41114 = [null,null,null,null,null,null,null,null];\n(statearr_41114[(0)] = huginn$mqtt$tele_chan_$_state_machine__23691__auto__);\n\n(statearr_41114[(1)] = (1));\n\nreturn statearr_41114;\n});\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto____1 = (function (state_41111){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_41111);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e41115){if((e41115 instanceof Object)){\nvar ex__23694__auto__ = e41115;\nvar statearr_41116_41263 = state_41111;\n(statearr_41116_41263[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_41111);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e41115;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__41264 = state_41111;\nstate_41111 = G__41264;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__ = function(state_41111){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto____1.call(this,state_41111);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$tele_chan_$_state_machine__23691__auto____0;\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$tele_chan_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto____$1,inst_41088,inst_41089,state_val_41101,c__23855__auto___41256,temp_chan,out_chan))\n})();\nvar state__23857__auto__ = (function (){var statearr_41117 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_41117[(6)] = c__23855__auto____$1);\n\nreturn statearr_41117;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto____$1,inst_41088,inst_41089,state_val_41101,c__23855__auto___41256,temp_chan,out_chan))\n);\n\nreturn c__23855__auto____$1;\n});\n;})(inst_41088,inst_41089,state_val_41101,c__23855__auto___41256,temp_chan,out_chan))\n})();\nvar inst_41091 = promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic(inst_41088,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([inst_41089,inst_41090], 0));\nvar state_41100__$1 = (function (){var statearr_41118 = state_41100;\n(statearr_41118[(7)] = inst_41091);\n\nreturn statearr_41118;\n})();\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_41100__$1,(4),temp_chan);\n} else {\nif((state_val_41101 === (3))){\nvar inst_41098 = (state_41100[(2)]);\nvar state_41100__$1 = state_41100;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_41100__$1,inst_41098);\n} else {\nif((state_val_41101 === (4))){\nvar inst_41093 = (state_41100[(2)]);\nvar state_41100__$1 = state_41100;\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_41100__$1,(5),out_chan,inst_41093);\n} else {\nif((state_val_41101 === (5))){\nvar inst_41095 = (state_41100[(2)]);\nvar state_41100__$1 = (function (){var statearr_41119 = state_41100;\n(statearr_41119[(8)] = inst_41095);\n\nreturn statearr_41119;\n})();\nvar statearr_41120_41265 = state_41100__$1;\n(statearr_41120_41265[(2)] = null);\n\n(statearr_41120_41265[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n});})(c__23855__auto___41256,temp_chan,out_chan))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto___41256,temp_chan,out_chan){\nreturn (function() {\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto____0 = (function (){\nvar statearr_41121 = [null,null,null,null,null,null,null,null,null];\n(statearr_41121[(0)] = huginn$mqtt$tele_chan_$_state_machine__23691__auto__);\n\n(statearr_41121[(1)] = (1));\n\nreturn statearr_41121;\n});\nvar huginn$mqtt$tele_chan_$_state_machine__23691__auto____1 = (function (state_41100){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_41100);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e41122){if((e41122 instanceof Object)){\nvar ex__23694__auto__ = e41122;\nvar statearr_41123_41268 = state_41100;\n(statearr_41123_41268[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_41100);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e41122;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__41270 = state_41100;\nstate_41100 = G__41270;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__ = function(state_41100){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto____1.call(this,state_41100);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$tele_chan_$_state_machine__23691__auto____0;\nhuginn$mqtt$tele_chan_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$tele_chan_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$tele_chan_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto___41256,temp_chan,out_chan))\n})();\nvar state__23857__auto__ = (function (){var statearr_41124 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_41124[(6)] = c__23855__auto___41256);\n\nreturn statearr_41124;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto___41256,temp_chan,out_chan))\n);\n\n\nreturn out_chan;\n});\ncljs.spec.alpha.def_impl(new cljs.core.Symbol(\"huginn.mqtt\",\"sender\",\"huginn.mqtt/sender\",-581128399,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"fspec\",\"cljs.spec.alpha/fspec\",-1289128341,null),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264))),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)], null)),null,null),cljs.core.list(new cljs.core.Symbol(\"cljs.spec.alpha\",\"cat\",\"cljs.spec.alpha/cat\",-1471398329,null),new cljs.core.Keyword(null,\"topic-name\",\"topic-name\",759633328),new cljs.core.Keyword(\"huginn.mqtt\",\"topic-type\",\"huginn.mqtt/topic-type\",-1269163830),new cljs.core.Keyword(null,\"opts\",\"opts\",155075701),new cljs.core.Keyword(\"huginn.mqtt\",\"client-config\",\"huginn.mqtt/client-config\",239469891),new cljs.core.Keyword(null,\"send\",\"send\",-652151114),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264),new cljs.core.Keyword(null,\"t-chan\",\"t-chan\",-1090442551),new cljs.core.Keyword(\"huginn.mqtt\",\"chan\",\"huginn.mqtt/chan\",1668057264)),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),cljs.core.any_QMARK_,null,null),new cljs.core.Symbol(\"cljs.core\",\"any?\",\"cljs.core/any?\",-2068111842,null),null,null,null));\n/**\n * takes information for the tele-chan in the form of collections of\n *   mqtt-packets and assignes a default topic if a subfolder is set,\n *   adds a default qos. Then takes the resulting structures and puts\n *   them on to the send channel. waits for :delayMs between collections \n */\nhuginn.mqtt.sender = (function huginn$mqtt$sender(topic_name,opts,send,t_chan){\nvar c__23855__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__23855__auto__){\nreturn (function (){\nvar f__23856__auto__ = (function (){var switch__23690__auto__ = ((function (c__23855__auto__){\nreturn (function (state_41149){\nvar state_val_41150 = (state_41149[(1)]);\nif((state_val_41150 === (1))){\nvar state_41149__$1 = state_41149;\nvar statearr_41151_41271 = state_41149__$1;\n(statearr_41151_41271[(2)] = null);\n\n(statearr_41151_41271[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_41150 === (2))){\nvar state_41149__$1 = state_41149;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_41149__$1,(4),t_chan);\n} else {\nif((state_val_41150 === (3))){\nvar inst_41147 = (state_41149[(2)]);\nvar state_41149__$1 = state_41149;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_41149__$1,inst_41147);\n} else {\nif((state_val_41150 === (4))){\nvar inst_41127 = (state_41149[(2)]);\nvar inst_41128 = huginn.mqtt.mqtt_topic(opts,topic_name);\nvar inst_41129 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"state\",topic_name);\nvar state_41149__$1 = (function (){var statearr_41152 = state_41149;\n(statearr_41152[(7)] = inst_41128);\n\n(statearr_41152[(8)] = inst_41127);\n\nreturn statearr_41152;\n})();\nif(inst_41129){\nvar statearr_41153_41272 = state_41149__$1;\n(statearr_41153_41272[(1)] = (5));\n\n} else {\nvar statearr_41154_41273 = state_41149__$1;\n(statearr_41154_41273[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_41150 === (5))){\nvar inst_41128 = (state_41149[(7)]);\nvar inst_41127 = (state_41149[(8)]);\nvar inst_41131 = (function (){var teles = inst_41127;\nvar topic = inst_41128;\nvar qos = ({\"qos\": (1)});\nreturn ((function (teles,topic,qos,inst_41128,inst_41127,state_val_41150,c__23855__auto__){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"pushing state\",topic], null);\n});\n;})(teles,topic,qos,inst_41128,inst_41127,state_val_41150,c__23855__auto__))\n})();\nvar inst_41132 = (new cljs.core.Delay(inst_41131,null));\nvar inst_41133 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"huginn.mqtt\",null,262,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),inst_41132,null,-2113709390);\nvar state_41149__$1 = state_41149;\nvar statearr_41155_41274 = state_41149__$1;\n(statearr_41155_41274[(2)] = inst_41133);\n\n(statearr_41155_41274[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_41150 === (6))){\nvar state_41149__$1 = state_41149;\nvar statearr_41156_41275 = state_41149__$1;\n(statearr_41156_41275[(2)] = null);\n\n(statearr_41156_41275[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_41150 === (7))){\nvar inst_41128 = (state_41149[(7)]);\nvar inst_41127 = (state_41149[(8)]);\nvar inst_41136 = (state_41149[(2)]);\nvar inst_41138 = (function (){var teles = inst_41127;\nvar topic = inst_41128;\nvar qos = ({\"qos\": (1)});\nreturn ((function (teles,topic,qos,inst_41128,inst_41127,inst_41136,state_val_41150,c__23855__auto__){\nreturn (function (p__41137){\nvar map__41157 = p__41137;\nvar map__41157__$1 = ((((!((map__41157 == null)))?(((((map__41157.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41157.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41157):map__41157);\nvar mqtt_packet = map__41157__$1;\nvar subfolder = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41157__$1,new cljs.core.Keyword(null,\"subfolder\",\"subfolder\",1044158439));\nvar my_topic = (cljs.core.truth_(subfolder)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(topic),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(subfolder)].join(''):topic);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(mqtt_packet,new cljs.core.Keyword(null,\"topic\",\"topic\",-1960480691),my_topic),new cljs.core.Keyword(null,\"qos\",\"qos\",-2124292319),qos);\n});\n;})(teles,topic,qos,inst_41128,inst_41127,inst_41136,state_val_41150,c__23855__auto__))\n})();\nvar inst_41139 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(inst_41138,inst_41127);\nvar inst_41140 = cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(send,inst_41139,false);\nvar inst_41141 = new cljs.core.Keyword(null,\"delayMs\",\"delayMs\",-1017330168).cljs$core$IFn$_invoke$arity$1(opts);\nvar inst_41142 = cljs.core.async.timeout(inst_41141);\nvar state_41149__$1 = (function (){var statearr_41159 = state_41149;\n(statearr_41159[(9)] = inst_41136);\n\n(statearr_41159[(10)] = inst_41140);\n\nreturn statearr_41159;\n})();\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_41149__$1,(8),inst_41142);\n} else {\nif((state_val_41150 === (8))){\nvar inst_41144 = (state_41149[(2)]);\nvar state_41149__$1 = (function (){var statearr_41160 = state_41149;\n(statearr_41160[(11)] = inst_41144);\n\nreturn statearr_41160;\n})();\nvar statearr_41161_41276 = state_41149__$1;\n(statearr_41161_41276[(2)] = null);\n\n(statearr_41161_41276[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__23855__auto__))\n;\nreturn ((function (switch__23690__auto__,c__23855__auto__){\nreturn (function() {\nvar huginn$mqtt$sender_$_state_machine__23691__auto__ = null;\nvar huginn$mqtt$sender_$_state_machine__23691__auto____0 = (function (){\nvar statearr_41162 = [null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_41162[(0)] = huginn$mqtt$sender_$_state_machine__23691__auto__);\n\n(statearr_41162[(1)] = (1));\n\nreturn statearr_41162;\n});\nvar huginn$mqtt$sender_$_state_machine__23691__auto____1 = (function (state_41149){\nwhile(true){\nvar ret_value__23692__auto__ = (function (){try{while(true){\nvar result__23693__auto__ = switch__23690__auto__(state_41149);\nif(cljs.core.keyword_identical_QMARK_(result__23693__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__23693__auto__;\n}\nbreak;\n}\n}catch (e41163){if((e41163 instanceof Object)){\nvar ex__23694__auto__ = e41163;\nvar statearr_41164_41277 = state_41149;\n(statearr_41164_41277[(5)] = ex__23694__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_41149);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e41163;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__23692__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__41278 = state_41149;\nstate_41149 = G__41278;\ncontinue;\n} else {\nreturn ret_value__23692__auto__;\n}\nbreak;\n}\n});\nhuginn$mqtt$sender_$_state_machine__23691__auto__ = function(state_41149){\nswitch(arguments.length){\ncase 0:\nreturn huginn$mqtt$sender_$_state_machine__23691__auto____0.call(this);\ncase 1:\nreturn huginn$mqtt$sender_$_state_machine__23691__auto____1.call(this,state_41149);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhuginn$mqtt$sender_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$0 = huginn$mqtt$sender_$_state_machine__23691__auto____0;\nhuginn$mqtt$sender_$_state_machine__23691__auto__.cljs$core$IFn$_invoke$arity$1 = huginn$mqtt$sender_$_state_machine__23691__auto____1;\nreturn huginn$mqtt$sender_$_state_machine__23691__auto__;\n})()\n;})(switch__23690__auto__,c__23855__auto__))\n})();\nvar state__23857__auto__ = (function (){var statearr_41165 = (f__23856__auto__.cljs$core$IFn$_invoke$arity$0 ? f__23856__auto__.cljs$core$IFn$_invoke$arity$0() : f__23856__auto__.call(null));\n(statearr_41165[(6)] = c__23855__auto__);\n\nreturn statearr_41165;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__23857__auto__);\n});})(c__23855__auto__))\n);\n\nreturn c__23855__auto__;\n});\nhuginn.mqtt.state_send = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(huginn.mqtt.sender,\"state\");\nhuginn.mqtt.tele_send = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(huginn.mqtt.sender,\"events\");\nhuginn.mqtt.clean_up = (function huginn$mqtt$clean_up(p__41166){\nvar map__41167 = p__41166;\nvar map__41167__$1 = ((((!((map__41167 == null)))?(((((map__41167.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41167.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41167):map__41167);\nvar system = map__41167__$1;\nvar send_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41167__$1,new cljs.core.Keyword(null,\"send-chan\",\"send-chan\",1681189602));\nvar recv_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41167__$1,new cljs.core.Keyword(null,\"recv-chan\",\"recv-chan\",869238850));\nvar telemetry_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41167__$1,new cljs.core.Keyword(null,\"telemetry-chan\",\"telemetry-chan\",-1991836503));\nvar state_chan = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41167__$1,new cljs.core.Keyword(null,\"state-chan\",\"state-chan\",-1042477017));\nvar client_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41167__$1,new cljs.core.Keyword(null,\"client-atom\",\"client-atom\",-1733084110));\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,\"Killing system\",\"huginn.mqtt\",null,284,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (map__41167,map__41167__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom){\nreturn (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n});})(map__41167,map__41167__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom))\n,null)),null,1696634250);\n\ncljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (map__41167,map__41167__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom){\nreturn (function (c){\nreturn cljs.core.async.close_BANG_(c);\n});})(map__41167,map__41167__$1,system,send_chan,recv_chan,telemetry_chan,state_chan,client_atom))\n,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [send_chan,recv_chan,state_chan,telemetry_chan], null)));\n\nreturn cljs.core.deref(client_atom).end();\n});\n/**\n * the heart of the system lies here.\n *   This function takes options (config/default-options works well)\n *   It returns a map\n *   This map has\n *   :send-chan A channel you can use to directly send messages of mqtt, must be of the\n *   form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n *   :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n *   :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n *   (google publishes these values to a differnt pubsub channel then device telemetry)\n *   :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n *   are sent in the same batch, the same is true for stat-chan.\n *   :client-atom, contains the current version of the mqtt client. This is an atom so\n *   that the client-refersher can refresh the authentication token and swap it.\n *   this pattern also ensures only one client\n * \n *   payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you\n */\nhuginn.mqtt.system_function = (function huginn$mqtt$system_function(opts){\nvar send = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar recv = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar kill = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\nvar client_promise = huginn.mqtt.init_client(opts,send,recv);\nvar client_atom = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\nvar t_chan = huginn.mqtt.tele_chan(opts);\nvar state_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nreturn promesa.core.then(client_promise,((function (send,recv,kill,client_promise,client_atom,t_chan,state_chan){\nreturn (function (client){\ncljs.core.reset_BANG_(client_atom,client);\n\nhuginn.mqtt.client_refresher(client_atom,opts,send,recv);\n\nhuginn.mqtt.publisher(client_atom,send);\n\n(huginn.mqtt.tele_send.cljs$core$IFn$_invoke$arity$3 ? huginn.mqtt.tele_send.cljs$core$IFn$_invoke$arity$3(opts,send,t_chan) : huginn.mqtt.tele_send.call(null,opts,send,t_chan));\n\n(huginn.mqtt.state_send.cljs$core$IFn$_invoke$arity$3 ? huginn.mqtt.state_send.cljs$core$IFn$_invoke$arity$3(opts,send,state_chan) : huginn.mqtt.state_send.call(null,opts,send,state_chan));\n\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"send-chan\",\"send-chan\",1681189602),send,new cljs.core.Keyword(null,\"recv-chan\",\"recv-chan\",869238850),recv,new cljs.core.Keyword(null,\"state-chan\",\"state-chan\",-1042477017),state_chan,new cljs.core.Keyword(null,\"telemetry-chan\",\"telemetry-chan\",-1991836503),t_chan,new cljs.core.Keyword(null,\"client-atom\",\"client-atom\",-1733084110),client_atom], null);\n});})(send,recv,kill,client_promise,client_atom,t_chan,state_chan))\n);\n});\n/**\n * Feed the system promise to this and it will kill it\n */\nhuginn.mqtt.kill_it = (function huginn$mqtt$kill_it(system_promise){\nreturn promesa.core.then(system_promise,huginn.mqtt.clean_up);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","huginn/mqtt.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$jsonwebtoken","~$shadow.js.shim.module$jsonwebtoken","~$mqtt","~$shadow.js.shim.module$mqtt","~$systeminformation","~$shadow.js.shim.module$systeminformation","~$clojure.core.async","~$cljs.core.async","~$raspicam","~$shadow.js.shim.module$raspicam"],"~:use-macros",["^ ","~$get-env","~$taoensso.timbre","~$log","^H","~$logf","^H","~$reportf","^H","~$fatalf","^H","~$warnf","^H","~$report","^H","~$spy","^H","~$warn","^H","~$trace","^H","~$debug","^H","~$debugf","^H","~$tracef","^H","~$infof","^H","~$fatal","^H","~$errorf","^H","~$info","^H","~$error","^H"],"~:excludes",["~#set",[]],"~:name","~$huginn.mqtt","~:op","~:ns","~:imports",null,"~:requires",["^ ","^?","^?","~$p","~$promesa.core","^16","^16","~$timbre","^H","~$a","^C","~$si","^A","~$huginn.config","^19","~$cljs.core","^1:","~$goog","^1;","^C","^C","^@","^A","~$config","^19","~$cljs.nodejs","^1=","~$huginn.jwt","^1>","~$nodejs","^1=","~$s","~$cljs.spec.alpha","^>","^?","~$jw","^1>","^H","^H","^A","^A","~$clojure.string","^1B","~$st","^1B","^1@","^1@"],"~:seen",["^[",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^H","^H","^17","^H","^1:","^1:","~$a","^C","^C","^C","~$s","^1@","^1@","^1@"],"~:form",["~#list",["~$ns","^11",["^1I",["^1E",["^16","~:as","~$p"],["^1B","^1K","^1C"],["^1>","^1K","^1A"],["^>","^1K","^>"],["^19","^1K","^1<"],["^H","^1K","^17","~:refer-macros",["^I","^Q","^R","^X","^P","^Y","^V","^N","^J","^T","^S","^U","^M","^W","^L","^K","^O","^G"]],["^C","^1K","~$a"],["^@","^1K","^18"],["^1@","^1K","~$s"],["^1=","^1K","^1?"]]]]],"~:flags",["^ ","^1E",["^[",[]]],"~:js-deps",["^ "],"~:deps",["^1;","^1:","^16","^1B","^1>","^?","^19","^H","^C","^A","^1@","^1="]],"^13","^11","~:resource-id",["~:shadow.build.classpath/resource","huginn/mqtt.cljs"],"~:compiled-at",1540148870340,"~:resource-name","huginn/mqtt.cljs","~:warnings",[],"~:source","(ns huginn.mqtt\n  (:require\n   [promesa.core :as p]\n   [clojure.string :as st]\n   [huginn.jwt :as jw]\n   [mqtt :as mqtt]\n   [huginn.config :as config]\n   [taoensso.timbre :as timbre\n    :refer-macros [log  trace  debug  info  warn  error  fatal  report\n                   logf tracef debugf infof warnf errorf fatalf reportf\n                   spy get-env]]\n   [cljs.core.async :as a]\n   [systeminformation :as si]\n   [cljs.spec.alpha :as s]\n   [cljs.nodejs :as nodejs]))\n\n\n\n(s/def ::projectId string?)\n(s/def ::registryId string?)\n(s/def ::cloudRegion string?)\n(s/def ::deviceId string?)\n(s/def ::chan (partial instance? (a/chan)))\n\n(s/def ::topic-type #{\"events\" \"state\"})\n\n\n(s/def ::client-config (s/keys :req-un\n                               [::projectId\n                                ::registryId\n                                ::cloudRegion\n                                ::deviceId]))\n\n(s/def ::payload (s/and string? #(< ( count %) 200000)))\n(s/def ::subfolder (s/and string? #(< (count %) 200)))\n(s/def ::ts float?)\n\n(s/def ::mqtt-packet\n  (s/keys :req-un [::payload\n                   ::subfolder\n                   ::ts]))\n\n(s/fdef client-id\n  :args ::client-config\n  :ret  string?)\n\n\n(defn client-id\n  \"Builds a client id used to identify the device this message is\n  comming from\"\n  [{:keys [projectId registryId cloudRegion deviceId] :as opts}]\n  (str \"projects/\" projectId\n       \"/locations/\" cloudRegion\n       \"/registries/\" registryId\n       \"/devices/\" deviceId))\n\n(s/fdef config-chan\n  :args (s/keys :req [::deviceId])\n  :ret string?)\n(defn config-chan\n  \"google give each device two channeles, a state channel (the config channel)\n  and a telemetry channel (the one that we push all our data over). The name of\n  these channels are determined by google iot core.\"\n  [{:keys [deviceId] :as opts}]\n  (str \"/devices/\" deviceId \"/config\"))\n\n(s/fdef client-handlers\n  :args (s/cat :success-fn fn?\n               :fail       fn?\n               :send       ::chan\n               :recv       ::chan))\n\n(defn client-handlers\n  \"builds a map of handels to attach to the mqtt object\"\n  [success-fn fail send recv]\n  {\"connect\" (fn [success]\n               (if success\n                 (do\n                   (success-fn))\n                 (do\n                   (debug \"client connection failure\")\n                   (fail))))\n   \"close\"   (fn [] )\n   \"reconnect\" (fn [] (log  \"reconnecting\"))\n   \"error\"   (fn [err] (error \"error: \" err))\n   \"message\" (fn [topic message packet]\n               (a/go\n                 (a/>! recv {:topic topic\n                             :message message\n                             :packet packet})))})\n\n\n(defn add-handlers\n  \"takes a map of handlers and attaches them to the mqtt object\"\n  [client handlers]\n  (doseq [[key hand] handlers]\n    (.on client key hand)))\n\n(s/fdef build-client\n  :args ::client-config)\n\n(defn build-client [opts]\n  \"builds the mqtt client using the client-config\nthe mqtt client is responsible for holding on to\nauth to talk to google iot core. The mqtt client\nis also responsible for actually pushing the data\nto google iot core.\"\n  (let [conn-args (jw/connection-args opts)\n        client    (mqtt/connect conn-args)]\n    {:client (mqtt/connect conn-args)\n     :iat-time (jw/round-now)}))\n\n;This function is referenced before it is defined so we\n;declare it\n(declare publish-async)\n\n(s/fdef init-client\n  :args (s/cat :opts ::client-config\n               :send ::chan\n               :recv ::chan)\n  :ret p/promise?)\n\n(defn init-client [opts send recv]\n  \"using client config and a channel to send and a channel to recv on,\nbuilds an mqtt client that will read from the send chan and push to google\n  and write to the recv chan when google pushes to it. This object is wrapped\nin a promise that returns when the client is ready\"\n  (p/promise\n   (fn [resolve reject]\n     (let [{:keys [time client] :as init} (build-client opts)\n           handlers (client-handlers #(resolve client) #(reject :client-fail) send recv)]\n       (.subscribe client (config-chan opts))\n       (add-handlers client handlers)))))\n\n(defn payload-root\n  \"builds the prefix of the actual values being sent\n  (str (payload-root config) sensor-name /  sensor-value)\"\n  [{:keys [registryId userId deviceId] :as opts}]\n  (str registryId \"/\" userId \"/\" deviceId \"-payload\"))\n\n(s/fdef mqtt-topic\n    :args (s/cat :opts     ::client-config\n                 :msg-type ::topic-type)\n    :ret string?)\n\n(defn mqtt-topic\n  \"msg-type can be 'state' for state updates\n   or 'events' to publish telemetry\"\n  [{:keys [deviceId] :as opts} msg-type]\n  (str \"/devices/\" deviceId \"/\" msg-type))\n\n(s/fdef prep-temps\n  :args (s/cat :opts ::client-config :data any?)\n  :ret (s/coll-of ::mqtt-packet))\n(defn prep-temps\n  \"pulls the data out of the systeminformation library and wrapping them up\n  to be sent into mqtt\"\n  [opts data]\n  (let [pr (payload-root opts)\n        cores-raw (js->clj (.-cores data))\n        cores (map-indexed\n               (fn [index value]\n                 {:payload (str pr \"-core-temp-\" index \"/\" (str value))\n                  :subfolder (str \"metrics/core-temp-\" index)\n                  :ts (jw/round-now)})\n               cores-raw)\n        main (when (.-main data)\n               {:payload (str pr \"-core-temp-main/\" (str (.-main data)))\n                :subfolder \"metrics/core-temp-main\"\n                :ts (jw/round-now)})\n        max (when (.-max data)\n              {:payload (str pr \"-core-temp-max/\" (str (.-max data)))\n               :subfolder \"metrics/core-temp-max\"\n               :ts (jw/round-now)})]\n    (concat [main] [max] cores)))\n\n(def stop (atom false))\n\n(s/fdef publish-one\n  :args (s/cat :client any? :packet ::mqtt-packet))\n(defn publish-one\n  \"Publises one mqtt packet to the client\"\n  [^MqttClient client {:keys [topic payload qos] :as p}]\n  (.publish client topic payload qos))\n\n\n(defn publisher\n  \"main loop that pushes packets added to the send-chan to google iot core\"\n  [client-atom send-chan]\n  (a/go-loop []\n    (let [to-send (a/<! send-chan)]\n      (publish-one @client-atom to-send)\n      (recur))))\n\n(defn client-refresher\n  \"loops and refreshs the client atom every token experation.\n  Mqtt requires that you refresh your token frequently (less then 20 mins)\"\n  [client-atom {:keys [tokenExpMins delayMs] :as opts} send recv]\n  ; make a mixer so that we can pause the data when switching clients\n  (let [client-send-chan (a/chan)\n        client-mixer (a/mix client-send-chan)]\n    (a/admix client-mixer send)\n   ;Loop forever waiting for the tokenExpMins, then building a new client\n    (a/go-loop []\n   ; use core.async/timeout to set up a channel that has a value every tokenExpMins\n      (let [wait (a/<! (a/timeout (* tokenExpMins 1000 60)))]\n        (info \"\\tRefreshing token after \" (* tokenExpMins 1000 60)  \"ms\")\n        (a/toggle client-mixer {send {:pause true}})\n        (.end @client-atom\n              (fn []\n                (aset @client-atom \"password\" (clj->js (jw/create-jwt opts)))\n                (.reconnect @client-atom\n                            (fn []\n                              (a/toggle client-mixer {send {:pause false}})))))\n;        (let [wait-again (a/<! (a/timeout 100))]\n;          (p/then (init-client opts send recv)\n;                  (fn [new-client]\n;                    (reset! client-atom new-client)\n        (recur)))))\n\n(s/fdef tele-chan\n  :args ::client-config\n  :ret ::chan)\n(defn tele-chan\n  \"takes the client opts and builds a channel with system telementry\n  values on it (cpu tempratures specifically)\"\n  [opts]\n  (let [temp-chan (a/chan)\n        out-chan (a/chan)]\n    (a/go-loop []\n        (p/chain\n         (si/cpuTemperature)\n         #(prep-temps opts %)\n         (fn [mqtt-packets] (a/go\n                              (a/<! (a/timeout (* 1000 60 1)))\n                              (a/>! temp-chan mqtt-packets))))\n        (let [v (a/<! temp-chan)]\n          (a/>! out-chan v)\n          (recur)))\n    out-chan))\n\n\n(s/fdef sender\n  :args (s/cat :topic-name ::topic-type\n               :opts       ::client-config\n               :send       ::chan\n               :t-chan     ::chan))\n\n(defn sender\n  \"takes information for the tele-chan in the form of collections of\n  mqtt-packets and assignes a default topic if a subfolder is set,\n  adds a default qos. Then takes the resulting structures and puts\n  them on to the send channel. waits for :delayMs between collections \"\n  [topic-name opts send t-chan]\n  (a/go-loop []\n    (let [teles (a/<! t-chan)\n          topic (mqtt-topic opts topic-name)\n          qos #js {:qos 1}]\n\n      ;becuase this should rarely happen\n      (when (= \"state\" topic-name)\n        (debug \"pushing state\" topic))\n\n      (a/onto-chan\n       send\n       (map\n        (fn [{:keys [subfolder] :as mqtt-packet}]\n          (let [my-topic (if subfolder (str topic \"/\" subfolder) topic)]\n            (-> mqtt-packet\n                (assoc :topic my-topic)\n                (assoc :qos qos)))) teles)\n       false)\n      (a/<! (a/timeout (:delayMs opts)))\n      (recur))))\n\n(def state-send\n  (partial sender \"state\"))\n\n(def tele-send\n  (partial sender \"events\"))\n\n(defn clean-up\n  [{:keys [send-chan recv-chan telemetry-chan state-chan client-atom] :as system}]\n  (log \"Killing system\")\n  (doall\n   (map (fn [c] (a/close! c))\n        [send-chan recv-chan state-chan telemetry-chan]))\n  (.end @client-atom))\n\n(defn system-function\n  \"the heart of the system lies here.\n  This function takes options (config/default-options works well)\n  It returns a map\n  This map has\n  :send-chan A channel you can use to directly send messages of mqtt, must be of the\n  form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n  :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n  :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n  (google publishes these values to a differnt pubsub channel then device telemetry)\n  :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n  are sent in the same batch, the same is true for stat-chan.\n  :client-atom, contains the current version of the mqtt client. This is an atom so\n  that the client-refersher can refresh the authentication token and swap it.\n  this pattern also ensures only one client\n\n  payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you\"\n  [opts]\n  (let [send (a/chan)\n        recv (a/chan)\n        kill (atom false)\n        client-promise (init-client opts send recv)\n        client-atom (atom nil)\n        t-chan (tele-chan opts)\n        state-chan (a/chan)]\n    (p/then\n     client-promise\n     (fn [client]\n       (reset! client-atom client)\n       (client-refresher client-atom opts send recv)\n       (publisher client-atom send)\n       (tele-send opts send t-chan)\n       (state-send opts send state-chan)\n       {:send-chan send\n        :recv-chan recv\n        :state-chan state-chan\n        :telemetry-chan t-chan\n        :client-atom client-atom}))))\n\n\n;(def system-promise (system-function config/default-options))\n\n(defn kill-it\n  \"Feed the system promise to this and it will kill it\"\n  [system-promise]\n  (p/then system-promise\n          clean-up))\n\n;(kill-it system-promise)\n","~:reader-features",["^[",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["cljs.spec.alpha/def-impl","cljs.core/string?","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","cljs.core/instance?","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0","cljs.spec.alpha/map-spec-impl","G__40987","cljs.core/map?","cljs.core/contains?","cljs.spec.alpha/and-spec-impl","p1__40988#","cljs.core/count","p1__40989#","cljs.core/float?","G__40990","cljs.spec.alpha/fspec-impl","cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4","p__40991","map__40992","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","huginn.mqtt/client-id","projectId","registryId","cloudRegion","deviceId","opts","G__40994","p__40995","map__40996","huginn.mqtt/config-chan","cljs.core/any?","cljs.spec.alpha/cat-impl","cljs.core/fn?","huginn.mqtt/client-handlers","success-fn","fail","send","recv","success","taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10","taoensso.timbre/*config*","cljs.core/Delay","err","topic","message","packet","c__23855__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__23856__auto__","switch__23690__auto__","state_41004","state_val_41005","inst_40998","inst_40999","inst_41000","cljs.core/PersistentHashMap","cljs.core.async.impl.ioc-helpers/put!","inst_41002","cljs.core.async.impl.ioc-helpers/return-chan","statearr-41006","state-machine__23691__auto__","ret-value__23692__auto__","result__23693__auto__","cljs.core/keyword-identical?","e41007","js/Object","ex__23694__auto__","statearr-41008","cljs.core.async.impl.ioc-helpers/process-exception","state__23857__auto__","statearr-41009","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","huginn.mqtt/add-handlers","client","handlers","seq__41010","cljs.core/seq","chunk__41011","count__41012","i__41013","vec__41014","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","temp__5457__auto__","cljs.core/chunked-seq?","c__4351__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","vec__41017","cljs.core/first","cljs.core/next","key","hand","huginn.mqtt/build-client","conn-args","huginn.jwt/connection-args","js/shadow.js.shim.module$mqtt.connect","huginn.jwt/round-now","promesa.core/promise?","huginn.mqtt/init-client","promesa.core/promise","resolve","reject","map__41020","time","init","G__41022","p__41023","map__41024","huginn.mqtt/payload-root","userId","p__41026","map__41027","huginn.mqtt/mqtt-topic","msg-type","cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4","G__41029","cljs.core/coll?","huginn.mqtt/prep-temps","data","pr","cores-raw","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","cores","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","index","value","main","max","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","huginn.mqtt/stop","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","p__41030","map__41031","huginn.mqtt/publish-one","payload","qos","p","huginn.mqtt/publisher","client-atom","send-chan","state_41042","state_val_41043","statearr-41044","cljs.core.async.impl.ioc-helpers/take!","inst_41040","inst_41035","inst_41036","cljs.core/deref","inst_41037","statearr-41045","statearr-41046","statearr-41047","e41048","statearr-41049","statearr-41050","p__41051","map__41052","huginn.mqtt/client-refresher","tokenExpMins","delayMs","client-send-chan","client-mixer","cljs.core.async/mix","cljs.core.async/admix","state_41077","state_val_41078","statearr-41079","inst_41055","inst_41056","inst_41057","inst_41075","inst_41059","inst_41060","inst_41061","inst_41062","inst_41063","inst_41064","inst_41065","inst_41066","inst_41067","inst_41068","inst_41069","inst_41070","inst_41071","inst_41072","statearr-41080","statearr-41081","statearr-41082","e41083","statearr-41084","statearr-41085","wait","cljs.core.async/timeout","cljs.core.async/toggle","cljs.core/clj->js","huginn.jwt/create-jwt","huginn.mqtt/tele-chan","temp-chan","out-chan","state_41100","state_val_41101","statearr-41102","inst_41088","inst_41089","p1__41086#","inst_41090","inst_41091","statearr-41118","inst_41098","inst_41093","inst_41095","statearr-41119","statearr-41120","statearr-41121","e41122","statearr-41123","statearr-41124","promesa.core.chain.cljs$core$IFn$_invoke$arity$variadic","js/shadow.js.shim.module$systeminformation.cpuTemperature","mqtt-packets","state_41111","state_val_41112","inst_41103","inst_41104","inst_41105","inst_41107","statearr-41113","inst_41109","statearr-41114","e41115","statearr-41116","statearr-41117","huginn.mqtt/sender","topic-name","t-chan","state_41149","state_val_41150","statearr-41151","inst_41147","inst_41127","inst_41128","inst_41129","statearr-41152","statearr-41153","statearr-41154","inst_41131","inst_41132","inst_41133","statearr-41155","statearr-41156","inst_41136","inst_41138","inst_41139","inst_41140","inst_41141","inst_41142","statearr-41159","inst_41144","statearr-41160","statearr-41161","statearr-41162","e41163","statearr-41164","statearr-41165","teles","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3","cljs.core.map.cljs$core$IFn$_invoke$arity$2","p__41137","map__41157","subfolder","mqtt-packet","my-topic","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","huginn.mqtt/state-send","huginn.mqtt/tele-send","p__41166","map__41167","huginn.mqtt/clean-up","recv-chan","telemetry-chan","state-chan","system","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","c","cljs.core.async/close!","huginn.mqtt/system-function","kill","client-promise","promesa.core/then","cljs.core/reset!","huginn.mqtt/kill-it","system-promise"]]],"~:cache-keys",["~#cmap",[["^1Q","cljs_node_io/file.cljs"],[1537666007418,"^1;","^1:","~$goog.Uri","~$cljs-node-io.streams","~$cljs-node-io.fs","~$cljs-node-io.protocols"],["^1Q","goog/dom/tagname.js"],[1530991559994,"^1;","~$goog.dom.HtmlElement"],["^1Q","goog/async/freelist.js"],[1530991559994,"^1;"],["^1Q","cljs/core/async/impl/ioc_helpers.cljs"],[1534380136417,"^1;","^1:","~$cljs.core.async.impl.protocols"],["^1Q","goog/labs/useragent/platform.js"],[1530991559994,"^1;","~$goog.labs.userAgent.util","~$goog.string"],["~:macro","^1:"],[1534380137000],["^1Q","cljs/core/async.cljs"],[1534380136417,"^1;","^1:","^27","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers"],["^1Q","goog/timer/timer.js"],[1530991559994,"^1;","~$goog.Promise","~$goog.events.EventTarget"],["^1Q","cljs/nodejs.cljs"],[1534380137690,"^1;","^1:"],["^1Q","cljs/spec/gen/alpha.cljs"],[1534380137690,"^1;","^1:","^22"],["^1Q","cljs/tools/reader/impl/utils.cljs"],[1535586405375,"^1;","^1:","^1B","^29"],["^1Q","cljs_node_io/fs.cljs"],[1537666007418,"^1;","^1:","^C","^27"],["^1Q","cljs_node_io/core.cljs"],[1537666007418,"^1;","^1:","^C","^27","~$cljs-node-io.file","^23","^25","^22"],["^1Q","goog/math/math.js"],[1530991559994,"^1;","~$goog.array","~$goog.asserts"],["^1Q","goog/string/stringformat.js"],[1530991559994,"^1;","^29"],["^1Q","goog/events/eventtype.js"],[1530991559994,"^1;","~$goog.userAgent"],["^1Q","goog/labs/useragent/browser.js"],[1530991559994,"^1;","^2C","^28","~$goog.object","^29"],["^1Q","goog/array/array.js"],[1530991559994,"^1;","^2D"],["^1Q","huginn/mqtt.cljs"],[1540148849141,"^1;","^1:","^16","^1B","^1>","^?","^19","^H","^C","^A","^1@","^1="],["^1Q","cljs_node_io/protocols.cljs"],[1537666007418,"^1;","^1:"],["^2:","~$cljs.core.async.macros"],[1534380136000],["^1Q","cljs_node_io/streams.cljs"],[1537666007418,"^1;","^1:","^22","^C","^25"],["^1Q","huginn/config.cljs"],[1535728206166,"^1;","^1:"],["^1Q","goog/useragent/useragent.js"],[1530991559994,"^1;","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^28","~$goog.reflect","^29"],["^1Q","goog/structs/prioritypool.js"],[1530991559994,"^1;","~$goog.structs.Pool","~$goog.structs.PriorityQueue"],["^2:","~$cljs.tools.reader.reader-types"],[1535586405000],["^1Q","goog/async/run.js"],[1530991559994,"^1;","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"],["^1Q","taoensso/encore.cljs"],[1535586406568,"^1;","^1:","^1B","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","~$cljs.test","^2F","^29","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.structs","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"],["^1Q","goog/debug/error.js"],[1530991559994,"^1;"],["^1Q","goog/async/workqueue.js"],[1530991559994,"^1;","^2D","~$goog.async.FreeList"],["^1Q","huginn/jwt.cljs"],[1540148196738,"^1;","^1:","^1B","^16","~$cljs-node-io.core","^1=","^="],["^1Q","promesa/impl/scheduler.cljc"],[1535586406328,"^1;","^1:","~$promesa.protocols"],["~:shadow.build.js-support/require","mqtt"],["^?","shadow.js.shim.module$mqtt.js","^1;"],["^1Q","goog/events/events.js"],[1530991559994,"^1;","^2D","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","~$goog.events.BrowserFeature","~$goog.events.Listenable","~$goog.events.ListenerMap"],["^1Q","goog/promise/resolver.js"],[1530991559994,"^1;"],["^1Q","goog/events/browserfeature.js"],[1530991559994,"^1;","^2E"],["^1Q","cljs/tools/reader/edn.cljs"],[1535586405375,"^1;","^1:","~$cljs.tools.reader.impl.errors","^2N","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^29","^2W"],["^1Q","goog/structs/priorityqueue.js"],[1530991559994,"^1;","~$goog.structs.Heap"],["^1Q","goog/net/xhrio.js"],[1530991559994,"^1;","~$goog.Timer","^2C","^2D","^38","^2A","~$goog.json.hybrid","~$goog.log","^32","^31","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^29","^30","~$goog.structs.Map","~$goog.uri.utils","^2E"],["^1Q","goog/promise/thenable.js"],[1530991559994,"^1;"],["^1Q","promesa/impl.cljc"],[1535586406328,"^1;","^1:","^36","~$org.bluebird"],["^1Q","goog/dom/nodetype.js"],[1530991559994,"^1;"],["^2:","^H"],[1535586406000],["^1Q","cljs/tools/reader/impl/inspect.cljs"],[1535586405375,"^1;","^1:"],["^1Q","cljs/pprint.cljs"],[1534380137690,"^1;","^1:","^1B","^29","^2W"],["^2:","~$cljs.spec.gen.alpha"],[1534380137000],["^1Q","cljs/tools/reader.cljs"],[1535586405375,"^1;","^1:","^2N","^3>","^3?","^3=","^2C","^29","^2W"],["^1Q","goog/net/wrapperxmlhttpfactory.js"],[1530991559994,"^1;","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"],["^1Q","goog/events/eventtarget.js"],[1530991559994,"^1;","~$goog.Disposable","^2D","^2X","~$goog.events.Event","^3;","^3<","^2F"],["^1Q","goog/disposable/disposable.js"],[1530991559994,"^1;","~$goog.disposable.IDisposable"],["^1Q","goog/object/object.js"],[1530991559994,"^1;"],["^1Q","goog/structs/set.js"],[1530991559994,"^1;","^30","~$goog.structs.Collection","^3G"],"~:SHADOW-TIMESTAMP",[1540077702000,1534380137000],["^1Q","goog/math/long.js"],[1530991559994,"^1;","^2D","^2K"],["^1Q","goog/events/listener.js"],[1530991559994,"^1;","~$goog.events.ListenableKey"],["^1Q","cljs/core/async/impl/channels.cljs"],[1534380136417,"^1;","^1:","^27","^2>","^2<"],["^1Q","goog/events/listenermap.js"],[1530991559994,"^1;","^2C","~$goog.events.Listener","^2F"],["^1Q","goog/events/eventid.js"],[1530991559994,"^1;"],["^1Q","taoensso/truss.cljs"],[1535586406478,"^1;","^1:","~$taoensso.truss.impl"],["^1Q","shadow/test/env.cljs"],[1540077702615,"^1;","^1:"],["^1Q","goog/functions/functions.js"],[1530991559994,"^1;"],["^1Q","cljs/core/async/impl/dispatch.cljs"],[1534380136417,"^1;","^1:","^2<","^2P"],["^1Q","taoensso/truss/impl.cljs"],[1535586406478,"^1;","^1:","^2R"],["^1Q","clojure/walk.cljs"],[1534380137690,"^1;","^1:"],["^1Q","cljs/core/async/impl/protocols.cljs"],[1534380136417,"^1;","^1:"],["^1Q","goog/net/eventtype.js"],[1530991559994,"^1;"],["^1Q","goog/structs/map.js"],[1530991559994,"^1;","~$goog.iter.Iterator","~$goog.iter.StopIteration","^2F"],["^1Q","goog/net/xhriopool.js"],[1530991559994,"^1;","^2Y","~$goog.structs.PriorityPool"],["^1Q","goog/structs/queue.js"],[1530991559994,"^1;","^2C"],["^1Q","goog/labs/useragent/engine.js"],[1530991559994,"^1;","^2C","^28","^29"],["^1Q","taoensso/timbre/appenders/core.cljs"],[1535586406375,"^1;","^1:","^1B","~$taoensso.encore"],["^1Q","cljs/reader.cljs"],[1534380137690,"^1;","^1:","^2F","^3@","^2T","^2W"],["^37","bluebird"],["~$shadow.js.shim.module$bluebird","shadow.js.shim.module$bluebird.js","^1;"],["^2:","~$cljs-node-io.macros"],[1537666007000],["^2:","^1@"],[1534380137000],["^1Q","goog/asserts/asserts.js"],[1530991559994,"^1;","~$goog.debug.Error","~$goog.dom.NodeType","^29"],["^1Q","cljs/core/async/impl/buffers.cljs"],[1534380136417,"^1;","^1:","^27"],["^2:","~$cljs.pprint"],[1534380137000],["^1Q","goog/debug/logbuffer.js"],[1530991559994,"^1;","^2D","~$goog.debug.LogRecord"],["^37","jsonwebtoken"],["^=","shadow.js.shim.module$jsonwebtoken.js","^1;"],["^2:","^3X"],[1535586406000],["^1Q","goog/uri/uri.js"],[1530991559994,"^1;","^2C","^2D","^29","^30","^3G","^3H","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1Q","goog/net/errorcode.js"],[1530991559994,"^1;"],["^2:","^2U"],[1534380137000],["^2:","^C"],[1534380136000],["^1Q","goog/disposable/idisposable.js"],[1530991559994,"^1;"],["^1Q","goog/promise/promise.js"],[1530991559994,"^1;","~$goog.Thenable","^2D","^34","~$goog.async.run","^2Q","^3[","~$goog.promise.Resolver"],["^1Q","cljs/core/async/impl/timers.cljs"],[1534380136417,"^1;","^1:","^27","^2;","^2>"],["^1Q","cljs/spec/alpha.cljs"],[1534380137690,"^1;","^1:","^2F","~$clojure.walk","^3J","^1B"],["^1Q","goog/debug/logrecord.js"],[1530991559994,"^1;"],["^1Q","goog/base.js"],[1530991559994],["^1Q","promesa/core.cljc"],[1535586406328,"^1;","^1:","^36","~$promesa.impl","~$promesa.impl.scheduler"],["^1Q","goog/json/hybrid.js"],[1530991559994,"^1;","^2D","~$goog.json"],["^1Q","goog/structs/structs.js"],[1530991559994,"^1;","^2C","^2F"],["^1Q","cljs/tools/reader/impl/errors.cljs"],[1535586405375,"^1;","^1:","^2N","^1B","~$cljs.tools.reader.impl.inspect"],["^1Q","org/bluebird.cljs"],[1535669979047,"^1;","^1:","^3Y"],["^1Q","clojure/string.cljs"],[1534380137690,"^1;","^1:","^29","^2W"],["^1Q","goog/structs/pool.js"],[1530991559994,"^1;","^3M","~$goog.structs.Queue","~$goog.structs.Set"],["^1Q","goog/net/httpstatus.js"],[1530991559994,"^1;"],["^1Q","goog/structs/heap.js"],[1530991559994,"^1;","^2C","^2F","~$goog.structs.Node"],["^1Q","goog/debug/entrypointregistry.js"],[1530991559994,"^1;","^2D"],["^1Q","goog/string/string.js"],[1530991559994,"^1;"],["^1Q","goog/reflect/reflect.js"],[1530991559994,"^1;"],["^1Q","goog/labs/useragent/util.js"],[1530991559994,"^1;","^29"],["^2:","~$clojure.template"],[1534380136000],["^2:","~$cljs.core.async.impl.ioc-macros"],[1534380136000],["^1Q","goog/debug/debug.js"],[1530991559994,"^1;","^2C","~$goog.debug.errorcontext","^2E"],["^1Q","goog/string/stringbuffer.js"],[1530991559994,"^1;"],["^1Q","goog/debug/errorcontext.js"],[1530991559994,"^1;"],["^1Q","cljs/tools/reader/reader_types.cljs"],[1535586405375,"^1;","^1:","^3>","^29","^2W"],["^1Q","promesa/protocols.cljc"],[1535586406328,"^1;","^1:"],["^1Q","goog/iter/iter.js"],[1530991559994,"^1;","^2C","^2D","~$goog.functions","~$goog.math"],["^1Q","goog/async/nexttick.js"],[1530991559994,"^1;","^38","~$goog.dom.TagName","^4C","^2H","^2I"],["^1Q","goog/debug/logger.js"],[1530991559994,"^1;","^2C","^2D","~$goog.debug","~$goog.debug.LogBuffer","^42"],["^1Q","goog/events/event.js"],[1530991559994,"^1;","^3M","~$goog.events.EventId"],["^1Q","cljs/tools/reader/impl/commons.cljs"],[1535586405375,"^1;","^1:","^3=","^2N","^3>"],["^37","systeminformation"],["^A","shadow.js.shim.module$systeminformation.js","^1;"],["^1Q","goog/dom/htmlelement.js"],[1530991559994,"^1;"],["^1Q","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^29","^2F","^2C","^22","^2W"],["^1Q","goog/log/log.js"],[1530991559994,"^1;","^4F","~$goog.debug.LogManager","^42","~$goog.debug.Logger"],["^1Q","goog/structs/collection.js"],[1530991559994,"^1;"],["^1Q","goog/events/browserevent.js"],[1530991559994,"^1;","^3:","^3N","~$goog.events.EventType","^2K","^2E"],["^1Q","goog/math/integer.js"],[1530991559994,"^1;"],["^1Q","goog/structs/node.js"],[1530991559994,"^1;"],["^2:","^3T"],[1535586406000],["^1Q","clojure/set.cljs"],[1534380137690,"^1;","^1:"],["^1Q","goog/uri/utils.js"],[1530991559994,"^1;","^2C","^2D","^29"],["^1Q","taoensso/timbre.cljs"],[1535586406375,"^1;","^1:","^1B","^3X","~$taoensso.timbre.appenders.core"],["^1Q","goog/json/json.js"],[1530991559994,"^1;"],["^1Q","goog/events/listenable.js"],[1530991559994,"^1;","^4H"],["^1Q","goog/net/xmlhttpfactory.js"],[1530991559994,"^1;","^3K"],["^1Q","goog/net/xmlhttp.js"],[1530991559994,"^1;","^2D","~$goog.net.WrapperXmlHttpFactory","^3L"],["^1Q","cljs/test.cljs"],[1534380137690,"~$shadow.test.env","^1;","^1:","^1B","^41"],["^1Q","goog/net/xhrlike.js"],[1530991559994,"^1;"],["^2:","^2S"],[1534380137000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","huginn/mqtt.cljs","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H","^I","^H","^J","^H","^K","^H","^L","^H","^M","^H","^N","^H","^O","^H","^P","^H","^Q","^H","^R","^H","^S","^H","^T","^H","^U","^H","^V","^H","^W","^H","^X","^H","^Y","^H"],"^Z",["^[",[]],"~:shadow/js-access-properties",["^[",["cpuTemperature","connect"]],"^10","^11","^14",null,"^15",["^ ","^?","^?","~$p","^16","^16","^16","^17","^H","~$a","^C","^18","^A","^19","^19","^1:","^1:","^1;","^1;","^C","^C","^@","^A","^1<","^19","^1=","^1=","^1>","^1>","^1?","^1=","~$s","^1@","^>","^?","^1A","^1>","^H","^H","^A","^A","^1B","^1B","^1C","^1B","^1@","^1@"],"^1D",["^[",["^1E"]],"~:shadow/js-access-global",["^[",["Object"]],"^1F",null,"~:defs",["^ ","~$tele-send",["^ ","^10","~$huginn.mqtt/tele-send","^6","huginn/mqtt.cljs","^7",279,"^8",1,"^9",279,"^:",15,"^5",["^ ","^6","huginn/mqtt.cljs","^7",279,"^8",6,"^9",279,"^:",15],"~:tag","~$any"],"~$publish-async",["^ ","^10","~$huginn.mqtt/publish-async","^6","huginn/mqtt.cljs","^7",115,"^8",1,"^9",115,"^:",23,"~:declared",true,"^5",["^ ","^6","huginn/mqtt.cljs","^7",115,"^8",10,"^9",115,"^:",23,"^4[",true]],"~$build-client",["^ ","~:protocol-inline",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",102,"^8",7,"^9",102,"^:",19,"~:arglists",["^1I",["~$quote",["^1I",[["~$opts"]]]]]],"^10","~$huginn.mqtt/build-client","~:variadic",false,"^6","huginn/mqtt.cljs","^:",19,"~:method-params",["^1I",[["^54"]]],"~:protocol-impl",null,"~:arglists-meta",["^1I",[null,null]],"^8",1,"^7",102,"^9",102,"~:max-fixed-arity",1,"~:fn-var",true,"^52",["^1I",["^53",["^1I",[["^54"]]]]]],"~$client-id",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",48,"^8",7,"^9",48,"^:",16,"^52",["^1I",["^53",["^1I",[[["^ ","~:keys",["~$projectId","~$registryId","~$cloudRegion","~$deviceId"],"^1K","^54"]]]]]],"~:doc","Builds a client id used to identify the device this message is\n  comming from"],"^10","~$huginn.mqtt/client-id","^56",false,"^6","huginn/mqtt.cljs","^:",16,"^57",["^1I",[["~$p__40991"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",48,"^9",48,"^5:",1,"^5;",true,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5>","^5?","^5@","^5A"],"^1K","^54"]]]]]],"^5B","Builds a client id used to identify the device this message is\n  comming from"],"~$prep-temps",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",155,"^8",7,"^9",155,"^:",17,"^52",["^1I",["^53",["^1I",[["^54","~$data"]]]]],"^5B","pulls the data out of the systeminformation library and wrapping them up\n  to be sent into mqtt"],"^10","~$huginn.mqtt/prep-temps","^56",false,"^6","huginn/mqtt.cljs","^:",17,"^57",["^1I",[["^54","^5F"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",155,"^9",155,"^5:",2,"^5;",true,"^52",["^1I",["^53",["^1I",[["^54","^5F"]]]]],"^5B","pulls the data out of the systeminformation library and wrapping them up\n  to be sent into mqtt"],"~$publisher",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",187,"^8",7,"^9",187,"^:",16,"^52",["^1I",["^53",["^1I",[["~$client-atom","~$send-chan"]]]]],"^5B","main loop that pushes packets added to the send-chan to google iot core"],"^10","~$huginn.mqtt/publisher","^56",false,"^6","huginn/mqtt.cljs","^:",16,"^57",["^1I",[["^5I","^5J"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",187,"^9",187,"^5:",2,"^5;",true,"^52",["^1I",["^53",["^1I",[["^5I","^5J"]]]]],"^5B","main loop that pushes packets added to the send-chan to google iot core"],"~$init-client",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",123,"^8",7,"^9",123,"^:",18,"^52",["^1I",["^53",["^1I",[["^54","~$send","~$recv"]]]]]],"^10","~$huginn.mqtt/init-client","^56",false,"^6","huginn/mqtt.cljs","^:",18,"^57",["^1I",[["^54","^5M","^5N"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",123,"^9",123,"^5:",3,"^5;",true,"^52",["^1I",["^53",["^1I",[["^54","^5M","^5N"]]]]]],"~$payload-root",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",135,"^8",7,"^9",135,"^:",19,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5?","~$userId","^5A"],"^1K","^54"]]]]]],"^5B","builds the prefix of the actual values being sent\n  (str (payload-root config) sensor-name /  sensor-value)"],"^10","~$huginn.mqtt/payload-root","^56",false,"^6","huginn/mqtt.cljs","^:",19,"^57",["^1I",[["~$p__41023"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",135,"^9",135,"^5:",1,"^5;",true,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5?","^5Q","^5A"],"^1K","^54"]]]]]],"^5B","builds the prefix of the actual values being sent\n  (str (payload-root config) sensor-name /  sensor-value)"],"~$config-chan",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",60,"^8",7,"^9",60,"^:",18,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5A"],"^1K","^54"]]]]]],"^5B","google give each device two channeles, a state channel (the config channel)\n  and a telemetry channel (the one that we push all our data over). The name of\n  these channels are determined by google iot core."],"^10","~$huginn.mqtt/config-chan","^56",false,"^6","huginn/mqtt.cljs","^:",18,"^57",["^1I",[["~$p__40995"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",60,"^9",60,"^5:",1,"^5;",true,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5A"],"^1K","^54"]]]]]],"^5B","google give each device two channeles, a state channel (the config channel)\n  and a telemetry channel (the one that we push all our data over). The name of\n  these channels are determined by google iot core."],"~$mqtt-topic",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",146,"^8",7,"^9",146,"^:",17,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5A"],"^1K","^54"],"~$msg-type"]]]]],"^5B","msg-type can be 'state' for state updates\n   or 'events' to publish telemetry"],"^10","~$huginn.mqtt/mqtt-topic","^56",false,"^6","huginn/mqtt.cljs","^:",17,"^57",["^1I",[["~$p__41026","^5X"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",146,"^9",146,"^5:",2,"^5;",true,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5A"],"^1K","^54"],"^5X"]]]]],"^5B","msg-type can be 'state' for state updates\n   or 'events' to publish telemetry"],"~$tele-chan",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",224,"^8",7,"^9",224,"^:",16,"^52",["^1I",["^53",["^1I",[["^54"]]]]],"^5B","takes the client opts and builds a channel with system telementry\n  values on it (cpu tempratures specifically)"],"^10","~$huginn.mqtt/tele-chan","^56",false,"^6","huginn/mqtt.cljs","^:",16,"^57",["^1I",[["^54"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",224,"^9",224,"^5:",1,"^5;",true,"^52",["^1I",["^53",["^1I",[["^54"]]]]],"^5B","takes the client opts and builds a channel with system telementry\n  values on it (cpu tempratures specifically)"],"~$client-handlers",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",73,"^8",7,"^9",73,"^:",22,"^52",["^1I",["^53",["^1I",[["~$success-fn","~$fail","^5M","^5N"]]]]],"^5B","builds a map of handels to attach to the mqtt object"],"^10","~$huginn.mqtt/client-handlers","^56",false,"^6","huginn/mqtt.cljs","^:",22,"^57",["^1I",[["^62","^63","^5M","^5N"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",73,"^9",73,"^5:",4,"^5;",true,"^52",["^1I",["^53",["^1I",[["^62","^63","^5M","^5N"]]]]],"^5B","builds a map of handels to attach to the mqtt object"],"~$kill-it",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",332,"^8",7,"^9",332,"^:",14,"^52",["^1I",["^53",["^1I",[["~$system-promise"]]]]],"^5B","Feed the system promise to this and it will kill it"],"^10","~$huginn.mqtt/kill-it","^56",false,"^6","huginn/mqtt.cljs","^:",14,"^57",["^1I",[["^66"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",332,"^9",332,"^5:",1,"^5;",true,"^52",["^1I",["^53",["^1I",[["^66"]]]]],"^5B","Feed the system promise to this and it will kill it"],"~$state-send",["^ ","^10","~$huginn.mqtt/state-send","^6","huginn/mqtt.cljs","^7",276,"^8",1,"^9",276,"^:",16,"^5",["^ ","^6","huginn/mqtt.cljs","^7",276,"^8",6,"^9",276,"^:",16],"^4W","^4X"],"~$publish-one",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",181,"^8",7,"^9",181,"^:",18,"^52",["^1I",["^53",["^1I",[["~$client",["^ ","^5=",["~$topic","~$payload","~$qos"],"^1K","~$p"]]]]]],"^5B","Publises one mqtt packet to the client"],"^10","~$huginn.mqtt/publish-one","^56",false,"^6","huginn/mqtt.cljs","^:",18,"^57",["^1I",[["^6;","~$p__41030"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",181,"^9",181,"^5:",2,"^5;",true,"^52",["^1I",["^53",["^1I",[["^6;",["^ ","^5=",["^6<","^6=","^6>"],"^1K","~$p"]]]]]],"^5B","Publises one mqtt packet to the client"],"~$system-function",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",290,"^8",7,"^9",290,"^:",22,"^52",["^1I",["^53",["^1I",[["^54"]]]]],"^5B","the heart of the system lies here.\n  This function takes options (config/default-options works well)\n  It returns a map\n  This map has\n  :send-chan A channel you can use to directly send messages of mqtt, must be of the\n  form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n  :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n  :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n  (google publishes these values to a differnt pubsub channel then device telemetry)\n  :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n  are sent in the same batch, the same is true for stat-chan.\n  :client-atom, contains the current version of the mqtt client. This is an atom so\n  that the client-refersher can refresh the authentication token and swap it.\n  this pattern also ensures only one client\n\n  payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you"],"^10","~$huginn.mqtt/system-function","^56",false,"^6","huginn/mqtt.cljs","^:",22,"^57",["^1I",[["^54"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",290,"^9",290,"^5:",1,"^5;",true,"^52",["^1I",["^53",["^1I",[["^54"]]]]],"^5B","the heart of the system lies here.\n  This function takes options (config/default-options works well)\n  It returns a map\n  This map has\n  :send-chan A channel you can use to directly send messages of mqtt, must be of the\n  form {:payload string? :qos #js {:qos #{0 1 2}} :topic (topics can be built with mqtt-topic)}\n  :recv-chan has items in the form of {:topic string? :message string? :packet buffer?}\n  :state-chan, send things of the form (coll-of {:payload string?}), onto the state channel\n  (google publishes these values to a differnt pubsub channel then device telemetry)\n  :telemetry-chan, sends (coll-of {:payload string?}), all the events in the collections\n  are sent in the same batch, the same is true for stat-chan.\n  :client-atom, contains the current version of the mqtt client. This is an atom so\n  that the client-refersher can refresh the authentication token and swap it.\n  this pattern also ensures only one client\n\n  payloads must be prefixed with a string describing where the data came (payload-root opts) will generate this for you"],"~$stop",["^ ","^10","~$huginn.mqtt/stop","^6","huginn/mqtt.cljs","^7",177,"^8",1,"^9",177,"^:",10,"^5",["^ ","^6","huginn/mqtt.cljs","^7",177,"^8",6,"^9",177,"^:",10],"^4W","^4X"],"~$sender",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",249,"^8",7,"^9",249,"^:",13,"^52",["^1I",["^53",["^1I",[["~$topic-name","^54","^5M","~$t-chan"]]]]],"^5B","takes information for the tele-chan in the form of collections of\n  mqtt-packets and assignes a default topic if a subfolder is set,\n  adds a default qos. Then takes the resulting structures and puts\n  them on to the send channel. waits for :delayMs between collections "],"^10","~$huginn.mqtt/sender","^56",false,"^6","huginn/mqtt.cljs","^:",13,"^57",["^1I",[["^6F","^54","^5M","^6G"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",249,"^9",249,"^5:",4,"^5;",true,"^52",["^1I",["^53",["^1I",[["^6F","^54","^5M","^6G"]]]]],"^5B","takes information for the tele-chan in the form of collections of\n  mqtt-packets and assignes a default topic if a subfolder is set,\n  adds a default qos. Then takes the resulting structures and puts\n  them on to the send channel. waits for :delayMs between collections "],"~$client-refresher",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",195,"^8",7,"^9",195,"^:",23,"^52",["^1I",["^53",["^1I",[["^5I",["^ ","^5=",["~$tokenExpMins","~$delayMs"],"^1K","^54"],"^5M","^5N"]]]]],"^5B","loops and refreshs the client atom every token experation.\n  Mqtt requires that you refresh your token frequently (less then 20 mins)"],"^10","~$huginn.mqtt/client-refresher","^56",false,"^6","huginn/mqtt.cljs","^:",23,"^57",["^1I",[["^5I","~$p__41051","^5M","^5N"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",195,"^9",195,"^5:",4,"^5;",true,"^52",["^1I",["^53",["^1I",[["^5I",["^ ","^5=",["^6J","^6K"],"^1K","^54"],"^5M","^5N"]]]]],"^5B","loops and refreshs the client atom every token experation.\n  Mqtt requires that you refresh your token frequently (less then 20 mins)"],"~$add-handlers",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",93,"^8",7,"^9",93,"^:",19,"^52",["^1I",["^53",["^1I",[["^6;","~$handlers"]]]]],"^5B","takes a map of handlers and attaches them to the mqtt object"],"^10","~$huginn.mqtt/add-handlers","^56",false,"^6","huginn/mqtt.cljs","^:",19,"^57",["^1I",[["^6;","^6O"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",93,"^9",93,"^5:",2,"^5;",true,"^52",["^1I",["^53",["^1I",[["^6;","^6O"]]]]],"^5B","takes a map of handlers and attaches them to the mqtt object"],"~$clean-up",["^ ","^51",null,"^5",["^ ","^6","huginn/mqtt.cljs","^7",282,"^8",7,"^9",282,"^:",15,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5J","~$recv-chan","~$telemetry-chan","~$state-chan","^5I"],"^1K","~$system"]]]]]]],"^10","~$huginn.mqtt/clean-up","^56",false,"^6","huginn/mqtt.cljs","^:",15,"^57",["^1I",[["~$p__41166"]]],"^58",null,"^59",["^1I",[null,null]],"^8",1,"^7",282,"^9",282,"^5:",1,"^5;",true,"^52",["^1I",["^53",["^1I",[[["^ ","^5=",["^5J","^6R","^6S","^6T","^5I"],"^1K","^6U"]]]]]]]],"^1G",["^ ","^H","^H","^17","^H","^1:","^1:","~$a","^C","^C","^C","~$s","^1@","^1@","^1@"],"~:cljs.analyzer/constants",["^ ","^1D",["^[",["~:client-fail","~:args","~$p1__40989#","~:req-un","~:opt-un","~$p1__40988#","~:huginn.mqtt/payload","~:qos","~$cljs.core/<","~:recv-chan","~:ret","~:gfn","~:cloudRegion","~:send-chan","~:recv","~:pred-exprs","~:keys-pred","~:huginn.mqtt/client-config","^5O","~:payload","~:opt-keys","~$cljs.core/partial","~:huginn.mqtt/cloudRegion","~:else","~$cljs.core/count","~:state-chan","~$cljs.spec.alpha/and","~$cljs.spec.alpha/coll-of","~$cljs.spec.alpha/cat","~:cljs.spec.alpha/kind-form","~:subfolder","~:iat-time","^5C","~:delayMs","~:deviceId","~:telemetry-chan","~$cljs.core/string?","~:t-chan","~:req-specs","~:time","~:huginn.mqtt/topic-type","~:registryId","~:client","~$cljs.spec.alpha/fspec","~:recur","~:debug","~:topic","~:huginn.mqtt/ts","~$cljs.core/contains?","^55","~$cljs.core/map?","~:cljs.spec.alpha/cpred","~$%","~$cljs.core/float?","~:tokenExpMins","~$cljs.core/fn?","~:huginn.mqtt/chan","~:topic-name","~:ts","~$cljs.spec.alpha/keys","~$cljs.core.async/chan","~:huginn.mqtt/projectId","^6H","~:req","~:client-atom","~:msg-type","~:fail","~:huginn.mqtt/mqtt-packet","~$fn*","^5U","^5G","^5Y","~:opts","~:req-keys","~$cljs.core/fn","~:info","~:send","~:opt-specs","~:huginn.mqtt/registryId","~:userId","^64","~:pred-forms","~:pause","~:error","~:projectId","~:huginn.mqtt/deviceId","~$promesa.core/promise?","~:auto","~:huginn.mqtt/subfolder","~:p","~:cljs.spec.alpha/conform-all","^6?","~:success-fn","~$cljs.core/any?","^60","~:message","~$cljs.core/instance?","~:packet","~:cljs.spec.alpha/describe","~:opt","~:data"]],"~:order",["^8:","^7O","^8G","^7B","^8M","^85","^7A","^8U","^89","^7S","^7>","^88","^70","^71","^78","^7<","^7=","^7@","^7Q","^8;","^8B","^8F","^8I","^8X","^8L","^7T","^79","^7M","^8C","~$%","^80","^7[","^73","^7F","^8@","^72","^75","^7D","^8P","^6[","^7Z","^82","^8?","^7?","^7J","^87","^5C","^7V","^6Z","^77","^5U","^64","^7H","^8R","^84","^8>","^8E","^7;","^8S","^7X","~:p","^8O","^8K","^7Y","^8T","^8V","^7W","^7C","^55","^7U","^7K","^5O","^8A","^8N","^7R","^6Y","^8H","^5Y","^8=","^5G","^8Y","^7G","^7I","^81","^8Q","^8W","^6?","^74","^83","^7L","^8D","^8J","^60","^6H","^86","^7P","^7:","^76","^7N","^7E","^8<"]],"^1M",["^ ","^1E",["^[",[]]],"^1N",["^ "],"^1O",["^1;","^1:","^16","^1B","^1>","^?","^19","^H","^C","^A","^1@","^1="]],"^13","^11","~:ns-specs",["^ ","^73",["^1I",["^7F","^7O",["^1I",["^8@",["^72"],["^1I",["^75",["^1I",["^7D","^72"]],200000]]]]]],"^7>",["^1I",["^88","^70",["^8:","^8G","^7B","^8M"]]],"^5O",["^1I",["^7V","^6Z",["^1I",["^7H","^8A","^7>","^8E","^85","^7;","^85"]],"^77","^8N"]],"^7B","^7O","^5C",["^1I",["^7V","^6Z","^7>","^77","^7O"]],"^7S",["^[",["events","state"]],"^7Z","^82","^55",["^1I",["^7V","^6Z","^7>"]],"^85",["^1I",["^7A","^8U",["^1I",["^89"]]]],"^8:","^7O","^6H",["^1I",["^7V","^6Z",["^1I",["^7H","^86","^7S","^8A","^7>","^8E","^85","^7P","^85"]]]],"^8?",["^1I",["^88","^70",["^73","^8P","^7Z"]]],"^5U",["^1I",["^7V","^6Z",["^1I",["^88","^8;",["^8M"]]],"^77","^7O"]],"^5G",["^1I",["^7V","^6Z",["^1I",["^7H","^8A","^7>","^8Y","^8S"]],"^77",["^1I",["^7G","^8?"]]]],"^5Y",["^1I",["^7V","^6Z",["^1I",["^7H","^8A","^7>","^8=","^7S"]],"^77","^7O"]],"^8G","^7O","^64",["^1I",["^7V","^6Z",["^1I",["^7H","^8R","^84","^8>","^84","^8E","^85","^7;","^85"]]]],"^8M","^7O","^8P",["^1I",["^7F","^7O",["^1I",["^8@",["^6["],["^1I",["^75",["^1I",["^7D","^6["]],200]]]]]],"^6?",["^1I",["^7V","^6Z",["^1I",["^7H","^7U","^8S","^8V","^8?"]]]],"^60",["^1I",["^7V","^6Z","^7>","^77","^85"]]],"~:ns-speced-vars",["^5O","^5C","^55","^6H","^5U","^5G","^5Y","^64","^6?","^60"],"~:compiler-options",["^21",[["^91","~:static-fns"],true,["^91","~:elide-asserts"],false,["^91","~:optimize-constants"],null,["^91","~:external-config"],null,["^91","~:tooling-config"],null,["^91","~:emit-constants"],null,["^91","~:infer-externs"],true,["^91","^1V"],null,["~:js-options","~:js-provider"],"^1E",["~:mode"],"~:dev",["^91","~:fn-invoke-direct"],null,["^91","~:source-map"],"/dev/null"]]]