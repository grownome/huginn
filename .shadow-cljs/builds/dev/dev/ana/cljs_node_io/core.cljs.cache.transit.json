["^ ","~:output",["^ ","~:js","goog.provide('cljs_node_io.core');\ngoog.require('cljs.core');\ngoog.require('cljs.core.async');\ngoog.require('cljs.core.async.impl.protocols');\ngoog.require('cljs_node_io.file');\ngoog.require('cljs_node_io.streams');\ngoog.require('cljs_node_io.protocols');\ngoog.require('goog.Uri');\ncljs_node_io.core.path = require(\"path\");\nBuffer.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;\n\nBuffer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,that){\nvar this$__$1 = this;\ntry{return this$__$1.equals(that);\n}catch (e7068){if((e7068 instanceof Error)){\nvar e = e7068;\nreturn false;\n} else {\nthrow e7068;\n\n}\n}});\n/**\n * This is needed to mock the java.io.File constructor.\n * The java File constructor is polymorphic and accepts one or two args:\n * (Uri), (pathstring), (parentstring, childstring), (File, childstring)\n * @return {!string}\n */\ncljs_node_io.core.filepath = (function cljs_node_io$core$filepath(var_args){\nvar G__7079 = arguments.length;\nswitch (G__7079) {\ncase 1:\nreturn cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$1 = (function (a){\nreturn cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$2(a,null);\n});\n\ncljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$2 = (function (a,b){\nvar pred__7099 = cljs.core._EQ_;\nvar expr__7100 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.type(a),cljs.core.type(b)], null);\nif(cljs.core.truth_((function (){var G__7102 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [goog.Uri,null], null);\nvar G__7103 = expr__7100;\nreturn (pred__7099.cljs$core$IFn$_invoke$arity$2 ? pred__7099.cljs$core$IFn$_invoke$arity$2(G__7102,G__7103) : pred__7099.call(null,G__7102,G__7103));\n})())){\nreturn a.getPath();\n} else {\nif(cljs.core.truth_((function (){var G__7104 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [String,null], null);\nvar G__7105 = expr__7100;\nreturn (pred__7099.cljs$core$IFn$_invoke$arity$2 ? pred__7099.cljs$core$IFn$_invoke$arity$2(G__7104,G__7105) : pred__7099.call(null,G__7104,G__7105));\n})())){\nreturn a;\n} else {\nif(cljs.core.truth_((function (){var G__7106 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [String,String], null);\nvar G__7107 = expr__7100;\nreturn (pred__7099.cljs$core$IFn$_invoke$arity$2 ? pred__7099.cljs$core$IFn$_invoke$arity$2(G__7106,G__7107) : pred__7099.call(null,G__7106,G__7107));\n})())){\nreturn (cljs_node_io.core.path.join.cljs$core$IFn$_invoke$arity$2 ? cljs_node_io.core.path.join.cljs$core$IFn$_invoke$arity$2(a,b) : cljs_node_io.core.path.join.call(null,a,b));\n} else {\nif(cljs.core.truth_((function (){var G__7108 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs_node_io.file.File,String], null);\nvar G__7109 = expr__7100;\nreturn (pred__7099.cljs$core$IFn$_invoke$arity$2 ? pred__7099.cljs$core$IFn$_invoke$arity$2(G__7108,G__7109) : pred__7099.call(null,G__7108,G__7109));\n})())){\nvar G__7111 = a.getPath();\nvar G__7112 = b;\nreturn (cljs_node_io.core.path.join.cljs$core$IFn$_invoke$arity$2 ? cljs_node_io.core.path.join.cljs$core$IFn$_invoke$arity$2(G__7111,G__7112) : cljs_node_io.core.path.join.call(null,G__7111,G__7112));\n} else {\nif(cljs.core.truth_((function (){var G__7113 = new cljs.core.Keyword(null,\"else\",\"else\",-1508377146);\nvar G__7114 = expr__7100;\nreturn (pred__7099.cljs$core$IFn$_invoke$arity$2 ? pred__7099.cljs$core$IFn$_invoke$arity$2(G__7113,G__7114) : pred__7099.call(null,G__7113,G__7114));\n})())){\nthrow (new TypeError([\"Unrecognized path configuration passed to File constructor.\",\"\\nYou passed \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a], 0))),\" and \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b], 0))),\"\\nYou must pass a [string], [uri], [string string], or [file string].\"].join('')));\n} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__7100)].join('')));\n}\n}\n}\n}\n}\n});\n\ncljs_node_io.core.filepath.cljs$lang$maxFixedArity = 2;\n\ngoog.object.set(cljs_node_io.protocols.Coercions,\"null\",true);\n\nvar G__7117_7507 = cljs_node_io.protocols.as_file;\nvar G__7118_7508 = \"null\";\nvar G__7119_7509 = ((function (G__7117_7507,G__7118_7508){\nreturn (function (_){\nreturn null;\n});})(G__7117_7507,G__7118_7508))\n;\ngoog.object.set(G__7117_7507,G__7118_7508,G__7119_7509);\n\nvar G__7120_7510 = cljs_node_io.protocols.as_url;\nvar G__7121_7511 = \"null\";\nvar G__7122_7512 = ((function (G__7120_7510,G__7121_7511){\nreturn (function (_){\nreturn null;\n});})(G__7120_7510,G__7121_7511))\n;\ngoog.object.set(G__7120_7510,G__7121_7511,G__7122_7512);\n\ngoog.object.set(cljs_node_io.protocols.Coercions,\"string\",true);\n\nvar G__7136_7513 = cljs_node_io.protocols.as_file;\nvar G__7137_7514 = \"string\";\nvar G__7138_7515 = ((function (G__7136_7513,G__7137_7514){\nreturn (function (s){\nreturn (new cljs_node_io.file.File(cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$1(s)));\n});})(G__7136_7513,G__7137_7514))\n;\ngoog.object.set(G__7136_7513,G__7137_7514,G__7138_7515);\n\nvar G__7139_7516 = cljs_node_io.protocols.as_url;\nvar G__7140_7517 = \"string\";\nvar G__7141_7518 = ((function (G__7139_7516,G__7140_7517){\nreturn (function (s){\nreturn (new goog.Uri(s)).getPath();\n});})(G__7139_7516,G__7140_7517))\n;\ngoog.object.set(G__7139_7516,G__7140_7517,G__7141_7518);\n\ngoog.Uri.prototype.cljs_node_io$protocols$Coercions$ = cljs.core.PROTOCOL_SENTINEL;\n\ngoog.Uri.prototype.cljs_node_io$protocols$Coercions$as_url$arity$1 = (function (u){\nvar u__$1 = this;\nreturn u__$1.getPath();\n});\n\ngoog.Uri.prototype.cljs_node_io$protocols$Coercions$as_file$arity$1 = (function (u){\nvar u__$1 = this;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"file\",u__$1.getScheme())){\nreturn cljs_node_io.protocols.as_file(u__$1.getPath());\n} else {\nthrow (new Error([\"IllegalArgumentException : Uri's must have file protocol: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(u__$1)].join('')));\n}\n});\ngoog.Uri.prototype.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;\n\ngoog.Uri.prototype.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = (function (x,opts){\nvar x__$1 = this;\nreturn cljs_node_io.protocols.make_reader(cljs_node_io.protocols.make_input_stream(x__$1,opts),opts);\n});\n\ngoog.Uri.prototype.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = (function (x,opts){\nvar x__$1 = this;\nreturn cljs_node_io.protocols.make_writer(cljs_node_io.protocols.make_output_stream(x__$1,opts),opts);\n});\n\ngoog.Uri.prototype.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = (function (x,opts){\nvar x__$1 = this;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"file\",x__$1.getScheme())){\nreturn cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2(cljs_node_io.protocols.as_file(x__$1),opts);\n} else {\nthrow (new Error([\"IllegalArgumentException: Can not read from non-file URL <\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\">\"].join('')));\n}\n});\n\ngoog.Uri.prototype.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = (function (x,opts){\nvar x__$1 = this;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"file\",x__$1.getScheme())){\nreturn cljs_node_io.protocols.make_output_stream(cljs_node_io.protocols.as_file(x__$1),opts);\n} else {\nthrow (new Error([\"IllegalArgumentException: Can not write to non-file URL <\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\">\"].join('')));\n}\n});\n\ngoog.object.set(cljs_node_io.protocols.IOFactory,\"string\",true);\n\nvar G__7150_7524 = cljs_node_io.protocols.make_reader;\nvar G__7151_7525 = \"string\";\nvar G__7152_7526 = ((function (G__7150_7524,G__7151_7525){\nreturn (function (x,opts){\nreturn cljs_node_io.protocols.make_reader(cljs_node_io.protocols.as_file(x),opts);\n});})(G__7150_7524,G__7151_7525))\n;\ngoog.object.set(G__7150_7524,G__7151_7525,G__7152_7526);\n\nvar G__7153_7527 = cljs_node_io.protocols.make_writer;\nvar G__7154_7528 = \"string\";\nvar G__7155_7529 = ((function (G__7153_7527,G__7154_7528){\nreturn (function (x,opts){\nreturn cljs_node_io.protocols.make_writer(cljs_node_io.protocols.as_file(x),opts);\n});})(G__7153_7527,G__7154_7528))\n;\ngoog.object.set(G__7153_7527,G__7154_7528,G__7155_7529);\n\nvar G__7156_7533 = cljs_node_io.protocols.make_input_stream;\nvar G__7157_7534 = \"string\";\nvar G__7158_7535 = ((function (G__7156_7533,G__7157_7534){\nreturn (function (x,opts){\ntry{return cljs_node_io.protocols.make_input_stream((new goog.Uri(x)),opts);\n}catch (e7159){if((e7159 instanceof Error)){\nvar e = e7159;\nreturn (new cljs_node_io.file.File(x)).cljs_node_io$protocols$IOFactory$make_input_stream$arity$2(null,opts);\n} else {\nthrow e7159;\n\n}\n}});})(G__7156_7533,G__7157_7534))\n;\ngoog.object.set(G__7156_7533,G__7157_7534,G__7158_7535);\n\nvar G__7160_7537 = cljs_node_io.protocols.make_output_stream;\nvar G__7161_7538 = \"string\";\nvar G__7162_7539 = ((function (G__7160_7537,G__7161_7538){\nreturn (function (x,opts){\ntry{return cljs_node_io.protocols.make_output_stream((new goog.Uri(x)),opts);\n}catch (e7163){if((e7163 instanceof Error)){\nvar err = e7163;\nreturn (new cljs_node_io.file.File(x)).cljs_node_io$protocols$IOFactory$make_output_stream$arity$2(null,opts);\n} else {\nthrow e7163;\n\n}\n}});})(G__7160_7537,G__7161_7538))\n;\ngoog.object.set(G__7160_7537,G__7161_7538,G__7162_7539);\n\nBuffer.prototype.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;\n\nBuffer.prototype.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = (function (b,opts){\nvar b__$1 = this;\nreturn cljs_node_io.protocols.make_reader(cljs_node_io.protocols.make_input_stream(b__$1,opts),opts);\n});\n\nBuffer.prototype.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = (function (b,opts){\nvar b__$1 = this;\nreturn cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$2(b__$1,opts);\n});\n\nBuffer.prototype.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = (function (x,opts){\nvar x__$1 = this;\nreturn cljs_node_io.protocols.make_writer(cljs_node_io.protocols.make_output_stream(x__$1,opts),opts);\n});\n\nBuffer.prototype.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = (function (x,opts){\nvar x__$1 = this;\nthrow (new Error([\"IllegalArgumentException : Cannot open <\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x__$1], 0))),\"> as an OutputStream.\"].join('')));\n});\n/**\n * a relative path, else IllegalArgumentException.\n * @param {(string|IFile|Uri)} x\n * @return {!string}\n */\ncljs_node_io.core.as_relative_path = (function cljs_node_io$core$as_relative_path(x){\nvar f = cljs_node_io.protocols.as_file(x);\nif(cljs.core.truth_(f.isAbsolute())){\nthrow (new Error([\"IllegalArgumentException: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(f),\" is not a relative path\"].join('')));\n} else {\nreturn f.getPath();\n}\n});\n/**\n * Returns a reified file, passing each arg to as-file.  Multiple-arg\n * versions treat the first argument as parent and subsequent args as\n * children relative to the parent. Use in place of File constructor\n * @return {!IFile}\n */\ncljs_node_io.core.file = (function cljs_node_io$core$file(var_args){\nvar G__7169 = arguments.length;\nswitch (G__7169) {\ncase 1:\nreturn cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__4546__auto__ = [];\nvar len__4531__auto___7545 = arguments.length;\nvar i__4532__auto___7546 = (0);\nwhile(true){\nif((i__4532__auto___7546 < len__4531__auto___7545)){\nargs_arr__4546__auto__.push((arguments[i__4532__auto___7546]));\n\nvar G__7548 = (i__4532__auto___7546 + (1));\ni__4532__auto___7546 = G__7548;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4547__auto__ = (new cljs.core.IndexedSeq(args_arr__4546__auto__.slice((2)),(0),null));\nreturn cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4547__auto__);\n\n}\n});\n\ncljs_node_io.core.file.cljs$core$IFn$_invoke$arity$1 = (function (arg){\nreturn cljs_node_io.protocols.as_file(arg);\n});\n\ncljs_node_io.core.file.cljs$core$IFn$_invoke$arity$2 = (function (parent,child){\nreturn (new cljs_node_io.file.File(cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$2(cljs_node_io.protocols.as_file(parent),cljs_node_io.core.as_relative_path(child))));\n});\n\ncljs_node_io.core.file.cljs$core$IFn$_invoke$arity$variadic = (function (parent,child,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs_node_io.core.file,cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$2(parent,child),more);\n});\n\n/** @this {Function} */\ncljs_node_io.core.file.cljs$lang$applyTo = (function (seq7166){\nvar G__7167 = cljs.core.first(seq7166);\nvar seq7166__$1 = cljs.core.next(seq7166);\nvar G__7168 = cljs.core.first(seq7166__$1);\nvar seq7166__$2 = cljs.core.next(seq7166__$1);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7167,G__7168,seq7166__$2);\n});\n\ncljs_node_io.core.file.cljs$lang$maxFixedArity = (2);\n\n/**\n * Delete file f. Raise an exception if it fails unless silently is true.\n * @return {!boolean}\n */\ncljs_node_io.core.delete_file = (function cljs_node_io$core$delete_file(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___7566 = arguments.length;\nvar i__4532__auto___7568 = (0);\nwhile(true){\nif((i__4532__auto___7568 < len__4531__auto___7566)){\nargs__4534__auto__.push((arguments[i__4532__auto___7568]));\n\nvar G__7569 = (i__4532__auto___7568 + (1));\ni__4532__auto___7568 = G__7569;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn cljs_node_io.core.delete_file.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.delete_file.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__7199){\nvar vec__7200 = p__7199;\nvar silently = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7200,(0),null);\nvar or__3949__auto__ = cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$1(f).delete();\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nvar or__3949__auto____$1 = silently;\nif(cljs.core.truth_(or__3949__auto____$1)){\nreturn or__3949__auto____$1;\n} else {\nthrow (new Error([\"Couldn't delete \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(f)].join('')));\n}\n}\n});\n\ncljs_node_io.core.delete_file.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ncljs_node_io.core.delete_file.cljs$lang$applyTo = (function (seq7195){\nvar G__7196 = cljs.core.first(seq7195);\nvar seq7195__$1 = cljs.core.next(seq7195);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7196,seq7195__$1);\n});\n\n/**\n * For all streams it defers back to the stream. Note: stream objects are event driven.\n *   + buffers => BufferReadStream\n *   + files + strings => FileInputStream\n *   + goog.Uri's are treated as local files. No other protocols are supported at this time.\n * @return {!IInputStream}\n */\ncljs_node_io.core.reader = (function cljs_node_io$core$reader(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___7573 = arguments.length;\nvar i__4532__auto___7574 = (0);\nwhile(true){\nif((i__4532__auto___7574 < len__4531__auto___7573)){\nargs__4534__auto__.push((arguments[i__4532__auto___7574]));\n\nvar G__7576 = (i__4532__auto___7574 + (1));\ni__4532__auto___7574 = G__7576;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn cljs_node_io.core.reader.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.reader.cljs$core$IFn$_invoke$arity$variadic = (function (x,opts){\nreturn cljs_node_io.protocols.make_reader(x,(cljs.core.truth_(opts)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):null));\n});\n\ncljs_node_io.core.reader.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ncljs_node_io.core.reader.cljs$lang$applyTo = (function (seq7206){\nvar G__7207 = cljs.core.first(seq7206);\nvar seq7206__$1 = cljs.core.next(seq7206);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7207,seq7206__$1);\n});\n\n/**\n * For all streams it defers back to the stream. Note: stream objects are event driven.\n *  + Files & Strings become FileOutputStreams.\n *  + goog.Uri's are treated as local files. No other protocols are supported at this time.\n * @return {!IOutputStream}\n */\ncljs_node_io.core.writer = (function cljs_node_io$core$writer(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___7578 = arguments.length;\nvar i__4532__auto___7579 = (0);\nwhile(true){\nif((i__4532__auto___7579 < len__4531__auto___7578)){\nargs__4534__auto__.push((arguments[i__4532__auto___7579]));\n\nvar G__7580 = (i__4532__auto___7579 + (1));\ni__4532__auto___7579 = G__7580;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn cljs_node_io.core.writer.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.writer.cljs$core$IFn$_invoke$arity$variadic = (function (x,opts){\nreturn cljs_node_io.protocols.make_writer(x,(cljs.core.truth_(opts)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):null));\n});\n\ncljs_node_io.core.writer.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ncljs_node_io.core.writer.cljs$lang$applyTo = (function (seq7211){\nvar G__7212 = cljs.core.first(seq7211);\nvar seq7211__$1 = cljs.core.next(seq7211);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7212,seq7211__$1);\n});\n\n/**\n * For all streams it defers back to the stream. Note: stream objects are event driven.\n *  + buffers => BufferReadStream\n *  + files + strings => FileInputStream\n *  + goog.Uri's are treated as local files. No other protocols are supported at this time.\n * @return {!IInputStream}\n */\ncljs_node_io.core.input_stream = (function cljs_node_io$core$input_stream(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___7587 = arguments.length;\nvar i__4532__auto___7588 = (0);\nwhile(true){\nif((i__4532__auto___7588 < len__4531__auto___7587)){\nargs__4534__auto__.push((arguments[i__4532__auto___7588]));\n\nvar G__7589 = (i__4532__auto___7588 + (1));\ni__4532__auto___7588 = G__7589;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn cljs_node_io.core.input_stream.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.input_stream.cljs$core$IFn$_invoke$arity$variadic = (function (x,opts){\nreturn cljs_node_io.protocols.make_input_stream(x,(cljs.core.truth_(opts)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):null));\n});\n\ncljs_node_io.core.input_stream.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ncljs_node_io.core.input_stream.cljs$lang$applyTo = (function (seq7218){\nvar G__7219 = cljs.core.first(seq7218);\nvar seq7218__$1 = cljs.core.next(seq7218);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7219,seq7218__$1);\n});\n\n/**\n * For all streams it defers back to the stream. Note: stream objects are event driven.\n * + Files & Strings become FileOutputStreams.\n * + goog.Uri's are treated as local files. No other protocols are supported at\n * this time.\n * @return {!IOutputStream}\n */\ncljs_node_io.core.output_stream = (function cljs_node_io$core$output_stream(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___7596 = arguments.length;\nvar i__4532__auto___7597 = (0);\nwhile(true){\nif((i__4532__auto___7597 < len__4531__auto___7596)){\nargs__4534__auto__.push((arguments[i__4532__auto___7597]));\n\nvar G__7598 = (i__4532__auto___7597 + (1));\ni__4532__auto___7597 = G__7598;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn cljs_node_io.core.output_stream.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.output_stream.cljs$core$IFn$_invoke$arity$variadic = (function (x,opts){\nreturn cljs_node_io.protocols.make_output_stream(x,(cljs.core.truth_(opts)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):null));\n});\n\ncljs_node_io.core.output_stream.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ncljs_node_io.core.output_stream.cljs$lang$applyTo = (function (seq7226){\nvar G__7227 = cljs.core.first(seq7226);\nvar seq7226__$1 = cljs.core.next(seq7226);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7227,seq7226__$1);\n});\n\n/**\n * sugar over Buffer.isBuffer\n * @param {*} b\n * @return {!boolean}\n */\ncljs_node_io.core.Buffer_QMARK_ = (function cljs_node_io$core$Buffer_QMARK_(b){\nreturn Buffer.isBuffer(b);\n});\n/**\n * @param {*} e\n * @return {!boolean}\n */\ncljs_node_io.core.Error_QMARK_ = (function cljs_node_io$core$Error_QMARK_(e){\nreturn (e instanceof Error);\n});\n/**\n * Returns a string synchronously. Unlike JVM, does not use FileInputStream.\n * Only option at this time is :encoding\n * If :encoding \"\" (an explicit empty string), returns raw buffer instead of string.\n * @return {(string|buffer.Buffer)}\n */\ncljs_node_io.core.slurp = (function cljs_node_io$core$slurp(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___7602 = arguments.length;\nvar i__4532__auto___7603 = (0);\nwhile(true){\nif((i__4532__auto___7603 < len__4531__auto___7602)){\nargs__4534__auto__.push((arguments[i__4532__auto___7603]));\n\nvar G__7604 = (i__4532__auto___7603 + (1));\ni__4532__auto___7603 = G__7604;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn cljs_node_io.core.slurp.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.slurp.cljs$core$IFn$_invoke$arity$variadic = (function (p,opts){\nvar opts__$1 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts);\nvar f = cljs_node_io.protocols.as_file(p);\nreturn f.read((function (){var or__3949__auto__ = new cljs.core.Keyword(null,\"encoding\",\"encoding\",1728578272).cljs$core$IFn$_invoke$arity$1(opts__$1);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn \"utf8\";\n}\n})());\n});\n\ncljs_node_io.core.slurp.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ncljs_node_io.core.slurp.cljs$lang$applyTo = (function (seq7243){\nvar G__7244 = cljs.core.first(seq7243);\nvar seq7243__$1 = cljs.core.next(seq7243);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7244,seq7243__$1);\n});\n\n/**\n * @return {!Channel} a which will receive [?err ?data]\n */\ncljs_node_io.core.aslurp = (function cljs_node_io$core$aslurp(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___7609 = arguments.length;\nvar i__4532__auto___7610 = (0);\nwhile(true){\nif((i__4532__auto___7610 < len__4531__auto___7609)){\nargs__4534__auto__.push((arguments[i__4532__auto___7610]));\n\nvar G__7612 = (i__4532__auto___7610 + (1));\ni__4532__auto___7610 = G__7612;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn cljs_node_io.core.aslurp.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.aslurp.cljs$core$IFn$_invoke$arity$variadic = (function (p,opts){\nvar opts__$1 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts);\nvar f = cljs_node_io.protocols.as_file(p);\nreturn f.aread((function (){var or__3949__auto__ = new cljs.core.Keyword(null,\"encoding\",\"encoding\",1728578272).cljs$core$IFn$_invoke$arity$1(opts__$1);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn \"utf8\";\n}\n})());\n});\n\ncljs_node_io.core.aslurp.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ncljs_node_io.core.aslurp.cljs$lang$applyTo = (function (seq7259){\nvar G__7260 = cljs.core.first(seq7259);\nvar seq7259__$1 = cljs.core.next(seq7259);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7260,seq7259__$1);\n});\n\n/**\n * Writes content synchronously to file f.\n * :encoding {string} encoding to write the string. Ignored when content is a buffer\n * :append - {boolean} - if true add content to end of file\n * @return {nil} or throws\n */\ncljs_node_io.core.spit = (function cljs_node_io$core$spit(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___7617 = arguments.length;\nvar i__4532__auto___7618 = (0);\nwhile(true){\nif((i__4532__auto___7618 < len__4531__auto___7617)){\nargs__4534__auto__.push((arguments[i__4532__auto___7618]));\n\nvar G__7619 = (i__4532__auto___7618 + (1));\ni__4532__auto___7618 = G__7619;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((2) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((2)),(0),null)):null);\nreturn cljs_node_io.core.spit.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.spit.cljs$core$IFn$_invoke$arity$variadic = (function (p,content,options){\nvar opts = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,options);\nvar f = cljs_node_io.protocols.as_file(p);\nreturn f.write([cljs.core.str.cljs$core$IFn$_invoke$arity$1(content)].join(''),opts);\n});\n\ncljs_node_io.core.spit.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ncljs_node_io.core.spit.cljs$lang$applyTo = (function (seq7271){\nvar G__7272 = cljs.core.first(seq7271);\nvar seq7271__$1 = cljs.core.next(seq7271);\nvar G__7273 = cljs.core.first(seq7271__$1);\nvar seq7271__$2 = cljs.core.next(seq7271__$1);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7272,G__7273,seq7271__$2);\n});\n\n/**\n * Async spit. Wait for result before writing again!\n * @return {!Channel} recieves [?err]\n */\ncljs_node_io.core.aspit = (function cljs_node_io$core$aspit(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___7623 = arguments.length;\nvar i__4532__auto___7624 = (0);\nwhile(true){\nif((i__4532__auto___7624 < len__4531__auto___7623)){\nargs__4534__auto__.push((arguments[i__4532__auto___7624]));\n\nvar G__7626 = (i__4532__auto___7624 + (1));\ni__4532__auto___7624 = G__7626;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((2) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((2)),(0),null)):null);\nreturn cljs_node_io.core.aspit.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.aspit.cljs$core$IFn$_invoke$arity$variadic = (function (p,content,options){\nvar opts = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,options);\nvar f = cljs_node_io.protocols.as_file(p);\nreturn f.awrite([cljs.core.str.cljs$core$IFn$_invoke$arity$1(content)].join(''),opts);\n});\n\ncljs_node_io.core.aspit.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ncljs_node_io.core.aspit.cljs$lang$applyTo = (function (seq7299){\nvar G__7300 = cljs.core.first(seq7299);\nvar seq7299__$1 = cljs.core.next(seq7299);\nvar G__7301 = cljs.core.first(seq7299__$1);\nvar seq7299__$2 = cljs.core.next(seq7299__$1);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7300,G__7301,seq7299__$2);\n});\n\n/**\n * taken from clojurescript/examples/nodels.cljs\n */\ncljs_node_io.core.file_seq = (function cljs_node_io$core$file_seq(dir){\nreturn cljs.core.tree_seq((function (f){\nreturn cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$1(f).isDirectory();\n}),(function (d){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__7311_SHARP_){\nreturn cljs_node_io.core.path.join(d,p1__7311_SHARP_);\n}),cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$1(d).list());\n}),dir);\n});\n/**\n * Given the same arg(s) as for file, creates all parent directories of\n * the file they represent.\n * @return {!boolean}\n */\ncljs_node_io.core.make_parents = (function cljs_node_io$core$make_parents(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___7630 = arguments.length;\nvar i__4532__auto___7631 = (0);\nwhile(true){\nif((i__4532__auto___7631 < len__4531__auto___7630)){\nargs__4534__auto__.push((arguments[i__4532__auto___7631]));\n\nvar G__7632 = (i__4532__auto___7631 + (1));\ni__4532__auto___7631 = G__7632;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((1) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((1)),(0),null)):null);\nreturn cljs_node_io.core.make_parents.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.make_parents.cljs$core$IFn$_invoke$arity$variadic = (function (f,more){\nvar temp__5457__auto__ = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs_node_io.core.file,f,more).getParentFile();\nif(cljs.core.truth_(temp__5457__auto__)){\nvar parent = temp__5457__auto__;\nreturn parent.mkdirs();\n} else {\nreturn null;\n}\n});\n\ncljs_node_io.core.make_parents.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ncljs_node_io.core.make_parents.cljs$lang$applyTo = (function (seq7320){\nvar G__7321 = cljs.core.first(seq7320);\nvar seq7320__$1 = cljs.core.next(seq7320);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7321,seq7320__$1);\n});\n\n/**\n * @param {*} obj object to test\n * @return {!boolean} is object an input-stream?\n */\ncljs_node_io.core.input_stream_QMARK_ = (function cljs_node_io$core$input_stream_QMARK_(obj){\nif(!((obj == null))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.cljs_node_io$protocols$IInputStream$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\n/**\n * @param {*} obj object to test\n * @return {!boolean} is object an input-stream?\n */\ncljs_node_io.core.output_stream_QMARK_ = (function cljs_node_io$core$output_stream_QMARK_(obj){\nif(!((obj == null))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.cljs_node_io$protocols$IOutputStream$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\n/**\n * @param {*} obj The object to test\n */\ncljs_node_io.core.stream_type = (function cljs_node_io$core$stream_type(obj){\nif(cljs_node_io.core.input_stream_QMARK_(obj)){\nreturn new cljs.core.Keyword(null,\"InputStream\",\"InputStream\",1853664890);\n} else {\nif(cljs_node_io.core.output_stream_QMARK_(obj)){\nreturn new cljs.core.Keyword(null,\"OutputStream\",\"OutputStream\",-1389658127);\n} else {\nreturn null;\n}\n}\n});\n/**\n * @param {*} o\n * @return {!boolean}\n */\ncljs_node_io.core.rFile_QMARK_ = (function cljs_node_io$core$rFile_QMARK_(o){\nif(!((o == null))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === o.cljs_node_io$protocols$IFile$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\nif((typeof cljs_node_io !== 'undefined') && (typeof cljs_node_io.core !== 'undefined') && (typeof cljs_node_io.core.do_copy !== 'undefined')){\n} else {\n/**\n * Internal helper for copy\n */\ncljs_node_io.core.do_copy = (function (){var method_table__4414__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4415__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4416__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4417__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4418__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),cljs.core.get_global_hierarchy());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs-node-io.core\",\"do-copy\"),((function (method_table__4414__auto__,prefer_table__4415__auto__,method_cache__4416__auto__,cached_hierarchy__4417__auto__,hierarchy__4418__auto__){\nreturn (function (input,output,opts){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__3949__auto__ = cljs_node_io.core.stream_type(input);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nvar or__3949__auto____$1 = (cljs.core.truth_(cljs_node_io.core.rFile_QMARK_(input))?new cljs.core.Keyword(null,\"File\",\"File\",-1707525042):null);\nif(cljs.core.truth_(or__3949__auto____$1)){\nreturn or__3949__auto____$1;\n} else {\nreturn cljs.core.type(input);\n}\n}\n})(),(function (){var or__3949__auto__ = cljs_node_io.core.stream_type(output);\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nvar or__3949__auto____$1 = (cljs.core.truth_(cljs_node_io.core.rFile_QMARK_(output))?new cljs.core.Keyword(null,\"File\",\"File\",-1707525042):null);\nif(cljs.core.truth_(or__3949__auto____$1)){\nreturn or__3949__auto____$1;\n} else {\nreturn cljs.core.type(output);\n}\n}\n})()], null);\n});})(method_table__4414__auto__,prefer_table__4415__auto__,method_cache__4416__auto__,cached_hierarchy__4417__auto__,hierarchy__4418__auto__))\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4418__auto__,method_table__4414__auto__,prefer_table__4415__auto__,method_cache__4416__auto__,cached_hierarchy__4417__auto__));\n})();\n}\ncljs_node_io.core.do_copy.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"InputStream\",\"InputStream\",1853664890),new cljs.core.Keyword(null,\"OutputStream\",\"OutputStream\",-1389658127)], null),(function (input,output,_){\nvar c = cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0();\noutput.on(\"finish\",((function (c){\nreturn (function (){\nreturn cljs.core.async.close_BANG_(c);\n});})(c))\n);\n\ninput.pipe(output);\n\nreturn c;\n}));\ncljs_node_io.core.do_copy.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"File\",\"File\",-1707525042),new cljs.core.Keyword(null,\"File\",\"File\",-1707525042)], null),(function (input,output,opts){\nvar in$ = cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2(input,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"encoding\",\"encoding\",1728578272),\"\"], null));\nvar out = cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$2(output,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"encoding\",\"encoding\",1728578272),\"\"], null),opts], 0)));\nreturn (cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3 ? cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3(in$,out,opts) : cljs_node_io.core.do_copy.call(null,in$,out,opts));\n}));\ncljs_node_io.core.do_copy.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"File\",\"File\",-1707525042),new cljs.core.Keyword(null,\"OutputStream\",\"OutputStream\",-1389658127)], null),(function (input,output,opts){\nvar in$ = cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2(input,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"encoding\",\"encoding\",1728578272),\"\"], null));\nreturn (cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3 ? cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3(in$,output,opts) : cljs_node_io.core.do_copy.call(null,in$,output,opts));\n}));\ncljs_node_io.core.do_copy.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"InputStream\",\"InputStream\",1853664890),new cljs.core.Keyword(null,\"File\",\"File\",-1707525042)], null),(function (input,output,opts){\nvar out = cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$2(output,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"encoding\",\"encoding\",1728578272),\"\"], null),opts], 0)));\nreturn (cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3 ? cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3(input,out,opts) : cljs_node_io.core.do_copy.call(null,input,out,opts));\n}));\ncljs_node_io.core.do_copy.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [Buffer,new cljs.core.Keyword(null,\"OutputStream\",\"OutputStream\",-1389658127)], null),(function (input,output,opts){\nvar G__7470 = cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$2(input,opts);\nvar G__7471 = output;\nvar G__7472 = null;\nreturn (cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3 ? cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3(G__7470,G__7471,G__7472) : cljs_node_io.core.do_copy.call(null,G__7470,G__7471,G__7472));\n}));\ncljs_node_io.core.do_copy.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [Buffer,new cljs.core.Keyword(null,\"File\",\"File\",-1707525042)], null),(function (input,output,opts){\nvar G__7479 = cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$2(input,opts);\nvar G__7480 = output;\nvar G__7481 = opts;\nreturn (cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3 ? cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3(G__7479,G__7480,G__7481) : cljs_node_io.core.do_copy.call(null,G__7479,G__7480,G__7481));\n}));\n/**\n * A repl/script convenience. Copies input to output.\n * Input may be an InputStream, cljs-node-io.File, Buffer, or string(file path).\n * Output may be an String(file), OutputStream or cljs-node-io.File.\n *  + Unlike JVM, strings are coerced to files.\n *    - If you have a big string, use a buffer.\n *    - By default no encoding ops occur\n *  + Options are passed to the output stream.\n *    - :encoding = destination encoding to use\n *      ex: (copy 'foo.txt' 'bar.txt' :encoding 'utf8')\n *  + Returns a chan thats closes when output finishes writing\n *    - use to asynchronously chain a series of calls.\n *    - Will still throw! For more sophisticated error handling,\n *      use the underlying streams manually\n * @return {!Channel}\n */\ncljs_node_io.core.copy = (function cljs_node_io$core$copy(var_args){\nvar args__4534__auto__ = [];\nvar len__4531__auto___7664 = arguments.length;\nvar i__4532__auto___7665 = (0);\nwhile(true){\nif((i__4532__auto___7665 < len__4531__auto___7664)){\nargs__4534__auto__.push((arguments[i__4532__auto___7665]));\n\nvar G__7666 = (i__4532__auto___7665 + (1));\ni__4532__auto___7665 = G__7666;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4535__auto__ = ((((2) < args__4534__auto__.length))?(new cljs.core.IndexedSeq(args__4534__auto__.slice((2)),(0),null)):null);\nreturn cljs_node_io.core.copy.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4535__auto__);\n});\n\ncljs_node_io.core.copy.cljs$core$IFn$_invoke$arity$variadic = (function (input,output,opts){\nvar input__$1 = ((typeof input === 'string')?cljs_node_io.protocols.as_file(input):input);\nvar output__$1 = ((typeof output === 'string')?cljs_node_io.protocols.as_file(output):output);\nvar G__7492 = input__$1;\nvar G__7493 = output__$1;\nvar G__7494 = (cljs.core.truth_(opts)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):null);\nreturn (cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3 ? cljs_node_io.core.do_copy.cljs$core$IFn$_invoke$arity$3(G__7492,G__7493,G__7494) : cljs_node_io.core.do_copy.call(null,G__7492,G__7493,G__7494));\n});\n\ncljs_node_io.core.copy.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ncljs_node_io.core.copy.cljs$lang$applyTo = (function (seq7483){\nvar G__7484 = cljs.core.first(seq7483);\nvar seq7483__$1 = cljs.core.next(seq7483);\nvar G__7485 = cljs.core.first(seq7483__$1);\nvar seq7483__$2 = cljs.core.next(seq7483__$1);\nvar self__4518__auto__ = this;\nreturn self__4518__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7484,G__7485,seq7483__$2);\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs_node_io/core.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",22],"~:ns-aliases",["^ ","~$jsonwebtoken","~$shadow.js.shim.module$jsonwebtoken","~$mqtt","~$shadow.js.shim.module$mqtt","~$systeminformation","~$shadow.js.shim.module$systeminformation","~$clojure.core.async","~$cljs.core.async","~$raspicam","~$shadow.js.shim.module$raspicam"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$cljs-node-io.core","~:op","~:ns","~:imports",["^ ","~$Uri","~$goog.Uri"],"~:requires",["^ ","^C","^C","~$async","^C","~$cljs.core.async.impl.protocols","^R","~$cljs-node-io.file","^S","~$cljs-node-io.streams","^T","~$cljs-node-io.protocols","^U","^N","^O","~$cljs.core","^V","~$goog","^W"],"~:seen",["^H",["~:require"]],"~:uses",["^ ","~$make-output-stream","^U","~$<!","^C","~$make-writer","^U","~$chan","^C","~$as-file","^U","~$BufferReadStream","^T","~$make-reader","^U","~$Coercions","^U","~$pipe","^C","~$Channel","^R","~$IInputStream","^U","~$File","^S","~$make-input-stream","^U","~$FileOutputStream","^T","~$FileInputStream","^T","~$alts!","^C","~$IOFactory","^U","~$IFile","^U","~$as-url","^U","~$IOutputStream","^U","~$put!","^C","~$take!","^C"],"~:require-macros",["^ ","^V","^V","^C","^C","^Q","^C"],"~:form",["~#list",["~$ns","^J",["^1G",["^Y",["^C","~:as","^Q","~:refer",["^1C","^1D","^12","^10","^17","^1>"]],["^R","^1J",["^18"]],["^S","^1J",["^1:"]],["^T","^1J",["^1=","^1<","^14"]],["^U","^1J",["^16","^1A","^13","^19","^1B","^1@","^1?","^15","^11","^1;","^["]]]],["^1G",["~:import","^O"]]]],"~:flags",["^ ","^Y",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^W","^V","^C","^R","^S","^T","^U","^O"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","cljs_node_io/core.cljs"],"~:compiled-at",1540143592339,"~:resource-name","cljs_node_io/core.cljs","~:warnings",[],"~:source","(ns cljs-node-io.core\n  (:require [cljs.core.async :as async :refer [put! take! chan <! pipe alts!]]\n            [cljs.core.async.impl.protocols :refer [Channel]]\n            [cljs-node-io.file :refer [File]]\n            [cljs-node-io.streams :refer [FileInputStream FileOutputStream BufferReadStream]]\n            [cljs-node-io.protocols\n              :refer [Coercions as-url as-file IInputStream IOutputStream IFile\n                      IOFactory make-reader make-writer make-input-stream make-output-stream]])\n  (:import goog.Uri))\n\n(def path (js/require \"path\"))\n\n(extend-protocol IEquiv\n  js/Buffer\n  (-equiv [this that] (try (.equals this that) (catch js/Error e false))))\n\n(defn- filepath\n  \"This is needed to mock the java.io.File constructor.\n   The java File constructor is polymorphic and accepts one or two args:\n   (Uri), (pathstring), (parentstring, childstring), (File, childstring)\n   @return {!string}\"\n  ([a] (filepath a nil))\n  ([a b]\n   (condp = [(type a) (type b)]\n     [Uri nil] (.getPath a)\n     [js/String nil] a\n     [js/String js/String] (path.join a b)\n     [File js/String] (path.join (.getPath a) b)\n     :else\n     (throw\n       (js/TypeError.\n         (str \"Unrecognized path configuration passed to File constructor.\"\n              \"\\nYou passed \" (pr-str a) \" and \" (pr-str b)\n              \"\\nYou must pass a [string], [uri], [string string], or [file string].\"))))))\n\n(extend-protocol Coercions\n  nil\n  (as-file [_] nil)\n  (as-url [_] nil)\n  string\n  (as-file [s] (File. (filepath s)))\n  (as-url [s] (.getPath (Uri. s)))\n  Uri\n  (as-url [u] (.getPath u))\n  (as-file [u]\n    (if (= \"file\" (.getScheme u)) ;\"file://home/.../cljs-node-io/foo.edn\"\n      (as-file (.getPath u))\n      (throw (js/Error. (str \"IllegalArgumentException : Uri's must have file protocol: \" u))))))\n\n(extend-protocol IOFactory\n  Uri\n  (make-reader [x opts] (make-reader (make-input-stream x opts) opts))\n  (make-writer [x opts] (make-writer (make-output-stream x opts) opts))\n  (make-input-stream [x opts]\n   (if (= \"file\" (.getScheme x)) ;<---not implemented for other protocols ie HTTP, should be separate lib\n     (FileInputStream (as-file x) opts)\n     (throw (js/Error. (str \"IllegalArgumentException: Can not read from non-file URL <\" x \">\")))))\n  (make-output-stream [x opts]\n    (if (= \"file\" (.getScheme x))\n      (make-output-stream (as-file x) opts)\n      (throw (js/Error. (str \"IllegalArgumentException: Can not write to non-file URL <\" x \">\")))))\n\n  string\n  (make-reader [x opts] (make-reader (as-file x) opts))\n  (make-writer [x opts] (make-writer (as-file x) opts))\n  (make-input-stream [^String x opts]\n    (try\n      (make-input-stream (Uri. x) opts)\n      (catch js/Error e (make-input-stream (File. x) opts))))\n  (make-output-stream [^String x opts]\n    (try\n      (make-output-stream (Uri. x) opts)\n      (catch js/Error err (make-output-stream (File. x) opts))))\n  js/Buffer\n  (make-reader [b opts] (make-reader (make-input-stream b opts) opts))\n  (make-input-stream [b opts] (BufferReadStream b opts))\n  (make-writer [x opts] (make-writer (make-output-stream x opts) opts))\n  (make-output-stream [x opts]\n    (throw\n      (js/Error.  ;use Buffer.concat if you want to do this\n        (str \"IllegalArgumentException : Cannot open <\" (pr-str x) \"> as an OutputStream.\")))))\n\n(defn as-relative-path\n  \"a relative path, else IllegalArgumentException.\n   @param {(string|IFile|Uri)} x\n   @return {!string}\"\n  [x]\n  (let [f (as-file x)]\n    (if (.isAbsolute f)\n      (throw (js/Error. (str \"IllegalArgumentException: \" f \" is not a relative path\")))\n      (.getPath f))))\n\n(defn file\n  \"Returns a reified file, passing each arg to as-file.  Multiple-arg\n   versions treat the first argument as parent and subsequent args as\n   children relative to the parent. Use in place of File constructor\n   @return {!IFile}\"\n  ([arg]\n   (as-file arg))\n  ([parent child]\n   (File. (filepath (as-file parent) (as-relative-path child))))\n  ([parent child & more]\n   (reduce file (file parent child) more)))\n\n(defn delete-file\n  \"Delete file f. Raise an exception if it fails unless silently is true.\n   @return {!boolean}\"\n  [f & [silently]]\n  (or (.delete (file f))\n      silently\n      (throw (js/Error. (str \"Couldn't delete \" f)))))\n\n(defn reader\n  \"For all streams it defers back to the stream. Note: stream objects are event driven.\n     + buffers => BufferReadStream\n     + files + strings => FileInputStream\n     + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IInputStream}\"\n  [x & opts]\n  (make-reader x (when opts (apply hash-map opts))))\n\n(defn writer\n  \"For all streams it defers back to the stream. Note: stream objects are event driven.\n    + Files & Strings become FileOutputStreams.\n    + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IOutputStream}\"\n  [x & opts]\n  (make-writer x (when opts (apply hash-map opts))))\n\n(defn input-stream\n  \"For all streams it defers back to the stream. Note: stream objects are event driven.\n    + buffers => BufferReadStream\n    + files + strings => FileInputStream\n    + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IInputStream}\"\n  [x & opts]\n  (make-input-stream x (when opts (apply hash-map opts))))\n\n(defn output-stream\n  \"For all streams it defers back to the stream. Note: stream objects are event driven.\n   + Files & Strings become FileOutputStreams.\n   + goog.Uri's are treated as local files. No other protocols are supported at\n   this time.\n   @return {!IOutputStream}\"\n  [x & opts]\n  (make-output-stream x (when opts (apply hash-map opts))))\n\n(defn ^boolean Buffer?\n  \"sugar over Buffer.isBuffer\n   @param {*} b\n   @return {!boolean}\"\n  [b]\n  (js/Buffer.isBuffer b))\n\n(defn ^boolean Error?\n  \"@param {*} e\n   @return {!boolean}\"\n  [e]\n  (instance? js/Error e))\n\n(defn slurp\n  \"Returns a string synchronously. Unlike JVM, does not use FileInputStream.\n   Only option at this time is :encoding\n   If :encoding \\\"\\\" (an explicit empty string), returns raw buffer instead of string.\n   @return {(string|buffer.Buffer)}\"\n  [p & opts]\n  (let [opts (apply hash-map opts)\n        f    (as-file p)]\n    (.read f (or (:encoding opts) \"utf8\"))))\n\n(defn aslurp\n  \"@return {!Channel} a which will receive [?err ?data]\"\n  [p & opts]\n  (let [opts (apply hash-map opts)\n        f (as-file p)]\n    (.aread f (or (:encoding opts) \"utf8\"))))\n\n(defn spit\n  \"Writes content synchronously to file f.\n   :encoding {string} encoding to write the string. Ignored when content is a buffer\n   :append - {boolean} - if true add content to end of file\n   @return {nil} or throws\"\n  [p content & options]\n  (let [opts (apply hash-map options)\n        f    (as-file p)]\n    (.write f (str content) opts)))\n\n(defn aspit\n  \"Async spit. Wait for result before writing again!\n   @return {!Channel} recieves [?err]\"\n  [p content & options]\n  (let [opts (apply hash-map options)\n        f    (as-file p)]\n    (.awrite f (str content) opts)))\n\n(defn file-seq\n  \"taken from clojurescript/examples/nodels.cljs\"\n  [dir]\n  (tree-seq\n    (fn [f] (.isDirectory (file f) ))\n    (fn [d] (map #(.join path d %) (.list (file d))))\n    dir))\n\n(defn make-parents\n  \"Given the same arg(s) as for file, creates all parent directories of\n   the file they represent.\n   @return {!boolean}\"\n  [f & more]\n  (when-let [parent (.getParentFile (apply file f more))]\n    (.mkdirs parent)))\n\n(defn ^boolean input-stream?\n  \"@param {*} obj object to test\n   @return {!boolean} is object an input-stream?\"\n  [obj]\n  (implements? IInputStream obj))\n\n(defn ^boolean output-stream?\n  \"@param {*} obj object to test\n   @return {!boolean} is object an input-stream?\"\n  [obj]\n  (implements? IOutputStream obj))\n\n(defn stream-type\n  \"@param {*} obj The object to test\"\n  ; @return {?Keyword}\n  [obj]\n  (if ^boolean (input-stream? obj)\n    :InputStream\n    (if ^boolean (output-stream? obj)\n      :OutputStream)))\n\n(defn rFile?\n  \"@param {*} o\n   @return {!boolean}\"\n  [o]\n  (implements? IFile o))\n\n(defmulti\n  ^{:doc \"Internal helper for copy\"\n    :private true\n    :arglists '([input output opts])}\n  do-copy\n  (fn [input output opts]\n    [(or (stream-type input)  (if (rFile?  input) :File) (type input))\n     (or (stream-type output) (if (rFile? output) :File) (type output))]))\n\n(defmethod do-copy [:InputStream :OutputStream] [input output _]\n  (let [c (async/promise-chan)]\n    (.on output \"finish\" #(async/close! c))\n    (.pipe input output)\n    c))\n\n(defmethod do-copy [:File :File] [input output opts]\n  (let [in  (FileInputStream input {:encoding \"\"})\n        out (FileOutputStream output (merge {:encoding \"\"} opts))]\n    (do-copy in out opts)))\n\n(defmethod do-copy [:File :OutputStream] [input output opts]\n  (let [in (FileInputStream input {:encoding \"\"})] ;;bin by default\n    (do-copy in output opts)))\n\n(defmethod do-copy [:InputStream :File] [input output opts]\n  (let [out (FileOutputStream output (merge {:encoding \"\"} opts))]\n    (do-copy input out opts)))\n\n(defmethod do-copy [js/Buffer :OutputStream] [input output opts]\n  (do-copy (BufferReadStream input opts) output nil))\n\n(defmethod do-copy [js/Buffer :File] [input output opts]\n  (do-copy (BufferReadStream input opts) output opts))\n\n(defn copy\n  \"A repl/script convenience. Copies input to output.\n   Input may be an InputStream, cljs-node-io.File, Buffer, or string(file path).\n   Output may be an String(file), OutputStream or cljs-node-io.File.\n    + Unlike JVM, strings are coerced to files.\n      - If you have a big string, use a buffer.\n      - By default no encoding ops occur\n    + Options are passed to the output stream.\n      - :encoding = destination encoding to use\n        ex: (copy 'foo.txt' 'bar.txt' :encoding 'utf8')\n    + Returns a chan thats closes when output finishes writing\n      - use to asynchronously chain a series of calls.\n      - Will still throw! For more sophisticated error handling,\n        use the underlying streams manually\n   @return {!Channel}\"\n  [input output & opts]\n  (let [input  (if (string? input) (as-file input) input)\n        output (if (string? output) (as-file output) output)]\n    (do-copy input output (when opts (apply hash-map opts)))))\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["cljs-node-io.core/path","js/require","cljs.core/PROTOCOL_SENTINEL","js/Buffer","this","that","e7068","js/Error","e","var_args","G__7079","cljs-node-io.core/filepath","a","cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$2","b","pred__7099","expr__7100","G__7102","G__7103","G__7104","G__7105","G__7106","G__7107","G__7108","G__7109","G__7113","G__7114","cljs.core/=","cljs.core/type","goog/Uri","js/String","cljs-node-io.core/path.join","cljs-node-io.file/File","G__7111","G__7112","js/TypeError","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","goog.object/set","cljs-node-io.protocols/Coercions","G__7117","cljs-node-io.protocols/as-file","G__7118","G__7119","G__7120","cljs-node-io.protocols/as-url","G__7121","G__7122","G__7136","G__7137","G__7138","G__7139","G__7140","G__7141","_","s","cljs_node_io.core.filepath.cljs$core$IFn$_invoke$arity$1","u","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs-node-io.protocols/IOFactory","G__7150","cljs-node-io.protocols/make-reader","G__7151","G__7152","G__7153","cljs-node-io.protocols/make-writer","G__7154","G__7155","G__7156","cljs-node-io.protocols/make-input-stream","G__7157","G__7158","G__7160","cljs-node-io.protocols/make-output-stream","G__7161","G__7162","x","opts","cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2","e7159","e7163","err","cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$2","cljs-node-io.core/as-relative-path","f","G__7169","cljs-node-io.core/file","args-arr__4546__auto__","len__4531__auto__","i__4532__auto__","argseq__4547__auto__","cljs.core/IndexedSeq","seq7166","G__7167","cljs.core/first","cljs.core/next","G__7168","self__4518__auto__","arg","parent","child","more","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$2","args__4534__auto__","argseq__4535__auto__","cljs-node-io.core/delete-file","p__7199","vec__7200","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","seq7195","G__7196","silently","or__3949__auto__","cljs_node_io.core.file.cljs$core$IFn$_invoke$arity$1","cljs-node-io.core/reader","seq7206","G__7207","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs-node-io.core/writer","seq7211","G__7212","cljs-node-io.core/input-stream","seq7218","G__7219","cljs-node-io.core/output-stream","seq7226","G__7227","cljs-node-io.core/Buffer?","js/Buffer.isBuffer","cljs-node-io.core/Error?","cljs-node-io.core/slurp","seq7243","G__7244","p","cljs-node-io.core/aslurp","seq7259","G__7260","cljs-node-io.core/spit","seq7271","G__7272","G__7273","content","options","cljs-node-io.core/aspit","seq7299","G__7300","G__7301","cljs-node-io.core/file-seq","dir","cljs.core/tree-seq","d","p1__7311#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs-node-io.core/make-parents","seq7320","G__7321","temp__5457__auto__","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","cljs-node-io.core/input-stream?","obj","cljs-node-io.core/output-stream?","cljs-node-io.core/stream-type","cljs-node-io.core/rFile?","o","js/cljs-node-io","js/cljs-node-io.core","js/cljs-node-io.core.do-copy","method-table__4414__auto__","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","prefer-table__4415__auto__","method-cache__4416__auto__","cached-hierarchy__4417__auto__","hierarchy__4418__auto__","cljs.core.get.cljs$core$IFn$_invoke$arity$3","cljs.core/get-global-hierarchy","cljs.core/MultiFn","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","cljs-node-io.core/do-copy","input","output","c","cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0","cljs.core.async/close!","in","out","cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$2","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","G__7470","G__7471","G__7472","G__7479","G__7480","G__7481","cljs-node-io.core/copy","seq7483","G__7484","G__7485","G__7492","G__7493","G__7494"]]],"~:cache-keys",["~#cmap",[["^1P","cljs_node_io/file.cljs"],[1537666007418,"^W","^V","^O","^T","~$cljs-node-io.fs","^U"],["^1P","goog/dom/tagname.js"],[1530991559994,"^W","~$goog.dom.HtmlElement"],["^1P","cljs/core/async/impl/ioc_helpers.cljs"],[1534380136417,"^W","^V","^R"],["~:macro","^V"],[1534380137000],["^1P","cljs/core/async.cljs"],[1534380136417,"^W","^V","^R","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers"],["^1P","cljs_node_io/fs.cljs"],[1537666007418,"^W","^V","^C","^R"],["^1P","cljs_node_io/core.cljs"],[1537666007418,"^W","^V","^C","^R","^S","^T","^U","^O"],["^1P","goog/math/math.js"],[1530991559994,"^W","~$goog.array","~$goog.asserts"],["^1P","goog/labs/useragent/browser.js"],[1530991559994,"^W","^29","~$goog.labs.userAgent.util","~$goog.object","~$goog.string"],["^1P","goog/array/array.js"],[1530991559994,"^W","^2:"],["^1P","cljs_node_io/protocols.cljs"],[1537666007418,"^W","^V"],["^23","~$cljs.core.async.macros"],[1534380136000],["^1P","cljs_node_io/streams.cljs"],[1537666007418,"^W","^V","^O","^C","^U"],["^1P","goog/debug/error.js"],[1530991559994,"^W"],["^1P","goog/dom/nodetype.js"],[1530991559994,"^W"],["^1P","goog/object/object.js"],[1530991559994,"^W"],"~:SHADOW-TIMESTAMP",[1540077702000,1534380137000],["^1P","goog/math/long.js"],[1530991559994,"^W","^2:","~$goog.reflect"],["^1P","cljs/core/async/impl/channels.cljs"],[1534380136417,"^W","^V","^R","^27","^25"],["^1P","goog/functions/functions.js"],[1530991559994,"^W"],["^1P","cljs/core/async/impl/dispatch.cljs"],[1534380136417,"^W","^V","^25","~$goog.async.nextTick"],["^1P","cljs/core/async/impl/protocols.cljs"],[1534380136417,"^W","^V"],["^1P","goog/structs/map.js"],[1530991559994,"^W","~$goog.iter.Iterator","~$goog.iter.StopIteration","^2<"],["^1P","goog/labs/useragent/engine.js"],[1530991559994,"^W","^29","^2;","^2="],["^23","~$cljs-node-io.macros"],[1537666007000],["^1P","goog/asserts/asserts.js"],[1530991559994,"^W","~$goog.debug.Error","~$goog.dom.NodeType","^2="],["^1P","cljs/core/async/impl/buffers.cljs"],[1534380136417,"^W","^V","^R"],["^1P","goog/uri/uri.js"],[1530991559994,"^W","^29","^2:","^2=","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^23","^C"],[1534380136000],["^1P","cljs/core/async/impl/timers.cljs"],[1534380136417,"^W","^V","^R","^24","^27"],["^1P","goog/base.js"],[1530991559994],["^1P","goog/structs/structs.js"],[1530991559994,"^W","^29","^2<"],["^1P","goog/debug/entrypointregistry.js"],[1530991559994,"^W","^2:"],["^1P","goog/string/string.js"],[1530991559994,"^W"],["^1P","goog/reflect/reflect.js"],[1530991559994,"^W"],["^1P","goog/labs/useragent/util.js"],[1530991559994,"^W","^2="],["^23","~$cljs.core.async.impl.ioc-macros"],[1534380136000],["^1P","goog/string/stringbuffer.js"],[1530991559994,"^W"],["^1P","goog/iter/iter.js"],[1530991559994,"^W","^29","^2:","~$goog.functions","~$goog.math"],["^1P","goog/async/nexttick.js"],[1530991559994,"^W","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^2M","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"],["^1P","goog/dom/htmlelement.js"],[1530991559994,"^W"],["^1P","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^2=","^2<","^29","^O","~$goog.string.StringBuffer"],["^1P","goog/math/integer.js"],[1530991559994,"^W"],["^1P","goog/uri/utils.js"],[1530991559994,"^W","^29","^2:","^2="]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","cljs_node_io/core.cljs","^7",1,"^8",5,"^9",1,"^:",22],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",null,"^G",["^H",[]],"~:shadow/js-access-properties",["^H",["isBuffer","equals"]],"^I","^J","^M",["^ ","^N","^O"],"^P",["^ ","^C","^C","^Q","^C","^R","^R","^S","^S","^T","^T","^U","^U","^N","^O","^V","^V","^W","^W"],"^X",["^H",["^Y"]],"~:shadow/js-access-global",["^H",["TypeError","require","Buffer","String","Error"]],"^Z",["^ ","^[","^U","^10","^C","^11","^U","^12","^C","^13","^U","^14","^T","^15","^U","^16","^U","^17","^C","^18","^R","^19","^U","^1:","^S","^1;","^U","^1<","^T","^1=","^T","^1>","^C","^1?","^U","^1@","^U","^1A","^U","^1B","^U","^1C","^C","^1D","^C"],"~:defs",["^ ","~$aslurp",["^ ","~:protocol-inline",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",171,"^8",7,"^9",171,"^:",13,"~:arglists",["^1G",["~$quote",["^1G",[["~$p","~$&","~$opts"]]]]],"~:doc","@return {!Channel} a which will receive [?err ?data]","~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",1,"~:method-params",[["^1G",["~$p","^32"]]],"^30",["^1G",[["~$p","~$&","^32"]]],"~:arglists-meta",["^1G",[null]]]],"^I","~$cljs-node-io.core/aslurp","^35",true,"^6","cljs_node_io/core.cljs","^:",13,"^34",["^ ","^35",true,"^36",1,"^37",[["^1G",["~$p","^32"]]],"^30",["^1G",[["~$p","~$&","^32"]]],"^38",["^1G",[null]]],"^37",[["^1G",["~$p","^32"]]],"~:protocol-impl",null,"^38",["^1G",[null]],"^8",1,"^7",171,"^9",171,"^36",1,"~:fn-var",true,"^30",["^1G",[["~$p","~$&","^32"]]],"^33","@return {!Channel} a which will receive [?err ?data]"],"~$rFile?",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",233,"^8",7,"^9",233,"^:",13,"^30",["^1G",["^31",["^1G",[["~$o"]]]]],"^33","@param {*} o\n   @return {!boolean}"],"^I","~$cljs-node-io.core/rFile?","^35",false,"^6","cljs_node_io/core.cljs","^:",13,"^37",["^1G",[["~$o"]]],"^3:",null,"^38",["^1G",[null,null]],"^8",1,"^7",233,"^9",233,"^36",1,"^3;",true,"^30",["^1G",["^31",["^1G",[["~$o"]]]]],"^33","@param {*} o\n   @return {!boolean}"],"~$slurp",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",161,"^8",7,"^9",161,"^:",12,"^30",["^1G",["^31",["^1G",[["~$p","~$&","^32"]]]]],"^33","Returns a string synchronously. Unlike JVM, does not use FileInputStream.\n   Only option at this time is :encoding\n   If :encoding \"\" (an explicit empty string), returns raw buffer instead of string.\n   @return {(string|buffer.Buffer)}","^34",["^ ","^35",true,"^36",1,"^37",[["^1G",["~$p","^32"]]],"^30",["^1G",[["~$p","~$&","^32"]]],"^38",["^1G",[null]]]],"^I","~$cljs-node-io.core/slurp","^35",true,"^6","cljs_node_io/core.cljs","^:",12,"^34",["^ ","^35",true,"^36",1,"^37",[["^1G",["~$p","^32"]]],"^30",["^1G",[["~$p","~$&","^32"]]],"^38",["^1G",[null]]],"^37",[["^1G",["~$p","^32"]]],"^3:",null,"^38",["^1G",[null]],"^8",1,"^7",161,"^9",161,"^36",1,"^3;",true,"^30",["^1G",[["~$p","~$&","^32"]]],"^33","Returns a string synchronously. Unlike JVM, does not use FileInputStream.\n   Only option at this time is :encoding\n   If :encoding \"\" (an explicit empty string), returns raw buffer instead of string.\n   @return {(string|buffer.Buffer)}"],"~$make-parents",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",204,"^8",7,"^9",204,"^:",19,"^30",["^1G",["^31",["^1G",[["~$f","~$&","~$more"]]]]],"^33","Given the same arg(s) as for file, creates all parent directories of\n   the file they represent.\n   @return {!boolean}","^34",["^ ","^35",true,"^36",1,"^37",[["^1G",["~$f","^3A"]]],"^30",["^1G",[["~$f","~$&","^3A"]]],"^38",["^1G",[null]]]],"^I","~$cljs-node-io.core/make-parents","^35",true,"^6","cljs_node_io/core.cljs","^:",19,"^34",["^ ","^35",true,"^36",1,"^37",[["^1G",["~$f","^3A"]]],"^30",["^1G",[["~$f","~$&","^3A"]]],"^38",["^1G",[null]]],"^37",[["^1G",["~$f","^3A"]]],"^3:",null,"^38",["^1G",[null]],"^8",1,"^7",204,"^9",204,"^36",1,"^3;",true,"^30",["^1G",[["~$f","~$&","^3A"]]],"^33","Given the same arg(s) as for file, creates all parent directories of\n   the file they represent.\n   @return {!boolean}"],"~$spit",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",178,"^8",7,"^9",178,"^:",11,"^30",["^1G",["^31",["^1G",[["~$p","~$content","~$&","~$options"]]]]],"^33","Writes content synchronously to file f.\n   :encoding {string} encoding to write the string. Ignored when content is a buffer\n   :append - {boolean} - if true add content to end of file\n   @return {nil} or throws","^34",["^ ","^35",true,"^36",2,"^37",[["^1G",["~$p","^3D","^3E"]]],"^30",["^1G",[["~$p","^3D","~$&","^3E"]]],"^38",["^1G",[null]]]],"^I","~$cljs-node-io.core/spit","^35",true,"^6","cljs_node_io/core.cljs","^:",11,"^34",["^ ","^35",true,"^36",2,"^37",[["^1G",["~$p","^3D","^3E"]]],"^30",["^1G",[["~$p","^3D","~$&","^3E"]]],"^38",["^1G",[null]]],"^37",[["^1G",["~$p","^3D","^3E"]]],"^3:",null,"^38",["^1G",[null]],"^8",1,"^7",178,"^9",178,"^36",2,"^3;",true,"^30",["^1G",[["~$p","^3D","~$&","^3E"]]],"^33","Writes content synchronously to file f.\n   :encoding {string} encoding to write the string. Ignored when content is a buffer\n   :append - {boolean} - if true add content to end of file\n   @return {nil} or throws"],"~$Buffer?",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",148,"^8",16,"^9",148,"^:",23,"~:tag","~$boolean","^30",["^1G",["^31",["^1G",[["~$b"]]]]],"^33","sugar over Buffer.isBuffer\n   @param {*} b\n   @return {!boolean}"],"^I","~$cljs-node-io.core/Buffer?","^35",false,"^6","cljs_node_io/core.cljs","^:",23,"^37",["^1G",[["~$b"]]],"^3:",null,"^38",["^1G",[null,null]],"^8",1,"^7",148,"~:ret-tag","^3I","^9",148,"^36",1,"^3H","^3I","^3;",true,"^30",["^1G",["^31",["^1G",[["~$b"]]]]],"^33","sugar over Buffer.isBuffer\n   @param {*} b\n   @return {!boolean}"],"~$delete-file",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",105,"^8",7,"^9",105,"^:",18,"^30",["^1G",["^31",["^1G",[["~$f","~$&",["~$silently"]]]]]],"^33","Delete file f. Raise an exception if it fails unless silently is true.\n   @return {!boolean}","^34",["^ ","^35",true,"^36",1,"^37",[["^1G",["~$f",["^3M"]]]],"^30",["^1G",[["~$f","~$&",["^3M"]]]],"^38",["^1G",[null]]]],"^I","~$cljs-node-io.core/delete-file","^35",true,"^6","cljs_node_io/core.cljs","^:",18,"^34",["^ ","^35",true,"^36",1,"^37",[["^1G",["~$f",["^3M"]]]],"^30",["^1G",[["~$f","~$&",["^3M"]]]],"^38",["^1G",[null]]],"^37",[["^1G",["~$f",["^3M"]]]],"^3:",null,"^38",["^1G",[null]],"^8",1,"^7",105,"^9",105,"^36",1,"^3;",true,"^30",["^1G",[["~$f","~$&",["^3M"]]]],"^33","Delete file f. Raise an exception if it fails unless silently is true.\n   @return {!boolean}"],"~$path",["^ ","^I","~$cljs-node-io.core/path","^6","cljs_node_io/core.cljs","^7",11,"^8",1,"^9",11,"^:",10,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",11,"^8",6,"^9",11,"^:",10],"^3H","~$js"],"~$input-stream",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",130,"^8",7,"^9",130,"^:",19,"^30",["^1G",["^31",["^1G",[["~$x","~$&","^32"]]]]],"^33","For all streams it defers back to the stream. Note: stream objects are event driven.\n    + buffers => BufferReadStream\n    + files + strings => FileInputStream\n    + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IInputStream}","^34",["^ ","^35",true,"^36",1,"^37",[["^1G",["~$x","^32"]]],"^30",["^1G",[["~$x","~$&","^32"]]],"^38",["^1G",[null]]]],"^I","~$cljs-node-io.core/input-stream","^35",true,"^6","cljs_node_io/core.cljs","^:",19,"^34",["^ ","^35",true,"^36",1,"^37",[["^1G",["~$x","^32"]]],"^30",["^1G",[["~$x","~$&","^32"]]],"^38",["^1G",[null]]],"^37",[["^1G",["~$x","^32"]]],"^3:",null,"^38",["^1G",[null]],"^8",1,"^7",130,"^9",130,"^36",1,"^3;",true,"^30",["^1G",[["~$x","~$&","^32"]]],"^33","For all streams it defers back to the stream. Note: stream objects are event driven.\n    + buffers => BufferReadStream\n    + files + strings => FileInputStream\n    + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IInputStream}"],"~$Error?",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",155,"^8",16,"^9",155,"^:",22,"^3H","^3I","^30",["^1G",["^31",["^1G",[["~$e"]]]]],"^33","@param {*} e\n   @return {!boolean}"],"^I","~$cljs-node-io.core/Error?","^35",false,"^6","cljs_node_io/core.cljs","^:",22,"^37",["^1G",[["~$e"]]],"^3:",null,"^38",["^1G",[null,null]],"^8",1,"^7",155,"^3K","^3I","^9",155,"^36",1,"^3H","^3I","^3;",true,"^30",["^1G",["^31",["^1G",[["~$e"]]]]],"^33","@param {*} e\n   @return {!boolean}"],"~$as-relative-path",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",83,"^8",7,"^9",83,"^:",23,"^30",["^1G",["^31",["^1G",[["~$x"]]]]],"^33","a relative path, else IllegalArgumentException.\n   @param {(string|IFile|Uri)} x\n   @return {!string}"],"^I","~$cljs-node-io.core/as-relative-path","^35",false,"^6","cljs_node_io/core.cljs","^:",23,"^37",["^1G",[["~$x"]]],"^3:",null,"^38",["^1G",[null,null]],"^8",1,"^7",83,"^9",83,"^36",1,"^3;",true,"^30",["^1G",["^31",["^1G",[["~$x"]]]]],"^33","a relative path, else IllegalArgumentException.\n   @param {(string|IFile|Uri)} x\n   @return {!string}"],"~$copy",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",273,"^8",7,"^9",273,"^:",11,"^30",["^1G",["^31",["^1G",[["~$input","~$output","~$&","^32"]]]]],"^33","A repl/script convenience. Copies input to output.\n   Input may be an InputStream, cljs-node-io.File, Buffer, or string(file path).\n   Output may be an String(file), OutputStream or cljs-node-io.File.\n    + Unlike JVM, strings are coerced to files.\n      - If you have a big string, use a buffer.\n      - By default no encoding ops occur\n    + Options are passed to the output stream.\n      - :encoding = destination encoding to use\n        ex: (copy 'foo.txt' 'bar.txt' :encoding 'utf8')\n    + Returns a chan thats closes when output finishes writing\n      - use to asynchronously chain a series of calls.\n      - Will still throw! For more sophisticated error handling,\n        use the underlying streams manually\n   @return {!Channel}","^34",["^ ","^35",true,"^36",2,"^37",[["^1G",["^3Y","^3Z","^32"]]],"^30",["^1G",[["^3Y","^3Z","~$&","^32"]]],"^38",["^1G",[null]]]],"^I","~$cljs-node-io.core/copy","^35",true,"^6","cljs_node_io/core.cljs","^:",11,"^34",["^ ","^35",true,"^36",2,"^37",[["^1G",["^3Y","^3Z","^32"]]],"^30",["^1G",[["^3Y","^3Z","~$&","^32"]]],"^38",["^1G",[null]]],"^37",[["^1G",["^3Y","^3Z","^32"]]],"^3:",null,"^38",["^1G",[null]],"^8",1,"^7",273,"^9",273,"^36",2,"^3;",true,"^30",["^1G",[["^3Y","^3Z","~$&","^32"]]],"^33","A repl/script convenience. Copies input to output.\n   Input may be an InputStream, cljs-node-io.File, Buffer, or string(file path).\n   Output may be an String(file), OutputStream or cljs-node-io.File.\n    + Unlike JVM, strings are coerced to files.\n      - If you have a big string, use a buffer.\n      - By default no encoding ops occur\n    + Options are passed to the output stream.\n      - :encoding = destination encoding to use\n        ex: (copy 'foo.txt' 'bar.txt' :encoding 'utf8')\n    + Returns a chan thats closes when output finishes writing\n      - use to asynchronously chain a series of calls.\n      - Will still throw! For more sophisticated error handling,\n        use the underlying streams manually\n   @return {!Channel}"],"~$input-stream?",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",212,"^8",16,"^9",212,"^:",29,"^3H","^3I","^30",["^1G",["^31",["^1G",[["~$obj"]]]]],"^33","@param {*} obj object to test\n   @return {!boolean} is object an input-stream?"],"^I","~$cljs-node-io.core/input-stream?","^35",false,"^6","cljs_node_io/core.cljs","^:",29,"^37",["^1G",[["^41"]]],"^3:",null,"^38",["^1G",[null,null]],"^8",1,"^7",212,"^3K","^3I","^9",212,"^36",1,"^3H","^3I","^3;",true,"^30",["^1G",["^31",["^1G",[["^41"]]]]],"^33","@param {*} obj object to test\n   @return {!boolean} is object an input-stream?"],"~$filepath",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",17,"^8",8,"^9",17,"^:",16,"~:private",true,"^30",["^1G",["^31",["^1G",[["~$a"],["~$a","~$b"]]]]],"^33","This is needed to mock the java.io.File constructor.\n   The java File constructor is polymorphic and accepts one or two args:\n   (Uri), (pathstring), (parentstring, childstring), (File, childstring)\n   @return {!string}","^34",["^ ","^35",false,"^36",2,"^37",["^1G",[["~$a"],["~$a","~$b"]]],"^30",["^1G",[["~$a"],["~$a","~$b"]]],"^38",["^1G",[null,null]]]],"^44",true,"^I","~$cljs-node-io.core/filepath","^35",false,"^6","cljs_node_io/core.cljs","^:",16,"^34",["^ ","^35",false,"^36",2,"^37",["^1G",[["~$a"],["~$a","~$b"]]],"^30",["^1G",[["~$a"],["~$a","~$b"]]],"^38",["^1G",[null,null]]],"^37",["^1G",[["~$a"],["~$a","~$b"]]],"^3:",null,"^38",["^1G",[null,null]],"^8",1,"^7",17,"^9",17,"^36",2,"^3;",true,"^30",["^1G",[["~$a"],["~$a","~$b"]]],"^33","This is needed to mock the java.io.File constructor.\n   The java File constructor is polymorphic and accepts one or two args:\n   (Uri), (pathstring), (parentstring, childstring), (File, childstring)\n   @return {!string}"],"~$output-stream",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",139,"^8",7,"^9",139,"^:",20,"^30",["^1G",["^31",["^1G",[["~$x","~$&","^32"]]]]],"^33","For all streams it defers back to the stream. Note: stream objects are event driven.\n   + Files & Strings become FileOutputStreams.\n   + goog.Uri's are treated as local files. No other protocols are supported at\n   this time.\n   @return {!IOutputStream}","^34",["^ ","^35",true,"^36",1,"^37",[["^1G",["~$x","^32"]]],"^30",["^1G",[["~$x","~$&","^32"]]],"^38",["^1G",[null]]]],"^I","~$cljs-node-io.core/output-stream","^35",true,"^6","cljs_node_io/core.cljs","^:",20,"^34",["^ ","^35",true,"^36",1,"^37",[["^1G",["~$x","^32"]]],"^30",["^1G",[["~$x","~$&","^32"]]],"^38",["^1G",[null]]],"^37",[["^1G",["~$x","^32"]]],"^3:",null,"^38",["^1G",[null]],"^8",1,"^7",139,"^9",139,"^36",1,"^3;",true,"^30",["^1G",[["~$x","~$&","^32"]]],"^33","For all streams it defers back to the stream. Note: stream objects are event driven.\n   + Files & Strings become FileOutputStreams.\n   + goog.Uri's are treated as local files. No other protocols are supported at\n   this time.\n   @return {!IOutputStream}"],"~$file",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",93,"^8",7,"^9",93,"^:",11,"^30",["^1G",["^31",["^1G",[["~$arg"],["~$parent","~$child"],["^4:","^4;","~$&","^3A"]]]]],"^33","Returns a reified file, passing each arg to as-file.  Multiple-arg\n   versions treat the first argument as parent and subsequent args as\n   children relative to the parent. Use in place of File constructor\n   @return {!IFile}","^34",["^ ","^35",true,"^36",2,"^37",["^1G",[["^49"],["^4:","^4;"]]],"^30",["^1G",[["^49"],["^4:","^4;"],["^4:","^4;","~$&","^3A"]]],"^38",["^1G",[null,null,null]]]],"^I","~$cljs-node-io.core/file","^35",true,"^6","cljs_node_io/core.cljs","^:",11,"^34",["^ ","^35",true,"^36",2,"^37",["^1G",[["^49"],["^4:","^4;"]]],"^30",["^1G",[["^49"],["^4:","^4;"],["^4:","^4;","~$&","^3A"]]],"^38",["^1G",[null,null,null]]],"^37",["^1G",[["^49"],["^4:","^4;"]]],"^3:",null,"^38",["^1G",[null,null,null]],"^8",1,"^7",93,"^9",93,"^36",2,"^3;",true,"^30",["^1G",[["^49"],["^4:","^4;"],["^4:","^4;","~$&","^3A"]]],"^33","Returns a reified file, passing each arg to as-file.  Multiple-arg\n   versions treat the first argument as parent and subsequent args as\n   children relative to the parent. Use in place of File constructor\n   @return {!IFile}"],"~$file-seq",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",196,"^8",7,"^9",196,"^:",15,"^30",["^1G",["^31",["^1G",[["~$dir"]]]]],"^33","taken from clojurescript/examples/nodels.cljs"],"^I","~$cljs-node-io.core/file-seq","^35",false,"^6","cljs_node_io/core.cljs","^:",15,"^37",["^1G",[["^4>"]]],"^3:",null,"^38",["^1G",[null,null]],"^8",1,"^7",196,"^9",196,"^36",1,"^3;",true,"^30",["^1G",["^31",["^1G",[["^4>"]]]]],"^33","taken from clojurescript/examples/nodels.cljs"],"~$aspit",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",188,"^8",7,"^9",188,"^:",12,"^30",["^1G",["^31",["^1G",[["~$p","^3D","~$&","^3E"]]]]],"^33","Async spit. Wait for result before writing again!\n   @return {!Channel} recieves [?err]","^34",["^ ","^35",true,"^36",2,"^37",[["^1G",["~$p","^3D","^3E"]]],"^30",["^1G",[["~$p","^3D","~$&","^3E"]]],"^38",["^1G",[null]]]],"^I","~$cljs-node-io.core/aspit","^35",true,"^6","cljs_node_io/core.cljs","^:",12,"^34",["^ ","^35",true,"^36",2,"^37",[["^1G",["~$p","^3D","^3E"]]],"^30",["^1G",[["~$p","^3D","~$&","^3E"]]],"^38",["^1G",[null]]],"^37",[["^1G",["~$p","^3D","^3E"]]],"^3:",null,"^38",["^1G",[null]],"^8",1,"^7",188,"^9",188,"^36",2,"^3;",true,"^30",["^1G",[["~$p","^3D","~$&","^3E"]]],"^33","Async spit. Wait for result before writing again!\n   @return {!Channel} recieves [?err]"],"~$do-copy",["^ ","^5",["^ ","^6","cljs_node_io/core.cljs","^7",243,"^8",3,"^9",243,"^:",10,"^33","Internal helper for copy","^44",true,"^30",["^1G",["^31",["^1G",[["^3Y","^3Z","^32"]]]]]],"^44",true,"^I","~$cljs-node-io.core/do-copy","^6","cljs_node_io/core.cljs","^:",10,"^8",1,"^7",239,"^9",243,"^3H","~$cljs.core/MultiFn","^30",["^1G",["^31",["^1G",[["^3Y","^3Z","^32"]]]]],"^33","Internal helper for copy"],"~$stream-type",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",224,"^8",7,"^9",224,"^:",18,"^30",["^1G",["^31",["^1G",[["^41"]]]]],"^33","@param {*} obj The object to test"],"^I","~$cljs-node-io.core/stream-type","^35",false,"^6","cljs_node_io/core.cljs","^:",18,"^37",["^1G",[["^41"]]],"^3:",null,"^38",["^1G",[null,null]],"^8",1,"^7",224,"^9",224,"^36",1,"^3;",true,"^30",["^1G",["^31",["^1G",[["^41"]]]]],"^33","@param {*} obj The object to test"],"~$output-stream?",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",218,"^8",16,"^9",218,"^:",30,"^3H","^3I","^30",["^1G",["^31",["^1G",[["^41"]]]]],"^33","@param {*} obj object to test\n   @return {!boolean} is object an input-stream?"],"^I","~$cljs-node-io.core/output-stream?","^35",false,"^6","cljs_node_io/core.cljs","^:",30,"^37",["^1G",[["^41"]]],"^3:",null,"^38",["^1G",[null,null]],"^8",1,"^7",218,"^3K","^3I","^9",218,"^36",1,"^3H","^3I","^3;",true,"^30",["^1G",["^31",["^1G",[["^41"]]]]],"^33","@param {*} obj object to test\n   @return {!boolean} is object an input-stream?"],"~$writer",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",122,"^8",7,"^9",122,"^:",13,"^30",["^1G",["^31",["^1G",[["~$x","~$&","^32"]]]]],"^33","For all streams it defers back to the stream. Note: stream objects are event driven.\n    + Files & Strings become FileOutputStreams.\n    + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IOutputStream}","^34",["^ ","^35",true,"^36",1,"^37",[["^1G",["~$x","^32"]]],"^30",["^1G",[["~$x","~$&","^32"]]],"^38",["^1G",[null]]]],"^I","~$cljs-node-io.core/writer","^35",true,"^6","cljs_node_io/core.cljs","^:",13,"^34",["^ ","^35",true,"^36",1,"^37",[["^1G",["~$x","^32"]]],"^30",["^1G",[["~$x","~$&","^32"]]],"^38",["^1G",[null]]],"^37",[["^1G",["~$x","^32"]]],"^3:",null,"^38",["^1G",[null]],"^8",1,"^7",122,"^9",122,"^36",1,"^3;",true,"^30",["^1G",[["~$x","~$&","^32"]]],"^33","For all streams it defers back to the stream. Note: stream objects are event driven.\n    + Files & Strings become FileOutputStreams.\n    + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IOutputStream}"],"~$reader",["^ ","^2[",null,"^5",["^ ","^6","cljs_node_io/core.cljs","^7",113,"^8",7,"^9",113,"^:",13,"^30",["^1G",["^31",["^1G",[["~$x","~$&","^32"]]]]],"^33","For all streams it defers back to the stream. Note: stream objects are event driven.\n     + buffers => BufferReadStream\n     + files + strings => FileInputStream\n     + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IInputStream}","^34",["^ ","^35",true,"^36",1,"^37",[["^1G",["~$x","^32"]]],"^30",["^1G",[["~$x","~$&","^32"]]],"^38",["^1G",[null]]]],"^I","~$cljs-node-io.core/reader","^35",true,"^6","cljs_node_io/core.cljs","^:",13,"^34",["^ ","^35",true,"^36",1,"^37",[["^1G",["~$x","^32"]]],"^30",["^1G",[["~$x","~$&","^32"]]],"^38",["^1G",[null]]],"^37",[["^1G",["~$x","^32"]]],"^3:",null,"^38",["^1G",[null]],"^8",1,"^7",113,"^9",113,"^36",1,"^3;",true,"^30",["^1G",[["~$x","~$&","^32"]]],"^33","For all streams it defers back to the stream. Note: stream objects are event driven.\n     + buffers => BufferReadStream\n     + files + strings => FileInputStream\n     + goog.Uri's are treated as local files. No other protocols are supported at this time.\n   @return {!IInputStream}"]],"^1E",["^ ","^V","^V","^C","^C","^Q","^C"],"~:cljs.analyzer/constants",["^ ","^X",["^H",["~:encoding","~:else","~:default","~:File","~:OutputStream","~:InputStream","~:hierarchy"]],"~:order",["^4O","^4N","^4S","^4R","^4T","^4Q","^4P"]],"^1L",["^ ","^Y",["^H",[]]],"^1M",["^ "],"^1N",["^W","^V","^C","^R","^S","^T","^U","^O"]],"^L","^J","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^20",[["^4X","~:static-fns"],true,["^4X","~:elide-asserts"],false,["^4X","~:optimize-constants"],null,["^4X","~:external-config"],null,["^4X","~:tooling-config"],null,["^4X","~:emit-constants"],null,["^4X","~:infer-externs"],true,["^4X","^1U"],null,["~:js-options","~:js-provider"],"^Y",["~:mode"],"~:dev",["^4X","~:fn-invoke-direct"],null,["^4X","~:source-map"],"/dev/null"]]]