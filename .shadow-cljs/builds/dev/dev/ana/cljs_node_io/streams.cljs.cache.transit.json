["^ ","~:output",["^ ","~:js","goog.provide('cljs_node_io.streams');\ngoog.require('cljs.core');\ngoog.require('goog.Uri');\ngoog.require('cljs.core.async');\ngoog.require('cljs_node_io.protocols');\ncljs_node_io.streams.fs = require(\"fs\");\ncljs_node_io.streams.stream = require(\"stream\");\n/**\n * adds IOFactory input impls that just defer back to the stream or throw as appropriate\n * @param {!stream.Readable} streamobj\n * @return {!stream.Readable}\n */\ncljs_node_io.streams.input_IOF_BANG_ = (function cljs_node_io$streams$input_IOF_BANG_(streamobj){\nvar x6299 = streamobj;\nx6299.cljs_node_io$protocols$IInputStream$ = cljs.core.PROTOCOL_SENTINEL;\n\nx6299.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;\n\nx6299.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = ((function (x6299){\nreturn (function (this$,opts){\nvar this$__$1 = this;\nreturn this$__$1;\n});})(x6299))\n;\n\nx6299.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = ((function (x6299){\nreturn (function (this$,_){\nvar this$__$1 = this;\nreturn this$__$1;\n});})(x6299))\n;\n\nx6299.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = ((function (x6299){\nreturn (function (this$,_){\nvar this$__$1 = this;\nthrow (new Error([\"ILLEGAL ARGUMENT: Cannot open <\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$__$1], 0))),\"> as an OutputStream.\"].join('')));\n});})(x6299))\n;\n\nx6299.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = ((function (x6299){\nreturn (function (this$,_){\nvar this$__$1 = this;\nthrow (new Error([\"ILLEGAL ARGUMENT: Cannot open <\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$__$1], 0))),\"> as an OutputStream.\"].join('')));\n});})(x6299))\n;\n\nreturn x6299;\n});\n/**\n * adds IOFactory output impls that just defer back to the stream or throw as appropriate\n * @param {!stream.Writable} streamobj\n * @return {!stream.Writable}\n */\ncljs_node_io.streams.output_IOF_BANG_ = (function cljs_node_io$streams$output_IOF_BANG_(streamobj){\nvar x6305 = streamobj;\nx6305.cljs_node_io$protocols$IOutputStream$ = cljs.core.PROTOCOL_SENTINEL;\n\nx6305.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;\n\nx6305.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = ((function (x6305){\nreturn (function (this$,_){\nvar this$__$1 = this;\nthrow (new Error([\"ILLEGAL ARGUMENT: Cannot open <\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$__$1], 0))),\"> as an InputStream.\"].join('')));\n});})(x6305))\n;\n\nx6305.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = ((function (x6305){\nreturn (function (this$,_){\nvar this$__$1 = this;\nthrow (new Error([\"ILLEGAL ARGUMENT: Cannot open <\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$__$1], 0))),\"> as an InputStream.\"].join('')));\n});})(x6305))\n;\n\nx6305.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = ((function (x6305){\nreturn (function (this$,_){\nvar this$__$1 = this;\nreturn this$__$1;\n});})(x6305))\n;\n\nx6305.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = ((function (x6305){\nreturn (function (this$,_){\nvar this$__$1 = this;\nreturn this$__$1;\n});})(x6305))\n;\n\nreturn x6305;\n});\n/**\n * defer back to the stream in all cases\n * @param {!stream.Duplex} streamobj\n * @return {!stream.Duplex}\n */\ncljs_node_io.streams.duplex_IOF_BANG_ = (function cljs_node_io$streams$duplex_IOF_BANG_(streamobj){\nvar x6314 = streamobj;\nx6314.cljs_node_io$protocols$IInputStream$ = cljs.core.PROTOCOL_SENTINEL;\n\nx6314.cljs_node_io$protocols$IOutputStream$ = cljs.core.PROTOCOL_SENTINEL;\n\nx6314.cljs_node_io$protocols$IOFactory$ = cljs.core.PROTOCOL_SENTINEL;\n\nx6314.cljs_node_io$protocols$IOFactory$make_reader$arity$2 = ((function (x6314){\nreturn (function (this$,_){\nvar this$__$1 = this;\nreturn this$__$1;\n});})(x6314))\n;\n\nx6314.cljs_node_io$protocols$IOFactory$make_input_stream$arity$2 = ((function (x6314){\nreturn (function (this$,_){\nvar this$__$1 = this;\nreturn this$__$1;\n});})(x6314))\n;\n\nx6314.cljs_node_io$protocols$IOFactory$make_writer$arity$2 = ((function (x6314){\nreturn (function (this$,_){\nvar this$__$1 = this;\nreturn this$__$1;\n});})(x6314))\n;\n\nx6314.cljs_node_io$protocols$IOFactory$make_output_stream$arity$2 = ((function (x6314){\nreturn (function (this$,_){\nvar this$__$1 = this;\nreturn this$__$1;\n});})(x6314))\n;\n\nreturn x6314;\n});\n/**\n * @param {!IMap} opts\n * @return {!stream.Readable}\n */\ncljs_node_io.streams.ReadableStream = (function cljs_node_io$streams$ReadableStream(opts){\nif(cljs.core.map_QMARK_(opts)){\n} else {\nthrow (new Error([\"Assert failed: \",\"you must pass a map of constructor options containing at least a :read k-v pair\",\"\\n\",\"(map? opts)\"].join('')));\n}\n\nif(cljs.core.fn_QMARK_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,\"read\",\"read\",1140058661)))){\n} else {\nthrow (new Error([\"Assert failed: \",\"you must supply an internal :read function when creating a read stream\",\"\\n\",\"(fn? (get opts :read))\"].join('')));\n}\n\nreturn cljs_node_io.streams.input_IOF_BANG_((new cljs_node_io.streams.stream.Readable(cljs.core.clj__GT_js(opts))));\n});\n/**\n * @param {!IMap} opts\n * @return {!stream.Writable}\n */\ncljs_node_io.streams.WritableStream = (function cljs_node_io$streams$WritableStream(opts){\nif(cljs.core.map_QMARK_(opts)){\n} else {\nthrow (new Error([\"Assert failed: \",\"you must pass a map of constructor options containing at least a :write k-v pair\",\"\\n\",\"(map? opts)\"].join('')));\n}\n\nif(cljs.core.fn_QMARK_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,\"write\",\"write\",-1857649168)))){\n} else {\nthrow (new Error([\"Assert failed: \",\"you must supply an internal :write function when creating writable streams\",\"\\n\",\"(fn? (get opts :write))\"].join('')));\n}\n\nreturn cljs_node_io.streams.output_IOF_BANG_((new cljs_node_io.streams.stream.Writable(cljs.core.clj__GT_js(opts))));\n});\n/**\n * @param {!IMap} opts\n * @return {!stream.Duplex}\n */\ncljs_node_io.streams.DuplexStream = (function cljs_node_io$streams$DuplexStream(opts){\nif(cljs.core.map_QMARK_(opts)){\n} else {\nthrow (new Error([\"Assert failed: \",\"you must pass a map of constructor options containing at least :read & :write fns\",\"\\n\",\"(map? opts)\"].join('')));\n}\n\nif(((cljs.core.fn_QMARK_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,\"read\",\"read\",1140058661)))) && (cljs.core.fn_QMARK_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,\"write\",\"write\",-1857649168)))))){\n} else {\nthrow (new Error([\"Assert failed: \",\"you must supply :read & :write fns when creating duplex streams.\",\"\\n\",\"(and (fn? (get opts :read)) (fn? (get opts :write)))\"].join('')));\n}\n\nreturn cljs_node_io.streams.duplex_IOF_BANG_((new cljs_node_io.streams.stream.Duplex(cljs.core.clj__GT_js(opts))));\n});\n/**\n * @param {!IMap} opts\n * @return {!stream.Duplex}\n */\ncljs_node_io.streams.TransformStream = (function cljs_node_io$streams$TransformStream(opts){\nif(cljs.core.map_QMARK_(opts)){\n} else {\nthrow (new Error([\"Assert failed: \",\"you must pass a map of constructor options containing at least a :transform fn\",\"\\n\",\"(map? opts)\"].join('')));\n}\n\nif(cljs.core.fn_QMARK_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,\"transform\",\"transform\",1381301764)))){\n} else {\nthrow (new Error([\"Assert failed: \",\"you must supply a :transform fn when creating a transform stream.\",\"\\n\",\"(fn? (get opts :transform))\"].join('')));\n}\n\nif((function (){var temp__5455__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,\"flush\",\"flush\",-1138711199));\nif(cljs.core.truth_(temp__5455__auto__)){\nvar flush = temp__5455__auto__;\nreturn cljs.core.fn_QMARK_(flush);\n} else {\nreturn true;\n}\n})()){\n} else {\nthrow (new Error([\"Assert failed: \",\":flush must be a fn\",\"\\n\",\"(if-let [flush (get opts :flush)] (fn? flush) true)\"].join('')));\n}\n\nreturn cljs_node_io.streams.duplex_IOF_BANG_((new cljs_node_io.streams.stream.Transform(cljs.core.clj__GT_js(opts))));\n});\n/**\n * Creates a ReadableStream from a Buffer. Opts are same as ReadableStream except\n * the :read fn is provided. If you provide :read, it is ignored\n * @return {!stream.Readable}\n */\ncljs_node_io.streams.BufferReadStream = (function cljs_node_io$streams$BufferReadStream(var_args){\nvar G__6390 = arguments.length;\nswitch (G__6390) {\ncase 1:\nreturn cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$1 = (function (source){\nreturn cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$2(source,null);\n});\n\ncljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$2 = (function (source,opts){\nif(cljs.core.truth_(Buffer.isBuffer(source))){\n} else {\nthrow (new Error([\"Assert failed: \",\"source must be a Buffer instance\",\"\\n\",\"(js/Buffer.isBuffer source)\"].join('')));\n}\n\nvar offset = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\nvar length = source.length;\nvar read = ((function (offset,length){\nreturn (function (size){\nvar this$ = this;\nif((cljs.core.deref(offset) < length)){\nvar chunk = source.slice(cljs.core.deref(offset),(cljs.core.deref(offset) + size));\nthis$.push(chunk);\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(offset,cljs.core._PLUS_,size);\n} else {\nreturn this$.push(null);\n}\n});})(offset,length))\n;\nvar strm = cljs_node_io.streams.ReadableStream(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([opts,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"read\",\"read\",1140058661),read], null)], 0)));\nreturn cljs_node_io.streams.input_IOF_BANG_(strm);\n});\n\ncljs_node_io.streams.BufferReadStream.cljs$lang$maxFixedArity = 2;\n\n/**\n * Creates WritableStream to a buffer. The buffer is formed from concatenated\n * chunks passed to write method. cb is called with the buffer on the 'finish' event.\n * 'finish' must be triggered to recieve buffer\n * @return {!stream.Writable}\n */\ncljs_node_io.streams.BufferWriteStream = (function cljs_node_io$streams$BufferWriteStream(var_args){\nvar G__6418 = arguments.length;\nswitch (G__6418) {\ncase 1:\nreturn cljs_node_io.streams.BufferWriteStream.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs_node_io.streams.BufferWriteStream.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs_node_io.streams.BufferWriteStream.cljs$core$IFn$_invoke$arity$1 = (function (cb){\nreturn cljs_node_io.streams.BufferWriteStream.cljs$core$IFn$_invoke$arity$2(cb,null);\n});\n\ncljs_node_io.streams.BufferWriteStream.cljs$core$IFn$_invoke$arity$2 = (function (cb,opts){\nvar data = [];\nvar buf = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\nvar write = ((function (data,buf){\nreturn (function (chunk,_,callback){\ndata.push(chunk);\n\nreturn (callback.cljs$core$IFn$_invoke$arity$0 ? callback.cljs$core$IFn$_invoke$arity$0() : callback.call(null));\n});})(data,buf))\n;\nvar strm = cljs_node_io.streams.WritableStream(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([opts,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"write\",\"write\",-1857649168),write], null)], 0)));\nvar _ = strm.buf = data;\nvar ___$1 = strm.on(\"finish\",((function (data,buf,write,strm,_){\nreturn (function (){\nvar b = Buffer.concat(data);\ncljs.core.reset_BANG_(buf,b);\n\nreturn (cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(b) : cb.call(null,b));\n});})(data,buf,write,strm,_))\n);\nvar x6436 = cljs_node_io.streams.output_IOF_BANG_(strm);\nx6436.toString = ((function (x6436,data,buf,write,strm,_,___$1){\nreturn (function (){\nvar ___$2 = this;\nif(cljs.core.truth_(cljs.core.deref(buf))){\nreturn cljs.core.deref(buf).toString();\n} else {\nreturn null;\n}\n});})(x6436,data,buf,write,strm,_,___$1))\n;\n\nx6436.toBuffer = ((function (x6436,data,buf,write,strm,_,___$1){\nreturn (function (){\nvar ___$2 = this;\nreturn cljs.core.deref(buf);\n});})(x6436,data,buf,write,strm,_,___$1))\n;\n\nreturn x6436;\n});\n\ncljs_node_io.streams.BufferWriteStream.cljs$lang$maxFixedArity = 2;\n\n/**\n * @param {!Number} fd\n * @return {!boolean} is File-descriptor?\n */\ncljs_node_io.streams.fd_QMARK_ = (function cljs_node_io$streams$fd_QMARK_(fd){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fd,(fd >>> (0)));\n});\n/**\n * @param {(string|Uri|IFile)} f :: path to filestream\n * @param {?IMap} opts :: map of options\n * @param {!string} k :: string provided by caller for more detailed error in else case\n * @return {?string} or throws. returns nil if fd is present in opts, otherwise returns pathstring\n */\ncljs_node_io.streams.filepath = (function cljs_node_io$streams$filepath(f,opts,k){\nvar fd = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,\"fd\",\"fd\",-1524403000));\nif(cljs_node_io.streams.fd_QMARK_(fd)){\nreturn null;\n} else {\nif(typeof f === 'string'){\nreturn f;\n} else {\nif((function (){var or__3949__auto__ = ((!((f == null)))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === f.cljs_node_io$protocols$IFile$))))?true:false):false);\nif(or__3949__auto__){\nreturn or__3949__auto__;\n} else {\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(goog.Uri,cljs.core.type(f));\n}\n})()){\nreturn f.getPath();\n} else {\nthrow (new TypeError([\"Unrecognized path configuration passed to File\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(k),\"Stream constructor.\",\"\\n    You passed \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))),\" and \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([opts], 0))),\"\\n    You must pass a [pathstring opts], [uri opts], [file opts], or include :fd in opts .\"].join('')));\n\n}\n}\n}\n});\n/**\n * @param {!string} src :: filepath to read from\n * @param {!IMap} opts :: map of options\n * @return {!stream.Readable}\n */\ncljs_node_io.streams.FileInputStream_STAR_ = (function cljs_node_io$streams$FileInputStream_STAR_(src,opts){\nvar map__6481 = opts;\nvar map__6481__$1 = ((((!((map__6481 == null)))?(((((map__6481.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__6481.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__6481):map__6481);\nvar flags = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6481__$1,new cljs.core.Keyword(null,\"flags\",\"flags\",1775418075));\nvar encoding = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6481__$1,new cljs.core.Keyword(null,\"encoding\",\"encoding\",1728578272));\nvar fd = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6481__$1,new cljs.core.Keyword(null,\"fd\",\"fd\",-1524403000));\nvar mode = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6481__$1,new cljs.core.Keyword(null,\"mode\",\"mode\",654403691));\nvar autoClose_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6481__$1,new cljs.core.Keyword(null,\"autoClose?\",\"autoClose?\",375814080));\nvar options = ({\"encoding\": (function (){var or__3949__auto__ = encoding;\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn null;\n}\n})(), \"flags\": (function (){var or__3949__auto__ = flags;\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn \"r\";\n}\n})(), \"fd\": (function (){var or__3949__auto__ = fd;\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn null;\n}\n})(), \"mode\": (function (){var or__3949__auto__ = mode;\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn (438);\n}\n})(), \"autoClose\": (function (){var or__3949__auto__ = autoClose_QMARK_;\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn true;\n}\n})()});\nvar filestreamobj = cljs_node_io.streams.fs.createReadStream(src,options);\nvar filedesc = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\nvar _ = filestreamobj.on(\"open\",((function (map__6481,map__6481__$1,flags,encoding,fd,mode,autoClose_QMARK_,options,filestreamobj,filedesc){\nreturn (function (fd__$1){\nreturn cljs.core.reset_BANG_(filedesc,fd__$1);\n});})(map__6481,map__6481__$1,flags,encoding,fd,mode,autoClose_QMARK_,options,filestreamobj,filedesc))\n);\nvar x6488_6606 = filestreamobj;\nx6488_6606.cljs_node_io$protocols$IInputStream$ = cljs.core.PROTOCOL_SENTINEL;\n\nx6488_6606.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;\n\nx6488_6606.cljs$core$IEquiv$_equiv$arity$2 = ((function (x6488_6606,map__6481,map__6481__$1,flags,encoding,fd,mode,autoClose_QMARK_,options,filestreamobj,filedesc,_){\nreturn (function (this$,that){\nvar this$__$1 = this;\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.type(this$__$1),cljs.core.type(that))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this$__$1.path,that.path)));\n});})(x6488_6606,map__6481,map__6481__$1,flags,encoding,fd,mode,autoClose_QMARK_,options,filestreamobj,filedesc,_))\n;\n\nx6488_6606.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;\n\nx6488_6606.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = ((function (x6488_6606,map__6481,map__6481__$1,flags,encoding,fd,mode,autoClose_QMARK_,options,filestreamobj,filedesc,_){\nreturn (function (this$,writer,opts__$1){\nvar this$__$1 = this;\ncljs.core._write(writer,\"#object [FileInputStream\");\n\nreturn cljs.core._write(writer,[\"  \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1.path),\"]\"].join(''));\n});})(x6488_6606,map__6481,map__6481__$1,flags,encoding,fd,mode,autoClose_QMARK_,options,filestreamobj,filedesc,_))\n;\n\nx6488_6606.getFd = ((function (x6488_6606,map__6481,map__6481__$1,flags,encoding,fd,mode,autoClose_QMARK_,options,filestreamobj,filedesc,_){\nreturn (function (){\nvar ___$1 = this;\nreturn cljs.core.deref(filedesc);\n});})(x6488_6606,map__6481,map__6481__$1,flags,encoding,fd,mode,autoClose_QMARK_,options,filestreamobj,filedesc,_))\n;\n\n\nreturn cljs_node_io.streams.input_IOF_BANG_(filestreamobj);\n});\n/**\n * @return {!stream.Readable}\n */\ncljs_node_io.streams.FileInputStream = (function cljs_node_io$streams$FileInputStream(var_args){\nvar G__6515 = arguments.length;\nswitch (G__6515) {\ncase 1:\nreturn cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$1 = (function (src){\nreturn cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2(src,null);\n});\n\ncljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2 = (function (src,opts){\nreturn cljs_node_io.streams.FileInputStream_STAR_(cljs_node_io.streams.filepath(src,opts,\"Input\"),opts);\n});\n\ncljs_node_io.streams.FileInputStream.cljs$lang$maxFixedArity = 2;\n\n/**\n * @param {!string} target :: filepath to write to\n * @param {!IMap} opts :: map of options\n * @return {!stream.Writable}\n */\ncljs_node_io.streams.FileOutputStream_STAR_ = (function cljs_node_io$streams$FileOutputStream_STAR_(target,opts){\nvar map__6527 = opts;\nvar map__6527__$1 = ((((!((map__6527 == null)))?(((((map__6527.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__6527.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__6527):map__6527);\nvar append = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6527__$1,new cljs.core.Keyword(null,\"append\",\"append\",-291298229));\nvar flags = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6527__$1,new cljs.core.Keyword(null,\"flags\",\"flags\",1775418075));\nvar encoding = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6527__$1,new cljs.core.Keyword(null,\"encoding\",\"encoding\",1728578272));\nvar mode = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6527__$1,new cljs.core.Keyword(null,\"mode\",\"mode\",654403691));\nvar fd = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6527__$1,new cljs.core.Keyword(null,\"fd\",\"fd\",-1524403000));\nvar options = ({\"defaultEncoding\": (function (){var or__3949__auto__ = encoding;\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn \"utf8\";\n}\n})(), \"flags\": (function (){var or__3949__auto__ = flags;\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nif(cljs.core.truth_(append)){\nreturn \"a\";\n} else {\nreturn \"w\";\n}\n}\n})(), \"fd\": (function (){var or__3949__auto__ = fd;\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn null;\n}\n})(), \"mode\": (function (){var or__3949__auto__ = mode;\nif(cljs.core.truth_(or__3949__auto__)){\nreturn or__3949__auto__;\n} else {\nreturn (438);\n}\n})()});\nvar filestreamobj = cljs_node_io.streams.fs.createWriteStream(target,options);\nvar filedesc = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\nvar _ = filestreamobj.on(\"open\",((function (map__6527,map__6527__$1,append,flags,encoding,mode,fd,options,filestreamobj,filedesc){\nreturn (function (fd__$1){\nreturn cljs.core.reset_BANG_(filedesc,fd__$1);\n});})(map__6527,map__6527__$1,append,flags,encoding,mode,fd,options,filestreamobj,filedesc))\n);\nvar x6531_6627 = filestreamobj;\nx6531_6627.cljs_node_io$protocols$IOutputStream$ = cljs.core.PROTOCOL_SENTINEL;\n\nx6531_6627.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;\n\nx6531_6627.cljs$core$IEquiv$_equiv$arity$2 = ((function (x6531_6627,map__6527,map__6527__$1,append,flags,encoding,mode,fd,options,filestreamobj,filedesc,_){\nreturn (function (this$,that){\nvar this$__$1 = this;\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.type(this$__$1),cljs.core.type(that))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this$__$1.path,that.path)));\n});})(x6531_6627,map__6527,map__6527__$1,append,flags,encoding,mode,fd,options,filestreamobj,filedesc,_))\n;\n\nx6531_6627.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;\n\nx6531_6627.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = ((function (x6531_6627,map__6527,map__6527__$1,append,flags,encoding,mode,fd,options,filestreamobj,filedesc,_){\nreturn (function (this$,writer,opts__$1){\nvar this$__$1 = this;\ncljs.core._write(writer,\"#object [FileOutputStream\");\n\nreturn cljs.core._write(writer,[\"  \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1.path),\"]\"].join(''));\n});})(x6531_6627,map__6527,map__6527__$1,append,flags,encoding,mode,fd,options,filestreamobj,filedesc,_))\n;\n\nx6531_6627.getFd = ((function (x6531_6627,map__6527,map__6527__$1,append,flags,encoding,mode,fd,options,filestreamobj,filedesc,_){\nreturn (function (){\nvar ___$1 = this;\nreturn cljs.core.deref(filedesc);\n});})(x6531_6627,map__6527,map__6527__$1,append,flags,encoding,mode,fd,options,filestreamobj,filedesc,_))\n;\n\n\nreturn cljs_node_io.streams.output_IOF_BANG_(filestreamobj);\n});\n/**\n * @return {!stream.Writable}\n */\ncljs_node_io.streams.FileOutputStream = (function cljs_node_io$streams$FileOutputStream(var_args){\nvar G__6540 = arguments.length;\nswitch (G__6540) {\ncase 1:\nreturn cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$1 = (function (target){\nreturn cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$2(target,null);\n});\n\ncljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$2 = (function (target,opts){\nreturn cljs_node_io.streams.FileOutputStream_STAR_(cljs_node_io.streams.filepath(target,opts,\"Output\"),opts);\n});\n\ncljs_node_io.streams.FileOutputStream.cljs$lang$maxFixedArity = 2;\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs_node_io/streams.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",25],"~:ns-aliases",["^ ","~$jsonwebtoken","~$shadow.js.shim.module$jsonwebtoken","~$mqtt","~$shadow.js.shim.module$mqtt","~$systeminformation","~$shadow.js.shim.module$systeminformation","~$clojure.core.async","~$cljs.core.async","~$raspicam","~$shadow.js.shim.module$raspicam"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$cljs-node-io.streams","~:op","~:ns","~:imports",["^ ","~$Uri","~$goog.Uri"],"~:requires",["^ ","^N","^O","^C","^C","~$async","^C","~$cljs-node-io.protocols","^R","~$cljs.core","^S","~$goog","^T"],"~:seen",["^H",["~:require"]],"~:uses",["^ ","~$make-output-stream","^R","~$<!","^C","~$make-writer","^R","~$chan","^C","~$as-file","^R","~$make-reader","^R","~$Coercions","^R","~$pipe","^C","~$IInputStream","^R","~$make-input-stream","^R","~$alts!","^C","~$IOFactory","^R","~$IFile","^R","~$as-url","^R","~$IOutputStream","^R","~$put!","^C","~$take!","^C"],"~:require-macros",["^ ","^S","^S","^C","^C","^Q","^C"],"~:form",["~#list",["~$ns","^J",["^1?",["~:import","^O"]],["^1?",["^V",["^C","~:as","^Q","~:refer",["^1;","^1<","^[","^Y","^13","^16"]],["^R","^1C",["^12","^19","^10","^14","^1:","^18","^17","^11","^Z","^15","^X"]]]]]],"~:flags",["^ ","^V",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^T","^S","^O","^C","^R"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","cljs_node_io/streams.cljs"],"~:compiled-at",1540143515420,"~:resource-name","cljs_node_io/streams.cljs","~:warnings",[],"~:source","(ns cljs-node-io.streams\n  (:import goog.Uri)\n  (:require [cljs.core.async :as async :refer [put! take! chan <! pipe  alts!]]\n            [cljs-node-io.protocols\n              :refer [Coercions as-url as-file\n                      IInputStream IOutputStream IFile\n                      IOFactory make-reader make-writer make-input-stream make-output-stream]]))\n\n(def fs (js/require \"fs\"))\n(def stream (js/require \"stream\"))\n\n(defn input-IOF!\n  \"adds IOFactory input impls that just defer back to the stream or throw as appropriate\n   @param {!stream.Readable} streamobj\n   @return {!stream.Readable}\"\n  [streamobj]\n  (specify! streamobj\n    IInputStream\n    IOFactory\n    (make-reader [this opts] this)\n    (make-input-stream [this _] this)\n    (make-writer [this _] (throw (js/Error. (str \"ILLEGAL ARGUMENT: Cannot open <\" (pr-str this) \"> as an OutputStream.\"))))\n    (make-output-stream [this _] (throw (js/Error. (str \"ILLEGAL ARGUMENT: Cannot open <\" (pr-str this) \"> as an OutputStream.\"))))))\n\n(defn output-IOF!\n  \"adds IOFactory output impls that just defer back to the stream or throw as appropriate\n   @param {!stream.Writable} streamobj\n   @return {!stream.Writable}\"\n  [streamobj]\n  (specify! streamobj\n    IOutputStream\n    IOFactory\n    (make-reader [this _] (throw (js/Error. (str \"ILLEGAL ARGUMENT: Cannot open <\" (pr-str this) \"> as an InputStream.\"))))\n    (make-input-stream [this _] (throw (js/Error. (str \"ILLEGAL ARGUMENT: Cannot open <\" (pr-str this) \"> as an InputStream.\"))))\n    (make-writer [this _] this)\n    (make-output-stream [this _] this)))\n\n(defn duplex-IOF!\n  \"defer back to the stream in all cases\n   @param {!stream.Duplex} streamobj\n   @return {!stream.Duplex}\"\n  [streamobj]\n  (specify! streamobj\n    IInputStream\n    IOutputStream\n    IOFactory\n    (make-reader [this _] this)\n    (make-input-stream [this _] this)\n    (make-writer [this _] this)\n    (make-output-stream [this _] this)))\n\n\n(defn ReadableStream\n  \"@param {!IMap} opts\n   @return {!stream.Readable}\"\n  [opts]\n  (assert (map? opts) \"you must pass a map of constructor options containing at least a :read k-v pair\")\n  (assert (fn? (get opts :read)) \"you must supply an internal :read function when creating a read stream\")\n  (input-IOF! (new stream.Readable (clj->js opts))))\n\n(defn WritableStream\n  \"@param {!IMap} opts\n   @return {!stream.Writable}\"\n  [opts]\n  (assert (map? opts) \"you must pass a map of constructor options containing at least a :write k-v pair\")\n  (assert (fn? (get opts :write)) \"you must supply an internal :write function when creating writable streams\")\n  (output-IOF! (new stream.Writable (clj->js opts))))\n\n(defn DuplexStream\n  \"@param {!IMap} opts\n   @return {!stream.Duplex}\"\n  [opts]\n  (assert (map? opts) \"you must pass a map of constructor options containing at least :read & :write fns\")\n  (assert (and (fn? (get opts :read)) (fn? (get opts :write))) \"you must supply :read & :write fns when creating duplex streams.\")\n  (duplex-IOF! (new stream.Duplex (clj->js opts))))\n\n(defn TransformStream\n  \"@param {!IMap} opts\n   @return {!stream.Duplex}\"\n  [opts]\n  (assert (map? opts) \"you must pass a map of constructor options containing at least a :transform fn\")\n  (assert (fn? (get opts :transform)) \"you must supply a :transform fn when creating a transform stream.\")\n  (assert (if-let [flush (get opts :flush)] (fn? flush) true) \":flush must be a fn\")\n  (duplex-IOF! (new stream.Transform (clj->js opts))))\n\n(defn BufferReadStream\n  \"Creates a ReadableStream from a Buffer. Opts are same as ReadableStream except\n   the :read fn is provided. If you provide :read, it is ignored\n   @return {!stream.Readable}\"\n  ([source](BufferReadStream source nil))\n  ([source opts]\n   (assert (js/Buffer.isBuffer source) \"source must be a Buffer instance\")\n   (let [offset (atom 0)\n         length (.-length source)\n         read   (fn [size]\n                  (this-as this\n                   (if (< @offset length)\n                     ; still buffer to consume\n                     (let [chunk (.slice source @offset (+ @offset size))]\n                       (.push this chunk)\n                       (swap! offset + size))\n                     ; offset>=buffer length...totally consumed\n                     (.push this nil))))\n         strm (ReadableStream (merge opts {:read read}))]\n     (input-IOF! strm))))\n\n(defn BufferWriteStream\n  \"Creates WritableStream to a buffer. The buffer is formed from concatenated\n   chunks passed to write method. cb is called with the buffer on the 'finish' event.\n   'finish' must be triggered to recieve buffer\n   @return {!stream.Writable}\"\n  ([cb] (BufferWriteStream cb nil))\n  ([cb opts]\n   (let [data  #js[]\n         buf   (atom nil)\n         write (fn [chunk _ callback]\n                 (.push data chunk)\n                 (callback))\n         strm  (WritableStream (merge opts {:write write}))\n         _     (set! (.-buf strm) data)\n         _     (.on strm \"finish\"\n                (fn []\n                  (let [b (js/Buffer.concat data)]\n                    (reset! buf b)\n                    (cb b))))]\n     (specify! (output-IOF! strm)\n      Object\n      ; (destroy [this] )\n      (toString [_] (if @buf (.toString @buf)))\n      (toBuffer [_] @buf)))))\n\n(defn- ^boolean fd?\n  \"@param {!Number} fd\n   @return {!boolean} is File-descriptor?\"\n   [fd]\n   (= fd (unsigned-bit-shift-right fd 0)))\n\n(defn- filepath\n  \"@param {(string|Uri|IFile)} f :: path to filestream\n   @param {?IMap} opts :: map of options\n   @param {!string} k :: string provided by caller for more detailed error in else case\n   @return {?string} or throws. returns nil if fd is present in opts, otherwise returns pathstring\"\n  [f opts k]\n  (let [fd (get opts :fd)]\n    (cond\n      (fd? fd) nil\n      (string? f) f\n      (or (implements? IFile f) (= Uri (type f))) (.getPath f)\n      :else\n      (throw (js/TypeError.\n              (str \"Unrecognized path configuration passed to File\" k \"Stream constructor.\"\n                   \"\\n    You passed \" (pr-str f) \" and \" (pr-str opts)\n                   \"\\n    You must pass a [pathstring opts], [uri opts], [file opts], or include :fd in opts .\" ))))))\n\n(defn- FileInputStream*\n  \"@param {!string} src :: filepath to read from\n   @param {!IMap} opts :: map of options\n   @return {!stream.Readable}\"\n  [src opts]\n  (let [{:keys [flags encoding fd mode autoClose?]} opts\n        options #js {\"encoding\" (or encoding nil)\n                     \"flags\" (or flags \"r\")\n                     \"fd\" (or fd nil)\n                     \"mode\" (or mode 438)\n                     \"autoClose\" (or autoClose? true)}\n        filestreamobj (.createReadStream fs src options)\n        filedesc      (atom nil)\n        _             (.on filestreamobj \"open\" (fn [fd] (reset! filedesc fd )))]\n    (specify! filestreamobj\n      IInputStream\n      IEquiv\n      (-equiv [this that] (and (= (type this) (type that)) (= (.-path this) (.-path that))))\n      IPrintWithWriter\n      (-pr-writer [this writer opts]\n        (-write writer \"#object [FileInputStream\")\n        (-write writer (str \"  \"  (.-path this)  \"]\")))\n      Object\n      (getFd [_] @filedesc))\n    (input-IOF! filestreamobj)))\n\n(defn FileInputStream\n  \"@return {!stream.Readable}\"\n  ([src] (FileInputStream src nil))\n  ([src opts] (FileInputStream* (filepath src opts \"Input\") opts)))\n\n\n(defn- FileOutputStream*\n  \"@param {!string} target :: filepath to write to\n   @param {!IMap} opts :: map of options\n   @return {!stream.Writable}\"\n  [target opts]\n  (let [{:keys [append flags encoding mode fd]} opts\n        options  #js {\"defaultEncoding\" (or encoding \"utf8\")\n                      \"flags\" (or flags (if append \"a\" \"w\"))\n                      \"fd\" (or fd nil)\n                      \"mode\" (or mode 438)}\n        filestreamobj (.createWriteStream fs target options)\n        filedesc      (atom nil)\n        _             (.on filestreamobj \"open\" (fn [fd] (reset! filedesc fd )))]\n    (specify! filestreamobj\n      IOutputStream\n      IEquiv\n      (-equiv [this that] (and (= (type this) (type that)) (= (.-path this) (.-path that))))\n      IPrintWithWriter\n      (-pr-writer [this writer opts]\n        (-write writer \"#object [FileOutputStream\")\n        (-write writer (str \"  \"  (.-path this)  \"]\")))\n      Object\n      (getFd [_] @filedesc))\n    (output-IOF! filestreamobj)))\n\n(defn FileOutputStream\n  \"@return {!stream.Writable}\"\n  ([target] (FileOutputStream target nil))\n  ([target opts](FileOutputStream* (filepath target opts \"Output\") opts)))\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["cljs-node-io.streams/fs","js/require","cljs-node-io.streams/stream","cljs-node-io.streams/input-IOF!","streamobj","x6299","cljs.core/PROTOCOL_SENTINEL","this","opts","_","js/Error","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","cljs-node-io.streams/output-IOF!","x6305","cljs-node-io.streams/duplex-IOF!","x6314","cljs-node-io.streams/ReadableStream","cljs.core/map?","cljs.core/fn?","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs-node-io.streams/stream.Readable","cljs.core/clj->js","cljs-node-io.streams/WritableStream","cljs-node-io.streams/stream.Writable","cljs-node-io.streams/DuplexStream","cljs-node-io.streams/stream.Duplex","cljs-node-io.streams/TransformStream","temp__5455__auto__","flush","cljs-node-io.streams/stream.Transform","var_args","G__6390","cljs-node-io.streams/BufferReadStream","source","cljs_node_io.streams.BufferReadStream.cljs$core$IFn$_invoke$arity$2","js/Buffer.isBuffer","offset","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","length","read","size","cljs.core/deref","chunk","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/+","strm","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","G__6418","cljs-node-io.streams/BufferWriteStream","cb","cljs_node_io.streams.BufferWriteStream.cljs$core$IFn$_invoke$arity$2","data","buf","write","callback","b","js/Buffer.concat","cljs.core/reset!","x6436","cljs-node-io.streams/fd?","fd","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs-node-io.streams/filepath","f","k","or__3949__auto__","goog/Uri","cljs.core/type","js/TypeError","cljs-node-io.streams/FileInputStream*","src","map__6481","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","flags","encoding","mode","autoClose?","options","filestreamobj","filedesc","x6488","that","writer","cljs.core/-write","G__6515","cljs-node-io.streams/FileInputStream","cljs_node_io.streams.FileInputStream.cljs$core$IFn$_invoke$arity$2","cljs-node-io.streams/FileOutputStream*","target","map__6527","append","x6531","G__6540","cljs-node-io.streams/FileOutputStream","cljs_node_io.streams.FileOutputStream.cljs$core$IFn$_invoke$arity$2"]]],"~:cache-keys",["~#cmap",[["^1H","goog/dom/tagname.js"],[1530991559994,"^T","~$goog.dom.HtmlElement"],["^1H","cljs/core/async/impl/ioc_helpers.cljs"],[1534380136417,"^T","^S","~$cljs.core.async.impl.protocols"],["~:macro","^S"],[1534380137000],["^1H","cljs/core/async.cljs"],[1534380136417,"^T","^S","^1V","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers"],["^1H","goog/math/math.js"],[1530991559994,"^T","~$goog.array","~$goog.asserts"],["^1H","goog/labs/useragent/browser.js"],[1530991559994,"^T","^21","~$goog.labs.userAgent.util","~$goog.object","~$goog.string"],["^1H","goog/array/array.js"],[1530991559994,"^T","^22"],["^1H","cljs_node_io/protocols.cljs"],[1537666007418,"^T","^S"],["^1H","cljs_node_io/streams.cljs"],[1537666007418,"^T","^S","^O","^C","^R"],["^1H","goog/debug/error.js"],[1530991559994,"^T"],["^1H","goog/dom/nodetype.js"],[1530991559994,"^T"],["^1H","goog/object/object.js"],[1530991559994,"^T"],"~:SHADOW-TIMESTAMP",[1540077702000,1534380137000],["^1H","goog/math/long.js"],[1530991559994,"^T","^22","~$goog.reflect"],["^1H","cljs/core/async/impl/channels.cljs"],[1534380136417,"^T","^S","^1V","^1[","^1Y"],["^1H","goog/functions/functions.js"],[1530991559994,"^T"],["^1H","cljs/core/async/impl/dispatch.cljs"],[1534380136417,"^T","^S","^1Y","~$goog.async.nextTick"],["^1H","cljs/core/async/impl/protocols.cljs"],[1534380136417,"^T","^S"],["^1H","goog/structs/map.js"],[1530991559994,"^T","~$goog.iter.Iterator","~$goog.iter.StopIteration","^24"],["^1H","goog/labs/useragent/engine.js"],[1530991559994,"^T","^21","^23","^25"],["^1H","goog/asserts/asserts.js"],[1530991559994,"^T","~$goog.debug.Error","~$goog.dom.NodeType","^25"],["^1H","cljs/core/async/impl/buffers.cljs"],[1534380136417,"^T","^S","^1V"],["^1H","goog/uri/uri.js"],[1530991559994,"^T","^21","^22","^25","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1W","^C"],[1534380136000],["^1H","cljs/core/async/impl/timers.cljs"],[1534380136417,"^T","^S","^1V","^1X","^1["],["^1H","goog/base.js"],[1530991559994],["^1H","goog/structs/structs.js"],[1530991559994,"^T","^21","^24"],["^1H","goog/debug/entrypointregistry.js"],[1530991559994,"^T","^22"],["^1H","goog/string/string.js"],[1530991559994,"^T"],["^1H","goog/reflect/reflect.js"],[1530991559994,"^T"],["^1H","goog/labs/useragent/util.js"],[1530991559994,"^T","^25"],["^1W","~$cljs.core.async.impl.ioc-macros"],[1534380136000],["^1H","goog/string/stringbuffer.js"],[1530991559994,"^T"],["^1H","goog/iter/iter.js"],[1530991559994,"^T","^21","^22","~$goog.functions","~$goog.math"],["^1H","goog/async/nexttick.js"],[1530991559994,"^T","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^2C","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"],["^1H","goog/dom/htmlelement.js"],[1530991559994,"^T"],["^1H","cljs/core.cljs"],[1534380137690,"~$goog.math.Long","~$goog.math.Integer","^25","^24","^21","^O","~$goog.string.StringBuffer"],["^1H","goog/math/integer.js"],[1530991559994,"^T"],["^1H","goog/uri/utils.js"],[1530991559994,"^T","^21","^22","^25"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",1,"^8",5,"^9",1,"^:",25],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",null,"^G",["^H",[]],"~:shadow/js-access-properties",["^H",["toBuffer","getFd","createReadStream","createWriteStream","cljs-node-io$protocols$IOutputStream$","on","concat","isBuffer","cljs-node-io$protocols$IInputStream$"]],"^I","^J","^M",["^ ","^N","^O"],"^P",["^ ","^N","^O","^C","^C","^Q","^C","^R","^R","^S","^S","^T","^T"],"^U",["^H",["^V"]],"~:shadow/js-access-global",["^H",["TypeError","require","Buffer","Error"]],"^W",["^ ","^X","^R","^Y","^C","^Z","^R","^[","^C","^10","^R","^11","^R","^12","^R","^13","^C","^14","^R","^15","^R","^16","^C","^17","^R","^18","^R","^19","^R","^1:","^R","^1;","^C","^1<","^C"],"~:defs",["^ ","~$fd?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",132,"^8",17,"^9",132,"^:",20,"~:tag","~$boolean","~:private",true,"~:arglists",["^1?",["~$quote",["^1?",[["~$fd"]]]]],"~:doc","@param {!Number} fd\n   @return {!boolean} is File-descriptor?"],"^2T",true,"^I","~$cljs-node-io.streams/fd?","~:variadic",false,"^6","cljs_node_io/streams.cljs","^:",20,"~:method-params",["^1?",[["^2W"]]],"~:protocol-impl",null,"~:arglists-meta",["^1?",[null,null]],"^8",1,"^7",132,"~:ret-tag","^2S","^9",132,"~:max-fixed-arity",1,"^2R","^2S","~:fn-var",true,"^2U",["^1?",["^2V",["^1?",[["^2W"]]]]],"^2X","@param {!Number} fd\n   @return {!boolean} is File-descriptor?"],"~$BufferWriteStream",["^ ","^2Q",null,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",107,"^8",7,"^9",107,"^:",24,"^2U",["^1?",["^2V",["^1?",[["~$cb"],["^36","~$opts"]]]]],"^2X","Creates WritableStream to a buffer. The buffer is formed from concatenated\n   chunks passed to write method. cb is called with the buffer on the 'finish' event.\n   'finish' must be triggered to recieve buffer\n   @return {!stream.Writable}","~:top-fn",["^ ","^2Z",false,"^33",2,"^2[",["^1?",[["^36"],["^36","^37"]]],"^2U",["^1?",[["^36"],["^36","^37"]]],"^31",["^1?",[null,null]]]],"^I","~$cljs-node-io.streams/BufferWriteStream","^2Z",false,"^6","cljs_node_io/streams.cljs","^:",24,"^38",["^ ","^2Z",false,"^33",2,"^2[",["^1?",[["^36"],["^36","^37"]]],"^2U",["^1?",[["^36"],["^36","^37"]]],"^31",["^1?",[null,null]]],"^2[",["^1?",[["^36"],["^36","^37"]]],"^30",null,"^31",["^1?",[null,null]],"^8",1,"^7",107,"^9",107,"^33",2,"^34",true,"^2U",["^1?",[["^36"],["^36","^37"]]],"^2X","Creates WritableStream to a buffer. The buffer is formed from concatenated\n   chunks passed to write method. cb is called with the buffer on the 'finish' event.\n   'finish' must be triggered to recieve buffer\n   @return {!stream.Writable}"],"~$fs",["^ ","^I","~$cljs-node-io.streams/fs","^6","cljs_node_io/streams.cljs","^7",9,"^8",1,"^9",9,"^:",8,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",9,"^8",6,"^9",9,"^:",8],"^2R","~$js"],"~$input-IOF!",["^ ","^2Q",null,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",12,"^8",7,"^9",12,"^:",17,"^2U",["^1?",["^2V",["^1?",[["~$streamobj"]]]]],"^2X","adds IOFactory input impls that just defer back to the stream or throw as appropriate\n   @param {!stream.Readable} streamobj\n   @return {!stream.Readable}"],"^I","~$cljs-node-io.streams/input-IOF!","^2Z",false,"^6","cljs_node_io/streams.cljs","^:",17,"^2[",["^1?",[["^3>"]]],"^30",null,"^31",["^1?",[null,null]],"^8",1,"^7",12,"^9",12,"^33",1,"^34",true,"^2U",["^1?",["^2V",["^1?",[["^3>"]]]]],"^2X","adds IOFactory input impls that just defer back to the stream or throw as appropriate\n   @param {!stream.Readable} streamobj\n   @return {!stream.Readable}"],"~$ReadableStream",["^ ","^2Q",null,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",53,"^8",7,"^9",53,"^:",21,"^2U",["^1?",["^2V",["^1?",[["^37"]]]]],"^2X","@param {!IMap} opts\n   @return {!stream.Readable}"],"^I","~$cljs-node-io.streams/ReadableStream","^2Z",false,"^6","cljs_node_io/streams.cljs","^:",21,"^2[",["^1?",[["^37"]]],"^30",null,"^31",["^1?",[null,null]],"^8",1,"^7",53,"^9",53,"^33",1,"^34",true,"^2U",["^1?",["^2V",["^1?",[["^37"]]]]],"^2X","@param {!IMap} opts\n   @return {!stream.Readable}"],"~$FileOutputStream*",["^ ","^2Q",null,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",187,"^8",8,"^9",187,"^:",25,"^2T",true,"^2U",["^1?",["^2V",["^1?",[["~$target","^37"]]]]],"^2X","@param {!string} target :: filepath to write to\n   @param {!IMap} opts :: map of options\n   @return {!stream.Writable}"],"^2T",true,"^I","~$cljs-node-io.streams/FileOutputStream*","^2Z",false,"^6","cljs_node_io/streams.cljs","^:",25,"^2[",["^1?",[["^3C","^37"]]],"^30",null,"^31",["^1?",[null,null]],"^8",1,"^7",187,"^9",187,"^33",2,"^34",true,"^2U",["^1?",["^2V",["^1?",[["^3C","^37"]]]]],"^2X","@param {!string} target :: filepath to write to\n   @param {!IMap} opts :: map of options\n   @return {!stream.Writable}"],"~$filepath",["^ ","^2Q",null,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",138,"^8",8,"^9",138,"^:",16,"^2T",true,"^2U",["^1?",["^2V",["^1?",[["~$f","^37","~$k"]]]]],"^2X","@param {(string|Uri|IFile)} f :: path to filestream\n   @param {?IMap} opts :: map of options\n   @param {!string} k :: string provided by caller for more detailed error in else case\n   @return {?string} or throws. returns nil if fd is present in opts, otherwise returns pathstring"],"^2T",true,"^I","~$cljs-node-io.streams/filepath","^2Z",false,"^6","cljs_node_io/streams.cljs","^:",16,"^2[",["^1?",[["~$f","^37","~$k"]]],"^30",null,"^31",["^1?",[null,null]],"^8",1,"^7",138,"^9",138,"^33",3,"^34",true,"^2U",["^1?",["^2V",["^1?",[["~$f","^37","~$k"]]]]],"^2X","@param {(string|Uri|IFile)} f :: path to filestream\n   @param {?IMap} opts :: map of options\n   @param {!string} k :: string provided by caller for more detailed error in else case\n   @return {?string} or throws. returns nil if fd is present in opts, otherwise returns pathstring"],"~$BufferReadStream",["^ ","^2Q",null,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",86,"^8",7,"^9",86,"^:",23,"^2U",["^1?",["^2V",["^1?",[["~$source"],["^3H","^37"]]]]],"^2X","Creates a ReadableStream from a Buffer. Opts are same as ReadableStream except\n   the :read fn is provided. If you provide :read, it is ignored\n   @return {!stream.Readable}","^38",["^ ","^2Z",false,"^33",2,"^2[",["^1?",[["^3H"],["^3H","^37"]]],"^2U",["^1?",[["^3H"],["^3H","^37"]]],"^31",["^1?",[null,null]]]],"^I","~$cljs-node-io.streams/BufferReadStream","^2Z",false,"^6","cljs_node_io/streams.cljs","^:",23,"^38",["^ ","^2Z",false,"^33",2,"^2[",["^1?",[["^3H"],["^3H","^37"]]],"^2U",["^1?",[["^3H"],["^3H","^37"]]],"^31",["^1?",[null,null]]],"^2[",["^1?",[["^3H"],["^3H","^37"]]],"^30",null,"^31",["^1?",[null,null]],"^8",1,"^7",86,"^9",86,"^33",2,"^34",true,"^2U",["^1?",[["^3H"],["^3H","^37"]]],"^2X","Creates a ReadableStream from a Buffer. Opts are same as ReadableStream except\n   the :read fn is provided. If you provide :read, it is ignored\n   @return {!stream.Readable}"],"~$FileInputStream*",["^ ","^2Q",null,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",155,"^8",8,"^9",155,"^:",24,"^2T",true,"^2U",["^1?",["^2V",["^1?",[["~$src","^37"]]]]],"^2X","@param {!string} src :: filepath to read from\n   @param {!IMap} opts :: map of options\n   @return {!stream.Readable}"],"^2T",true,"^I","~$cljs-node-io.streams/FileInputStream*","^2Z",false,"^6","cljs_node_io/streams.cljs","^:",24,"^2[",["^1?",[["^3K","^37"]]],"^30",null,"^31",["^1?",[null,null]],"^8",1,"^7",155,"^9",155,"^33",2,"^34",true,"^2U",["^1?",["^2V",["^1?",[["^3K","^37"]]]]],"^2X","@param {!string} src :: filepath to read from\n   @param {!IMap} opts :: map of options\n   @return {!stream.Readable}"],"~$WritableStream",["^ ","^2Q",null,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",61,"^8",7,"^9",61,"^:",21,"^2U",["^1?",["^2V",["^1?",[["^37"]]]]],"^2X","@param {!IMap} opts\n   @return {!stream.Writable}"],"^I","~$cljs-node-io.streams/WritableStream","^2Z",false,"^6","cljs_node_io/streams.cljs","^:",21,"^2[",["^1?",[["^37"]]],"^30",null,"^31",["^1?",[null,null]],"^8",1,"^7",61,"^9",61,"^33",1,"^34",true,"^2U",["^1?",["^2V",["^1?",[["^37"]]]]],"^2X","@param {!IMap} opts\n   @return {!stream.Writable}"],"~$duplex-IOF!",["^ ","^2Q",null,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",38,"^8",7,"^9",38,"^:",18,"^2U",["^1?",["^2V",["^1?",[["^3>"]]]]],"^2X","defer back to the stream in all cases\n   @param {!stream.Duplex} streamobj\n   @return {!stream.Duplex}"],"^I","~$cljs-node-io.streams/duplex-IOF!","^2Z",false,"^6","cljs_node_io/streams.cljs","^:",18,"^2[",["^1?",[["^3>"]]],"^30",null,"^31",["^1?",[null,null]],"^8",1,"^7",38,"^9",38,"^33",1,"^34",true,"^2U",["^1?",["^2V",["^1?",[["^3>"]]]]],"^2X","defer back to the stream in all cases\n   @param {!stream.Duplex} streamobj\n   @return {!stream.Duplex}"],"~$stream",["^ ","^I","~$cljs-node-io.streams/stream","^6","cljs_node_io/streams.cljs","^7",10,"^8",1,"^9",10,"^:",12,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",10,"^8",6,"^9",10,"^:",12],"^2R","^3<"],"~$FileOutputStream",["^ ","^2Q",null,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",212,"^8",7,"^9",212,"^:",23,"^2U",["^1?",["^2V",["^1?",[["^3C"],["^3C","^37"]]]]],"^2X","@return {!stream.Writable}","^38",["^ ","^2Z",false,"^33",2,"^2[",["^1?",[["^3C"],["^3C","^37"]]],"^2U",["^1?",[["^3C"],["^3C","^37"]]],"^31",["^1?",[null,null]]]],"^I","~$cljs-node-io.streams/FileOutputStream","^2Z",false,"^6","cljs_node_io/streams.cljs","^:",23,"^38",["^ ","^2Z",false,"^33",2,"^2[",["^1?",[["^3C"],["^3C","^37"]]],"^2U",["^1?",[["^3C"],["^3C","^37"]]],"^31",["^1?",[null,null]]],"^2[",["^1?",[["^3C"],["^3C","^37"]]],"^30",null,"^31",["^1?",[null,null]],"^8",1,"^7",212,"^9",212,"^33",2,"^34",true,"^2U",["^1?",[["^3C"],["^3C","^37"]]],"^2X","@return {!stream.Writable}"],"~$DuplexStream",["^ ","^2Q",null,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",69,"^8",7,"^9",69,"^:",19,"^2U",["^1?",["^2V",["^1?",[["^37"]]]]],"^2X","@param {!IMap} opts\n   @return {!stream.Duplex}"],"^I","~$cljs-node-io.streams/DuplexStream","^2Z",false,"^6","cljs_node_io/streams.cljs","^:",19,"^2[",["^1?",[["^37"]]],"^30",null,"^31",["^1?",[null,null]],"^8",1,"^7",69,"^9",69,"^33",1,"^34",true,"^2U",["^1?",["^2V",["^1?",[["^37"]]]]],"^2X","@param {!IMap} opts\n   @return {!stream.Duplex}"],"~$FileInputStream",["^ ","^2Q",null,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",181,"^8",7,"^9",181,"^:",22,"^2U",["^1?",["^2V",["^1?",[["^3K"],["^3K","^37"]]]]],"^2X","@return {!stream.Readable}","^38",["^ ","^2Z",false,"^33",2,"^2[",["^1?",[["^3K"],["^3K","^37"]]],"^2U",["^1?",[["^3K"],["^3K","^37"]]],"^31",["^1?",[null,null]]]],"^I","~$cljs-node-io.streams/FileInputStream","^2Z",false,"^6","cljs_node_io/streams.cljs","^:",22,"^38",["^ ","^2Z",false,"^33",2,"^2[",["^1?",[["^3K"],["^3K","^37"]]],"^2U",["^1?",[["^3K"],["^3K","^37"]]],"^31",["^1?",[null,null]]],"^2[",["^1?",[["^3K"],["^3K","^37"]]],"^30",null,"^31",["^1?",[null,null]],"^8",1,"^7",181,"^9",181,"^33",2,"^34",true,"^2U",["^1?",[["^3K"],["^3K","^37"]]],"^2X","@return {!stream.Readable}"],"~$output-IOF!",["^ ","^2Q",null,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",25,"^8",7,"^9",25,"^:",18,"^2U",["^1?",["^2V",["^1?",[["^3>"]]]]],"^2X","adds IOFactory output impls that just defer back to the stream or throw as appropriate\n   @param {!stream.Writable} streamobj\n   @return {!stream.Writable}"],"^I","~$cljs-node-io.streams/output-IOF!","^2Z",false,"^6","cljs_node_io/streams.cljs","^:",18,"^2[",["^1?",[["^3>"]]],"^30",null,"^31",["^1?",[null,null]],"^8",1,"^7",25,"^9",25,"^33",1,"^34",true,"^2U",["^1?",["^2V",["^1?",[["^3>"]]]]],"^2X","adds IOFactory output impls that just defer back to the stream or throw as appropriate\n   @param {!stream.Writable} streamobj\n   @return {!stream.Writable}"],"~$TransformStream",["^ ","^2Q",null,"^5",["^ ","^6","cljs_node_io/streams.cljs","^7",77,"^8",7,"^9",77,"^:",22,"^2U",["^1?",["^2V",["^1?",[["^37"]]]]],"^2X","@param {!IMap} opts\n   @return {!stream.Duplex}"],"^I","~$cljs-node-io.streams/TransformStream","^2Z",false,"^6","cljs_node_io/streams.cljs","^:",22,"^2[",["^1?",[["^37"]]],"^30",null,"^31",["^1?",[null,null]],"^8",1,"^7",77,"^9",77,"^33",1,"^34",true,"^2U",["^1?",["^2V",["^1?",[["^37"]]]]],"^2X","@param {!IMap} opts\n   @return {!stream.Duplex}"]],"^1=",["^ ","^S","^S","^C","^C","^Q","^C"],"~:cljs.analyzer/constants",["^ ","^U",["^H",["~:encoding","~:autoClose?","~:flush","~:transform","~:read","~:else","~:fd","~:append","~:mode","~:write","^1D"]],"~:order",["^46","^4;","^45","^44","^48","^47","^1D","^42","^4:","^43","^49"]],"^1D",["^ ","^V",["^H",[]]],"^1E",["^ "],"^1F",["^T","^S","^O","^C","^R"]],"^L","^J","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1T",[["^4?","~:static-fns"],true,["^4?","~:elide-asserts"],false,["^4?","~:optimize-constants"],null,["^4?","~:external-config"],null,["^4?","~:tooling-config"],null,["^4?","~:emit-constants"],null,["^4?","~:infer-externs"],true,["^4?","^1M"],null,["~:js-options","~:js-provider"],"^V",["^4:"],"~:dev",["^4?","~:fn-invoke-direct"],null,["^4?","~:source-map"],"/dev/null"]]]