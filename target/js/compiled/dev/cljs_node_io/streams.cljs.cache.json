["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$require",["^ "],"~$Error",["^ "],"~$Buffer",["^ ","~$isBuffer",["^ "],"~$concat",["^ "]],"~$TypeError",["^ "],"~$Object",["^ ","~$createReadStream",["^ "],"~$on",["^ "],"~$cljs-node-io$protocols$IInputStream$",["^ "],"~$getFd",["^ "],"~$createWriteStream",["^ "],"~$cljs-node-io$protocols$IOutputStream$",["^ "]]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$cljs-node-io.streams","~:imports",["^ ","~$Uri","~$goog.Uri"],"~:requires",["^ ","^F","^G","~$async","~$cljs.core.async","^J","^J","~$cljs-node-io.protocols","^K"],"~:uses",["^ ","~$make-output-stream","^K","~$<!","^J","~$make-writer","^K","~$chan","^J","~$as-file","^K","~$make-reader","^K","~$Coercions","^K","~$pipe","^J","~$IInputStream","^K","~$make-input-stream","^K","~$alts!","^J","~$IOFactory","^K","~$IFile","^K","~$as-url","^K","~$IOutputStream","^K","~$put!","^J","~$take!","^J"],"~:defs",["^ ","~$fd?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","~:line",132,"~:column",17,"~:end-line",132,"~:end-column",20,"~:tag","~$boolean","~:private",true,"~:arglists",["~#list",["~$quote",["^1?",[["~$fd"]]]]],"~:doc","@param {!Number} fd\n   @return {!boolean} is File-descriptor?"],"^1=",true,"^C","~$cljs-node-io.streams/fd?","~:variadic",false,"^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^1:",20,"~:method-params",["^1?",[["^1A"]]],"~:protocol-impl",null,"~:arglists-meta",["^1?",[null,null]],"^18",1,"^17",132,"~:ret-tag","^1<","^19",132,"~:max-fixed-arity",1,"^1;","^1<","~:fn-var",true,"^1>",["^1?",["^1@",["^1?",[["^1A"]]]]],"^1B","@param {!Number} fd\n   @return {!boolean} is File-descriptor?"],"~$BufferWriteStream",["^ ","^14",null,"^15",["^ ","^16","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","^17",107,"^18",7,"^19",107,"^1:",24,"^1>",["^1?",["^1@",["^1?",[["~$cb"],["^1L","~$opts"]]]]],"^1B","Creates WritableStream to a buffer. The buffer is formed from concatenated\n   chunks passed to write method. cb is called with the buffer on the 'finish' event.\n   'finish' must be triggered to recieve buffer\n   @return {!stream.Writable}","~:top-fn",["^ ","^1D",false,"^1I",2,"^1E",["^1?",[["^1L"],["^1L","^1M"]]],"^1>",["^1?",[["^1L"],["^1L","^1M"]]],"^1G",["^1?",[null,null]]]],"^C","~$cljs-node-io.streams/BufferWriteStream","^1D",false,"^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^1:",24,"^1N",["^ ","^1D",false,"^1I",2,"^1E",["^1?",[["^1L"],["^1L","^1M"]]],"^1>",["^1?",[["^1L"],["^1L","^1M"]]],"^1G",["^1?",[null,null]]],"^1E",["^1?",[["^1L"],["^1L","^1M"]]],"^1F",null,"^1G",["^1?",[null,null]],"^18",1,"^17",107,"^19",107,"^1I",2,"^1J",true,"^1>",["^1?",[["^1L"],["^1L","^1M"]]],"^1B","Creates WritableStream to a buffer. The buffer is formed from concatenated\n   chunks passed to write method. cb is called with the buffer on the 'finish' event.\n   'finish' must be triggered to recieve buffer\n   @return {!stream.Writable}"],"~$fs",["^ ","^C","~$cljs-node-io.streams/fs","^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^17",9,"^18",1,"^19",9,"^1:",8,"^15",["^ ","^16","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","^17",9,"^18",6,"^19",9,"^1:",8],"^1;","~$js"],"~$input-IOF!",["^ ","^14",null,"^15",["^ ","^16","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","^17",12,"^18",7,"^19",12,"^1:",17,"^1>",["^1?",["^1@",["^1?",[["~$streamobj"]]]]],"^1B","adds IOFactory input impls that just defer back to the stream or throw as appropriate\n   @param {!stream.Readable} streamobj\n   @return {!stream.Readable}"],"^C","~$cljs-node-io.streams/input-IOF!","^1D",false,"^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^1:",17,"^1E",["^1?",[["^1T"]]],"^1F",null,"^1G",["^1?",[null,null]],"^18",1,"^17",12,"^19",12,"^1I",1,"^1J",true,"^1>",["^1?",["^1@",["^1?",[["^1T"]]]]],"^1B","adds IOFactory input impls that just defer back to the stream or throw as appropriate\n   @param {!stream.Readable} streamobj\n   @return {!stream.Readable}"],"~$ReadableStream",["^ ","^14",null,"^15",["^ ","^16","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","^17",53,"^18",7,"^19",53,"^1:",21,"^1>",["^1?",["^1@",["^1?",[["^1M"]]]]],"^1B","@param {!IMap} opts\n   @return {!stream.Readable}"],"^C","~$cljs-node-io.streams/ReadableStream","^1D",false,"^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^1:",21,"^1E",["^1?",[["^1M"]]],"^1F",null,"^1G",["^1?",[null,null]],"^18",1,"^17",53,"^19",53,"^1I",1,"^1J",true,"^1>",["^1?",["^1@",["^1?",[["^1M"]]]]],"^1B","@param {!IMap} opts\n   @return {!stream.Readable}"],"~$FileOutputStream*",["^ ","^14",null,"^15",["^ ","^16","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","^17",187,"^18",8,"^19",187,"^1:",25,"^1=",true,"^1>",["^1?",["^1@",["^1?",[["~$target","^1M"]]]]],"^1B","@param {!string} target :: filepath to write to\n   @param {!IMap} opts :: map of options\n   @return {!stream.Writable}"],"^1=",true,"^C","~$cljs-node-io.streams/FileOutputStream*","^1D",false,"^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^1:",25,"^1E",["^1?",[["^1Y","^1M"]]],"^1F",null,"^1G",["^1?",[null,null]],"^18",1,"^17",187,"^19",187,"^1I",2,"^1J",true,"^1>",["^1?",["^1@",["^1?",[["^1Y","^1M"]]]]],"^1B","@param {!string} target :: filepath to write to\n   @param {!IMap} opts :: map of options\n   @return {!stream.Writable}"],"~$filepath",["^ ","^14",null,"^15",["^ ","^16","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","^17",138,"^18",8,"^19",138,"^1:",16,"^1=",true,"^1>",["^1?",["^1@",["^1?",[["~$f","^1M","~$k"]]]]],"^1B","@param {(string|Uri|IFile)} f :: path to filestream\n   @param {?IMap} opts :: map of options\n   @param {!string} k :: string provided by caller for more detailed error in else case\n   @return {?string} or throws. returns nil if fd is present in opts, otherwise returns pathstring"],"^1=",true,"^C","~$cljs-node-io.streams/filepath","^1D",false,"^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^1:",16,"^1E",["^1?",[["~$f","^1M","~$k"]]],"^1F",null,"^1G",["^1?",[null,null]],"^18",1,"^17",138,"^19",138,"^1I",3,"^1J",true,"^1>",["^1?",["^1@",["^1?",[["~$f","^1M","~$k"]]]]],"^1B","@param {(string|Uri|IFile)} f :: path to filestream\n   @param {?IMap} opts :: map of options\n   @param {!string} k :: string provided by caller for more detailed error in else case\n   @return {?string} or throws. returns nil if fd is present in opts, otherwise returns pathstring"],"~$BufferReadStream",["^ ","^14",null,"^15",["^ ","^16","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","^17",86,"^18",7,"^19",86,"^1:",23,"^1>",["^1?",["^1@",["^1?",[["~$source"],["^22","^1M"]]]]],"^1B","Creates a ReadableStream from a Buffer. Opts are same as ReadableStream except\n   the :read fn is provided. If you provide :read, it is ignored\n   @return {!stream.Readable}","^1N",["^ ","^1D",false,"^1I",2,"^1E",["^1?",[["^22"],["^22","^1M"]]],"^1>",["^1?",[["^22"],["^22","^1M"]]],"^1G",["^1?",[null,null]]]],"^C","~$cljs-node-io.streams/BufferReadStream","^1D",false,"^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^1:",23,"^1N",["^ ","^1D",false,"^1I",2,"^1E",["^1?",[["^22"],["^22","^1M"]]],"^1>",["^1?",[["^22"],["^22","^1M"]]],"^1G",["^1?",[null,null]]],"^1E",["^1?",[["^22"],["^22","^1M"]]],"^1F",null,"^1G",["^1?",[null,null]],"^18",1,"^17",86,"^19",86,"^1I",2,"^1J",true,"^1>",["^1?",[["^22"],["^22","^1M"]]],"^1B","Creates a ReadableStream from a Buffer. Opts are same as ReadableStream except\n   the :read fn is provided. If you provide :read, it is ignored\n   @return {!stream.Readable}"],"~$FileInputStream*",["^ ","^14",null,"^15",["^ ","^16","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","^17",155,"^18",8,"^19",155,"^1:",24,"^1=",true,"^1>",["^1?",["^1@",["^1?",[["~$src","^1M"]]]]],"^1B","@param {!string} src :: filepath to read from\n   @param {!IMap} opts :: map of options\n   @return {!stream.Readable}"],"^1=",true,"^C","~$cljs-node-io.streams/FileInputStream*","^1D",false,"^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^1:",24,"^1E",["^1?",[["^25","^1M"]]],"^1F",null,"^1G",["^1?",[null,null]],"^18",1,"^17",155,"^19",155,"^1I",2,"^1J",true,"^1>",["^1?",["^1@",["^1?",[["^25","^1M"]]]]],"^1B","@param {!string} src :: filepath to read from\n   @param {!IMap} opts :: map of options\n   @return {!stream.Readable}"],"~$WritableStream",["^ ","^14",null,"^15",["^ ","^16","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","^17",61,"^18",7,"^19",61,"^1:",21,"^1>",["^1?",["^1@",["^1?",[["^1M"]]]]],"^1B","@param {!IMap} opts\n   @return {!stream.Writable}"],"^C","~$cljs-node-io.streams/WritableStream","^1D",false,"^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^1:",21,"^1E",["^1?",[["^1M"]]],"^1F",null,"^1G",["^1?",[null,null]],"^18",1,"^17",61,"^19",61,"^1I",1,"^1J",true,"^1>",["^1?",["^1@",["^1?",[["^1M"]]]]],"^1B","@param {!IMap} opts\n   @return {!stream.Writable}"],"~$duplex-IOF!",["^ ","^14",null,"^15",["^ ","^16","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","^17",38,"^18",7,"^19",38,"^1:",18,"^1>",["^1?",["^1@",["^1?",[["^1T"]]]]],"^1B","defer back to the stream in all cases\n   @param {!stream.Duplex} streamobj\n   @return {!stream.Duplex}"],"^C","~$cljs-node-io.streams/duplex-IOF!","^1D",false,"^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^1:",18,"^1E",["^1?",[["^1T"]]],"^1F",null,"^1G",["^1?",[null,null]],"^18",1,"^17",38,"^19",38,"^1I",1,"^1J",true,"^1>",["^1?",["^1@",["^1?",[["^1T"]]]]],"^1B","defer back to the stream in all cases\n   @param {!stream.Duplex} streamobj\n   @return {!stream.Duplex}"],"~$stream",["^ ","^C","~$cljs-node-io.streams/stream","^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^17",10,"^18",1,"^19",10,"^1:",12,"^15",["^ ","^16","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","^17",10,"^18",6,"^19",10,"^1:",12],"^1;","^1R"],"~$FileOutputStream",["^ ","^14",null,"^15",["^ ","^16","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","^17",212,"^18",7,"^19",212,"^1:",23,"^1>",["^1?",["^1@",["^1?",[["^1Y"],["^1Y","^1M"]]]]],"^1B","@return {!stream.Writable}","^1N",["^ ","^1D",false,"^1I",2,"^1E",["^1?",[["^1Y"],["^1Y","^1M"]]],"^1>",["^1?",[["^1Y"],["^1Y","^1M"]]],"^1G",["^1?",[null,null]]]],"^C","~$cljs-node-io.streams/FileOutputStream","^1D",false,"^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^1:",23,"^1N",["^ ","^1D",false,"^1I",2,"^1E",["^1?",[["^1Y"],["^1Y","^1M"]]],"^1>",["^1?",[["^1Y"],["^1Y","^1M"]]],"^1G",["^1?",[null,null]]],"^1E",["^1?",[["^1Y"],["^1Y","^1M"]]],"^1F",null,"^1G",["^1?",[null,null]],"^18",1,"^17",212,"^19",212,"^1I",2,"^1J",true,"^1>",["^1?",[["^1Y"],["^1Y","^1M"]]],"^1B","@return {!stream.Writable}"],"~$DuplexStream",["^ ","^14",null,"^15",["^ ","^16","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","^17",69,"^18",7,"^19",69,"^1:",19,"^1>",["^1?",["^1@",["^1?",[["^1M"]]]]],"^1B","@param {!IMap} opts\n   @return {!stream.Duplex}"],"^C","~$cljs-node-io.streams/DuplexStream","^1D",false,"^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^1:",19,"^1E",["^1?",[["^1M"]]],"^1F",null,"^1G",["^1?",[null,null]],"^18",1,"^17",69,"^19",69,"^1I",1,"^1J",true,"^1>",["^1?",["^1@",["^1?",[["^1M"]]]]],"^1B","@param {!IMap} opts\n   @return {!stream.Duplex}"],"~$FileInputStream",["^ ","^14",null,"^15",["^ ","^16","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","^17",181,"^18",7,"^19",181,"^1:",22,"^1>",["^1?",["^1@",["^1?",[["^25"],["^25","^1M"]]]]],"^1B","@return {!stream.Readable}","^1N",["^ ","^1D",false,"^1I",2,"^1E",["^1?",[["^25"],["^25","^1M"]]],"^1>",["^1?",[["^25"],["^25","^1M"]]],"^1G",["^1?",[null,null]]]],"^C","~$cljs-node-io.streams/FileInputStream","^1D",false,"^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^1:",22,"^1N",["^ ","^1D",false,"^1I",2,"^1E",["^1?",[["^25"],["^25","^1M"]]],"^1>",["^1?",[["^25"],["^25","^1M"]]],"^1G",["^1?",[null,null]]],"^1E",["^1?",[["^25"],["^25","^1M"]]],"^1F",null,"^1G",["^1?",[null,null]],"^18",1,"^17",181,"^19",181,"^1I",2,"^1J",true,"^1>",["^1?",[["^25"],["^25","^1M"]]],"^1B","@return {!stream.Readable}"],"~$output-IOF!",["^ ","^14",null,"^15",["^ ","^16","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","^17",25,"^18",7,"^19",25,"^1:",18,"^1>",["^1?",["^1@",["^1?",[["^1T"]]]]],"^1B","adds IOFactory output impls that just defer back to the stream or throw as appropriate\n   @param {!stream.Writable} streamobj\n   @return {!stream.Writable}"],"^C","~$cljs-node-io.streams/output-IOF!","^1D",false,"^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^1:",18,"^1E",["^1?",[["^1T"]]],"^1F",null,"^1G",["^1?",[null,null]],"^18",1,"^17",25,"^19",25,"^1I",1,"^1J",true,"^1>",["^1?",["^1@",["^1?",[["^1T"]]]]],"^1B","adds IOFactory output impls that just defer back to the stream or throw as appropriate\n   @param {!stream.Writable} streamobj\n   @return {!stream.Writable}"],"~$TransformStream",["^ ","^14",null,"^15",["^ ","^16","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/streams.cljs","^17",77,"^18",7,"^19",77,"^1:",22,"^1>",["^1?",["^1@",["^1?",[["^1M"]]]]],"^1B","@param {!IMap} opts\n   @return {!stream.Duplex}"],"^C","~$cljs-node-io.streams/TransformStream","^1D",false,"^16","target/js/compiled/dev/cljs_node_io/streams.cljs","^1:",22,"^1E",["^1?",[["^1M"]]],"^1F",null,"^1G",["^1?",[null,null]],"^18",1,"^17",77,"^19",77,"^1I",1,"^1J",true,"^1>",["^1?",["^1@",["^1?",[["^1M"]]]]],"^1B","@param {!IMap} opts\n   @return {!stream.Duplex}"]],"~:require-macros",["^ ","^I","^J","^J","^J"],"~:cljs.analyzer/constants",["^ ","~:seen",["^B",["~:encoding","~:autoClose?","~:flush","~:transform","~:read","~:else","~:fd","~:append","~:mode","~:write","~:flags"]],"~:order",["^2N","^2S","^2M","^2L","^2P","^2O","^2T","^2J","^2R","^2K","^2Q"]],"^1B",null]