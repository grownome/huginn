["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "],"~$process",["^ ","~$on",["^ "]]],"~:use-macros",["^ ","~$try-true","~$cljs-node-io.macros"],"~:excludes",["~#set",[]],"~:name","~$cljs-node-io.file","~:imports",["^ ","~$Uri","~$goog.Uri"],"~:requires",["^ ","^>","^?","~$cljs-node-io.streams","^A","~$iofs","~$cljs-node-io.fs","^C","^C","~$cljs-node-io.protocols","^D"],"~:uses",["^ ","~$make-output-stream","^D","~$make-writer","^D","~$as-file","^D","~$make-reader","^D","~$Coercions","^D","~$make-input-stream","^D","~$FileOutputStream","^A","~$FileInputStream","^A","~$IOFactory","^D","~$IFile","^D","~$as-url","^D"],"~:defs",["^ ","~$setReadable*",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/file.cljs","~:line",10,"~:column",7,"~:end-line",10,"~:end-column",19,"~:arglists",["~#list",["~$quote",["^[",[["~$mode","~$readable","~$ownerOnly"]]]]],"~:doc","@param {!number} mode : the file's existing mode\n   @param {!boolean} readable : add or remove read permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"^;","~$cljs-node-io.file/setReadable*","~:variadic",false,"^U","target/js/compiled/dev/cljs_node_io/file.cljs","^Y",19,"~:method-params",["^[",[["^11","^12","^13"]]],"~:protocol-impl",null,"~:arglists-meta",["^[",[null,null]],"^W",1,"^V",10,"^X",10,"~:max-fixed-arity",3,"~:fn-var",true,"^Z",["^[",["^10",["^[",[["^11","^12","^13"]]]]],"^14","@param {!number} mode : the file's existing mode\n   @param {!boolean} readable : add or remove read permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"~$setReadable",["^ ","^S",null,"^T",["^ ","^U","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/file.cljs","^V",22,"^W",7,"^X",22,"^Y",18,"^Z",["^[",["^10",["^[",[["~$pathstr","^12"],["^1=","^12","^13"]]]]],"^14","toggles the readable permission bit(s) for the specified filepath.\n   If readable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits.","~:top-fn",["^ ","^16",false,"^1:",3,"^17",["^[",[["^1=","^12"],["^1=","^12","^13"]]],"^Z",["^[",[["^1=","^12"],["^1=","^12","^13"]]],"^19",["^[",[null,null]]]],"^;","~$cljs-node-io.file/setReadable","^16",false,"^U","target/js/compiled/dev/cljs_node_io/file.cljs","^Y",18,"^1>",["^ ","^16",false,"^1:",3,"^17",["^[",[["^1=","^12"],["^1=","^12","^13"]]],"^Z",["^[",[["^1=","^12"],["^1=","^12","^13"]]],"^19",["^[",[null,null]]],"^17",["^[",[["^1=","^12"],["^1=","^12","^13"]]],"^18",null,"^19",["^[",[null,null]],"^W",1,"^V",22,"^X",22,"^1:",3,"^1;",true,"^Z",["^[",[["^1=","^12"],["^1=","^12","^13"]]],"^14","toggles the readable permission bit(s) for the specified filepath.\n   If readable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits."],"~$setWritable*",["^ ","^S",null,"^T",["^ ","^U","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/file.cljs","^V",33,"^W",7,"^X",33,"^Y",19,"^Z",["^[",["^10",["^[",[["^11","~$writable","^13"]]]]],"^14","@param {!number} mode : the file's existing mode\n   @param {!boolean} writable : add or remove write permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"^;","~$cljs-node-io.file/setWritable*","^16",false,"^U","target/js/compiled/dev/cljs_node_io/file.cljs","^Y",19,"^17",["^[",[["^11","^1A","^13"]]],"^18",null,"^19",["^[",[null,null]],"^W",1,"^V",33,"^X",33,"^1:",3,"^1;",true,"^Z",["^[",["^10",["^[",[["^11","^1A","^13"]]]]],"^14","@param {!number} mode : the file's existing mode\n   @param {!boolean} writable : add or remove write permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"~$setWritable",["^ ","^S",null,"^T",["^ ","^U","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/file.cljs","^V",45,"^W",7,"^X",45,"^Y",18,"^Z",["^[",["^10",["^[",[["^1=","^1A"],["^1=","^1A","^13"]]]]],"^14","toggles the writable permission bit(s) for the specified filepath.\n   If writable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits.","^1>",["^ ","^16",false,"^1:",3,"^17",["^[",[["^1=","^1A"],["^1=","^1A","^13"]]],"^Z",["^[",[["^1=","^1A"],["^1=","^1A","^13"]]],"^19",["^[",[null,null]]]],"^;","~$cljs-node-io.file/setWritable","^16",false,"^U","target/js/compiled/dev/cljs_node_io/file.cljs","^Y",18,"^1>",["^ ","^16",false,"^1:",3,"^17",["^[",[["^1=","^1A"],["^1=","^1A","^13"]]],"^Z",["^[",[["^1=","^1A"],["^1=","^1A","^13"]]],"^19",["^[",[null,null]]],"^17",["^[",[["^1=","^1A"],["^1=","^1A","^13"]]],"^18",null,"^19",["^[",[null,null]],"^W",1,"^V",45,"^X",45,"^1:",3,"^1;",true,"^Z",["^[",[["^1=","^1A"],["^1=","^1A","^13"]]],"^14","toggles the writable permission bit(s) for the specified filepath.\n   If writable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits."],"~$setExecutable*",["^ ","^S",null,"^T",["^ ","^U","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/file.cljs","^V",56,"^W",7,"^X",56,"^Y",21,"^Z",["^[",["^10",["^[",[["^11","~$executable","^13"]]]]],"^14","@param {!number} mode : the file's existing mode\n   @param {!boolean} executable : add or remove execute permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"^;","~$cljs-node-io.file/setExecutable*","^16",false,"^U","target/js/compiled/dev/cljs_node_io/file.cljs","^Y",21,"^17",["^[",[["^11","^1F","^13"]]],"^18",null,"^19",["^[",[null,null]],"^W",1,"^V",56,"^X",56,"^1:",3,"^1;",true,"^Z",["^[",["^10",["^[",[["^11","^1F","^13"]]]]],"^14","@param {!number} mode : the file's existing mode\n   @param {!boolean} executable : add or remove execute permission\n   @param {!boolean} ownerOnly : restrict operation to user bit only\n   @return {!number} A int for chmod that only effects the targeted mode bits"],"~$setExecutable",["^ ","^S",null,"^T",["^ ","^U","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/file.cljs","^V",68,"^W",7,"^X",68,"^Y",20,"^Z",["^[",["^10",["^[",[["^1=","^1F"],["^1=","^1F","^13"]]]]],"^14","toggles the executable permission bit(s) for the specified filepath.\n   If executable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits.","^1>",["^ ","^16",false,"^1:",3,"^17",["^[",[["^1=","^1F"],["^1=","^1F","^13"]]],"^Z",["^[",[["^1=","^1F"],["^1=","^1F","^13"]]],"^19",["^[",[null,null]]]],"^;","~$cljs-node-io.file/setExecutable","^16",false,"^U","target/js/compiled/dev/cljs_node_io/file.cljs","^Y",20,"^1>",["^ ","^16",false,"^1:",3,"^17",["^[",[["^1=","^1F"],["^1=","^1F","^13"]]],"^Z",["^[",[["^1=","^1F"],["^1=","^1F","^13"]]],"^19",["^[",[null,null]]],"^17",["^[",[["^1=","^1F"],["^1=","^1F","^13"]]],"^18",null,"^19",["^[",[null,null]],"^W",1,"^V",68,"^X",68,"^1:",3,"^1;",true,"^Z",["^[",[["^1=","^1F"],["^1=","^1F","^13"]]],"^14","toggles the executable permission bit(s) for the specified filepath.\n   If executable, set 1 else 0\n   If ownerOnly (default) set just user, else set for group & other as well.\n   Does not affect other permission bits."],"~$get-non-dirs",["^ ","^S",null,"^T",["^ ","^U","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/file.cljs","^V",79,"^W",7,"^X",79,"^Y",19,"^Z",["^[",["^10",["^[",[["~$pathstring"]]]]],"^14","Returns sequence of strings representing non-existing directory components\n   of the passed pathstring, root first, in order\n   @param {!string} pathstring\n   @return {!ISeq}"],"^;","~$cljs-node-io.file/get-non-dirs","^16",false,"^U","target/js/compiled/dev/cljs_node_io/file.cljs","^Y",19,"^17",["^[",[["^1K"]]],"^18",null,"^19",["^[",[null,null]],"^W",1,"^V",79,"^X",79,"^1:",1,"^1;",true,"^Z",["^[",["^10",["^[",[["^1K"]]]]],"^14","Returns sequence of strings representing non-existing directory components\n   of the passed pathstring, root first, in order\n   @param {!string} pathstring\n   @return {!ISeq}"],"~$File",["^ ","~:num-fields",1,"~:protocols",["^:",["~$cljs.core/IEquiv","~$cljs-node-io.file/Object","~$cljs-node-io.protocols/Coercions","~$cljs-node-io.protocols/IFile","~$cljs-node-io.protocols/IOFactory","~$cljs.core/IPrintWithWriter"]],"^;","~$cljs-node-io.file/File","^U","target/js/compiled/dev/cljs_node_io/file.cljs","^Y",14,"~:type",true,"^W",10,"^V",87,"~:record",false,"^X",87,"~:skip-protocol-flag",["^:",["^1P","^1U"]]],"~$->File",["^ ","^S",null,"^T",["^ ","^U","/home/fode/src/huginn/target/js/compiled/dev/cljs_node_io/file.cljs","^V",87,"^W",10,"^X",87,"^Y",14,"^1O",["^:",["^1P","^1Q","^1R","^1S","^1T","^1U"]],"^1Y",["^:",["^1P","^1U"]],"~:factory","~:positional","^Z",["^[",["^10",["^[",[["^1K"]]]]]],"^1O",["^:",["^1P","^1Q","^1R","^1S","^1T","^1U"]],"^;","~$cljs-node-io.file/->File","^16",false,"^U","target/js/compiled/dev/cljs_node_io/file.cljs","^Y",14,"^17",["^[",[["^1K"]]],"^18",null,"^19",["^[",[null,null]],"^W",1,"^1[","^20","^V",87,"^X",87,"^1:",1,"^1;",true,"^Z",["^[",["^10",["^[",[["^1K"]]]]],"^1Y",["^:",["^1P","^1U"]]]],"~:require-macros",["^ ","^8","^8"],"~:cljs.analyzer/constants",["^ ","~:seen",["^:",["~:else","^1K","~:mutable","~:flags"]],"~:order",["^25","^27","^1K","^26"]],"^14","a port of java.io.File's reified files to node"]