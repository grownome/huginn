["^ ","~:foreign-libs",[],"~:externs",[],"~:resources",[["^ ","~:cache-key",1516146542000,"~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:author","Peter Taoussanis (@ptaoussanis)","~:doc","Extended core library for Clojure/Script that emphasizes:\n    * Cross platform API compatibility\n    * Flexibility\n    * Performance\n    * Backwards compatibility\n\n  This lib's mostly for my own use and for advanced users that feel\n  comfortable reading this source. Not providing much beginner-oriented\n  documentation for this, sorry.\n\n  Quick Taoensso naming conventions:\n    **foo** - Dynamic var.\n    foo!    - Fn with side effects, or that should otherwise be used cautiously.\n    foo?    - Truthy val or fn that returns truthy val.\n    foo!?   - Fn that has side effects (or requires caution) and that returns\n              a truthy val. Note: !?, not ?!.\n    foo$    - Fn that's notably expensive to compute (e.g. hits db).\n    foo_    - Dereffable val (e.g. atom, volatile, delay, etc.).\n    _       - Unnamed val.\n    _foo    - Named but unused val.\n    ?foo    - Optional val (emphasize that val may be nil).\n    foo*    - A variation of `foo` (e.g. `foo*` macro vs `foo` fn).\n    -foo    - Public implementation detail or intermediate (e.g. uncoerced) val.\n    >foo    - Val \"to foo\" (e.g. >sender, >host), or fn to put/coerce/transform.\n    <foo    - Val \"from foo\" (e.g. <sender, <host), or fn to take/coerce/transform.\n    ->foo   - Fn to put/coerce/transform."],"~:use-macros",["^ ","~$now-udt*","~$taoensso.encore","~$new-object","^<","~$if-not","^<","~$-gc-now?","^<","~$when-let","^<","~$if-some","^<","~$cond!","^<","~$have","^<","~$-cas!","^<","~$when-not","^<","~$when","^<","~$is","~$cljs.test","~$compile-if","^<","~$have!","^<","~$name-with-attrs","^<","~$-vol!","^<","~$-vol-reset!","^<","~$have?","^<","~$defonce","^<","~$cond","^<","~$if-let","^<","~$deprecated","^<","~$catching","^<","~$now-nano*","^<","~$when-some","^<","~$now-dt*","^<","~$-vol-swap!","^<"],"~:excludes",["~#set",["~$qualified-keyword?","~$boolean?","~$some?","~$simple-symbol?","~$merge-with","^>","~$float?","^@","^A","~$format","~$uri?","^E","^F","~$int?","~$indexed?","~$simple-keyword?","~$neg-int?","~$update-in","~$run!","^O","~$bytes?","~$ident?","~$qualified-ident?","~$merge","^P","~$nat-int?","~$pos-int?","^Q","~$simple-ident?","~$qualified-symbol?","^U"]],"~:name","^<","~:imports",null,"~:requires",["^ ","~$goog.net.XhrIoPool","^1G","~$gevents","~$goog.events","~$set","~$clojure.set","~$test","^H","~$cljs.tools.reader.edn","^1M","~$taoensso.truss","^1N","~$goog.net.XhrIo","^1O","~$gquery-data","~$goog.Uri.QueryData","~$goog.string","^1R","^1Q","^1Q","~$cljs.core","^1S","~$gobj","~$goog.object","^H","^H","~$goog","^1V","^1U","^1U","~$gxhr-pool","^1G","~$goog.string.StringBuffer","^1X","~$truss","^1N","~$goog.net.EventType","^1Z","^1K","^1K","~$goog.structs","^1[","~$goog.string.format","^20","~$gstructs","^1[","~$str","~$clojure.string","^23","^23","~$cljs.reader","^24","~$gstr","^1R","~$edn","^1M","^1I","^1I","~$goog.net.ErrorCode","^27","~$gxhr","^1O"],"~:seen",["^Y",["~:require","~:require-macros"]],"~:uses",null,"^2;",["^ ","^H","^H","^1L","^H","^<","^<","~$enc-macros","^<","^1S","^1S"],"~:cljc",false,"~:flags",["^ ","^2:",["^Y",[]],"^2;",["^Y",[]]],"~:js-deps",["^ "],"~:deps",["^1V","^1S","^23","^1K","^24","^1M","^H","^1U","^1R","^20","^1X","^1I","^1O","^1G","^1Q","^1[","^1Z","^27","^1N"]],"~:ns","^<","~:output-name","taoensso.encore.js","~:resource-id",["~:shadow.build.classpath/resource","taoensso/encore.cljs"],"~:resource-name","taoensso/encore.cljs","~:type","~:cljs","~:last-modified",1516146542000,"^1F",["^Y",["^1G","^1M","^1N","^1O","^1R","^1Q","^1S","^H","^1V","^1U","^1X","^1Z","^1K","^1[","^20","^23","^24","^1I","^27"]],"~:macro-requires",["^Y",["^1S","^H","^<"]],"~:url",["~#url","jar:file:/home/fode/.m2/repository/com/taoensso/encore/2.91.0/encore-2.91.0.jar!/taoensso/encore.cljs"],"~:provides",["^Y",["^<"]],"~:from-jar",true,"^2A",["^1V","^1S","^23","^1K","^24","^1M","^H","^1U","^1R","^20","^1X","^1I","^1O","^1G","^1Q","^1[","^1Z","^27","^1N"]]],"~:data-readers",null]